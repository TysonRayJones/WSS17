(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    753066,      14076]
NotebookOptionsPosition[    738655,      13738]
NotebookOutlinePosition[    738996,      13753]
CellTagsIndexPosition[    738953,      13750]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Mechanics", "Title",
 CellChangeTimes->{{3.7071415759932766`*^9, 
  3.707141578651087*^9}},ExpressionUUID->"06642691-0715-4a26-a4d0-\
fcad207eb3ef"],

Cell["\<\
An introduction to, and derivation of, the fundamental equations of \
Schrodinger\[CloseCurlyQuote]s quantum mechanics\
\>", "Subtitle",
 CellChangeTimes->{{3.7071415966918125`*^9, 3.707141606368494*^9}, {
  3.7071621409939594`*^9, 
  3.707162174631261*^9}},ExpressionUUID->"388c0da2-de93-42ff-8686-\
57560a826f60"],

Cell[TextData[{
 "We\[CloseCurlyQuote]ll work in natural and non-dimensional units where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[HBar]", " ", "=", " ", 
    RowBox[{"m", " ", "=", " ", 
     RowBox[{"\[Omega]", " ", "=", " ", "1"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "156f8d8e-be71-4b80-b7a0-d89ec693aeec"],
 "."
}], "Text",
 CellChangeTimes->{{3.707323361841241*^9, 3.707323395293643*^9}, {
  3.7073234301065135`*^9, 
  3.707323463396082*^9}},ExpressionUUID->"3824f30e-ad1a-41ca-9fa3-\
aed3beb25b9a"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Initialisation", "Subsubsection"]], "Section",
 CellChangeTimes->{{3.7072506717283363`*^9, 
  3.70725067336299*^9}},ExpressionUUID->"96d49411-808c-402e-8587-\
4cf6bb752dd9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], " ", ":=", " ", 
  RowBox[{"(", "\n", "  ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"$FrontEnd", " ", "=!=", " ", "$Failed"}], ",", " ", "\n", "   ", 
     RowBox[{
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "All", ",", " ", 
        "GeneratedCell"}], "]"}], ";", "\n", "   ", 
      RowBox[{
      "FrontEndTokenExecute", "[", "\"\<SelectionCloseUnselectedCells\>\"", 
       "]"}]}]}], "]"}], ")"}]}]], "Code",
 CellChangeTimes->{{3.7072503647797594`*^9, 3.707250380426972*^9}, {
  3.7072504113361893`*^9, 
  3.7072504116593933`*^9}},ExpressionUUID->"fc943dda-f9e1-44bd-ac88-\
beefc4d79be3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"colorBar", "[", 
    RowBox[{"title_:", "\"\<arg[\[Psi]]\>\""}], "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"BarLegend", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Rainbow\>\"", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}], ",", 
     " ", "\n", "\t\t", 
     RowBox[{"LegendLabel", " ", "\[Rule]", " ", "title"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Ticks\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.14"}], ",", " ", "0", ",", " ", "3.14"}], "}"}]}], 
     ",", " ", 
     RowBox[{"\"\<TickLabels\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<-\[Pi]\>\"", ",", " ", "\"\<0\>\"", ",", " ", "\"\<\[Pi]\>\""}], 
       "}"}]}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"colorBarNorm", "[", "title_", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"BarLegend", "[", "\n", "\t\t", 
    RowBox[{"\"\<Rainbow\>\"", ",", " ", "\n", "\t\t", 
     RowBox[{"LegendLabel", " ", "\[Rule]", " ", "title"}]}], "\n", "\t", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"plotWavefunction", "[", 
   RowBox[{"psi_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"r_", ",", " ", "range__"}], "}"}], ",", " ", 
    RowBox[{"showbar_:", "True"}], ",", " ", 
    RowBox[{"title_:", 
     SuperscriptBox[
      RowBox[{"Abs", "[", "\[Psi]", "]"}], "2"]}], ",", " ", 
    RowBox[{"legendpsi_:", "\[Psi]"}], ",", " ", 
    RowBox[{"plotrange_:", "All"}]}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"ReplaceAll", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"Plot", "[", "\n", "\t\t\t", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", "psi", "]"}], "2"], ",", " ", 
      RowBox[{"{", 
       RowBox[{"r", ",", " ", "range"}], "}"}], ",", " ", "\n", "\t\t\t", 
      RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"r", ",", " ", "title"}], "}"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"PlotRange", " ", "\[Rule]", " ", "plotrange"}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"ColorFunction", " ", "\[Rule]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
          RowBox[{"Rescale", "[", 
           RowBox[{
            RowBox[{"Arg", "[", 
             RowBox[{"psi", " ", "/.", " ", 
              RowBox[{"r", " ", "\[Rule]", " ", "#"}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "]"}], 
          "]"}], " ", "&"}], ")"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"ColorFunctionScaling", " ", "\[Rule]", " ", "False"}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}], ",", "\n", "\t\t\t", 
      RowBox[{"PlotLegends", " ", "\[Rule]", " ", 
       RowBox[{"If", "[", 
        RowBox[{"showbar", ",", " ", 
         RowBox[{"colorBarNorm", "[", 
          RowBox[{"\"\<arg[\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "legendpsi", "]"}], " ", "<>", " ", 
           "\"\<] / 2\[Pi]\>\""}], "]"}], ",", " ", "None"}], "]"}]}]}], "\n",
      "\t\t", "]"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"pts_", ",", " ", "_"}], "]"}], " ", "\[RuleDelayed]", " ", 
     RowBox[{"{", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"Line", "[", "pts", "]"}]}], "}"}]}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->{
  3.707250684768882*^9, {3.707327748060455*^9, 3.707327760834208*^9}, {
   3.7073278667410846`*^9, 3.707327898062024*^9}, {3.7073282132515697`*^9, 
   3.7073282139600525`*^9}, {3.707333754300393*^9, 3.7073338615878*^9}, {
   3.7073340125736313`*^9, 3.7073340529269733`*^9}, {3.707334381805196*^9, 
   3.707334421595986*^9}, {3.7073344531517878`*^9, 3.707334468083632*^9}, {
   3.7073345256643486`*^9, 3.7073345579097366`*^9}, {3.7073346224611516`*^9, 
   3.70733462515864*^9}, {3.707334674005803*^9, 3.7073346769948883`*^9}, {
   3.707334772049922*^9, 3.7073347895875607`*^9}, {3.7073352516801615`*^9, 
   3.707335260732541*^9}, {3.707336437367014*^9, 3.7073364376138935`*^9}, {
   3.7073369285395813`*^9, 3.7073369408217382`*^9}, {3.707337653904242*^9, 
   3.7073376740077686`*^9}, {3.7073377055022078`*^9, 
   3.7073377306157417`*^9}, {3.7073378127003174`*^9, 
   3.7073378489704437`*^9}, {3.707337901504786*^9, 3.707337980119998*^9}, {
   3.707338085551382*^9, 
   3.7073380872327313`*^9}},ExpressionUUID->"3d89aed4-19ef-40b6-8c4c-\
d3824f5ba1bd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"simulateWavefunction", "[", 
    RowBox[{"psi_", ",", " ", "potential_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"r_", ",", " ", "domain__"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"_", ",", " ", "times__"}], "}"}]}], "]"}], " ", ":=", 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   RowBox[{
    StyleBox["NDSolveValue", "Code"], 
    StyleBox["[", "Code"], 
    StyleBox["\n", "Code"], 
    StyleBox["\t\t", "Code"], 
    RowBox[{
     RowBox[{
      StyleBox["{", "Code"], 
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", " ", "\[Tau]"}], "]"}]}], "Code"], 
        StyleBox[" ", "Code"], 
        StyleBox["\[Equal]", "Code"], 
        StyleBox[" ", "Code"], 
        RowBox[{
         StyleBox[
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Psi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"2", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", " ", "\[Tau]"}], "]"}], " ", "/", " ", "2"}], 
          "Code"], 
         StyleBox[" ", "Code"], 
         StyleBox["+", "Code"], 
         StyleBox[" ", "Code"], 
         RowBox[{
          StyleBox[
           RowBox[{"\[Psi]", "[", 
            RowBox[{"r", ",", " ", "\[Tau]"}], "]"}], "Code"], 
          StyleBox[" ", "Code"], "potential"}]}]}], 
       StyleBox[",", "Code"], 
       StyleBox[" ", "Code"], 
       StyleBox[
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{"r", ",", " ", "0"}], "]"}], " ", "\[Equal]", " ", "psi"}], 
        "Code"]}], 
      StyleBox["}", "Code"]}], 
     StyleBox[",", "Code"], 
     StyleBox["\n", "Code"], 
     StyleBox["\t\t", "Code"], 
     StyleBox["\[Psi]", "Code"], 
     StyleBox[",", "Code"], 
     StyleBox[" ", "Code"], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"r", ",", " ", "domain"}], "}"}], "Code"], 
     StyleBox[",", "Code"], 
     StyleBox[" ", "Code"], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", " ", "times"}], "}"}], "Code"]}], 
    StyleBox["\n", "Code"], 
    StyleBox["\t", "Code"], 
    StyleBox["]", "Code"]}]}], 
  StyleBox[" ", "Code"], "\n", 
  StyleBox["\t", "Code"]}], "\n", 
 RowBox[{"Off", "[", 
  RowBox[{"NDSolveValue", "::", "bcart"}], "]"}], "\n", 
 RowBox[{"Off", "[", 
  RowBox[{"NDSolveValue", "::", "eerr"}], "]"}]}], "Code",
 CellChangeTimes->{{3.707250715794982*^9, 3.7072507338769197`*^9}, {
  3.7072509292068596`*^9, 
  3.7072509295035706`*^9}},ExpressionUUID->"b6090fb9-af65-416e-b856-\
941d8a8ea276"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hamiltonian", "[", 
   RowBox[{"psi_", ",", " ", "potential_", ",", " ", "r_"}], "]"}], " ", ":=",
   " ", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], 
    RowBox[{"D", "[", 
     RowBox[{"psi", ",", " ", 
      RowBox[{"{", 
       RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], " ", "+", " ", 
   RowBox[{"potential", " ", "psi"}]}]}]], "Code",
 CellChangeTimes->{
  3.707251170532781*^9},ExpressionUUID->"d2e5fc00-f07c-4d4b-b4df-\
b97e8b0d82fa"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"expectedEnergy", "[", 
    RowBox[{"psi_", ",", " ", "potential_", ",", "  ", "r_"}], "]"}], " ", ":=",
    "\[IndentingNewLine]", "\t", 
   RowBox[{"Integrate", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Conjugate", "[", "psi", "]"}], " ", "/.", " ", 
        RowBox[{
         RowBox[{"Conjugate", "[", "r", "]"}], " ", "\[Rule]", " ", "r"}]}], 
       ")"}], "\[IndentingNewLine]", "\t\t", 
      RowBox[{"(", 
       RowBox[{"hamiltonian", "[", 
        RowBox[{"psi", ",", " ", "potential", ",", " ", "r"}], "]"}], ")"}]}],
      ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", 
      RowBox[{"r", ",", " ", 
       RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
    "\[IndentingNewLine]", "\t", "]"}]}], "Code"]], "Code",
 CellChangeTimes->{
  3.7072509143164854`*^9},ExpressionUUID->"a6fff3bf-5687-4f43-a944-\
128f7d9fb5c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Wavefunction", "Section",
 CellChangeTimes->{{3.7071454544855328`*^9, 
  3.707145458217955*^9}},ExpressionUUID->"1844c1eb-1d4c-4ff3-b53f-\
0042200be0f1"],

Cell["\<\
The quantum wavefunction is a (L2 normalizable) complex field defined over \
some continuous space of states. For example, consider a 1D wavefunction of \
position:\
\>", "Text",
 CellChangeTimes->{{3.7071417658577995`*^9, 3.707141767839119*^9}, {
  3.7071419089597363`*^9, 3.7071419976660614`*^9}, {3.707142968918906*^9, 
  3.707142969971336*^9}, {3.7071430732360344`*^9, 3.707143094170619*^9}, {
  3.7071431623357377`*^9, 3.7071431979101667`*^9}, {3.707144344075688*^9, 
  3.7071443523917384`*^9}, {3.7071612586212254`*^9, 3.7071612595250645`*^9}, {
  3.707161362335261*^9, 3.707161409260783*^9}, {3.7072293265987377`*^9, 
  3.707229331322433*^9}},ExpressionUUID->"3b9f712f-2542-4755-bb68-\
17dcab6fc296"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"example\[Psi]", "[", "x_", "]"}], " ", "=", "  ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], "4"]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]}]], "+", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}]]}], "-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "2"}], ")"}], "2"], "2"]}]], 
      SuperscriptBox["\[Pi]", 
       RowBox[{"1", "/", "4"}]]]}], " ", "//", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["#", 
       SqrtBox[
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", "#", "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
         "]"}]]], "&"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707142972993812*^9, 3.707143029805561*^9}, {
   3.707143580292692*^9, 3.707143586929079*^9}, {3.7071437400211444`*^9, 
   3.7071437567570734`*^9}, {3.707143972965328*^9, 3.7071440076461535`*^9}, {
   3.7071445565305448`*^9, 3.7071446000502477`*^9}, {3.707144783536746*^9, 
   3.7071447837524395`*^9}, {3.7071457039587*^9, 3.707145707674501*^9}, {
   3.7071490117309513`*^9, 3.707149036578884*^9}, {3.707149181831385*^9, 
   3.707149195032548*^9}, {3.7071497906578484`*^9, 3.7071498102905426`*^9}, {
   3.7071498493014526`*^9, 3.7071498586696725`*^9}, 3.7071517728661523`*^9, 
   3.7071520498403916`*^9, {3.707182093243137*^9, 3.7071820958874283`*^9}, {
   3.7072289606197605`*^9, 3.7072290062025366`*^9}, 
   3.707229100793229*^9},ExpressionUUID->"c9b5977e-cb19-4d88-95aa-\
e330fcd293e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"domain", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "1"}], ",", " ", "5"}], "}"}]}], ";"}], "Code"], "\n", 
 RowBox[{
  StyleBox["Plot", "Code"], 
  StyleBox["[", "Code"], 
  StyleBox["\n", "Code"], "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], ",", " ", 
     RowBox[{"Im", "[", 
      RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}]}], "}"}], ",", " ", 
   "domain", ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", "x", "}"}]}], ",", " ", "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Re", "[", "\[Psi]", "]"}], ",", " ", 
      RowBox[{"Im", "[", "\[Psi]", "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7071432716241865`*^9, 3.707143387701651*^9}, {
   3.707143525964118*^9, 3.7071435341403437`*^9}, {3.7071440002447133`*^9, 
   3.707144061458255*^9}, {3.7071457202163734`*^9, 3.707145722242098*^9}, {
   3.7071492249871836`*^9, 3.7071492265551395`*^9}, {3.7071492781561656`*^9, 
   3.707149286488986*^9}, 3.7071493818990393`*^9, 3.707152060514746*^9, {
   3.707163140217251*^9, 3.7071631414173927`*^9}, {3.7072504014407535`*^9, 
   3.7072504046596165`*^9}},ExpressionUUID->"23031046-d31e-4ed6-a398-\
382162bc6970"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
nQ1k6dRuHBywYfZidSnLiTbwPyY3mcQ=
          "]]}, Annotation[#, "Charting`Private`Tag$3388193#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
83A094r36/0Z0G+/t/mPeh7OWyPI+fo0AyT2FO1Qf5iLe3bo61lFMMAhW81e
7VkOVvTJazdOZoCr+Nkof2Y2/vPFuFfrNgMqkzWsrLsvY3rOdXqhkgGMjg9X
k7wvYxmeYLruHgPs0JSCDvsydpQosVRBDFCMnlhctEjHjS6Lr7Z3MmBkOjvU
YCoVv/bhn5/sZgCMp+vWZafi6XBpoVt9DHhYcF0mfE8qFrti7bj1zZI+0R81
o4WXcOyb8mHRMQbUrotqyDqSggvGWpYPTTDAxKlJglc4BdfOvRHLm2LAgTP6
ROHTi3hcgMddcI4Bx/rmX2prX8QHLJy/UjxM8FL4dKlROhmv6SJmlksw4QOf
zLVjrgm4J0Vdg5ZiwqKssfOL0XgcZ+MWtUmOCd72gxpH3ePxwsiD1drKTNh1
Hu6P+Mbh0T9uSmH6TIg8UV+jWhiL8xouhibuY8KhrQHp0wqx2PpcXUuOMRM6
pJqbklpi8GOSsnpgxYS9ni1p1t/P4UpJ5P/bjQn25qlZe+yiscfkJ8x9jAmf
zbrTDP9EYbG7FLfAcSZwx7fw/smKwhlaRy4rBTDhkUFsjsL7SBxmRdf4xjBB
z6VTyTH8LDaMOjo3XsKEukytaHpFOF65L1X7v5tMSCVyhGVPncH17PrzqyqY
ECwnUY1Gw7BC9mpBqRomuCfW+5p3hOJ1VfVq7u1MyDBSVpK9F4yfBoyd9e9k
QoLGoyMuSsE4QZO/I7qHCSu2PHboqQ7CHI887Ir7mRC+IaZie9Np/HGQP+T9
ZyY8c/pmxfkjAOdfhebv40ww95h/Mx8ZgG2PHWNwTDHh9b+k5sc1AbjrV0PO
hjkmuFw/Yeyp44/vMj2RHS8LOmomFOzL/XCE+sO/z7eyoBTzj0u+9sGxHiO/
rsiyYJVxuC5/gg9Ozlzx7ag8C+TU5gL2a/ng/Fn9wQUVFhRX6WeEl57ADXc6
6sUNWOA8fPLP4trjuH14vPrbfhboSp8e/ifZG/eQrIp/D7DgTaMR729ebzx0
3CTfyJoFhq7rJN8u98IcMs/DT7mx4P6/tcy95DHMY/crUMuDBXTj+X2PMj0w
ESfgw+vNgvTQ4Yg9Yh5Y5PM/B3NPsWD1PjcQ1jqKtYoHtFuiWBAzKZdiEu+O
w4Q+c/IXscCezq42DnDF5/bzzg9cY8HuLRwe64Vc8YUgqR/Xb7DAy3uLis/D
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3388193#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"Re", "(", "\[Psi]", ")"}], 
       RowBox[{"Im", "(", "\[Psi]", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7071435348785505`*^9, 3.707143542516124*^9}, {
   3.7071435840794277`*^9, 3.7071435894132886`*^9}, 3.7071437526544294`*^9, {
   3.7071439978290014`*^9, 3.707144062627507*^9}, {3.7071445610174665`*^9, 
   3.707144583481642*^9}, 3.70714463900497*^9, 3.7071447957537775`*^9, {
   3.7071457122468567`*^9, 3.707145723427042*^9}, {3.707149197595375*^9, 
   3.7071492270335455`*^9}, {3.7071492789573464`*^9, 3.7071492869737315`*^9}, 
   3.7071493824505644`*^9, {3.7071497951213818`*^9, 3.70714981247514*^9}, {
   3.707149852632801*^9, 3.7071498611877995`*^9}, 3.7071520953703136`*^9, 
   3.707152766844473*^9, 3.7071529681480117`*^9, 3.7071539071635237`*^9, {
   3.707155957149432*^9, 3.707155977866574*^9}, 3.707156010943268*^9, {
   3.70715606673641*^9, 3.707156093676105*^9}, 3.7071649961416793`*^9, 
   3.7071663388198304`*^9, 3.707171094920657*^9, 3.7071756674236403`*^9, 
   3.707176168156183*^9, {3.7071813404412637`*^9, 3.707181350105031*^9}, 
   3.7071813956274967`*^9, 3.7071819948177404`*^9, 3.707182184785655*^9, 
   3.707182219679021*^9, 3.707184269071168*^9, 3.707185378354104*^9, 
   3.707185497859684*^9, 3.707185766749367*^9, 3.707186352646841*^9, 
   3.7071864147094307`*^9, {3.7071866657554154`*^9, 3.7071866981829214`*^9}, 
   3.7071867396698847`*^9, 3.7071868067300806`*^9, 3.7071869260984755`*^9, 
   3.707217933321546*^9, 3.7072290362911015`*^9, 3.7072324483547053`*^9, 
   3.7072328656832066`*^9, 3.7072329048017893`*^9, 3.7072331763035994`*^9, 
   3.7072333210490046`*^9, 3.707233405420326*^9, 3.7072338835073037`*^9, 
   3.7072339370744896`*^9, 3.7072340066986494`*^9, 3.707234249974229*^9, 
   3.7072343761614923`*^9, 3.707234843777314*^9, 3.7072351615785475`*^9, 
   3.7072354129106474`*^9, 3.707236807477562*^9, 3.707237210975844*^9, 
   3.7072389577414317`*^9, 3.707240828050643*^9, 3.707250405418311*^9, 
   3.7072508439641514`*^9, 3.707327767716283*^9, 3.7073279016707335`*^9, 
   3.7073282309857435`*^9, 3.7073338835511646`*^9, 3.7073348381892824`*^9, 
   3.707338104924907*^9},ExpressionUUID->"f9aceceb-bac5-4c1b-b91a-\
1ec68b6d8f3b"]
}, {2}]],

Cell["\<\
Although the wavefunction describes a physical system, it is itself \
unphysical. Only its absolute value squared can be observed.\
\>", "Text",
 CellChangeTimes->{{3.707144220630987*^9, 3.7071443077130194`*^9}, {
   3.7071443680425262`*^9, 3.7071443998602724`*^9}, 3.707154028223499*^9, {
   3.707154599035097*^9, 3.70715465064983*^9}, {3.7071547056816807`*^9, 
   3.707154740284052*^9}, {3.7071549528169208`*^9, 3.7071550061986876`*^9}, {
   3.7071659627604713`*^9, 
   3.7071659709460144`*^9}},ExpressionUUID->"4b33c49f-81b0-49a7-a53c-\
a2b27503857a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  StyleBox["\[IndentingNewLine]", "Code"], "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", " ", 
     RowBox[{
      RowBox[{"Arg", "[", 
       RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "/", 
      RowBox[{"(", "\[Pi]", ")"}]}]}], "}"}], ",", " ", "domain", ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", "x", "}"}]}], ",", " ", "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"Filling", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"1", "->", "Axis"}], "}"}]}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", "\[Psi]", "]"}], "2"], ",", " ", 
      "\"\<Arg[\[Psi]] / \[Pi]\>\""}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7071444013913136`*^9, 3.707144468076036*^9}, {
   3.707144604819686*^9, 3.707144656759567*^9}, {3.7071448012877693`*^9, 
   3.7071448528845973`*^9}, {3.7071457292282095`*^9, 
   3.7071457326783156`*^9}, {3.7071471916323175`*^9, 
   3.7071472087778006`*^9}, {3.707149251401376*^9, 3.7071492518858833`*^9}, {
   3.707149319266218*^9, 3.707149394132081*^9}, 3.707152069101699*^9, {
   3.7071615130664344`*^9, 3.707161525030201*^9}, {3.707161622236106*^9, 
   3.7071616432369223`*^9}, {3.7071631508777742`*^9, 3.707163155132735*^9}, {
   3.7072504238890734`*^9, 
   3.7072504269536963`*^9}},ExpressionUUID->"d49bac33-9b0d-4e59-b736-\
06fb5882f647"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
g+l/L+wJ4Pf/Dxhnpno=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
UA0S
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
A5T8DEE=
           "]]}, Annotation[#, "Charting`Private`Tag$3388499#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0s1LVGEYhvE30pSctIxKBMmJTMeP0kZNoza5aT32QfhRTrZMS9tV+9Ss
vZZuda9maxX7BwoSLLOgoEBtEwZ+/N7FzfNc1/2ec5hzJpntz/QdCCHMSyon
hIq8ENKHQniYG8IqfiEdUi3ndI26Pt0XPCSdkuHv8WP8YZnhaqSSb+L7ua94
WLqkne/hx/kCmeVqpYpv5h9xa3hEuuUGn+Xf8AmZ4+okxV/iH3Pf8Et5yg1x
C1xa7nI3ufvcW7xl37MfsS/bP9qLJC8/hBP4ivnONWP2Kf40Xnd2BxfE5+FM
fJ59Q1+LU2axWc5dM8/H92Vv4U/hAed/421cH++nn8UL+Cze0R80j3GXzVH9
M/uwvgwv6v/h3Pg+cSP+bP+pT0qCK43fwHW3zF7uDjfh3F8cpND+wfykq9Qd
NfPNk9xVc9614/Zpvhx/d34XJ+LvwO143b6pr8PV5nEzybWZF+I3t7fyJXjQ
+T/4P26I99PP4UVcgXf1OWYx90r33BzRLfFNsoJ/4TPSo7+NH9gndUXynquP
/5v4zvgn3A/8WrLxPbh3g3lR0nId7wNUVlQg
           "]], 
          
          LineBox[{1837, 1595, 1397, 1253, 1168, 1123, 1880, 1638, 1440, 1296,
            1210, 1077, 1838, 1596, 1398, 1254, 1169, 1918, 1676, 1478, 1334, 
           2011, 1769, 1571, 2061, 1819, 1124, 1881, 1639}], 
          
          LineBox[{2074, 1441, 2035, 1793, 1297, 1993, 1751, 1553, 1211, 1948,
            1706, 1508, 1364, 1078, 1839, 1597, 1399, 1255, 1170, 1125, 1882, 
           1640, 1442, 1298, 1212, 1079}], 
          LineBox[{1840, 1598, 1400, 1256, 1171, 1126, 1883, 1641, 1443, 1299,
            1213, 1080, 1841, 1599, 1401, 1257, 1172, 1127, 1081, 1842, 1600, 
           1402, 1258, 1173, 1128, 1082, 1083, 1843, 1601, 1403, 1259, 1174, 
           1129, 1884, 1642, 1444, 1300, 1214, 1084, 1844, 1602, 1404, 1260, 
           1175}], 
          
          LineBox[{1919, 1677, 1479, 1335, 1130, 1885, 1643, 1445, 1301, 1994,
            1752, 1554, 1215, 1949, 1707, 1509, 1365, 2019, 1777, 1579, 1085, 
           1845, 1603, 1405, 1261, 1975, 1733, 1535, 1176, 1920, 1678, 1480, 
           2040, 1798, 1336, 2012, 1770, 2090, 1572, 2062, 1820, 2112}], 
          
          LineBox[{1131, 1886, 1644, 1446, 1302, 1995, 1753, 1555, 1216, 1950,
            1708, 1510, 2047, 1805, 1366, 2020, 1778, 1580, 1086, 1846, 1604, 
           1406, 1262, 1976, 1734, 1536, 2123}], 
          LineBox[CompressedData["
1:eJwV1ne4j3UYx/GffTR1NVAhI7TQuCoh89g7FSmEtgjZhcMZaNirMioisle2
c6zs2c5oUDaFlFGv+4/Pdd/v9/19Luf3PN/n+yjatlPTjtkSiURW9kQiJU8i
MTR3IrEpVyJRXjrkTCRac69z03B+yeQqyyN8Mt+PO4XHy+vShu/IT+cLSBZX
RR7la/L9udP4A+koz/Od+M/5grKWqyrl+Vp8CncGfygDuGHcZu4xaZ7kWr4t
/wY/g7tV1nGTuFnc7/hpqcY9xtXmBuA/8VK8EWeTj/BAPFy/xfwffR6poN+n
HuPvlOv9m4Xi37O+ndqZu42bad1ZnF0exLfhrfofzEvjm9S8an7ucXW96yfr
Z/NF8R/WJ9TruPJqc3xI/5d5GXyfepNajKvu2gpqHW6gdSf0F/V/8cv0X+mz
ywScikfot1pXUTpz7bku3Bf4dtnA1ZCKfF0+NX4Lnihp3EhuG1dJunAvcF25
WbiQbMM/4ptlo/nHeI7+iFkLOYzPxu+QZPNKuJ4+zeyk/pL+HL9cv0mfQybh
dDxKv926f/VJce/0+9XjfEnpat2L+E39bLNz+hxSWL9d/Ym/Ra5y7wrEvbH+
E3UuV4w7al029XruGf3v6jmzslzZ+E1qca6GWtO1j+vr8wVxeux9fBk/gM+b
r8Cb42/DOdVc6o2xj9TJ5hn60XxhvMP1F3FeeRhXxgf0J8xLST6ucPw2172k
duPmWFMk9rTZJv5Tfh5/jGspf+DzuJzUincVN9BnxHunv6L/m1+p3xJ/n+SO
/Yk/5gepY7id1l/SXyVV9AfVk/w91pZWb1CLcFXVbq57Wd+dvx3Ptf48zikP
4TvwDv0+87viHVCvVgtyldXNrp+in88Xx8etz67m457VH1H/Nrtfasd5ghvq
B5ldiOcp3eUVvgc/jy8qW7g6cZ7wjfjB8V7HPZPB3FhuF1dVenCvcj25+bhY
vL9cXanGN+aHxD6Mv1WGcOO43XG2SE/uNa4XtwAXj/eCm8ot4E7g56QeV51r
wr0Tzz/WyDvceG4PV116cR243txCXCL2M/cZt5A7iVtJ/Xh3uabcu/HMYo28
y33A7eVqSO84n7k+3CJ8ZzwTbhq3iDuFW0sDLpl7gnsPX4418h73Ifc1lyx9
4vzm3uIW45Kyk5vOLeZO4zbSkKvJNePex1dijbzPfcR9w9WUt7hO3NvcElxK
dnGfc0u4M/h5acTV4p7khuL/Yo0M5SZw33K15G3uDa4v9yUuLbu5GdyX3J+4
rTTmanNPccPiDJYZ3DBuIvcdri19uc5cP24pvkv2cDO5pXH24nbSJPYc9zQ3
PM4WWYW3xnsmM82H40n6783qSD+uC9efW4bvjnuJ9+MC8QzNv8DL9GfN2kvT
2Jtcc25EvC+yGm/DeeJsNx+BJ+t/MKsr/bmuXAq3HN8T9xgfiPMsnq35LLw8
zmOzF+QJrh7XghuJc8gavB0nxTfAfGScHfofY39LCvcmN4Bbge+Ne48P4lvj
mZvPxiv0581elGZc/TiDuVE4p2TiHfHdjLPdfBT+RP9T7HsZwHXjBnIr8X3x
TPDP8U2OvWA+B6+MM8/sJXmSa8C15EbjXJKFd8Y3Is5X89H4U/2+eB9kYJwv
XCq3CpeRvfiXOO9ij5jPxav0F8xelqe4hnF+cWNwblmLd8XZJ3PNx+Ap+v3x
nkgq14NL41bjsvI1/hUXiv1iPg+v1v9j9kp8B7hG3HPcWJxH1uHd+Jo4C83H
4qn6A/H+SBrXk0vn1uBy8g3+Lb5LsV/M5+M1+n/NXpXmXGOuFTcOJ8l6vAdf
G2em+Tj8mf5gvFeSzvXiMrhMfL98iw/hIrFfzBfgTP1Fs9ekBdeEa82Nx3ll
A96Lr4uzNf6viafpf473TTK43twgLgs/IN/hw/iO2C/mC3GW/pJZBzmKL8R3
W27xrSmBk9VnrP0fe8p7WQ==
           "]]}, Annotation[#, "Charting`Private`Tag$3388499#2"]& ], {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         LineBox[{2125, 2124}], 
         LineBox[{2126, 1076}], 
         LineBox[{2127, 2121}], 
         LineBox[{2128, 2122}], 
         LineBox[{2140, 2139}], 
         LineBox[{2141, 2138}]}}, {{}, {}, {}, {}}}], {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotRange -> {All, All},
      PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SuperscriptBox[
        TemplateBox[{"\[Psi]"}, "Abs"], "2"], "\"Arg[\[Psi]] / \[Pi]\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707144468714523*^9, {3.7071445638333836`*^9, 3.707144657591799*^9}, {
   3.707144797038803*^9, 3.7071448534693966`*^9}, 3.707145733229862*^9, 
   3.707147194119525*^9, {3.7071492480327024`*^9, 3.7071492523175015`*^9}, {
   3.7071493208135514`*^9, 3.7071493950857344`*^9}, 3.707149822818655*^9, 
   3.7071520955552363`*^9, 3.7071527675463696`*^9, 3.7071529683685446`*^9, 
   3.7071539073640604`*^9, {3.7071559573656*^9, 3.7071559780459785`*^9}, 
   3.707156011126173*^9, {3.7071560670372334`*^9, 3.707156093976494*^9}, {
   3.707161521454491*^9, 3.707161526010844*^9}, {3.707161624658103*^9, 
   3.707161644458665*^9}, 3.707164996357485*^9, 3.707166339026862*^9, 
   3.707171095822734*^9, 3.7071756676775665`*^9, 3.7071761687733746`*^9, {
   3.7071813418294325`*^9, 3.707181351041233*^9}, 3.7071813958280373`*^9, 
   3.7071819952655506`*^9, 3.7071821852336383`*^9, 3.7071822199108086`*^9, 
   3.7071842698889675`*^9, 3.7071853813532248`*^9, 3.7071854983832703`*^9, 
   3.707185767534862*^9, 3.707186354196496*^9, {3.707186666090684*^9, 
   3.7071866983944454`*^9}, 3.7071867398646293`*^9, 3.7071868071135864`*^9, 
   3.7071869262924795`*^9, 3.7072179336598997`*^9, 3.70722903647603*^9, 
   3.707232448724306*^9, 3.707232865883316*^9, 3.707232905039873*^9, 
   3.707233177892178*^9, 3.707233321233944*^9, 3.707233405758942*^9, 
   3.7072338837074385`*^9, 3.7072339372754583`*^9, 3.7072340069036865`*^9, 
   3.7072343764422555`*^9, 3.7072348439930925`*^9, 3.7072351619478316`*^9, 
   3.7072354131173973`*^9, 3.7072368076677694`*^9, 3.707237211207511*^9, 
   3.707238957988658*^9, 3.7072408283116903`*^9, 3.707250428204486*^9, 
   3.707250844575248*^9, 3.707327767993784*^9, 3.7073279020681486`*^9, 
   3.707328231274747*^9, 3.7073338838947105`*^9, 3.70733483859234*^9, 
   3.707338105340409*^9},ExpressionUUID->"3f1edfa7-8a30-4c3a-b8ab-\
28d306fca616"]
}, {2}]],

Cell["\<\
In the Born interpretation, the absolute value squared of the (normalised) \
wavefunction is a probability density function. If our wavefunction described \
a particle\[CloseCurlyQuote]s position, an integrated region of the squared \
norm would give the probability of finding the particle within that region \
when measured.\
\>", "Text",
 CellChangeTimes->{{3.707162946246744*^9, 3.7071629474999647`*^9}, 
   3.7071629923259077`*^9, {3.707163280721895*^9, 3.7071634028309755`*^9}, 
   3.707166091473895*^9, {3.7071733518455863`*^9, 3.7071733531647415`*^9}, {
   3.7072198617307453`*^9, 
   3.7072198629523206`*^9}},ExpressionUUID->"a795a433-08db-4a40-826c-\
cd6fd3899a7e"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{"Overlay", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", " ", 
          "\n", "\t\t\t", 
          RowBox[{"ConditionalExpression", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", " ", 
            RowBox[{
             RowBox[{"x", " ", ">", " ", "2"}], " ", "&&", " ", 
             RowBox[{"x", " ", "<", " ", "3"}]}]}], "]"}]}], "\n", "\t\t", 
         "}"}], ",", " ", "\n", 
        StyleBox[
         RowBox[{
          StyleBox["\t", "Code"], "\t"}]], "domain", ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}], ",", "\n", 
        StyleBox[
         RowBox[{
          StyleBox["\t", "Code"], "\t"}]], 
        RowBox[{
         StyleBox["AxesLabel", "Code"], 
         StyleBox["\[Rule]", "Code"], 
         StyleBox[" ", "Code"], 
         RowBox[{
          StyleBox["{", "Code"], 
          RowBox[{
           StyleBox["x", "Code"], 
           StyleBox[",", "Code"], 
           StyleBox[" ", "Code"], 
           SuperscriptBox[
            RowBox[{"Abs", "[", "\[Psi]", "]"}], "2"]}], "}"}]}], ",", "\n", 
        "\t\t", 
        RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"Default", ",", " ", "Red"}], "}"}]}], ",", "\n", "\t\t", 
        RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "\[IndentingNewLine]",
        "\t", "]"}], ",", "\n", "\t", 
      RowBox[{"Text", "[", 
       RowBox[{
       "\"\<Pr(2 < x < 3) \\n= \!\(\*SubsuperscriptBox[\(\[Integral]\), \
\(2\), \(3\)]\) |\[Psi]|^2 \[DifferentialD]x \\n= \>\"", " ", "<>", "\n", 
        StyleBox[
         RowBox[{
          StyleBox["\t", "Code"], "\t", 
          StyleBox[" ", "Code"]}]], 
        RowBox[{"ToString", "[", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", " ", 
           RowBox[{"{", 
            RowBox[{"x", ",", " ", "2", ",", " ", "3"}], "}"}]}], "]"}], 
         "]"}]}], "]"}]}], "\n", "\t", "}"}], ",", "\n", "\t", 
    RowBox[{"Alignment", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"0.6", ",", " ", "0"}], "}"}]}]}], "\n", "]"}], "Code"], "\n", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.707164679923886*^9, 3.7071646803620634`*^9}, 
   3.707164760691659*^9, {3.7071660077937007`*^9, 3.70716602586668*^9}, {
   3.7071663461579094`*^9, 3.707166348327171*^9}, 3.7071663836435633`*^9, {
   3.7071664292788806`*^9, 3.70716659385884*^9}, {3.7071691607723284`*^9, 
   3.7071691641421013`*^9}, 3.7071692030924797`*^9, {3.70716925986016*^9, 
   3.7071692966744385`*^9}, {3.7071693424712963`*^9, 3.707169483609089*^9}, {
   3.7071695340002403`*^9, 3.707169736742014*^9}, {3.707169880385307*^9, 
   3.7071699107196994`*^9}, {3.7071699419375925`*^9, 
   3.7071699728451166`*^9}, {3.707170022600559*^9, 3.7071700701515756`*^9}, {
   3.707170194206633*^9, 3.7071703049259844`*^9}, {3.707170479144236*^9, 
   3.7071705018148355`*^9}, {3.70717062310413*^9, 3.7071706421474013`*^9}, {
   3.70717068581218*^9, 3.707170755486099*^9}, {3.7071708161206603`*^9, 
   3.7071709171123877`*^9}, {3.7071710471071696`*^9, 3.707171102825331*^9}, {
   3.7071712113937254`*^9, 3.707171282539364*^9}, {3.707171375595237*^9, 
   3.7071713945300107`*^9}, {3.70717143195852*^9, 3.707171631619712*^9}, {
   3.707171661862711*^9, 3.70717167397589*^9}, {3.7071718227736588`*^9, 
   3.7071718295898457`*^9}, {3.7071718717963066`*^9, 
   3.7071719069018908`*^9}, {3.707171968482173*^9, 3.707172158517458*^9}, {
   3.7071721914259405`*^9, 3.7071722095381174`*^9}, {3.7071722479193115`*^9, 
   3.707172301134406*^9}, {3.707172367662093*^9, 3.707172369784873*^9}, {
   3.7071726772424936`*^9, 3.7071726923480496`*^9}, {3.707228570370618*^9, 
   3.707228577269972*^9}, 3.7072501404759665`*^9, {3.707250434143778*^9, 
   3.707250437240896*^9}},ExpressionUUID->"ed5b14e9-0015-47ed-a289-\
ace2f925fe9b"],

Cell[BoxData[
 OverlayBox[{
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
uw==
     "], {{{}, {
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwl1wfYjWUcx/GX195biOy9hRSRMiKbyB5lZWePEpWUVPYoWxq2zIi0yIpK
mdkqKQ1KJX3+uq5+1/P7fv/ndZ3znPu571OBrv2b90uakJCQREom+/+6y3W3
VNSLu97wgt8TExJSuO6S7foDXnhAXsXP481emwW/Lp24h7nOXAW8VZ7khnCT
uYsyiLuTK8VVwJskM/eadORb8Z248vg9GcMN5l7iLshArhJXkiuPN0ombq50
4FvyHblyeIuM5p7gJnHnZQBXkSvBlcMbJCM3R9rzLfgOXFm8WUZxg7gXuXPS
n6vAFefK4vWSgZst7fjmfHuuDN4kI7mB3AvcWenHleeKcWXwu5KemyVt+WZ8
O6403igjuAHcRO6M9OXKcUW50nidpONmyiN8U74t97yclj58Wb4IXwqvlbTc
DGnDN+Ef4SbIKXmcL8MX5kviNZKGmy6t+cZ8G+45+VZ686X5QnwJvFpSc9Pk
Yb4R35p7Vk5KL74UX5AvjldJKm6qtOIf4h/mnpET0pMvyRfgi+GVkpKbIi35
hnwrbrwclx58CT4/XxSvkBSxXqUF34BvyY2TY9KdL87fwRfByyU594o05x/k
W3BPy1F5jC/G5+ML4+YyVo7Io2ZFzfKaFcLN5Cn5RrqZFTG73awgLiD55Q5p
Kk/K19LV6wp7XR6vy4ffkWTcy9KMr8834UrhDTKc68+N4Q5LF64Ql5vLi9+W
RG6yNOXr8Y256/F84bXxPevrZRjuh0fHd4sX4ln4K9wZF8S58O1xj/RP5X18
v9n+uGd4An7L/Ce8Gi/DSfWXpAmuixuZl8DvylCuLzcq1gdegGfiL3EnXADf
hvPg2nhf3AvuOe7N2L/wJGnM1eEeir0Lr5MhXB9uJPeFdOTyczm53HhZwv8b
4IvSiH+Ab0gVw2tlMPc4NyLWIp6PZ+BDuAO+A+fAufA/+m96MtdPZJt+n9dc
0E/oe/VEe+pk/Cx+w98UxL/g7/Bl8zR4FX4D3zS/DX+N98f+Yf53fD58v2sD
8yLm1/Bl/Kd5RrwFr4m1j7/VD+tr9Cf03vrweE7wPDwdH8QH4j3HvsXn07Pr
t8W60T+WrbiW2Z74HvEzeKn5j3glXor/xRNxQ1wbPxjvL9aADOJ6ccO4z6Ud
l5fLxuXES+RG7Fl8A/4+vj4ujFfJQK4nNzSe2Thr8DR8ALfFt+OsOAdOqn8k
7+GaZuf14/pnelL3ZxIejxfHM4iv4Iv4knlqvAIvwf+Y58SH8T48wfyv+Fy4
lmu9eH/mV/GP+A/zDHgzXh3PPz6pf6Wv1AfoPfQhcd/0s/rROPf0qfp+fn/c
79iP+Tx6Fj17LFH9Q9mC7zXbHWsWj8OLzH/Ay/Fi/Hfszbg+ronrxjrDK6Q/
150bzO2TNlxuLjOXDS+Uv2Kv5uvx9/J18BOyV1rzufhMfFZcA++SF7inuQXc
9/gdvAhfj30c18U14rcDvhbnIl6FC+gn9C/15Xr8IHlMH+R1l/Qz+hE+hfs6
F0/Be8yy433xPcdZYf5nrFec0TVLPL/mf+NfE2NB+Hx4p+tmXD3WHj6Hj+FP
cRI8EY/F8/3Jz/oF/Tuzt/WF8XzxX+l79fF8Hb167H381Tir8UqcPz6/9MWP
4oGx/+M5+NVYh7gVzokz4Mx4nvwRZxL/AH8PXxsPkN3Sks/Bp+cz4dfjPsaZ
xN/P3x17TZwl8X6lD9eN6x9nCp6NX8G7cAucHafDGfFN/AHehO/RP5Hn8VP4
NfOL+C28AF/FX+p79LF8bb1a7A387/ol/Xc+vfu5Aa+IMyzWMj6Ov4izAf/r
+jju6tov3rf5D/g0PmyeHM/CL8f3Y54N741nADc3/yPWK07rmiHWrP5L7EFm
O/SN+t36Wf2o/rE+QX9Sn+v1F/CbeH683zij8X34rtgzcN6YS2+uC9eX+yTO
cy4rl4ZLj6vhj+Q5bgw3h/stznKuFlc1ntdwcb7i5XF26sf0Q/oyvZfeWe8T
z45+Ks5bfqY+Od47n9Xn34N34qZm12Kd49Su6cyLml/HV/AN80x4O96A74r9
EZ/BR/CHSeIHhWccj8az46zWz+vnzVKZLcPz8K9xbuqf6WPMaupV9Br8r3F+
43dwHv0N6Yk7xXcb6wTPwC/hj3ATnBmnwmlxVbxTnuFGcbO4X2Q0dy9XOZ5V
3Fs+lMbxufiUfBo8U67IKL4Gf2esX9xLdkqjOA/5FHxqXCXWuYznRnIzuHPx
vvHr+Gc8ElfHlWL94Nx4qfTgOnI9437g6XgS/gA/FPs+To5Txe8A/D5ejyvH
epRxeASebn42/k38Gv4JH9J36yP4e/SKerW4F3gdfhvn0o/qB/Ulene9g97D
677Tv9UP8dP0F/Ud/Gf6B3rDeB71ZHpK/k/95zgn+G36u/qd+mn9G327ftP1
aTzcdZq/yW9NXMbn8BnzlHgJnosvm+fAB/EuPNz8etw/XCHWn3kh89/wD/iK
eTq8Fr8V+3acQfgI/hwvxjdcH8PtXbv7+4PcVPxCvD/cIP4NnIhT4Epxz2Us
N4ybyp3Gi/Ec/GP87tA/1Yfx1fTyetVYx/r38f3zab2PNfhNnDPOOvwNPoAX
4X9cH8Xt4v3523zmF/FJ/Ll5MjwFT8Tvm2eJ/5/GO/CD5ldj7eOkrsljz9d/
0v8y26qv0yvqp/Sv9W36U/pQfYrXn8KL8Gx8CQ/Fd+FyuEp8D3ihdOPaxnvl
tkl9Lg2XJPHWo5/wavxmkCF8Vb5srNU4V/EC6co9wnXjtko9LjWXkHjrv4RX
Yq+SwXwVvkysodin8XzpwrXhunLvSd3YV7ibSW8dxwkvx7qN3xV8ZaK011aK
fQ7Pk85ca64Lt0XqxJrj/pX/AFkFC3M=
            "]]}]}}, {}, {
        {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwNw2kv1wEAAOBf5ov00lFMruYIoQ0p/xxDxVzltkJslGkdqFylk6SQVISE
ROnwtXqe7Tla0x5qCwuC4IiTxoUHwT8P/e2Af33tnmW+9cAOJ/ziSS/Z7VM3
zfS8jY74wVjPWGq7466abIbnvOqwS8Z43CRPWegVh3zvMXMtsc0xV0z0ol1O
+dV0z9rgfReNNsdiWx31swkOOuu+lXb6xA3T7PeV3y2w3nsuGOVt3/jTant9
4bbZ3nLGH16wxUd+Mt4Kr/vYdVPt86U75lvnXeeNtMoen7vlaUM2+9CPnrDc
a066Zop51nrHd0Z42Rs+85tZ3nTaXYuc85dN/vGBy/4HP51Kmw==
            "]]}]}}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
       TagBox[{
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]}},
        Annotation[#, "Charting`Private`Tag$3388806#1"]& ], 
       TagBox[{
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwNw3kv0AEAANBfmy/iz5wNFRO5yiYRipHKJDlCi8JGrIacRYVSIbeinOVI
Ofpe3tteaHlDfv2ZIAiGjQkJgm8OeGKNh341z30/+9w0fzlus3c966xd3jfL
RNd96xOLjfW7g9aab7q//WCL9wxzzm4rvOauE7Z5yQ3f2WiJca445CML/OMX
O8xwx4+2WuY/p31puPP2+MBs9/xku0lu+t4mb/vXKV943lVfW+dNrxjhgq+s
9LrJbjnqU0u94A/fWO8trxrpor0+NMfLXjTKaJfss8pcU4z3p8M2WGim51y2
32pvmOq2Yz7zjgmuOeJjj5yxyAMn/W+nx54CstNJAg==
           "]]}},
        Annotation[#, "Charting`Private`Tag$3388806#2"]& ]}}], {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox[
      TagBox["x", HoldForm], TraditionalForm], 
     FormBox[
      SuperscriptBox[
       TemplateBox[{"\[Psi]"}, "Abs"], "2"], TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], 
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"Pr(2 < x < 3) \\n= \\!\\(\\*SubsuperscriptBox[\\(\[Integral]\
\\), \\(2\\), \\(3\\)]\\) |\[Psi]|^2 \[DifferentialD]x \\n= 0.196048\"\>", 
     TextForm]], "InlineText",ExpressionUUID->
    "4998710c-9c63-43e6-a2d7-d2b4924d1d3f"],
   Text["Pr(2 < x < 3) \n= \!\(\*SubsuperscriptBox[\(\[Integral]\), \(2\), \
\(3\)]\) |\[Psi]|^2 \[DifferentialD]x \n= 0.196048"]]},
  Alignment->{0.6, 0}]], "Output",
 CellChangeTimes->{
  3.707172308860105*^9, {3.707172357821191*^9, 3.7071723708262243`*^9}, {
   3.707172677880554*^9, 3.7071726933045654`*^9}, 3.707175668178421*^9, 
   3.7071761691588187`*^9, 3.7071787386911964`*^9, {3.7071813426784906`*^9, 
   3.70718135141107*^9}, 3.707181396182229*^9, 3.707181995867051*^9, 
   3.7071821856165676`*^9, 3.707182220359777*^9, 3.707184270506235*^9, 
   3.707185384131092*^9, 3.7071854989159694`*^9, 3.7071857684679976`*^9, 
   3.7071863566400776`*^9, {3.707186666223669*^9, 3.707186698760919*^9}, 
   3.707186740222046*^9, 3.707186807407622*^9, 3.7071869264364758`*^9, 
   3.7072179339807167`*^9, 3.707228592800452*^9, 3.7072290366291914`*^9, 
   3.7072324488555536`*^9, 3.7072328660304823`*^9, 3.7072329053029275`*^9, 
   3.7072331787789087`*^9, 3.707233321433999*^9, 3.7072334060753803`*^9, 
   3.70723388398542*^9, 3.707233937391369*^9, 3.707234007321926*^9, 
   3.7072343766246767`*^9, 3.7072348441252766`*^9, 3.7072351623901277`*^9, 
   3.707235413226689*^9, 3.7072368077938004`*^9, 3.7072372122303457`*^9, 
   3.7072389582475395`*^9, 3.7072408285157194`*^9, 3.707250143925824*^9, 
   3.7072504396958675`*^9, 3.7072508450013113`*^9, 3.707252513713107*^9, 
   3.7073277688052883`*^9, 3.707327902371648*^9, 3.7073282314542437`*^9, 
   3.707333884082235*^9, 3.7073348387283545`*^9, 
   3.7073381056821175`*^9},ExpressionUUID->"af8c84d6-f817-4019-a5b3-\
1c077981bec8"]
}, {2}]],

Cell["\<\
Alternatively, if we measured the position of many particles all described by \
the same wavefunction, we\[CloseCurlyQuote]d expect the distribution to \
follow the norm squared of that wavefunction.\
\>", "Text",
 CellChangeTimes->{{3.7071729995819073`*^9, 3.7071731313809404`*^9}, {
  3.70717333607369*^9, 3.707173336722187*^9}, {3.70718435145334*^9, 
  3.707184362793939*^9}},ExpressionUUID->"add7be55-20fe-45fb-a2ce-\
6a687dc1a26a"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"exampleSamples", " ", "=", " ", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"ProbabilityDistribution", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", 
          RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
       "]"}], ",", " ", 
      SuperscriptBox["10", "3"]}], "]"}]}], ";"}], "Code"]], "Input",
 CellChangeTimes->{{3.7071664514447193`*^9, 3.707166460865343*^9}, {
   3.7071733906385136`*^9, 3.70717341814071*^9}, {3.707181419298007*^9, 
   3.707181422933382*^9}, 3.7071820306249323`*^9, 3.7071822779278965`*^9, 
   3.7071863868958893`*^9, 3.7071868027329397`*^9, 3.707186902787922*^9, 
   3.707186969065593*^9, {3.707232565301318*^9, 3.707232566266459*^9}, {
   3.707250446163162*^9, 
   3.707250510379472*^9}},ExpressionUUID->"fcb9b5cf-42ec-4b62-a533-\
ed35217f3e3f"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{"Animate", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Overlay", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"Show", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t\t\t", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", 
              " ", "\n", "\t\t\t\t\t", 
              RowBox[{"ConditionalExpression", "[", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", 
                " ", 
                RowBox[{
                 RowBox[{"x", " ", ">", " ", "2"}], " ", "&&", " ", 
                 RowBox[{"x", " ", "<", " ", "3"}]}]}], "]"}]}], "}"}], ",", 
            "\n", "\t\t\t\t", "domain", ",", " ", 
            RowBox[{"Filling", "\[Rule]", " ", "Axis"}], ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Default", ",", " ", "Red"}], "}"}]}], ",", " ", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}]}], "\n", "\t\t\t", "]"}], ",", 
          "\n", "\t\t\t", 
          RowBox[{
           StyleBox["Histogram", "Code"], 
           StyleBox["[", "Code"], 
           StyleBox["\n", "Code"], 
           StyleBox["\t\t\t\t", "Code"], 
           StyleBox[
            RowBox[{
             RowBox[{"exampleSamples", "[", 
              RowBox[{"[", 
               RowBox[{";;", "n"}], "]"}], "]"}], ",", " ", 
             RowBox[{"{", "0.1", "}"}], ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"bins", ",", " ", "counts"}], "}"}], ",", " ", 
               RowBox[{
                RowBox[{"counts", "/", "0.1"}], "/", 
                RowBox[{"Length", "[", "exampleSamples", "]"}]}]}], "]"}]}], 
            "Code"], "\n", "\t\t\t", "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"Histogram", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{
             StyleBox["Select", "Code"], 
             StyleBox["[", "Code"], 
             RowBox[{
              StyleBox[
               RowBox[{"exampleSamples", "[", 
                RowBox[{"[", 
                 RowBox[{";;", "n"}], "]"}], "]"}], "Code"], 
              StyleBox[",", "Code"], 
              StyleBox[" ", "Code"], 
              RowBox[{
               RowBox[{
                StyleBox["2", "Code"], 
                StyleBox[" ", "Code"], 
                StyleBox["<", "Code"], 
                StyleBox[" ", "Code"], 
                StyleBox["#", "Code"], 
                StyleBox[" ", "Code"], 
                StyleBox["\[LessEqual]", "Code"], 
                StyleBox[" ", "Code"], "3"}], " ", "&"}]}], 
             StyleBox["]", "Code"]}], ",", " ", 
            RowBox[{"{", "0.1", "}"}], ",", " ", "\n", "\t\t\t\t", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"bins", ",", " ", "counts"}], "}"}], ",", " ", 
              RowBox[{
               RowBox[{"counts", "/", "0.1"}], "/", 
               RowBox[{"Length", "[", "exampleSamples", "]"}]}]}], "]"}], ",",
             "\n", "\t\t\t\t", 
            RowBox[{"ChartStyle", "\[Rule]", " ", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"1", ",", " ", "0.3", ",", " ", "0.3"}], "]"}]}]}], 
           "\n", "\t\t\t", "]"}], ",", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"\"\<x\>\"", ",", " ", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "\[Psi]", "]"}], "2"]}], "}"}]}], ",", " ", 
          RowBox[{"PlotRange", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
         "\t", "]"}], ",", "\n", "\t\t", 
        RowBox[{"Text", "[", "\n", "\t\t\t", 
         RowBox[{
         "\"\<# measurements \[Element] [2, 3] \\n=\>\"", " ", "<>", "\n", 
          "\t\t\t", 
          RowBox[{"StringTake", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"ToString", "[", "\n", "\t\t\t\t\t", 
             RowBox[{"100", " ", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"Count", "[", 
                 RowBox[{
                  RowBox[{"exampleSamples", "[", 
                   RowBox[{"[", 
                    RowBox[{";;", "n"}], "]"}], "]"}], ",", " ", 
                  RowBox[{"u_", " ", "/;", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"u", " ", ">", " ", "2"}], " ", "&&", " ", 
                    RowBox[{"u", " ", "<", " ", "3"}]}], ")"}]}]}], "]"}], 
                " ", "/", " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"n", " ", ">", " ", "0"}], ",", " ", "n", ",", " ", 
                  "1"}], "]"}]}], "]"}]}], "\n", "\t\t\t\t", "]"}], ",", " ", 
            RowBox[{"UpTo", "[", "4", "]"}]}], "]"}], " ", "<>", " ", 
          "\"\<%\>\""}], "\n", "\t\t", "]"}]}], "}"}], ",", "\n", "\t\t", 
      RowBox[{"Alignment", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0"}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", " ", "0", ",", " ", "\"\<# measurements\>\""}], 
       "}"}], ",", " ", "0", ",", " ", 
      RowBox[{"Length", "[", "exampleSamples", "]"}], ",", " ", "1"}], 
     "}"}]}], "\[IndentingNewLine]", "]"}], "Code"], "\n", 
 RowBox[{"AutoCollapse", "[", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7071647236125536`*^9, 3.7071649353118525`*^9}, {
   3.70716497272719*^9, 3.707164977496866*^9}, {3.707165045372439*^9, 
   3.707165045994536*^9}, {3.7071732189746695`*^9, 3.7071732372000694`*^9}, {
   3.707173300985273*^9, 3.707173302242024*^9}, {3.707173559269908*^9, 
   3.707173560404168*^9}, {3.707173597217518*^9, 3.7071736019488707`*^9}, 
   3.707219526558853*^9, 3.707219757367989*^9, {3.707222986217821*^9, 
   3.7072229867872543`*^9}, {3.7072286153997407`*^9, 3.707228657333459*^9}, {
   3.707228688345074*^9, 3.707228715837148*^9}, {3.7072325716873193`*^9, 
   3.707232579498927*^9}, {3.707245703463701*^9, 3.707245709389325*^9}, {
   3.707245769491022*^9, 3.707245792117779*^9}, {3.7072459402561417`*^9, 
   3.707245945672223*^9}, {3.707245975950809*^9, 3.7072459816035366`*^9}, {
   3.7072468850674047`*^9, 3.707246912682671*^9}, {3.707247197420576*^9, 
   3.707247241548131*^9}, 3.707248558119252*^9, {3.7072495890582047`*^9, 
   3.707249631155781*^9}, {3.707249748879838*^9, 3.7072497932818055`*^9}, {
   3.70725048533263*^9, 
   3.7072504886473255`*^9}},ExpressionUUID->"f0865b95-a499-46ce-a592-\
44456980c53e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 793, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 0, "# measurements"}, 0, 1000, 1}}, 
    Typeset`size$$ = {360., {123., 130.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$3389288$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$3389288$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Overlay[{
         Show[
          Plot[{Abs[
              $CellContext`example\[Psi][$CellContext`x]]^2, 
            ConditionalExpression[Abs[
               $CellContext`example\[Psi][$CellContext`x]]^2, 
             
             And[$CellContext`x > 2, $CellContext`x < 
              3]]}, $CellContext`domain, Filling -> Axis, 
           PlotStyle -> {Default, Red}, PlotRange -> {0, 1}], 
          Histogram[
           Part[$CellContext`exampleSamples, 
            Span[1, $CellContext`n$$]], {0.1}, 
           
           Function[{$CellContext`bins, $CellContext`counts}, \
($CellContext`counts/0.1)/Length[$CellContext`exampleSamples]]], 
          Histogram[
           Select[
            Part[$CellContext`exampleSamples, 
             Span[1, $CellContext`n$$]], Inequality[
            2, Less, #, LessEqual, 3]& ], {0.1}, 
           
           Function[{$CellContext`bins, $CellContext`counts}, \
($CellContext`counts/0.1)/Length[$CellContext`exampleSamples]], ChartStyle -> 
           RGBColor[1, 0.3, 0.3]], 
          AxesLabel -> {"x", Abs[$CellContext`\[Psi]]^2}, 
          PlotRange -> {0, 1}], 
         Text[
          StringJoin["# measurements \[Element] [2, 3] \n=", 
           StringTake[
            ToString[100 N[Count[
                 Part[$CellContext`exampleSamples, 
                  Span[1, $CellContext`n$$]], 
                 Condition[
                  Pattern[$CellContext`u, 
                   Blank[]], 
                  And[$CellContext`u > 2, $CellContext`u < 3]]]/
               If[$CellContext`n$$ > 0, $CellContext`n$$, 1]]], 
            UpTo[4]], "%"]]}, Alignment -> {1, 0}], 
      "Specifications" :> {{{$CellContext`n$$, 0, "# measurements"}, 0, 1000, 
         1, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{415., {162., 169.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7071649494213247`*^9, 3.7071649792661242`*^9}, 
   3.707165012010634*^9, 3.707165047411086*^9, 3.7071663564921255`*^9, 
   3.7071665763721304`*^9, 3.7071711238503685`*^9, {3.707173226129828*^9, 
   3.707173237901939*^9}, 3.707173303191354*^9, 3.70717356075187*^9, 
   3.7071736026179905`*^9, 3.7071755727525663`*^9, 3.707175642908661*^9, 
   3.7071756851899595`*^9, 3.7071762101666117`*^9, {3.707181352428508*^9, 
   3.707181396698818*^9}, 3.7071819968854246`*^9, {3.7071821062541666`*^9, 
   3.7071821080923033`*^9}, 3.7071822364481173`*^9, 3.70718428644858*^9, 
   3.7071854296366005`*^9, 3.7071856257341404`*^9, 3.707185836612664*^9, 
   3.707186381711664*^9, 3.7071864581460857`*^9, 3.7071866316523385`*^9, {
   3.7071866672850227`*^9, 3.7071867000400934`*^9}, 3.707186741275679*^9, 
   3.7071868080554543`*^9, 3.7071869439826236`*^9, 3.707187000605755*^9, 
   3.7072179506122055`*^9, 3.707219528147133*^9, 3.707219758606738*^9, 
   3.707222987387691*^9, 3.707228660921582*^9, 3.7072290369925795`*^9, 
   3.70723241308138*^9, 3.7072324494414105`*^9, {3.7072325817388096`*^9, 
   3.7072325880054145`*^9}, 3.7072328665363464`*^9, 3.7072329058574276`*^9, 
   3.7072331804453173`*^9, 3.7072333222101383`*^9, 3.707233406576743*^9, 
   3.7072338844933414`*^9, 3.707233938039568*^9, 3.7072340079230385`*^9, {
   3.7072342266568003`*^9, 3.7072342287880774`*^9}, 3.7072342602884226`*^9, 
   3.7072343771945415`*^9, 3.7072348444123025`*^9, 3.7072351629375772`*^9, 
   3.707235413777996*^9, 3.7072368082934*^9, 3.707237212512588*^9, 
   3.7072389587900105`*^9, 3.707240829487894*^9, 3.7072457099467306`*^9, {
   3.707245775016694*^9, 3.7072457927508817`*^9}, 3.7072459838459005`*^9, 
   3.7072469138357315`*^9, 3.707247252068598*^9, {3.7072485499601803`*^9, 
   3.7072485671266837`*^9}, {3.7072495900157447`*^9, 3.707249631584449*^9}, {
   3.7072497531797276`*^9, 3.707249793710867*^9}, {3.707250470174689*^9, 
   3.7072505132759204`*^9}, 3.707250846060772*^9, 3.70725236922126*^9, 
   3.7073277696930456`*^9, 3.7073279044764566`*^9, 3.707328232054243*^9, 
   3.70733388481942*^9, 3.7073348398905325`*^9, 
   3.7073381066324654`*^9},ExpressionUUID->"743b5af9-7669-416e-978f-\
3a2706626734"]
}, {2}]],

Cell["\<\
The probability density function alone however is an incomplete description \
of the system. The complex phase is very important; we\[CloseCurlyQuote]ll \
here-forth indicate it by colour.\
\>", "Text",
 CellChangeTimes->{{3.707144505941615*^9, 3.7071445357153425`*^9}, {
   3.7071446796274433`*^9, 3.7071447049328423`*^9}, 3.7071548470360613`*^9, {
   3.7071548787705183`*^9, 3.707154919770935*^9}, {3.7071736261112127`*^9, 
   3.707173657600625*^9}, {3.707184381376152*^9, 
   3.7071843827606792`*^9}},ExpressionUUID->"b3672dc8-f9b2-4c50-bdbe-\
10dd462f375e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotWavefunction", "[", 
  RowBox[{
   RowBox[{"example\[Psi]", "[", "x", "]"}], ",", " ", "domain"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7071447124641047`*^9, 3.707144724583819*^9}, 
   3.707145739979908*^9, 
   3.7071520807468987`*^9},ExpressionUUID->"d2b73624-d87e-4077-8691-\
dfd3713438df"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
StQO0J7YnrE78wu4viUokZR3oy+79/nuGLIDb83nnJqGbsjCcK3+xWEBKqjO
BqevQkb1Wyqj8QXIjv0uNROzC80vqyy8WGNBX0fM0dvlGFZv6Un2euOBTX6j
nd1rBH1LwkTHkiMDCoFSfb8Se9Cm9kL7EWJScF46jljzmoQrGU6ZJsMNwF8U
KlrHtQuhDKoKD6nigPvK9qcQgmOQkhAZDLfHA+G9B/m0Naf7yiSh8t1CFo7j
6OPvD3SiNJjzNwYHL0Odf49ITk4PBPtzfEIZesDhKjehQxQeyIVU9vjMG2GF
6/fjV7xrsDtZ3ZdguAgedyxNnTaPYWiqfbZdAA/VBHGumXuMSGB49vNjm2OV
0ii1SHfrcZTJ8px6faEsPC9zM3S17AVTGaUJC7Ie2KbdYtfdw0O/Wb6a6lID
ONks5Bnqr4Fl5q/K8lMfXbw0fLi4iEUdxT4Oo9fJIGK5O0jqxi48d1p8ssMe
Dc/x2qo64seQr/jXgeN0Xs6zomG/akfRX2a+hV9SZYFc8GlEWGcvWkdw6X1e
MgN03M8kXZqfgMLADJdM7wbouKzznzp5N+owvYCTfyYIo1lCsfc9sNDwc4NE
irAHCKsbXd/3rILwl0CfOI5F4OsZCLvVtgs2A+IaHZkJkLDqJXQl/Rj6zXMC
iZ7iYZvunuWtxjH0LMeokxpeFvB/OoK5HCfA+tJ0V9vXhv/Vde8PPd9/H8cb
SlJCioWGKTnkENGQt+W8jDn3dchhriTHJb7IKUJRqskxERlbLMn5mByS86kw
h0oOSzKakEjXfrgeu36677fbHzB8Xu/n4/Ew7i4M+847qsg43aU86v0/f55l
77dptaH0n3/vpGSPrnW/lhF+qdKYP1feMsz2+mf/divTePjodo0zESVGR7u0
9QkV4oywib5u3Sd9NspNRp6b+c//vyWnPp+pePphaszEnGbfFrUzShO3X+ya
k5Uac/d2SvECM+N4xdCgEz8+MaxmXJ9neyrDGPTxetVtliXGx/0xLT+MiDeG
jWjVf2BRmWGefOD1LZ88wzWq74MbAVlGi00FDuY1s4z//FRv2+waRcb2cQ3/
iPcqNO7X+GbHasfc1DY+oYWt77oZQf9T/Oz6/dvG7a8j+4x8l2lMzssbvN/t
nz8PNz1Z9uJQhrFjxtEFWdOKjJFdpu3/MKjQ8P37ve2ZGZmpU6MrNZlhZmV0
9Btyfe6UEsO1012/gOxY49Mvd4+d7/vZ6Gfq8sHun78fD2fa7r7TLTs1b+uu
uk1GuhmL80P3+nvfTl1pca3BpJSqRs/WG7sOafLE6HjYMtdtXYZhvqWjR+0P
mcawHHf79lZZhov9m2oL37w2yu3so77rUGi0/9Rt3sJeOalVwt2+WX7TzRge
dvJiSNJjo2FJgsXF4AzD+7+tek8LvpU6Lb1XaZc0B2PRCO9BVZNKDL/z0/af
W7zFsHUpTjoV9tnITw696zM/zwiccuqxnW9Wars5KVU3TKxkvAsc+H1BixJj
Rl6895JDccZjhxMZV60/G2F3fnowJjDPGBnsExRemGXU8uv+ard1lhGS0cMt
oFWRseLCoaLgYYWGZdTRr5+U2XQ9PWmq37eJZV3UP2Hyf//p/YqsexKy7tHJ
yteRlYcm6/ccWd9XybrPJCtvQlYfAVnvI2TdK5B170xWfousvC1Z/SJkvVeS
dT9EVv6ArDwlWfl3sn6/k/U9nax7XLLyRWT1T5D1HkbWfQpZ9+1k5fXIyleT
1SdD1vs0WfdiZOVNyMrPktV3QNZ7DVn3E2TdX5OVJyOrb4Ss90+y7pHIyjOQ
lc8kK09PVn8QWd8jyLoPJCtfRFZemqx+C7Le58i6lyHr3p6s/CBZ/TJkvXeT
dX9GVn6FrDwuWe8ZZN0XkHWfTFY/A/nf9zew7mHIuqcn6/ccWd9XycoXkvXe
QNb3f7Luh8n6fUTW90qy+r7I+n5I1j0vWb+nyMoLkvW+Qda9AVn//ierX4Gs
90yy7ovI+n1FVn6BrN//ZH2PJ+v3A1l9P2R9ryDrfpCs37dk5ZPIeu8h6/6C
rN9jZOW5yXrfJOveiKzfu2TlGch6TyHrvoGsvjKyvp+Sdc9MVh6SrPdCsu53
yOqHIOt9nax7N7LyMmT1BZH1PYis+0yy8l1k5dXJ6mck696DrPwFWfltsvpo
yPr+Q9Y9Jll5LrL6ycj6vkrWvTNZ73Fk5SnJep8m616MrPcjsvonyPoeQ9Z9
JFnvc2Tlr8h6/yXrHous9yqy+hfJugchK59B1nsuWflvsr6PkHWvSNb7I1l9
OWR9byTr/pes916y8oVkfV8g696PrPdNsvrbyPo+T9a9PFnv7WTlccn6PkTW
vSZZ/SRkfb8k656YrDwiWd9byLp/JKsvmKz7Q7LygGT1iZD1PZSs+2Sy+tXI
umcgK19AVj6ZrO99ZN3fktXXSda9EVn5H7L6A8j6HkvWfTRZfUpk3ReQde9P
Vl6YrD5fsu4Lycr7kdUXQtb3dLLu28nqTyPr/oSsPAhZeXKy+jTJupciK79E
Vv8BWX1OZN17kJW/ICu/TVY/Oln31mTln8nqTyKrD5Ks+yuy8lBk9SmQ1Q9M
1n0jWXlDsvpKyOpfI6ufm6x7YbLyu2T1/5DVZ0jWPRhZ+Syy+h3I6rcl636R
rDwhWX0kZPWrkbUnQFY+gay+ALL6xsjqTyWr75qsvney7s/JyoOT1SdFVj8m
WX3GZO03kJUHIaufgax+N7L6asnqFyerX5+se3+y8vdk9XeR1UdKVn80WffC
ZOV3yer/IavPkKy9DrLyP2T1cZDV50dWPzFZ98Jk5XfJ6v8hq6+erHt8svLx
ZPVrkdUXStY9LVn5VrL6ccjaoyArH0NWXwVZfXdk3Y+Sleckq/+XrPtqsvLO
ZN2/kdWnRNa9JVn5R7L65snKF5CV9yfrvpCsPjGy7mHJyqeSdR9HVv8qWffb
ZOWpybovJKuviaz7VLLyomTd35G1n0RWHpOsfiSy7l/J6l8l6/6crDw4Wfea
ZPXVk5UfIavPgaw+OLLur8nKQ5O1f0JWvousvhWy+hrJuo8nK69OVn81WfkO
svoWyOprI2sfiay8Jln9SWT1r5LVJ0/W/gdZeS+y+lfI6m8kq4+arL01svLb
ZPWpkdXHTNa+BFl7QGTlHcnqHyKrv5SsPnay9rjIygeT1ddFVt8vWfsFZOXF
yOpvIav/kaw9G7Lyi2T1CZHVR0pWvoasvguy+tnJynuR1b9CVn8jWXkVsvoj
yNpHJKtvgaz+Q7LyLmT1q5OVNyOr/4WsfAZZezRk5UXJ6m8iKw9DVj8sWXks
svpRyMp7kLWPRlb+m6w+NrLyR2T1PZOVtyOr/4asvAxZ+xhk5UnJ6nciK49E
Vn8sWXk3svpnyNp3JKtvgqz+R7L648nKa5LVn0TWng5Z+WWy+sTI6iMma1+N
rDw9Wf12ZPVjk7X3QVZ+mKw+L7L6gMnayyWrf4esPlyy9jTI2gcjK79PVp8e
WX3cZO1FktWHQVY/JVn99mTt9ZC110pWfwxZfa5k7UGQtW9F1h4hWfvLZPU5
kdWvTNY+C1l7c2Ttg5K1j0tWXw9Z/blk7W+QtSdG1v4jWXvXZPVnkdVnTdYe
Dln7fmT1cZDVj0lWvz5Ze69k9duQ1TdL1l4FWftbZPVXkNUnSVYfPVl7zmT1
S5HV90zWXgxZ/Q1k9SmStZ9HVp8JWf2iZO0TkNVvQFbfIFl7rGT185DVl0tW
np+sPQ6y+ibI6n8kK49O1n4ZWX0oZPWTkpXnJ2v/gKz+B7L6GMnKu5P7O1Tf
+Lo9W32FZO0HkNUvQdY+GVn9LmT1rZLVh0DWnitZ/Utk9SGT1T9B1t4KWf0n
ZPWRkrUfTlZfGln95WTtH5HVT0NWXyxZe5Bk9SmR1W9M1j4KOXthaIlZJ7b6
DsnaHyBrv4ysPVay+rHI6qsma++GrH1usvrayOpPJ2t/iaw9SfLURybD6htv
0OpXJWvvhKy9RLL2n8llnSyWLjjMDl9rsy+nTTFa/Zlk7VmQtYdH1r4vWXvs
5EQvJ+ttjd+i1WdL/ndfBqx9SrL2tskD56Z/5fwrW/2QZO01kLX3RtZ+Lbn0
V9/WSc3fodWXStZ+CVn7h2TtOZPVt0dW/z1Z+1nkbXfMvm23h63+R7L2GMja
cyNrn5as/juy+ujJ2rMi9zHbOeCoK1v9z2TtMZG150pWXx5Z/fVk7duT1VdJ
1n4EWftzZPXBkdXPTs4s3D3s/j62+mLJ2m8ha/+RrL4+svrzydrDJqtfkqy9
B7L6y8jakyOrH4+svnqy+r3IPrdSRn1qx1a/NPnfvSew+u/I2pMlqw+SrH0G
svrayAnpB3LDZ7LVj0rWXglZfXhk7SGS1bdI1v4BWX1w5Pwjh3+sf5CtvmCy
9nvI6h8kax+UrH5MsvYqyNpLJ6uPlax9FLL2FckB8ScndunA1h4BWfuAZO2L
k2OdnQvnzGCr/5isPSKy9kzJZ5Ojpx7Yw1Z/OFl7XmTtAZML3T++fv2CbZs2
fkYL51K0+vTJ2rcjax+b3KXP1bcTxrN9b3SYnRDPPvzIYr79lx/R2rcga2+S
rL168stbqdP9hrMbpQeOPxjLVl88WfttZO0/k70PN/Wu9JAdkZjtNdDhE1r7
CWTtGZK1h04+vWm1ET+arT5usvaxyNrXJZes6t32r3i2+uHJ2msja++Z7BJc
5tQ5j61+bLL2qsjauyWPm5Fiv+JrtvZgyNpnJf/VvmuMmSdb/dpk7V2Rg0qv
WC0Zw1afPVn7cmTtU5Njgp+bzItja/+BrD1GsvbcyernJmsvi/y7uWlx4D22
+uTJ2ncjq6+YrP1osvqwydqnIqvPl5we2eDPKbXZ2osha7+VrL5r8sBBSWMK
3Njqfydrj42sfmZyjl3ne76D2do/IGuPkKz+a7L2zsnqVydr74ys/mdySdyw
K6Oj2doDIWufk6y+cXLI2Kc9H+xhqw+frH06cnXHGae8r7K1t0DW/iFZ++lk
9c2Ttf9Gbrp71b4BVcvR2icjay+cnPRwZkG7pux21qMa1unF1j4KWXul5CNd
u3t/HM/uEtA8MnsxW3tCZO37ks8k1ExPi2f3zvrwaftJ9kD3DP9JpWzta5G1
d00u3H/nhyaW7KTvvQrr1GW3Xej69Sd3tkeeSfTpQLb27sjanycvHnI+oySE
nZERYdJqDXvwHvvpsQfY2o8ia8+ZvLHRo503zrFz1uzMqXyb7T+vXf/Ad2zt
qZG1b05OflW6LNHsC/TbcWknc+3Yi/r0a/l9B7b2ncjaWyanH6/lu6QX27L1
/bgjw9jr7PysnGazta9Ivt3IPezgQrZdK3PTXsvZMb1+/TRhLVt7T2TtL5Nt
xvQuDv2F/fPs/Be/7WdrD42sfXJy9ejQxxfPsCN/c77/4iY7/J7fRZcitvYB
yZeeufc8WcK2eGN+up9JBXRY1d+OTLNma4+KrH1osnnjPnujHNjLOj//da8L
W3toZO2TkysNCYu/2Zm9ZErT9W+82NqHImuvmVxh2YXIWiPYizZPXO7mz9be
KfmLOj8O8AtgL44eWTd2LjskpP8ek5Vs7a+RtYdOXvZfz26+sezl/m53Lu1i
a5+QbP6k5dbP+9iho5wntTnOXvFD3fK1l9naNyNrb5wc3q3a6k8P2Kvaf9Fk
3Eu29kDJ1smlr2PesqOaFh89X8aOrvdnP5dqFdExFa7MKmnJjr26Pn3VdLb2
eckbE/KN2NnsDbPdj+xcxF7X6O6uU1Hs1bNqR/+dzNbeJflnrwkW5YfZ0Q0O
Lamaxo68OHRW4xvslQ5rRwwtYmv/lbzizdPMcR/YYRlu/aZ9UQm9PCCra2gN
9pL0Wk5H27CDpq5+XT+ArT1msp3d9Qtb5rBTTlgmNAxm51suG+IYxR66a/bR
Fkls1/xRIZ0K2M/HOtf5zzhTdFhZQaVsXzP04cJer6oNr4ze5TX97Mze5mjt
V5OffPTss/IHtsNu26vx3uwoy2N3LvmxA6+YvmgYxu7SP7bG1Qvs6wPTfZy8
qqC1x03ekbW0296B7CDvHs6dh7OdfM4WDZjInj/xdMj85exmi04mZp5hh/x+
8N3izhZo7YuTY+O2NE3uzk6JCB35sC87d8rw0x1GsT1afo4onM9+l9TDcWgq
W3vTZKstLb2XnGc3jqy9Mvkae9C0568tctnJrSKOp5pURU9MzhzU1JOtPXdy
vRmJzy71YV93WzRn6gC2+7HmW/aNYZulLy7wWMhOuN86eOBxtva9yUM3m9V6
e4ZtMfbBjnWX2AHPll9+cI/dtSi79oQP7IdmEUlB7S3R72wTrn3TkV3N8cjr
9x7srt2eugb2YG9f6HFo8mD25JKXqaMC2KXP+90wktjaUye3MA+yOX6A7eO0
c4j7CXbauPI/Wl9mh97fk9ewgG13pXpxRScr9PWfO3W2acZe4e0b0qglu+zx
sVrftmc/KfV1W9CTvdf5xKwSX3bfkIkfCneytV9PTrVODauazHaNrWXf7DD7
y5TUjhMy2M9ybOc9ymcHdzr9OatpNXSo/+N3W1zYURsqvZrYhh3/vmdOmTv7
1L5LqY692SYtshbN9GUvqJdfwTaBvcyrysfsHexVc5u9+TWRvfnu5MedU9gn
YorOjE9jf7L8GLI/hz23zKry4HrW6EaPuzlNa8C+lDGnx4rG7HoxT5ecasFO
bXbCxMWDXcl7cqmpDzsy5eLLQ1vY7utNrG4lsHPnt2/x1062a59t/o2T2Zk5
c/6MOsW2t2r6aOIj9s193QoialRHL/PY/zTaht3xfONHa2zZ2+6Z3o37kv3T
Fxnnfm/Irt6/79Yrbdj9CgZ7Ww1kVwg8N6jGYPbBMrf+tkPZDjVq96w/nP2y
wx9tXcaxw5eOsv4+gH2hgW96+M/sxjk3vpwaw14Q5zGl/1p2O3vbWjU3suNt
zo5dt5U926xR2dZktnPhw7aHrrKXJPZZvv46O9vvwL05N9kxT8ODO99mm+R0
upb2kH33xgb/y4Xs0ENDtj6yqIFud8Mr9IUlO6fg22lvq7HbO7T0qGLDfhxi
9kfruuwuAw9VX9ScXTDp9/dhLuw1SxOyV7diFx6O3L2zLXvDV369r3ViFxfW
WeTQlx1vZj3BuR/bq4FpP9cf2NsGFdXtOZjd/+iFQ1NGshOXz311fDJ7TKMH
PiMi2CnTr8R5RrJNU08+aBrNThyxdXhJDLs4xnfomk3s0MpF31/bxb43JC/8
4O9sl+23LsXtYd/serDP5H3senODelQ5xk4uNPXodpFdodP7oGaX2UPC8o/W
uMoudbzknnuD3X10VLv5f7Dv3rBvcSifXX6wVd3mlWuiXTe9O2dehT0++MT0
ZxbsDC+v9K3V2FG5vj/VsWM3sNh83tSRPfDV+IDHTuyQzOb105zZ+ZuPBMxr
wU5um1X/TVt211GWgbme7ADPWw4nu7O3N9l4IbYn2/zvJl8N+459fVm3i1cG
sMckz21wbAx7UcXnl9csYFfo3rHqpkXspSEr+2xbzF5h2jI9aRl7deUZqedX
sXdULdv7YTPbuW+/1+Xx7F3hW1qaJbCTrTx31dzJPmq9fHvzPewrNjXWjUpl
/zB4XNaPaeybMfts/M+wb9sOjZp1np1bOzYs8hq7uK7jvLQctn3jb8Y6mtig
u29Y+t68AntKtZsRhRXZp0r8j+6rzPa9ssnG05qdMssk3ceB/eBF35GeDdim
Yzf87diI7e3l+tVLR/bnr8bPDnJhf3fhfLP1ndmBXWqlBXVhx+0bM2x0V/br
uA9LnLqz1wY0f7jfi51XNzLyxnB20NShxRZz2A3aj89wCmKfLftpk+d8drWI
iO5zg9nbdp2NeR7Gzsh3dcvYyJ6S3LXKk03smrP7PSzfzB5Z2X9phwT2K8et
WTt2se1+tJ619Dj7WLP63209yR7zdzOHE6fYicE904vPsj3i59uNv8Ie//DF
Qc9sdpVfPqzwyWUnTa48em4e+/3HRpVTnrFX2A8f1vAVu1XehOYeRezM32aW
e79hO3wTvTPqPfuMyZag3R/Yfhm7+2d8ZFtGHf36SRl777CM9+Xl/+//BaEV
i0A=
      "], {{{
         EdgeForm[], 
         GrayLevel[0.5], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
            "]]}]}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           GrayLevel[0], 
           LineBox[CompressedData["
1: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
            "]]}}, Annotation[#, "Charting`Private`Tag$3389646#1"]& ]}}, 
      VertexColors -> CompressedData["
1:eJwsm3lYTH8bxlttSYokIloQRb+IkO5sIdIiS7ZCCGmlUiglsrVYWhHalJSS
Fqm0ad/3qaaZZmtqVBRJi/fMmfevrutzdc2c+c7z3M99P+fM0tP2ZmdFhISE
XGYKCYkSfw0WJxjItbWjpKvRXvY2GwrZc8TS59FB14t/1JdPwZQXm9890mZj
lXF79PMOOvycmzdf925DEe+nvW0FC/JH94zo1XRD/PzUT7/EWuHx65NKwj4W
Dvnfap/xg4EGtRRJ/bnNWKJZ2ph2hAmV+/HxirdZaFyltXV5eCNKg0PC75xl
oCV79Uh2GRsVp3dmZg2ysfpO1J/ZiRysc3deerG+Hk67hO/6qzKx/PWp01fL
OeippZ9tkWtGj9KekMlLXThtqW2avYiDqcKvJBN6O/Gfq65n+KpW3JmV+tPL
goXiTZUBHxoYCP3rvK4rqB6Vc8P3TL9Ox3QJwyVHXXvgWDZ9iu+2Gqz1zSuz
WdWC6NAFLQkKvWi4/cPs4kg9TCyvPVp4sQCWMxZ5nZ/LxlgIVbphDw/JH07o
W+s04WHz791at4qx1f79q5/xfeiwGveTsmZB6bHcc9/11TidvSmqsISFk9V3
7V4WcxAuZSvmJd+IONsENz8uDbOXB06JuMxB2mWh47nH2xEpZuV8Sq0dCg8c
bb4fZiNps3LiFH86blhc3VzY2YTdP2adjNdmwn+l6rKZH1nQGjm8ceasenBl
LyrotNIwfqXhiGtXD7bsdVxun1eDG0+fbfhvuA4Mv4f7f+pw4UYNVdocyMOt
6o7rU3czUPJD8s0Xw0rUnc38W6rdg8gnS65uPsmB1e1YxZHsOvz+Mc42AxPZ
0RdnqhHn31e2t/LsnybcvDHti6wNHWq/0jKVvDiYaRqsBS8KxLUc7IMtuyC2
I6s3ZiHxebMXfLwy2olE7ZOF3MdUOPetvmYwysay48uD3L5ToSIUl+CZ1wUd
mbvH81dxkHi/ZI7C3U7kpb0MVz1Cg+nikfT/zDnA9pDJqTYdyNt6a4aEHQ0X
NUvl7xzjgHEkvpaztgNcTlCY/2UaNmdKxZ8m+DNT9sTfdR24uLbE0pjg2see
2xoRvHQ8Oi9IuwMqd0rmBhH8/syLN88QPPu34ZxfxP8vrU6a+ELw+dbjW5wI
/u6FntVDgm8tcl3WxH+dSNNj7gRvzFYoNiP4dtO/I10Er9l2b+IGwa8r2I/q
EDzDlmrPIrjso88NngSPkb41sIrg/57cyuAQPNmlIMSL4HuHOj2XEdxAbySz
h+Dq0rr9fH7n4ai8CsHlWR6aXP7rV1vNu0XwaL3JcSWCxxYvPsnnyxvTVPnc
9IhGIJ/3FdQ58vnxt2bqfC76Zd0pPv9wXuwan78KyFnN5/7zJUz4PN7Oz4PP
l9GereHzDBcJQz7v+nz3Op93RPaRfCIrYRefn4mlkDz92lRNPo8VYRnwebTf
CMl3a0iT/I3yK5IfkhO5weezsuaS3GDkDsml9MRJLlYqS/KPzp4kpx6YQvID
qvNIvrfzOsn1UxU7nfa0Q1fYmvf0NBv/PDWnvLtKR+BAot7r5RTQtQPjDEXY
uEcrvlFt2o0i9sTXZU2taOlTSW4KYsFl+tMOjhkDizK3ch2ntcDO8ye18BcT
a/x1KhtSmJCM/PH86t9GrMeJh65RDES5FktWurBxytndWbeaiismolxdUQ40
Fmxuzo2lwjpaVGLbEjZOHlm+I7SIA7FNZqne7xswyTC8NjFAR1VXn/j0pxzY
Na2afuVJGz4yF3hdvN6Oo+a9bB9nNs7pn7Ye3k/HIu+2G9/mNmH/tE+3rNMY
eHvJ96SSFRvVcu+LXL7VwqHbpb8kuRMu8p4bfQq4WCQzZ92c4Rp42r0TjUqr
gXuCxP0ZHT0YWnol0lSxE02VSxhz5nyBQfSxfftN6BDt6ZbMpfAwd2bRuoiF
dGi4bA3/e78cjtePpSiV9KDEdqzg8mYOxLsW9F1BHY6LWd4KX87AhGhlRHw+
Uc+300VuX2mBnp9ck54JFauU9XbO7WfjSL7RjyHdLky7nLni+JFWHF576Z2l
DQu/qa9fp6QwECilqW/+tQFH06q9L7d1IzfzuIKZLwdvj0a4MhxrEbatW+pe
dTuMh/1DbndwoVjLnsu43gdaZJF6H6G38muuyjZq5WPRm0olu0O9OLrj+3Kl
C2yk7FzTukiyFv7rrjldVWGj1Fy3/gFx/saPPlieftuA4kMKmgXp3egxy/uo
nMJB+nn100s3tiJyqO2L2QkaZlRvr+w/yMFJ6f2mH451oGd6ftiNUCqEbxtv
X/+Xjf8Ks3bXs6l4GmXkHinTBdGxTPGsWRwEOK3/tv4gFV4GEg4B6jQ8PJzf
/2gnB24XNxT+qunAhdHzb/0v0NB6LS5nxlEOjmds8rqt1wHvXKnNSoReLTg9
1fMevy/GlC/kEXo1HLFgTwVR54n1CyRcCV72KdrwIlHnvq8f3GknuNdFT8/r
BA81eBS0neAF4Un6DIJ/FuHK8fXkz74Wlf8IrlKcW8kmuHlYz26+bqypf5O8
guCP7tWa8vVEKCq4gs9FtvVLqRJc8dlUEX5/bXT8NoXfX5/vFFxSJvilog37
+DzMM0WRz6NWdH7m993ujEMX+TzavkaNz21EJJz5/PnwXhc+fxrVoMHnz7Lu
HuLzfvXH7nxer7ad1I2v0Yf28fmMG2qkPtz5U0HypQ4PdvN5WnQ2ySOlJkhu
92M1qTPeBTySd/tLkjqwujGL1IHUfZMkn+E8h+RJwoEkp8mJkbqhfVagJyv+
8yZ59pBAZ6aLC/TkdsENkjMCG73dHrZDyNHh6AZXNqoKVnuc3kFHzDzRpOqr
FJiduT+yXYGNuc2FDbbzuqHmpaMqvqYNXwr0Tqcks9A7odgYPYsB29KFNO+H
LXh+dNgrRoWFGzw3Nb99THjrTx3wu90Em9q07p3jDNjczX7A+McCtzTJsGhG
MyQT5E9GmDHx9AjVxvAhC0On5je/r2QjpiPzQWoaB+clbjQY/qiHpZDf6mJJ
Bo4K++6g53Cgrv9fyp3XLVho9YvZdrUThptmjJ0j/FO/euOz+CWEXu8Savzr
3QyDP3df8SKZkGbmcgqJ67ptHGCl+6QOZvmL/4WBmBvCG8+76HOxWGurWl5w
DfoDtCnfnzSAvUzIJt+Li3lrVr5xInRy08nHqvUXcsCqoWvb8xjwHEhqZzTy
8HZgJ1drVwd0l83pEDcoxY6QCw0XtvSCEfv+zAUPNi6+0n2VubgWRyJV46ov
MPEK7zTflXGgqa0107+oCUnNqsuOjndhtb9f6Kg2B/NlqXoBep1Y23tvZFte
G87KOX560cWCSuTM0bmvu7Hvbzr3R10jZKPml9rcY0ApfMZ4chgbMpzgEiOZ
OtQY5ZXk63VhwR2LLsNYLkopk0mz1tVjSqbF3J0qxfBOarjByGGDXZhcwAnp
A1Oy8qT+TRbGfTv0Sw9WY2Xv858XVDmoym4ycI7kQFH41tiumHroRBdpv3Jk
4GNVqoFXJQdHbG8vejDUDOa3PVOvt9FwYVnZla2XiOt3eP0+za0dq9bXDbow
qGicG/O4agoHbbfoJfaPqDC3/yXlUULF4RPu7gtECF1dwX5dmURFV+aGPxIz
aEhjr9n7eyMH5TlWW7YqdcJg2qiS1hmiv07E5XMOE3qi1Pw02agDRROu/0wJ
PRn48OBGIF8feJJrbAk9oU68Li8i6nx9TEbHFYIXFCR+u0bUeb6eQWQrwbvs
23w9+PM0rf6GIcGPP37+jU5wwwxe6E2CPx4xTVhH8KouyzV8PbmwWHIuXzfe
53UtW0nwN68PzeTryYZc/TQ+17cI+cTXk53RT+l8/sOMNsbnz4uXZvH1ZOhr
G/h9l7rg/kJ+32XvONrK77up8/5Y8/nlz8Ir+DwnrdWTz7+aH7zC5/frVpJ6
cuO/9cdITukmfQvDYBqpD9+S/hjx+ZsIBulbOj3TSC42W2sPn6dMRAt8i/Mv
kqcPW5N6Qu1kklyrZwapA3qxlaQOWJ0b+7+fkSH5h75gkudsEiV1o3+BQE8c
9W+TXDlOoCfGfQK+7NpNkv9ZkiN/bUo7Um4/sDTfx8b7hBse99/S4bA6Xbaj
mahnV+mGKxwW3ik9NVoR0A3TBZulXji1YvFXk6j5jiz4lfx98fUFA9azXPet
f9KMG9cWGp1IYKJw5djusnks+HA/BC593Iiojx7ZJ6yI+Rp1LCi6lg2R+C67
i2EsvKEG5iz/xsEm08vrpMwaYVYbya3VYiH0xVjK4RIOhCsc/tte0wiHBRoB
C8tp2MvcLy18gQP324rHPZ+0o+j7W6X5TW1QZvYnUNkszDV1DvEM7Ib+3IgT
8dENiN34S+RNSTcWrvqvWPUFkc8om1faa9di5Lpa6X0XCjYIuW9fOMBF5Yop
tetU6iCyaVFx5UApLt81XPslngP5lS7z0ir6cFF/yqdZMyphKVU+EEsvgPee
i+JlzjwkyeqEfLnPgM/jl9LX71YixMxPb/cWIhcVffjvSxgHHUlJLU2B9YCa
wsxuoW64la7Z4h3MwalnsSriLm0on7adcSW5A++lOu/IvmXjY//h1d+DaVgb
6i4tNNqMxA3vaY19TBwWf1qyJI+J+Xs+dK9n1yM0JE6ljUmHy+jEwpx1PbgY
usFhjlMNZtNEmz6ltmD4lrvyMdleqPz5/D2ghofO74fn/hUmdO+tfH3nylJM
fzEU6m3CheuelBG/BUR/zVTIKymrxYE/vZpNaixEvfy734k4f3fdUf+NlEac
0dPTCZrWDdf5CrvehHCgIKwZ99qmDfd/bPwtN9aFP88GrxcSejgl2ui4lH4n
rL5XfaLfpIIXNLGT+4uNdl3dPUfFu5AwZXct26YLWFh3ZD2Rf+mX88WO9nfi
YsHnBCsDGk6eyGzYuJ+DIkP/J+ced8AlQuhevi0N2csjSxfx53JhwxBjfQc+
iU5cYRL13Brr4sn3Fbs9P+1cTdTzt4sNRvycgqDtV/h9LexK8VhO8JszXtzn
93uCWwKVzxMee/rxc8rgPfZCfl94/3SR4vcFO0JmNV8HDLWWH+LznJKpynxu
/Ug9it8vo2r37fi8JE5nFZ9v+DDlAp/7fGxwJf9/w2Eyp5yMopvx+bOFCmS/
M284kn29N19yL5+/GjhJ9u86XifJ5/2TIH1Fh2oVyXMHRcg+dVknTuoAvfUn
yfeHS5Hc0uQd2b8mbkJkX7/VEOSU9sb7JLfOE/iKay8E/Z792ovkDqsEOSVP
TuArPmwR+IpQ6adzJD+2Q+3cNdHUG2zMkFcQOaNBxymqs+uC5xSYXLu6dmIF
4Z+78pQOjRL6kCi38LJFG/ZPr/qvNIcFExkM2PV3w1/9j7ZzeQvOSWbFbtzI
wpzEPYuvL2Ki7+F93tvKJpQUcU/Gr2Ric9+hxG/5LFhuX3lsWLQJF8v6vj+O
Z0Cjcl/OSzs20l1myp0eYaO5Xp7qlsBBpZX3svTKeuxXW13UGMZAfdz5A3OI
ufbsvPE1i4Jm2Nanjz91pKJNiHL9/RAb0ffr7bRluzAR9SFVaUcLimrU3obN
ZGGv2PKEWz5M8FouL6LJ1CP7gsTPDVTi/My79OLae7CO0eRmcaEG6pHDUuVn
mrBCv+oyrZaLUzFTjTNWNuLC349VKhK5+PpASYi7jPBFVaenvvfnwfHbGd0f
6a3wbZ4+okT7hr6Qwz4ff/ZCYZX5x+HfLDA7l+/Yq1cDH79PIjtkWVimvWVL
MtFfPbMup5gNNaLhrdzepkuEb6yxta8mfHjF0Bt9uY0d8Lf98LTQmYKUKZRV
wQuJc7FJW/FXrhvBTWplF440oVvGYg2riwHG157sblXCT217+HvycR32pbi+
NyL8kuS1cz2xhF9aZ7IqDEq1CKSKNb6/V4na/EKju/d6cGaa1cOAGTxIrH8+
dvMWE/fsw+u1bKogfO/bxynEuZ/9IXE+1ZOo83xv1eS19ZB6Ah9OMwPl68at
T1Zw0Oe6yLDetRlPiw1+ti+mI+fyVe6FqxxoZbZVNv6jgCsv9ddnYRfEAhoP
bpjNQYozPj03pMJhpfWK1HgqtmSm/pKfYOOxVouicT0VB+Qfvnft6wK7QCdZ
eS2hn46h9z+YdSLgSeX64ydpMDVZM7LrEAd+2WeNN1h04EWcf8AOwlc0G3b6
+vP7qyUg1IfwFdEFQdL5RJ0HZoY/dyZ493eNOG+izrmJr343E1zcUGeEvw8p
WXDcaT/Ba7pZvTSCZ6csMeb7Co987fT1BK9N3dvI34dkfb76i68z4+YSQvx9
SOjZqUy+zhzNSY/l68lkXposfx+SKGlTzdcZjSj7X3zey21j8/WkYvYzHTIX
KMvLk/miP4lL7hlcv57i80S578v4XDLw9l0+f3dguTOpM6eKyX2Iw74pJ/m8
c4M76SsKl7JInZnU+Lmfz1dNzyJ1xmRtLKkn9x+HkL6iyTCE1I3xtkGSP3jp
S+qJ/DwayVcYTSd1YNPMVlIHesNHSX6mS7AP2bI2guQzPgr2IUe/C3RG5Lav
IKe4CHyFZLtAZ57wBL5i5Q7VzWor2jGtlJnoe5iN4eyrDUP+dMxm0Jxe/mvD
+dwlgf+GWbi8+nK0lkM3TBJyrBbHtGLI0Xo/7RYLd0p028+4MhCjmHtXs6YZ
65rKkgZrmVgSXeyhxGBiq3KE65K8Rnxp2ntk/w0Gwr0zk5nxbEwedZivt4uB
ZU9fPN5L+IooJ6HcM1tasDHA1eFjEgsrz2Uk9RRzYPZ+fp6sTiOYq85YM07Q
8Upeyjv6JgcvNz00Fn1MgdtAi5BUPAXH/p2av1eDDQuPwbGbA3RkX/5gM368
EdIZmUZr9BjYL31z/oVJNg5+VhzYfbMWa6eM+MrIdsCNd78mrZUL6huZAo0d
teh+pxFyaXYlEucW+8vZ9mCKw+l/ZU/6kBX7ODJ6fTEsDQK/in7Ih9XH8w9u
NvEgtSrT1OJBNw5NzWgceVOBLA3rJboTRO69mdJVTPj2hDtQtuHVwcX8+5J5
j7uRaZkwp/gd4SvMX0RMudYKnd7zPZE3O3F5mpc6rZyNlZr3suwWEnn4hvnL
wzEtiEWZB0udhfbFbl/fbWTi4fitCKP9DWj67kfVOtcNP6pn9N1uov8W/qLu
WFCLBsox1kg74Qc1x59cHeGiStU2pnghD+c9o4/N6q7H6bvjNS7BRdC0XhX4
hdDL8zfsE2qJ9/Xawc3VulSL5iAVxmg0C8On5W6KE9+LyNbzhUPbG6H9778r
U052Q0tcPVw1msjR4qzJ7IZW+PcVHdu7ivDhZ7vnLt3JQczDCa+/9R04Fiz6
OtqXCrd1+39LEPOhQSYkwXCCis4MutC8LV3Q33gtgiJL+K+Zt+uClajQzlef
82ATDQ8sJ/T1DTkYuH3w3Mskwoc/t7jtSujt7755g0mE3u7bV0/5TehtmXF2
N39fsaLm0H5+vxvvcXqzhqhnDfrN2fx+P7YgwZLf16kr5Gbx9xWlxrH2/H5f
+S+iic+3BZeX8n2F9b6PUvy+cOw7IcHvi+LPanv5OrDW7Kop2dfzryzlcxPz
k0n8fnG5H2RL6oNawEo+X8zLusznN6UVSF+hcF+e7HdJzxBzcp+wp53cV5zM
PEb2tYLJW9JXTAobkP379WETyUPsd5G+QvR3EckrNIXIPm3Lmk/qwDmhQZK/
iplFciv5VLJ/E1z+kVyxRbCvWLv5EcmvOgp8xV4fQb/7H7tF8mppga9QlhL4
ihp3ga9YO2XJ+QMX27EwRm/rrctsUCnOM1OP0zFoeEVSyJgCFWfF7ZZSbIzL
FbHZa7sRU3hQQVy0DV+sTCZlXrMwkGaWPFuTAe69Aa1JwxbMC47roc1igeNW
uXnfTcIPTyjuDt/ShPY7faWx1QwYdFq5juqyseX0/E0xH1sRPONl58c7LGxY
fnvxMVsGnEbtY+/4sCHbeXu1UyEH3tlqdyzXNcDp7RmWrFc3Wg7GH1AifL/h
KZvsM6GtaPL9vrGFyOkGl1zOyOl3IT3C3JQaw8XapLxlQ0U18N15K7Upuw7S
gS2716/hQiud/bRRlALemSNBf/O/ILLl83z9mG4ovpleMJXGQ5qtZoCqWRd0
zo37dDqUoeiI3ZO/gVw8Cxheem6UjRe0jo+zQ2vxwkvU+INKFwz91qbnSxPX
s/m60HtQscbYUT5Qog3i1iHh3CgWUvy7bz1RY0B0i6Wda0EtRutKhKaHdWLo
dTw9p5CLZZmXkl+eaMYOYRHzUwE5qFJ+EhmrzUSH5qCNOq8XJsNyiVljLKSV
nVvvsasGSUJGK3Ni2Xi3xnxtaQ4Hzt4vKsqlG8CW3jw7ToaBhW+P7QrNJeow
ZdYfsbAWKByZ0bYmlMjFxuUNKaeIvL+ZLeze2w63wvKJnAwqFuYqtVz9x0a4
srpSYD4VTZo9EgO9VLyYGvlh1jQOkofoqn63qfgtxfplpUCDznJq4GJ9Ds7k
66o/+E3k/SV+4R3naBhe5jOiZMHBZWE3+o8dHUimTSPr01Msn6zzJVptZJ2v
kUghubbXKMkjNuwm69xLmktyd9OZZH1ef11A1ufu4XGSH/snyNG965+QfOiD
IEe/2Sao86fLfEjuViuYd/+NCnj4PMG8+7D19OZC82bMlVrG1vJmwk6/TiZo
Hwv2gZKS+Tcb4fZgyy7OAQZ05pq6m9PZSLK/u/1POBtBP/RfhX0l8s7Ope+7
FjbA/OvrvauTmQjK0njXWcrBcH10M8u+CTOf395+YjMN5dFTKHcIHfua/VQn
PrEDl9eyDI3kGxAyei38oEo3aNa9zWdm9sDP8tu28JYa1P2L9wog9FTz+uG9
eeK9sLpyZsGJGfXYVvGPtjOrGJIGMQ5S3WxobfPvbhTnYWelUMyBoDq86Rtv
OqNYhMneSUttSR42fM24vMeDCRWaw64Hp6sw8emW4tnudqx4Ie8Y40v47QGN
NSul6VDS0Vb5dKkZU9km9cOBTMz5ohZYrcOCTXZZrLRjDdw3TjZx5zaBey0m
WZ+oz68tyxY9oPDAid304aEaHc6W4sahz8pxTSMk8EMqE7KKUw0aiHMoDIhJ
fHGpCUwv82d30+nYN22ZWuQDQmdWdWcEjbShcffQr3AfKtZbPDya9ps41z21
4Zn/qCifZL7Jf9oF8zeRRU9UONBkLtgt/bkTu7YK9EpWUaBXL6cL9IqS0ZCl
/K0dUZuXJ7K92LhYNDJTRImO+zlHRGSSKZDbOe+S4Ro27DvW/vveS4fOijpF
Bbs2mPyOso0rYuFmn/FYJrUbRqfbFRV7WtC2fuYh2e0sWFdmuf6cwoRV/Meh
8MEmjO6gNZdsZeLLLkOJ+jcsqOxY96AsvxFDtiHWYp4M3LaJXx4ex0YAb3b4
/HFCz/4ZjR4mdOnSy8moxNJ6HDpesWgdjQERH8vWbYQPfz64cOM122Z4nJlj
MdJPRYJkhuQXor9UQk9dzvIk5mN2kPZARgsuWh6ol1nLwl+XmpsPVzHRe034
pZNZPbyrU9V1iLzHSYpNd4zvwXHFe0F9ZjV4+jMyZ2R3M4QK9uxw+cOF/5ov
8Ws8GiAm/DBX88lX9Ox+Q5Mlrv/NZk3fmbY8xN6q05f81YxTccf/Rq35hg95
2x9HmfQhWNlhp1kqcT5n231kP1eDUai9KPgyC+9iFwbHE36AvWGV/YO7jdjt
krVCL4GGmb99ow5ZcxA85nhUrKIdSWf8Gi5UU3Bi9ZGdaRvZmPKfj5liAx2d
J10itSOa8PdE7J72GUzI/Pck5jiPhVDbH0kqdXXYGq8S6veQmOc/w92DpLiQ
71fdmdhXA+XgDwdXadYi98CiNGpvD+4dH772fQ8PL83CjrB4DIznfqjvolXi
o1H8w75+ov6qZx5ea8+BkKOs/rs/dVi2n/4wk3i/0Ffs7qJywveePEYL1mlG
x9abM4W304n5X/YtzZ3wY+JPMyhfKdiRG18qo9uFr8+F5yQT/kR7aldHhTIV
UaVtfyxeUFESU7ll6hgb4re0sqfQqfBrXZPT1tQFlcVTzbzXcLC766qai20n
7DSMLByO0YBJ9W/7DnKwQkT93mqrDnxL2HZxNZGD9BW/7npA1HNzou3qBCIH
jetdmZNH1Lnosx0/+PeFtQ56n79L1Pnjjalz+DmIEv0vgZ+D1HOvBpjw7//a
uF/h56Bm66PL+Tlo7OXj2g0ED9LfH8XPQXcOCrP4vmimbfsVfg6aWmpazSHn
vm0k3/9oOrnt4eegIwvHC/m+yMFv4Aefz7b9+I/vf6Qcotfx+277iW9ypG5/
nzNE7kvjJyxJfX5/kMxBz1wzHpB7ibJbTnzeV/KIzEEvRIMs+XxcciuZgwL7
60hfZO7hbsznt++9JnNQ2f6XpP6fCa8hc5BeQQCp8+vN+km++FkIORceX+kk
+cDFaQKfY0YldWBbxB+S374nyEGNT1+QvOO8IActaBTkoJ0bBPeFvY8J5kJP
nWAuXNcQ3BcWLRUXaddph5LeeLj0CTbMAmOe7vSmw4G1quvTHAretay4nEjM
Xx3WgeYBq25cN81Js81pxb9pH14N3WPhp4bxg+/WDHxXeDqxkteMuJ4I0adE
/tF/LtukUc7E/ur6k9fbG+H1xCn1QQADsbl/n7oFsXFytOKYnyMdmz/96Lh9
i6iTrdGKZfYUyC6O7hvtYeHEiq0zdIkcFFUr8+rPYAM2d1f8WxlHx5WifYct
73GwKtj99UEZCpRnrnerk2lHwr1vp+xM2IhQCh5Si6SjYpOEw4/MRpQ5zNY0
v8ZArjL994ZkNu42PMtwflOLhLarO6jdHdhwuqjnWRUXNoNu4yJTahEktHJI
t6IK//ZbnP2W0gOl0ZTo9259cHr4wucMJx+2jpmv6hfmI+tV2UaFVh5Kpl4M
kmik417a8rbzchXILAqLZFr1gJlHF+ce4ODHgXH69JA6BPFuTjfo6Mb2RQ94
r9M5sJjbolE00oKwwebFCzmd8LUskbHtIHKo23tlo89d2NxTJtQ22QKf4zt3
vzFkwUja4ETyLwbUnD1vBd1qgOi4VweH8G0J8m8cZ3zmQN6iKG3+rloMFTr9
mdFOwYEZj0YTuVxs8f/6z7eiD7VdwcftxCqh80hO5B2tAGE6d1M7pXtRGbMu
alMEGyLF7UknttRiPkNVbBmThbW5bw8bEuefZJ5W3fG7AdG25/0m7nWDbTw1
/FkCUW91iqVL77bipuXPT2XbibygHrr8mBEHEk2th5+EduCpxOu4u4+oOLl4
6nTLP2x4r/sTwBiiYopGuHrY8i54XMmt0pMh+vr6wpF1ulSMVVQeaFhLQ/C+
3leTuzj4xHwsFJXbAaeLT13DLtJQsG7NMWsiB82RSzWZpkv0i3bJE34OshCp
X8vv90NX0k5qEvWct8RlgH+f5VVCkDm/rzkv2o/zc5Bt1cJT/H5f/CGrls+Z
L1z6+DnoyAKp6fy+eNihNJ3fF1rp/47ydcB1sGc/uRcdDV3C5510xzR+vyzg
XL9E3ueFFpmDjB4YOZD+bVsGed9WIWmEvM9S3nn3IJ9bNmaQOcizxpjs650d
42QOktqkQ/ZvZV8tyd/ttSH9IcX5K8mV30+SnHJNmdSBn3b9JC9bLMhBEc2f
yP6V5Qju27JiBTkoIMif5BsNBDno2xVBv8cUCHLQSVGBrzCcIfAVui8EvmLW
3B2mEe7tWH7UTLTXiQ0/3VfrzU3ouLBX7ZLbaQr+mqXvapFlI9HzPFdBtRvG
Vf1WuvJtoNgFPbjylgXF2nXlmooM+BQt/LrOtgVW+uvruPIsfPrL5EmfZWLA
1OdYqVUT3LfM3LiLxUCRlE/w+8VsTL/39kLJaDM07kjIHeQReSn/3sKruUxI
/NIb83hH+HKNG6YxXzgYfyKi/lmyAcxq/znbSrrBesJV9//IgU/n2r5TCq0o
+Dz1l/KBOhyS90hldxH9ozL6UdaZi9LEP89y3tdAb/Yfj7G39dgfMveW+hEu
moTnj+zwbkVe652VX+flIPtm8BYvQwZ2NVpaJXbz8NddojmnqxMZz0YutTNK
kUltPT+fzcV689xY7Ww2DF0cRlYer0WiTfwtucAubHmpsqlCmYNN258NvMrr
hAq7Jsf8bBv6K0LzvuSzIC9pN82a1Y2UW98TPvTU4tSJX4f8nKhYZSO8cCKD
i/5FgTMyHRrw83Hh7LDMr6j/kBG+8h3hg+pVX9Xr9SF8pULioTwiB12e+mFF
QzUWObLXnWWx4TXn9PWSJCLvzFqQs7ijHrtF90gWbGXgyXLliRtE/74Y8pH+
adACY9UTKcaZNJiJaY+fPcfBkUf39G6ltoO92vrRzEoqtCXf0KkiHGx/H3P0
aDwVPJHrmsGtVLhZB3JGxThwUXAoPx9ORbD11uPX5tBwZaEwe8kWDkpSFn/8
JtGJMy7l99TO0pC4xbc58AiRF/bd3fZvN1Hnnb/Jefdo5DNZz5rLxMh51639
jqzb6PsjJN++5BBZ57Omc0ie+EaCrE8H9xKyPm+uE+SgH7mCHKQj9Izk3a6C
HOS25v91niTIQZFfBPPuzk8B5+0U5CCP90bnDK40o8rl1VXXYCZ4bgZFl/9j
Ye+P10v0bjdiUf2mMbvDDAQwNZ3DCT0WiowxPLeBjRrT058OFHGQR/u3d2dQ
AyiSR5JafjARtsxp9XzC/5ff72l6uLgJPVk2PomeNIxvLx5dcJKDG205FWtk
O7BoOGms5ngDhGvKPm5y64ZUxgUJmRYOKkM3LciaXYsQiZzbsTFtcJgTP2H9
l4u8fhOaW3AdVipq/3I4XAJaZ83hcAPCZw19dPDs6YOy+jWt749q8LNI5I+E
ZyFWvrl9e7E+D/pqPtksUSZeTGqq1P+qxInS0wNJxPeQdttOqiGYjerYriTN
RkKPlojWXUxthkxqgYE90W81P2s/cceYCL4vPXljfw12OWWfX+/SDOmido6B
UC9qXfPkart4WOPr+v6lQxeaVc/vdb1ehibWuGTJd2LeOx3cqEKcg/36KZne
yk2I/e+AhUIXHfkcnnFgEAdiRS59HR/a0KF+7mI74fcDey9pz+HnoLlvn2mK
deGIXfwt9s0uPKUlL+lZwsGXwQqKYmMnKtcL9CpwoUCvnisJ9OoYY+b1x2+b
cPVfnofzHCa8zQveUmgsPEnN+8kjctiriGs8R8Inb/loND6X0K36PgmfaDYb
M73CpnoQ/cI58neDZHs9jqzRX+pP5N6DfSsXyBPXv98+r3ZgeQuCLqTfVmmo
wx2hObFiATRM0CmbJyS50H88ZfuwZw0Gqx/l1l1vhOdVZcuxt1zMO3toa0wK
D8pqfxm7b1BwrU9j1qnHJSg+1aU5FNwLu/zdKyeJXLBpZujmy3k1yAhnqxSu
o4G34JaG8W4O/p4O1Dj/pQOaITovreUpeGmplx8wwcLnF7y2l8e7IRt0wcJr
YR2w2qegZ1YZsuwu++5J4eBCg5DFzLo+ROu1T5yYxoLy7m5NcUYVXC8eK6RG
MaCS++nZLyJ/lZhqGsqnN2NPTI/u+zHifSXFlmx34GCv/rOnS7e0Y8r79AUV
GVTsLWXOcPvHxsFWUS+vfCoyjr7dpChEzMevur2v1nNQa3XWvm9jJ6YskTt+
N6UZivnxYx05TIwfDQp5P85E29Vdh3fHNuIqt+zjgcsMnMhc0Lcnj42JLf+F
+b1lYvMm7+M/iHNum7nZTsStCdUrTHZ0OrLwRSmZ+5yfs8QWiB7wbkT6/nVP
NefSsdtj1982Zw7CTFtKLhE+z2PPmo1DFrWoimvyMTNoh4aWFZfG4GKWmkav
S3IfPMZCHz0IKUWESt3cvbsKYLhwB2XRWx58Zc6Iic1m4MZ4Hz7LVcIxmP0k
f14nVniPvrTLYsM97uZxCwsapgpRU6v2tkAm1qJNVYrIvVkHI5NuMHG84FfI
ouYapF+55G5e04rjn67XjYr3wmmT6h5/Nx6u37ui/DCkBau3Rwefsf+GU5Xf
urvPsVBx+I59DvG5KIOMe5kBjZD7LE2naXVjs/ClXY0vOJicd2E1d3EbYkTe
jPSYdWGb9iHabXnC55gtHguaRsVFl7e6FgubkO+7r/JlJgPtkl82XDvKhnYF
oz1MrR1ColrLhI6w8fygT0P7Izp2xJYvEDZnY5xtNjJZyIG7l67OCbsGGP8V
kjnYW4tjOcI3aB5UbA0ZaPYg5s4R6cH3Zzpq0OGw3vFgZS14c8KFWsW5ENLv
cjjdyYN6nXiI62kaVOriaGKTZajymi4j95mKbOfhUgpRJx1hu30Lc6mYbqe+
ti+lFRsol4SX3mFhqekoNYH4/v0pfibu1yloOSLR7Bz3BQcYlffvO3bjzbjQ
PxNmNxzXip2vyeBgKItW+JXbgur1/Y65KjScNGC2fN/GwcZp3/6EEj59gG2r
k72uGfUKmazQy0y4bPAqXWZDfD/stXqV9cR5zJ3rvpnwA7TIzimSvHoYrk8M
nnqJCQWr4KC4Mg4OHHi8anZhE5L7XqvtJ3TTImKV+GqhVpzoC7qyivDB9tuL
X8eq8vDKuk/N5nQD6NyjOnWlRVgsYmWytL0PXmfi7bIGmbiVxzlxo6oKP1/W
Xgu60Q7vrd84LGc2WPPWH5q7n459ygfEfYNrIClh1YfgBmRY3RFbcYsLhzi9
N9QmHpq/7NaYSXx+j9iAcz/8K+D9OtvpgRsTFKeYu57EdS6dETP3cWoThKXr
41v96XjRORxf48tBdeNviXRdCvQC/QrME7owdqzFZO0KDr5FKPsfedWJn4YC
nTRXEuhk0E/B871ypdf6Xte047Hpn4qb3mxkZ2ies1CgE+d53ss7k4KxsOBd
l7XYWGX5/GYBgw7Du/ovDrq1IXJp1WzJUhbc4yOqh5u7MXDtfmz07xbwfL5e
6dnFwtZOfOkdY8DYU/7oNZFm/HpeP7zTiImqs2qxdk9YoMS8Mf7vXSMasltU
rzswMDW+z16K8E2y72rf5BB5IKJkQ6wqkSPoErYODyvqcWhwe5ooMbfsi29n
tJcTucDI9+jk1mb0a4rW3tHowmdqZOKWOUQfNfS9VNamwvb1oZllP1pQv990
114DFmoPPD4c8Y8Br0NbXDSc6rGzkn061pyO4lcWB04H9qBg+uKbRbtqwKrh
Hud9boaEQfhK1Zm9uNyofkJkYwP+iG5t/+CZj0wHbXvPdhYsMkKmdx/lgWvD
FJ4yrxkP2xeLqLYW45V6vPkFrz4MzhbPvRjAgtteZbk2l2pceHOh1T6chXs5
ihkqRL8r2r5eW2vSiLP2hdNryghdmTba8cuG+B5lnieLPW1H5NC2RsoYBRoc
H1TtZoMSq60d8YGOjdX2sT5fmuBsLzVqsISJjjePNJJqWBAasKTnDNTBJKuu
wz+VhoPTvSjnRnrwxfDYOqGmGpzYYK3eKFcHp0+a+t0yXKTVer9UtuXBg2fS
mvCcAafd3E21IZUocr9TLifTg4ZLxSYlhA90lx9ccp9SB4MCLVeeChPG929u
cyXOv2n+Z7UX85thPeLSfvkgHU43E23P3+Dg9J6Qi19fUVBAn6S7GHVheOhA
fvh8Yr4bDYvPlqLi0kuPu90hVNjb2eoo/GXj2DdbtQccglvaHioo74L+fZtr
MRqET47yP5B8rRO/d5XotxC6y3ZTP1lozgH13tzJiTNE/nIP8ltsR8Obeodh
P/6+omgrpXhtB/bNDZbIJer87J+oUP6+6P6ppI57RJ2funz2Jf93BKJvwnz4
+6JNEsvjTAn+64nwBv6+SD8nTYa/L/pEUT3D/x3Bn6vse/x9UQTFrYOfH9eu
tU/h74uWtEoW8vdF3jZREfyceGvE3Jq/L3pu9CiXnx/vWisM8rlkctxMfn70
OxSixe+7lElZcl+kNT4yQj7n3yhN7osCXKeQ+6LhMu4jcj+juIrcF+kkOpD7
oq9xllZ8HqGhTO6Lolkl5L5od2Y+uS9a9t8z0j8bqoWTPnn6jO+kf2ZXPxA8
9zvJI3mw0GvSP+vO6SD5tmHB7wg+PqeTOnB+rmBftPG4YF90uvklyffoC/ZF
Nd8E+6JXzwT7IhkjgX+WqhL4Z46xYF80OWyptXJrO3BWwqLRko2APQcafnnQ
8UsphfJhEQUOKtX7JiZZYJTrqRyz6EZRcVjMsbJWRPXXR/Q+YmGAOibXeYwB
yscnimf/NkOEc+jOZyL3KeVqG34nfITxgni/lN5GlJV+jT8QxsCFpDXtlrfZ
2FrtdGMJMYe+LNdpfXCYg1i/H9K6Jh0w2P/zg7g4G2vW/B7qIfz5l+e+C/Kq
G/BLOeteVAUdHZ/UbdP9Ofg1bat6eX0bRHcNHY7a1Y7KAQXe31NsiO0QWSDh
SgdlfmZzF7sRuY8Lm6nBDMw6Et4Yf5cN7vxnYu5phD83OrXTbk8n1HX15SVK
uUg6oT8sLFSL/mKvY6+/ViPDfl/ZyLceeG+UDnbs64TSxu8BWuxsRHbI+tT9
Ia57m3ambRsPlzRbWgeJ9zP5WBa3q64czUmfbiY/6YFpjeuDvF2Enld23Lx7
qQ4uz4Iiy4UZWJM5or+EyL97XfI+nE1vgfWfJeohC6nYZBzurUvkvyf6G+59
9ujC77FtWWGrWuF/u+8D//dZuj7qy1IaGNjxslPi8YsGKJZ3OMsUdiNwZYTc
1igOUtdd2/eZyK9sn6DXSw61gxs3tGMK4aN2mt590hrVh8dmZblO6iVY/f0H
pXRqAYZfbGtNXtuLr5ZLE24Tc6Ro1UpKoGotNndIH1whxkacb65PH3H+8d1p
m6pqGvDI4sMZg1fdyGMu4bW+J76vhTq/jaxacW43+8hlExoumIsOhJly8HLb
rI0O7h0oKpn5LvIxFXPr4qduGmXDecVpTu13Kq4PHJGevqgL4YXf3rvN5uDw
9tONlbupaDyfPLlNk4aKzE1alUQuyqxbcEappAObg79NyF8k8pev9v2NRwk/
2XZ5p86WDmikFVzk74tmKUos4/e7zlzvr/x90TZ/Uyp/X2QSXbOfvD9en+3L
3xc5tPlb8Ps90lmzms8NQ1wn+P1uIB8qzu+LTwN/pvL7QiJt2xn+vkh4zjMj
Pn9fv4zcF93d/jyD3y93pXnkc/7JYcLkvojCiHXk81xHb3JfVDbIIvdFfyvF
yef8/+6OIfdFQ0/3kH0tNVeNfM7/vzFNsn/Lr1eT3PnxNXJftG5eruA5W7rg
Of8/i9RIHVj//DvJhVsFz/nLVWWQ/WsYIdgXOTwS7Iv2GASQ/Moawb5oyWVB
vw/+EeyLPo0JdCBjqsBXeCUL8pd7yqFNud7tOHZUT/nZVTaSFuUPrTakI5O9
I325LeEr/n4QlpJnw3Ri8af8Rd14Liw7dbVKG1SXrbOUS2ThX2dsNm0eA9P2
eX9yu96CWbtqt5kqstB73nR+xhEmfrkm7IpwakLOnHW/cgYZ+NufN8dcig3/
IpMlRkQunbiQP684hIlJ9uGZyWtYcJbucen+wsb0cOd090wORFOnXKqfrEd4
4O3SsN5unJJYNvKZ4CsG76dVUVsQwDrrtN65Dl/sB69VyxH66t0nl2/BRaqi
evqGNzV4vuzXl8zFDdh+7mq6ty0XSmkyqy4UtWDG1M9eN/Vz8MXbJaMrgoGL
nc68CQYPH0/IfRte1onz61dM83lRCnrsx13uhK9MEX9k4BPBRok3LTpqSy2W
r7L0U/hG+Hxa59tOdQ5iimY0bPTsBEvl3QyDx21YyVXe966WhZV7Jnr1iX5d
GiihemKsFuEWST1lHUQeM2FpIZWLrQ37xcKr6qFXaqN2/18BcrJWLkzSYUNd
zPr9jYt9CMsPbrSLZOHtUiXJj8+qoS8vs3mTOAc1Hlu3rIjjYOzLxXWUr/Vo
KZxSH2rBgMT3uMdjRC7LpE/8tFnUAs+o9pKiUhpeq/nSqgnfYndrdljjs3ZQ
3s4PPtlCRUGa8JNiMQ6eSt/f0x5BRdSyxunUGioWPpOd4SPKQQVt0XhlNBVa
GtHTG2bRkH3p7PygzRxEf1Tv7yByVyXjb8l6ayKHtioY4QgHCWyT+dv2duDE
2e/kvLteliF4HjVrATnv7i17S9atn89vwfOoticEe9ERFskHDQT7ojjxckGd
1wiePx96LtgX3fkh2Be1WAj2RVaqgjrf81uwL5JLFdT5RL+AT7MU7IsKTJY+
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
g2pma84wsUj8EFvOhYXXdVoaN5hsnKg4KfEviYNynqsnq6MeAVtmVI2er0Hz
zM23R58RuTBwIK5nXi8ygz5uf7eBB6Eqh4xb+xqhu3r2orcqxfCan7rB/kA7
Nse902efZSNu/dU9snZ0SB77s8/Cg47ZJi9rh7058Pw3PyPpJAWexgLda1cW
6F46R6B70Z9oaScI3/1YLdDI0IeNU4eGJe7K0/GRZjm8IYcC3e/bSyfWsmGQ
caVzNY2O7mjVzZdutOGGStjtnDIWmn0OK81v6EbiZ5OkhokWvDUpuLrXkAXj
qAftV38zcEg8uc9Sohkwj3L5Z8ZEeZf76aIHLGQe/Maa9qYRfoeeGIZeZIDp
Mnj+J+Ev1j2bzj1O+N18lbVpwwmEj7r/Y5VjdT18y1f8NJ3LBP1AudNbwhe1
67yTp6k3w1Q2LrN4Xxf2d2cL3ZhP+IHYD7oMKSpOZQ81pM5qhdfeIhe2MQuJ
j64ti+EyMPVIudNU73r+7351LGzoMH1kdaTTpwefPSwK122rgXpleUHeUDN2
Ss1n/ZLtRf5gwJDyfP7vVc8OLP+VD/+xR7aif4i8rqUuetiMhzGR5MVT45og
MjM/NCyxGGfOpL+6GdoHFWUZlfobLCgEn+0bMq/G9bNNu2akEP7f7vVXOqHD
bMnx0U3ajbDZeud5bBsNG2+Mfth1iYOs6H6Pi27t2MHzOBYh044TVcbnj5uw
IWaaK3kgkg4d12YN1aomfJn+cc/oSibS4zISjuWzIP14lVL/ZB1WHYsptium
Qefhve/n+3oQ8yxqQLa8BrMey7kfu1sHesnvRtVlXLy9b1o4SMwpR3ELIZ4T
A9oho6qVjpV45L/TuEu5BxrrY6/5niZyukKz/v/4uu94rN4+DuCEKPmJqIxS
RklEhUr01VKRUmlooEIyK6VFCBEyMysaVFRGVLL3yN7bve9j3KFFMnqOev79
9u/79bye16/bOde5ruuc6/PZX9UAL+eHHpdYx4S3FzS0jMjfX6zYX/2uQCt8
3ujunGVKgwL/ht/Ftwjws7MKDwjuhOn7iUcdj1AgoyjCVlqSAI42W9GUtxde
r7/OfyS8F5iqrGfJ42wI5zYQCx8g19VCsYorSimgp5S4O0OZAAvurntm7j1g
EvM0gNuECtrSAxE3jQkYGT58b8KSXNecVd4m7kAF95tlUT4z++Efd/C0rief
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
/eJ8dK93tL/Zgr5lAbqVEP3/EsCq0w==
       "]], {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], 
       FormBox[
        SuperscriptBox[
         TemplateBox[{"\[Psi]"}, "Abs"], "2"], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotRange -> {All, All},
      PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"arg[\[Psi]] / 2\[Pi]\"", {FontFamily -> "Arial"}, 
                Background -> Automatic, StripOnInput -> False]}, {
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
/wEdeLt3
                  "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -56.25}, 
                    Offset[{2.5, 0.}, {7.5, -56.25}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 
                    11.250000000000014`}, 
                    Offset[{2.5, 0.}, {7.5, 11.250000000000014`}]}, {{7.5, 
                    33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 56.25}, 
                    Offset[{2.5, 0.}, {7.5, 56.25}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{"\"Rainbow\"", ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Psi]] / 2\[Pi]\""}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7071447250001755`*^9, {3.7071447781998186`*^9, 3.7071447869993515`*^9}, {
   3.707144996939329*^9, 3.707145009273079*^9}, {3.7071450396017685`*^9, 
   3.7071450612556973`*^9}, {3.7071451337225103`*^9, 3.70714516045936*^9}, {
   3.7071451921829896`*^9, 3.707145212475622*^9}, {3.7071452984506445`*^9, 
   3.707145333859006*^9}, 3.7071457437495785`*^9, 3.707149401186616*^9, 
   3.707149828721443*^9, 3.7071520958026733`*^9, 3.7071527683640833`*^9, 
   3.707152970087964*^9, 3.707153907517683*^9, 3.707155172937622*^9, {
   3.7071559583997035`*^9, 3.7071559783311553`*^9}, 3.7071560113957376`*^9, {
   3.707156067554202*^9, 3.707156094377016*^9}, {3.707161858978505*^9, 
   3.7071618928503995`*^9}, 3.7071650126952057`*^9, 3.707166356981123*^9, 
   3.7071711247215424`*^9, 3.7071756856913147`*^9, 3.7071762114852223`*^9, 
   3.7071813528285065`*^9, 3.70718139694624*^9, 3.7071819977250233`*^9, 
   3.707182236781083*^9, 3.707184287037513*^9, 3.7071854304310136`*^9, 
   3.7071856283545027`*^9, 3.7071858376534605`*^9, {3.7071866676370583`*^9, 
   3.707186700357425*^9}, 3.707186741627655*^9, 3.7071868085693145`*^9, 
   3.707186944306083*^9, 3.707217950915509*^9, 3.7072290373932304`*^9, 
   3.707232449857892*^9, 3.707232866870427*^9, 3.7072329063053885`*^9, 
   3.707233181162854*^9, 3.707233322526575*^9, 3.7072334070091057`*^9, 
   3.70723388495994*^9, 3.7072339387093925`*^9, 3.707234008304551*^9, 
   3.7072343778591146`*^9, 3.7072348447514114`*^9, 3.7072351632660885`*^9, 
   3.7072354141935396`*^9, 3.707236808647394*^9, 3.7072372131102257`*^9, 
   3.7072389592058525`*^9, 3.7072408299038754`*^9, 3.707250691549971*^9, 
   3.707250846949394*^9, 3.707327770700952*^9, 3.7073279059696856`*^9, 
   3.7073282333582444`*^9, {3.7073338793553095`*^9, 3.707333885661764*^9}, 
   3.7073340231788244`*^9, 3.7073340601114597`*^9, 3.7073343565534277`*^9, 
   3.7073345784938884`*^9, 3.7073346425160494`*^9, 3.707334717605772*^9, {
   3.707334835125144*^9, 3.7073348405406303`*^9}, 3.707336442795512*^9, {
   3.7073380042287736`*^9, 3.7073380172230263`*^9}, {3.7073380963372383`*^9, 
   3.7073381072767916`*^9}},ExpressionUUID->"d5b3e8d8-6f6a-41b5-91b2-\
2fb47bb0513f"]
}, Open  ]],

Cell["\<\
The complex phase, together with the amplitude, governs the evolution of the \
wavefunction in time. A phase gradient indicates a probability current; that \
the probability density function (and the likelihood our particle will appear \
in a given region) will change in time.\
\>", "Text",
 CellChangeTimes->{{3.7071455067898684`*^9, 3.707145549748667*^9}, {
   3.7071550211017027`*^9, 3.707155040851237*^9}, {3.7071614440619755`*^9, 
   3.707161461348444*^9}, 3.707163007133092*^9, {3.707175781311696*^9, 
   3.707175781796465*^9}, {3.707185839450966*^9, 3.707185883172597*^9}, {
   3.7072508092386847`*^9, 
   3.707250835504994*^9}},ExpressionUUID->"a8c70ef1-0db7-4242-96c0-\
4ca96b7af2fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"example\[Psi]", "[", 
    RowBox[{"space_", ",", " ", "time_"}], "]"}], " ", "=", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"simulateWavefunction", "[", 
     RowBox[{
      RowBox[{"example\[Psi]", "[", "x", "]"}], ",", " ", "0", ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "2"}], ",", " ", "8"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "0.3"}], "}"}]}], "]"}], "[", 
    RowBox[{"space", ",", " ", "time"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707228373779501*^9, 3.7072284300771384`*^9}, {
  3.707228476317156*^9, 
  3.7072285121526337`*^9}},ExpressionUUID->"6c136413-b6ef-4725-91c2-\
4b0854393173"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["Animate", "Code"], 
   StyleBox["[", "Code"], 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   RowBox[{
    RowBox[{
     StyleBox["Overlay", "Code"], 
     StyleBox["[", "Code"], 
     StyleBox["\n", "Code"], 
     StyleBox["\t\t", "Code"], 
     RowBox[{
      RowBox[{
       StyleBox["{", "Code"], 
       RowBox[{
        RowBox[{
         StyleBox["Show", "Code"], 
         StyleBox["[", "Code"], 
         StyleBox["\n", "Code"], 
         StyleBox["\t\t\t", "Code"], 
         RowBox[{
          StyleBox[
           RowBox[{"plotWavefunction", "[", 
            RowBox[{
             RowBox[{"example\[Psi]", "[", 
              RowBox[{"x", ",", " ", "t"}], "]"}], ",", " ", "domain", ",", 
             " ", "False"}], "]"}], "Code"], 
          StyleBox[",", "Code"], 
          StyleBox["\n", "Code"], 
          StyleBox["\t\t\t", "Code"], 
          StyleBox[
           RowBox[{"Plot", "[", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Abs", "[", 
               RowBox[{"example\[Psi]", "[", 
                RowBox[{"x", ",", " ", "t"}], "]"}], "]"}], "2"], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"x", ",", " ", "2", ",", " ", "3"}], "}"}], ",", " ", 
             RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{"PlotRange", " ", "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "1.2"}], "}"}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"PlotStyle", " ", "\[Rule]", " ", "Red"}]}], "]"}], 
           "Code"], 
          StyleBox[",", "Code"], 
          StyleBox["\n", "Code"], 
          StyleBox["\t\t\t", "Code"], 
          RowBox[{
           StyleBox["PlotRange", "Code"], 
           StyleBox[" ", "Code"], 
           StyleBox["\[Rule]", "Code"], " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "1.2"}], "}"}]}]}], 
         StyleBox["]", "Code"]}], 
        StyleBox[",", "Code"], 
        StyleBox["\n", "Code"], 
        StyleBox["\t\t ", "Code"], 
        RowBox[{
         StyleBox["Text", "Code"], 
         StyleBox["[", "Code"], 
         StyleBox["\n", "Code"], 
         StyleBox["\t\t\t", "Code"], 
         RowBox[{
          StyleBox["Style", "Code"], 
          StyleBox["[", "Code"], 
          StyleBox["\n", "Code"], 
          StyleBox["\t\t\t\t", "Code"], 
          RowBox[{
           RowBox[{
            StyleBox["\"\<Pr(2 < x < 3) \\n= \>\"", "Code"], 
            StyleBox[" ", "Code"], 
            StyleBox["<>", "Code"], 
            StyleBox["\n", "Code"], 
            StyleBox["\t\t\t\t", "Code"], 
            RowBox[{
             StyleBox["ToString", "Code"], 
             StyleBox["[", "Code"], 
             RowBox[{
              StyleBox["NIntegrate", "Code"], 
              StyleBox["[", "Code"], 
              StyleBox["\n", "Code"], 
              StyleBox[
               RowBox[{
                StyleBox["\t\t\t\t", "Code"], "\t"}]], 
              RowBox[{
               StyleBox[
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  RowBox[{"example\[Psi]", "[", 
                   RowBox[{"x", ",", " ", "t"}], "]"}], "]"}], "2"], "Code"], 
               StyleBox[",", "Code"], 
               StyleBox[" ", "Code"], 
               StyleBox["\n", "Code"], 
               StyleBox["\t\t\t\t\t", "Code"], 
               StyleBox[
                RowBox[{"{", 
                 RowBox[{"x", ",", " ", "2", ",", " ", "3"}], "}"}], "Code"], 
               StyleBox[",", "Code"], 
               StyleBox["\n", "Code"], 
               StyleBox["\t\t\t\t\t", "Code"], 
               RowBox[{
                StyleBox["Method", "Code"], 
                StyleBox[" ", "Code"], 
                StyleBox["\[Rule]", "Code"], " ", 
                RowBox[{"{", 
                 RowBox[{"Automatic", ",", " ", 
                  RowBox[{
                  "\"\<SymbolicProcessing\>\"", " ", "\[Rule]", " ", "0"}]}], 
                 "}"}]}]}], 
              StyleBox["\n", "Code"], 
              StyleBox["\t\t\t\t", "Code"], "]"}], "]"}]}], ",", " ", "\n", 
           "\t\t\t\t", "Black"}], "]"}], "]"}]}], "}"}], ",", "\n", "\t\t", 
      StyleBox[
       RowBox[{"Alignment", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.8", ",", " ", "0"}], "}"}]}], "Code"]}], 
     StyleBox["]", "Code"]}], 
    StyleBox[",", "Code"], 
    StyleBox["\n", "Code"], 
    StyleBox["\t", "Code"], 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "0.3"}], "}"}], "Code"]}], 
   StyleBox["\n", "Code"], 
   StyleBox["]", "Code"]}], 
  StyleBox[" ", "Code"], 
  StyleBox["//", "Code"], 
  StyleBox[" ", "Code"], 
  RowBox[{
   RowBox[{"Legended", "[", 
    RowBox[{"#", ",", " ", 
     RowBox[{"colorBar", "[", "]"}]}], "]"}], "&"}]}], "\n", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7071456078264985`*^9, 3.7071456503393946`*^9}, 
   3.7071520895669003`*^9, {3.7071528961866093`*^9, 3.707152921487929*^9}, 
   3.7071841788796315`*^9, 3.7071842205515933`*^9, {3.707184570338788*^9, 
   3.707184573847811*^9}, {3.707184610780097*^9, 3.707184611930045*^9}, {
   3.707185955592905*^9, 3.7071859833983316`*^9}, {3.707218399021167*^9, 
   3.7072183996356683`*^9}, {3.7072195511007247`*^9, 3.707219551507229*^9}, {
   3.707245669983631*^9, 3.7072456764630203`*^9}, {3.7072507728359737`*^9, 
   3.7072507759708853`*^9}, {3.7073353763744674`*^9, 
   3.7073353844863043`*^9}, {3.7073365827729826`*^9, 3.707336646660537*^9}, {
   3.707336678092108*^9, 
   3.7073366810376267`*^9}},ExpressionUUID->"2050a5a1-5bd2-44ca-8f9e-\
a3d7315f2de5"],

Cell[BoxData[
 TemplateBox[{TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`t$$ = 0.1669577980041504, Typeset`show$$ = 
       True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 0.3}}, 
       Typeset`size$$ = {360., {117., 124.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       True, $CellContext`t$3390785$$ = 0}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`t$$, $CellContext`t$3390785$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Overlay[{
           Show[
            $CellContext`plotWavefunction[
             $CellContext`example\[Psi][$CellContext`x, $CellContext`t$$], \
$CellContext`domain, False], 
            Plot[Abs[
               $CellContext`example\[Psi][$CellContext`x, \
$CellContext`t$$]]^2, {$CellContext`x, 2, 3}, Filling -> Axis, 
             PlotRange -> {0, 1.2}, PlotStyle -> Red], PlotRange -> {0, 1.2}], 
           Text[
            Style[
             StringJoin["Pr(2 < x < 3) \n= ", 
              ToString[
               NIntegrate[Abs[
                  $CellContext`example\[Psi][$CellContext`x, \
$CellContext`t$$]]^2, {$CellContext`x, 2, 3}, 
                Method -> {Automatic, "SymbolicProcessing" -> 0}]]], Black]]},
           Alignment -> {0.8, 0}], 
        "Specifications" :> {{$CellContext`t$$, 0, 0.3, 
           AppearanceElements -> {
            "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
             "DirectionButton"}}}, 
        "Options" :> {
         ControlType -> Animator, AppearanceElements -> None, 
          DefaultBaseStyle -> "Animate", DefaultLabelStyle -> "AnimateLabel", 
          SynchronousUpdating -> True, ShrinkingDelay -> 10.}, 
        "DefaultOptions" :> {}], ImageSizeCache -> {411., {156., 163.}}, 
       SingleEvaluation -> True], Deinitialization :> None, 
      DynamicModuleValues :> {}, SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Animate", Deployed -> True, 
     StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]],FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"arg[\[Psi]]\"", {FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False]}, {
              GraphicsBox[{{}, {}, 
                RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
Kb1b18kctPSfCFU/SsILzbfat6Q78Tx4t6P+Nw6GSRkqn81JyDbQ5Tyo7oRP
1qFdfyVG8LR6UwBxnIRSiX7Zeq8ukLK+r+QuH0Fn2URabjQJlOTkIi1ZKnJC
Vv0SXTICuc+FtddbSGBtd3eIKqLigfM+8lqREWjSjH6uEiTjd/06gV8O3bhg
ePuN2Sxfh65EYUFlMsQdeWkn5tNgtSw7wOUnBxfaBZYPG5GxejzXsjydBo1x
2gl/HgcRFNf1TcfJ2BZyhadq1YOFzQu3JzA4yG6p3pF3nQxLed3Hod96MJyh
t7iExkFTo7p1dDQZDjl/tMee9KIm4AzRTeGAVxfqcCOf7x+TL12H9PrwyiGm
/FcdBxI13EsnW8gI6rznV9jbhyC96njZcg60qmz8d3HJiDu3e5XivX64Sk9e
1i7kwKY8N1JVlILsWdEqf7UBmIytsT6Yw4Fz1aT+PkMKdlgZ1atlDCD1JDVF
KZiDazX69OteFDAbP51xlxmEUOODae4JDsLq74Qlp1GgOd46oms/iNP6pgeK
tnKQ0FS1tZFKweXloxcXxQyiNuN3eshCDt6TRHsmxVtRtFPkR2/nINbL5fyz
HRxGbatNoJJxK+a5K/vkLhtCWJCrnXLhMHo6ojQtr7bCPNzg172jQ+CNL88a
ezCMb9SuNu83rXiQb+9rFz8EG+cWgRK3YQj2Kt563teK9i7Pf2tpQ8ghBR4N
NRjG8gFn1eqlbVCYDfWflqdjyU793MNSw9hAT28a290GF9W0BU0n6PDOHhNS
5RAwZnF9lvu24fXeLyEJL+holU87+aOMACt5vfy3wjbI1+vuFGmn4495ATci
gsCK5U4ll+fa8DFxiYbwfAaIzWrvp/YRsHkY4zhl3o6D1ziyQpsZ6JCP9nVa
SsBfsHme78N28KwrBQQdGagUXGDS0MbGB98Fqf862nFf5fno/AgG8sa8F26L
YWP4u/7ueys7oPLnSrfAZwYSqIPkl0fZUDjjRQi6d+AL2bp63jADEZX740QU
2Njflx76X3YHjmWo5c/JMnEz+8sp7z4WAm37NMUnOzB5e/bFrCkTZ2K01HsS
WSiol255ZNCJx3Zd//3zZsLO/8WYmQsLI9jrJR3YCU3NPJ+ZRCZMzokV5Kiy
oFTgLxXb0IlagVCnv81MbLbzvb2cYOLQhsIP8lJdcKE6W//5y8TKnRyzgDdM
eOSpFQte7IKtHGlkozwLdt+541fcmPDfFl0xVtsFMzvDUFc9FsJTxpLcVzER
92l+HXUNFduj3qjHHWah0u7HviM0BnINvVsqb1OxlixX0+TDwrTw5IzlUwZq
ygfas6lULFsc5CbwhIVNRVOZOw4w0Ge2rydGuxui1j/m6+SzcPr89NENYgxM
1JUM+T/sxnSoY/I5EgsJK2eElWroWGSjOXyO042R2kYkjrLQQZr9IHmPjjWU
+DE7Mxp6hPT728TYEA8QcBUwpEPfXvTnzkQamkzTb4lqsGG6TXDpxNQQDnRf
+7vuDw0l96QVjCzZ8GULlzHzh3DWgSUgbd+DnDL/Iu/TbOTFLbzYeWEIzqEi
0TZFPRigdzd9ucPGpXDS99frh7DToS+furYXh7hK9qqRbLz/cnTvyeFBKGx5
T3KN7kX1hGtfaCobv38MpUpmDOKXYOjomEAf9GZeu3/7yIaR2vl/le6DaKc6
ivl69iFLcGzUro4/F49OHr6mOoj87G3rhfr6oCShfe0zjY2Hy/462dYMIMJ/
kcXjvf14LHtjdtUoGyvuSMh8Nh2Ah92gm8KnfixQKg0JnmMjlbmqdnVFP3av
KwhI5+fItbXzJbl8f2tZbfW9v7Mfa2bCk7Y8GQBno0XsAVUCBflmWmPFfZgj
Np9ynDeIE7oRqwp0COxafmTQTr8PYxSFMRXdQbSAkqGwh0DDHY8nxQW96C0W
vs25OAhjS7nN904QsGP5ma/Z1gtniQC7rKxBNORkK0S4EUj1i17xX10P2I7/
NC9yBmEnayoSe5HA+NK3vNGTPTifd2PBJvUh9Pl1jydf4//3dXWZ7Q8avgtM
0r67DeE03bM/+y6BRzv7o4qCabhm6/nuXcoQvlkKNxT+R6C/fcp9lTwNf9NG
Qn0Gh3Az98XHykj+fc9L6gfndMN/yt1ZR4mO+XLayc3PCPgJrBPnmnRDyHJI
7zc/X8Jv1UdQU/n3it01cKCLirD4k0s+x9Mhyzh1g5HNz5GNx94VnKdCkttF
+HXRkbBnynXsI4GzX72DFedREW1oW2Yky4B6XsT+6S98PY+HHQ2I7sKKhy0x
c4f4eSGnYiBYR0DoR4rm8LouXM29zKuPZGCLWcNazSa+DsxM5vqmTmQmofwF
hc93egFSlxoJXNdJCbS404mBSPFoz6VMrNHaMZvXQODf/fg17ps7IRPYfcbk
IBPPlcc5E/UEArsfVwTQO2Dpk24gG8mEjFxmhw6/Lqr5n1NSdAduu1+RHCYz
EbHIpeIm/zwPb92dKzXvwLvDuxifl7AgNLfibUktAemWawk9v9tBWEgUPjjA
wu0JStxcDYH4VZeMpjPboahPC3N6zMIUERpkwq+v8nbvlXPg56lGhqM2mYVL
vcZewdUE0ipP+m2TbEeIgs9W4SVsEOTpE3VfCWjI2MkfqmhDsbixcPd+Nk5V
51uI8eu57lZFnlfa8P2fBC3rERvUIg/tfVUEtheaHH2g1oZzygb77BvYuBIu
dcSEr3/4PBXYTLSCYXa2claQwGKHYl+dDAL0PQvWSlS0wuHsU53XIPBmo1uC
RjwBvScM8eaHregKr8w86EvAdJ5EpVI4X4feqomIk604kPtN6e8Hvp8oH1lS
twkw1dJo1hqtaGhVfJL2jcDNVMeFIp4EDDyDKsR/U2A2tUdkn8YwZK6KaP11
IhD5ye11UzUFpSuu+/3iz71c87wD3w4RIAR2P4p4QoGuUdq3pMRh7F1+zIdh
RsDISu2atTOf75wornv5PMjiCMR18fsuOlrIQXwTn2uDZrsmZDjwL84sblxH
YKSPZdo0Q0Zahqb1y/0cyD+wHSiT5/eLeo1GRAMZvepnJcMDOdgvGLVBdwEB
WYr76uBkMtoFPyiX5nGgqHw6dQudjTM9X1UL75HRNDSn/a2PgxGjHfIbKtj4
xFJZz3Em4+sXK3NlsREUHl8cuTaJjUXfA7QUTMgofR571FZvBEHX6SLKd9k4
8Wdoi80aMj7eYJwLdh/BweiCOwqObLwVNNa5O5+Mt/abbhdGjUApP+ynrBEb
/1buuupSTUL6Vr9HnLIR8JodLyxRZCNp6+ztmmASEiRrkxVGR1A0spWx6C8L
ZhYlIRp8jozhSX2wkeciRETkuBCNBeKE76OHwnwerXesuWvBhZ1qD3nuEwth
Xnpx4zUtuJ+eSc334ULZONfiTywLWsFTSYfvt+Bu4NQII5mLMYfAL5PXWCDH
f3jz2YK/f338x+ufufhyMETokBELdWrWq3dKt+ARycBfrI2Lh7tDrXMXsFCR
z4ip6G9GzNX+vYlcLk7pRzwRb2CiyMhPYndmMxIU7slqC/KwSesRzeMxE/n1
UkF1V5uRXqEyWKPIw9zqKOXaw0y8sc/8Y2XcjJwzNZnHt/NAknl6VnUlEylD
xt4k8WYUSHhcHbPhIVE0Lvceg4FnF7uJQ9QmlL4X2xVwmgevmWdT/W8YiJr2
cuxMbUL1sZxFcnd52PX9pZGhFwNhwaIdxzyb0Dx3oONNLA9LmElB8ToMBC5N
surb0YSOVxOJRnk8DHalNk7N0OH3UrfSSbgJvVYx5yh1POQ1pkvZVdFxZT1J
j0lpRPFC5eiPHTysd679a3mLDlPy+Ke7sY3wGniiONLJg3mc0P0OdTqIyBQT
7SONWPtR+JUSlQdXkqmUS9sQwm0PNbHlGtETdlPLtpsHf+GAl2N3hrBJdv7h
Z50NiHTifbxP4yHBqHydn8YQ2jrzB2xiGmCuc2pnSQ8PxT6z70X4XHo9ztlD
4HADZsRaa7738kDNMkT0Pf7cPb504oNsA/KHzPar9fPwk+7bsFprEGUKFbfO
dtTjTGFh17EBHtS2Xc46nj8A1z4vYcWn9VB8oOH0cJDHf5+PVVwRHYBI4urH
JLt6tLq8HK4c4uHZkvPUiFP9yHIirwiUqcd9vSXev+g8tN8hxl4V9GH/Gv9U
nfY6GC0OnNZk8iA56ipUJtGHCcYmrZEndTj/irCcbONhuYGKySKDXpiFLyzd
ZVyHZ4bWcSVVPCiH0u/Yn+1B9FaGdexYLera8oig9zxodCUXJz2lgdVd0jv6
vBZT52R1bVJ50FZz/s2t7IbOvZgLZntqoTbfN0T2CQ+GV1Zv1/1Oxf11/3dG
DWzj+zv6AnjYXTHgHbCSii7SnogfqTW4t9lULf0yD/skE3Oa93Zh3XUVRcuD
NcitzfC55MLDEQdH7vIbnbip9C8rYbYa/Y7iX3UO8fXJWrnO7VUHGqo7DX5m
VUN8ykt6zpgHj+let9zWdshfzGu0OlaNHQ86XGq38HDZ4kXyHz53n5cJO5Ei
XA0P1R3vHinz4Pf0RP9urTaUFLtyf7//ikUbBF0ypHhY4Ey1zD3WChpnXaCv
+1copmlfXizEw+wbqSGdYAqqErrXqCt8xSZF14Crv7j4M25980seP19swyrb
yFUwiY6K6uVwwbu+WCXiEz8vRA1c/EOqYCdemWLaywVzYaDtc0l+/5dyBbQM
q3Am6Me7zBYuep//Csw83YSzl18kd/+ohO/M6qqlFVy0a134UFTagIPqNsYh
GZWI8DnQduM9F01lg8w6vg929P4b3OpQiUTeXcbAKy6qDtrLUs/XQiUyx39A
qhLv3HInzOO4KGbU7yYq+XqZn1odUVeB6t7+BTlhXLy/uvPa1Iqv+PlHslzv
TgW67BbLyN7mIlPkfbqQdyX6c8tPsbQrMNJkpHrLk4uUePUumbpy1Lp5z0Vy
yvE/DJC6qA==
                 "], {{
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}}], {Antialiasing -> False, 
                 AbsoluteThickness[0.1], 
                 Directive[
                  Opacity[0.3], 
                  GrayLevel[0]], 
                 LineBox[
                  NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                   7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                   112.5}, {7.5, -112.5}}]]}, {
                 CapForm[None], {}}, {Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
               Scaled[0.02], PlotRange -> All, Frame -> True, 
               FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
               Opacity[0], FrameTicksStyle -> Opacity[0], 
               ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
     "BarLegend", DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"Rainbow\"", ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Psi]]\""}], ",", 
          RowBox[{"\"Ticks\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"-", "3.14`"}], ",", "0", ",", "3.14`"}], "}"}]}], 
          ",", 
          RowBox[{"\"TickLabels\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"\"-\[Pi]\"", ",", "\"0\"", ",", "\"\[Pi]\""}], 
              "}"}]}]}], "]"}]& )], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707152096642641*^9, 3.7071527705903215`*^9, {3.707152898064827*^9, 
   3.707152922674535*^9}, 3.7071529716044245`*^9, {3.7071539019254527`*^9, 
   3.7071539088833895`*^9}, {3.7071539395624447`*^9, 3.707153957214414*^9}, 
   3.7071551040499334`*^9, 3.707155164209637*^9, {3.707155959242949*^9, 
   3.707155979131982*^9}, 3.707156012201951*^9, {3.707156068744014*^9, 
   3.70715609551781*^9}, 3.7071650137264676`*^9, 3.7071663583482656`*^9, 
   3.7071711272808237`*^9, 3.707175687151664*^9, 3.70717621563167*^9, 
   3.7071813539295197`*^9, 3.7071813981648426`*^9, 3.707181999958398*^9, 
   3.7071822378306284`*^9, 3.707184181038542*^9, 3.707184229206169*^9, 
   3.7071842885931687`*^9, 3.707184574817911*^9, 3.707185432569519*^9, 
   3.7071856371011376`*^9, 3.707185840806679*^9, {3.707185979742899*^9, 
   3.7071859854344425`*^9}, {3.707186668711034*^9, 3.707186701455205*^9}, 
   3.7071867428537006`*^9, 3.7071868099758387`*^9, 3.707186945256081*^9, 
   3.707217951686391*^9, 3.7072195520402913`*^9, 3.7072202008068085`*^9, {
   3.707228490422064*^9, 3.707228520293642*^9}, 3.7072290382643633`*^9, 
   3.707232451199961*^9, 3.707232868041484*^9, 3.7072329072266383`*^9, 
   3.7072331841799345`*^9, 3.7072333236531467`*^9, 3.70723340789767*^9, 
   3.707233886026975*^9, 3.7072339410403085`*^9, 3.707234009883906*^9, 
   3.707234264815703*^9, 3.7072343788381414`*^9, 3.7072348455514436`*^9, 
   3.707235164365757*^9, 3.707235415154832*^9, 3.707236809565819*^9, 
   3.7072372142373724`*^9, 3.7072389601404333`*^9, 3.707240831104782*^9, 
   3.707245677917728*^9, {3.70725077130715*^9, 3.7072507766269684`*^9}, 
   3.7072508486923747`*^9, 3.707252409610953*^9, 3.707327772466528*^9, 
   3.707327911074779*^9, 3.707328235385234*^9, 3.707333887619276*^9, 
   3.7073348419356813`*^9, 3.707335386075653*^9, 3.7073364659128947`*^9, {
   3.707336601803774*^9, 3.7073366472670345`*^9}, 3.707336681653247*^9, 
   3.7073381089162908`*^9},ExpressionUUID->"768e9041-60b3-474a-9204-\
8e033227abeb"]
}, {2}]],

Cell["\<\
This was an example of a free system, in no external potential. Its \
evolution, and the evolution of general trapped systems, is determined by the \
Schrodinger equation.\
\>", "Text",
 CellChangeTimes->{{3.7071620040047016`*^9, 3.7071620737628183`*^9}, {
  3.7071859308530197`*^9, 3.707185931945998*^9}, {3.7072200427578964`*^9, 
  3.7072200717030635`*^9}, {3.7073233066367607`*^9, 
  3.707323310860771*^9}},ExpressionUUID->"3d388c4e-23df-4a2e-b252-\
04bcc0f72a37"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Schrodinger Equation", "Section",
 CellChangeTimes->{{3.7071454714327006`*^9, 
  3.7071454760202475`*^9}},ExpressionUUID->"9999bc67-9945-48f0-8c1c-\
3e21349dac87"],

Cell[CellGroupData[{

Cell["Time dependent and independent forms", "Subsection",
 CellChangeTimes->{{3.707319662786274*^9, 
  3.707319685895834*^9}},ExpressionUUID->"b6343981-caca-4df3-ad66-\
847c8e4c6149"],

Cell[TextData[{
 "For a wavefunction \[Psi][r,t] with total energy encoded in a Hamiltonian \
operator ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["H", "^"], TraditionalForm]],ExpressionUUID->
  "69527e5b-019b-4acf-b885-790e4583c54e"],
 ", the time-dependent Schrodinger equation is"
}], "Text",
 CellChangeTimes->{{3.70718713785315*^9, 3.7071872026026764`*^9}, {
  3.7073147320787573`*^9, 3.707314736078554*^9}, {3.7073197090325003`*^9, 
  3.707319715862543*^9}},ExpressionUUID->"322847e0-8b6f-4e85-9969-\
a7fb7ed396b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"schrodEq", "[", "\[Psi]_", "]"}], " ", "=", " ", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{
      SuperscriptBox["\[Psi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"r", ",", "t"}], "]"}]}], "\[Equal]", 
    RowBox[{
     OverscriptBox["H", "^"], "[", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"r", ",", "t"}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707187206899508*^9, 3.707187254538334*^9}, {
  3.707317409765885*^9, 3.7073174107447767`*^9}, {3.707317591818646*^9, 
  3.70731759967482*^9}, {3.707317835712682*^9, 3.7073178895536275`*^9}, {
  3.707317969825589*^9, 3.707317995304257*^9}, {3.707318920799297*^9, 
  3.707318934895522*^9}},ExpressionUUID->"c2d9e666-d24c-4604-aa23-\
de46091c6f82"],

Cell["where r can represent one or more spatial dimensions.", "Text",
 CellChangeTimes->{{3.7073231539852314`*^9, 
  3.7073231768998375`*^9}},ExpressionUUID->"e21fcf9e-4a4b-4ca7-88a7-\
40f61618105a"],

Cell["\<\
We can often produce an infinite set of eigenfunctions \[Phi][r,t] (with \
eigenvalues \[CapitalEpsilon]) of the Hamiltonian, which each satisfy\
\>", "Text",
 CellChangeTimes->{{3.707317688600671*^9, 3.707317707795269*^9}, {
   3.707317749721675*^9, 3.70731778383503*^9}, {3.7073180084045277`*^9, 
   3.707318017485259*^9}, {3.7073181923752103`*^9, 3.707318204586427*^9}, 
   3.7073231756287503`*^9},ExpressionUUID->"5d6e91cd-f668-4b19-9b0d-\
d87ab7378260"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"schrodEq", "[", "\[Phi]", "]"}], " ", "/.", " ", 
  RowBox[{
   RowBox[{
    OverscriptBox["H", "^"], "[", 
    RowBox[{"\[Phi]", "[", 
     RowBox[{"r", ",", "t"}], "]"}], "]"}], " ", "\[Rule]", "  ", 
   RowBox[{"\[CapitalEpsilon]", " ", 
    RowBox[{"\[Phi]", "[", 
     RowBox[{"r", ",", "t"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7073178927738123`*^9, 3.707317988699069*^9}, {
  3.707318609669626*^9, 
  3.7073186196025205`*^9}},ExpressionUUID->"843ed6d6-ae17-4137-b65b-\
43848454a1f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox["\[Phi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "t"}], "]"}]}], "\[Equal]", 
  RowBox[{"\[CapitalEpsilon]", " ", 
   RowBox[{"\[Phi]", "[", 
    RowBox[{"r", ",", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.707317897415148*^9, {3.7073179523930235`*^9, 3.707317989505539*^9}, 
   3.7073181052253594`*^9, 3.707318160771224*^9, {3.707318282607974*^9, 
   3.7073183379820814`*^9}, 3.707318377500703*^9, 3.707318407511627*^9, {
   3.7073186057122726`*^9, 3.707318620720391*^9}, {3.7073186788002806`*^9, 
   3.7073187130621605`*^9}, 3.707318746364956*^9, {3.707318912752485*^9, 
   3.707318938196787*^9}, 3.7073190867684145`*^9, 3.707319124453767*^9, 
   3.7073192053722596`*^9, 3.707319243964088*^9, 3.7073205076242943`*^9, 
   3.707320945159124*^9, 3.7073211006352034`*^9, 3.707321151719928*^9, 
   3.707321324779066*^9, 3.707327772886029*^9, 3.7073279111397786`*^9, 
   3.7073282357397337`*^9, 3.7073338881043005`*^9, 3.7073348423437467`*^9, 
   3.7073381094714003`*^9},ExpressionUUID->"45284b0e-5481-4f14-bd92-\
b0d3fd2528c1"]
}, Open  ]],

Cell["\<\
and which can be expressed in terms of a time-independent eigenfunction \
\[Phi][r] and an oscillator time component.\
\>", "Text",
 CellChangeTimes->{{3.7073181748942227`*^9, 3.707318226640203*^9}, {
  3.707318351493869*^9, 3.707318354163373*^9}, {3.7073187220400066`*^9, 
  3.7073187335628395`*^9}},ExpressionUUID->"49d17306-5c24-4bcb-94e4-\
c6fc516cdc7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"eigTimeForm", "[", "\[Phi]_", "]"}], " ", "=", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"r", ",", " ", "t"}], "]"}], " ", "\[Rule]", " ", 
     RowBox[{"DSolveValue", "[", 
      RowBox[{"%", ",", " ", 
       RowBox[{"\[Phi]", "[", 
        RowBox[{"r", ",", " ", "t"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"r", ",", " ", "t"}], "}"}]}], "]"}]}], "  ", "/.", " ", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], " ", "\[Rule]", " ", "\[Phi]", 
     "    "}]}]}]}]], "Input",
 CellChangeTimes->{{3.7073180793612413`*^9, 3.707318095470804*^9}, {
  3.7073181452296567`*^9, 3.7073181580016317`*^9}, {3.7073182794650574`*^9, 
  3.7073183356031246`*^9}, {3.707320963070878*^9, 3.707320985970559*^9}, {
  3.707321071556932*^9, 3.7073210735979424`*^9}, {3.707321144444715*^9, 
  3.7073211453037744`*^9}},ExpressionUUID->"07ad8dd8-d967-4dec-aabc-\
dd2cf3326ecb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"r", ",", "t"}], "]"}], "\[Rule]", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[CapitalEpsilon]"}]], 
   " ", 
   RowBox[{"\[Phi]", "[", "r", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7073183177207985`*^9, 3.7073183399926205`*^9}, 
   3.7073183783217916`*^9, 3.7073184085678835`*^9, 3.7073186246222095`*^9, {
   3.707318680016778*^9, 3.7073187472402*^9}, 3.707318940480586*^9, 
   3.707319087725277*^9, 3.707319131737053*^9, 3.707319206403962*^9, 
   3.7073192452320185`*^9, 3.707320507640831*^9, 3.7073209866284466`*^9, {
   3.7073210957472544`*^9, 3.70732110143044*^9}, {3.707321147222993*^9, 
   3.70732115173544*^9}, 3.707321324795065*^9, 3.7073277729025307`*^9, 
   3.7073279111562786`*^9, 3.7073282360137377`*^9, 3.7073338882999425`*^9, 
   3.707334842359744*^9, 
   3.7073381097198973`*^9},ExpressionUUID->"0036913e-adf5-41c8-8dff-\
7c080adaf664"]
}, Open  ]],

Cell["Returning this form to the Schrodinger equation gives", "Text",
 CellChangeTimes->{{3.7073188176518273`*^9, 3.7073188236213427`*^9}, {
  3.7073189836616344`*^9, 
  3.7073189855146914`*^9}},ExpressionUUID->"73898a67-962d-448d-bf7c-\
43fb958d9195"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"schrodEq", "[", "\[Phi]", "]"}], " ", "/.", " ", 
  RowBox[{"{", 
   RowBox[{"%", ",", " ", 
    RowBox[{"D", "[", 
     RowBox[{"%", ",", "t"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7073183676209383`*^9, 3.707318404801031*^9}, {
   3.7073186417986293`*^9, 3.707318702365399*^9}, {3.707318751569778*^9, 
   3.707318760043728*^9}, 
   3.707319093774513*^9},ExpressionUUID->"edc82ec8-4d4c-48f4-9f84-\
6b07f0669ad5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[CapitalEpsilon]"}]], 
   " ", "\[CapitalEpsilon]", " ", 
   RowBox[{"\[Phi]", "[", "r", "]"}]}], "\[Equal]", 
  RowBox[{
   OverscriptBox["H", "^"], "[", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[CapitalEpsilon]"}]], 
    " ", 
    RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.7073183741218977`*^9, 3.707318388606801*^9}, {
   3.7073186710373106`*^9, 3.7073187027779393`*^9}, 3.707318760825594*^9, 
   3.707318944986657*^9, 3.7073190958404236`*^9, 3.7073191334368854`*^9, 
   3.707319207931863*^9, 3.707319246349456*^9, 3.7073205076568046`*^9, 
   3.7073209935491533`*^9, 3.7073211072992835`*^9, 3.7073211517524495`*^9, 
   3.707321324811067*^9, 3.70732777296553*^9, 3.707327911172779*^9, 
   3.707328236036237*^9, 3.707333888315951*^9, 3.7073348423742523`*^9, 
   3.7073381097351203`*^9},ExpressionUUID->"8b6108fa-d3df-4428-bc83-\
ab60292f8006"]
}, Open  ]],

Cell["\<\
which for a linear and time-independent Hamiltonian, presents the \
time-independent Schrodinger equation of the energy eigenfunctions \[Phi][r]\
\>", "Text",
 CellChangeTimes->{{3.707318966116968*^9, 
  3.707319022402522*^9}},ExpressionUUID->"235916b9-182f-412d-86c4-\
cbb9bd8b1400"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eigfGeneralEq", "[", "\[Phi]", "]"}], " ", "=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"%", " ", "/.", " ", 
    RowBox[{
     RowBox[{
      OverscriptBox["H", "^"], "[", 
      RowBox[{"c__", " ", 
       RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", "\[Rule]", " ", 
     RowBox[{"c", " ", 
      RowBox[{
       OverscriptBox["H", "^"], "[", 
       RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}]}], " ", "//", " ", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", " ", 
      RowBox[{"Assumptions", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", ">", "0"}], ",", " ", 
         RowBox[{"\[CapitalEpsilon]", ">", "0"}]}], "}"}]}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.7073190256419954`*^9, 3.7073190847971325`*^9}, {
  3.707319135098423*^9, 3.7073191703765783`*^9}, {3.7073192025255585`*^9, 
  3.707319240149623*^9}, {3.7073193576744905`*^9, 3.707319403945736*^9}, {
  3.7073204940056176`*^9, 3.707320501244255*^9}, {3.7073213088264294`*^9, 
  3.707321309545864*^9}},ExpressionUUID->"52f65e66-ba8d-4e77-ac27-\
38721814104a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalEpsilon]", " ", 
   RowBox[{"\[Phi]", "[", "r", "]"}]}], "\[Equal]", 
  RowBox[{
   OverscriptBox["H", "^"], "[", 
   RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.7073190743476677`*^9, 3.7073190976202073`*^9}, 
   3.707319171614408*^9, 3.707319208965479*^9, 3.7073192477282743`*^9, {
   3.707320502062392*^9, 3.7073205076748047`*^9}, 3.707320995370002*^9, 
   3.707321110353335*^9, 3.7073211517674513`*^9, {3.7073213129430094`*^9, 
   3.707321324829071*^9}, 3.7073277729820285`*^9, 3.7073279114302764`*^9, 
   3.707328236054235*^9, 3.70733388833095*^9, 3.7073348423887596`*^9, 
   3.7073381097516203`*^9},ExpressionUUID->"108d505e-4930-4506-86c9-\
d47252e1e64a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Operators and eigenfunctions", "Subsection",
 CellChangeTimes->{{3.7073197690121984`*^9, 3.707319770687677*^9}, {
  3.707320371416847*^9, 
  3.707320375662941*^9}},ExpressionUUID->"6fe4d653-0b9c-4a82-8ef4-\
ca19f38d7dd8"],

Cell[TextData[{
 "For a single particle in a scalar external potential ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "626aae26-6466-4406-a73d-d90a80df703c"],
 " described in a non-inertial, non-relativistic frame, the Hamiltonian takes \
the form"
}], "Text",
 CellChangeTimes->{{3.7073197735227547`*^9, 3.707319811574335*^9}, {
  3.707319844234581*^9, 3.7073198934169974`*^9}, {3.7073202639306774`*^9, 
  3.7073202670106*^9}, {3.7073207006485534`*^9, 
  3.707320700909803*^9}},ExpressionUUID->"5d9ce4ef-f7ca-46ef-bb75-\
d40a09bbbf0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hamiltonianSub", " ", "=", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{
    OverscriptBox["H", "^"], "[", "\[Psi]_", "]"}], " ", "\[RuleDelayed]", 
   " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], 
     RowBox[{"Laplacian", "[", 
      RowBox[{"\[Psi]", ",", " ", 
       RowBox[{"{", "r", "}"}]}], "]"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"V", " ", "[", "r", "]"}], "\[Psi]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.707319899253714*^9, 3.707319916141107*^9}, {
  3.7073199687907114`*^9, 3.707320000642387*^9}, {3.7073200702150707`*^9, 
  3.70732011215499*^9}, {3.7073201614701414`*^9, 3.707320163819599*^9}, {
  3.7073202462348824`*^9, 3.7073202598475714`*^9}, {3.7073204617349133`*^9, 
  3.7073204622777367`*^9}, {3.707320554165726*^9, 3.707320560201461*^9}, {
  3.7073206980979223`*^9, 3.7073207106125135`*^9}, {3.7073207803600006`*^9, 
  3.707320823482685*^9}},ExpressionUUID->"1ab279d2-52b7-49e3-8dbd-\
88488b1f5363"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   OverscriptBox["H", "^"], "[", "\[Psi]_", "]"}], "\[RuleDelayed]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     TemplateBox[{"\[Psi]",RowBox[{"{", "r", "}"}]},
      "Laplacian"], "2"]}], "+", 
   RowBox[{
    RowBox[{"V", "[", "r", "]"}], " ", "\[Psi]"}]}]}]], "Output",
 CellChangeTimes->{{3.7073200013871794`*^9, 3.7073200245990257`*^9}, {
   3.7073200931450653`*^9, 3.707320112857131*^9}, {3.7073201680678163`*^9, 
   3.707320177579537*^9}, {3.7073202482993097`*^9, 3.707320274971459*^9}, 
   3.7073204625746956`*^9, {3.7073205612531033`*^9, 3.707320567581925*^9}, {
   3.7073207026798687`*^9, 3.707320711056515*^9}, 3.707320828099593*^9, 
   3.70732777299903*^9, 3.7073279114477777`*^9, 3.7073282360787354`*^9, 
   3.7073338883469505`*^9, 3.707334842405759*^9, 
   3.7073381097716208`*^9},ExpressionUUID->"e0c238fc-8082-406f-8958-\
aea004ba3775"]
}, Open  ]],

Cell["\<\
where the Laplacian gives an analog of kinetic energy. The time-dependent \
Schrodinger equation becomes\
\>", "Text",
 CellChangeTimes->{{3.7073202090442724`*^9, 3.707320236025022*^9}, {
  3.707320430515175*^9, 
  3.7073204770117726`*^9}},ExpressionUUID->"54ea2302-bf3d-4963-90d5-\
5920fbb907ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"schrodEq", "[", "\[Psi]", "]"}], "  ", "/.", " ", 
  "hamiltonianSub"}]], "Input",
 CellChangeTimes->{{3.707320014573167*^9, 3.7073200264215565`*^9}, {
  3.7073201330425105`*^9, 3.707320133163226*^9}, {3.7073201794188347`*^9, 
  3.7073201812233086`*^9}, {3.7073208318523965`*^9, 
  3.707320833854968*^9}},ExpressionUUID->"cec64203-cbc4-4aeb-9735-\
fbf423897af1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox["\[Psi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "t"}], "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", "r", "]"}], " ", 
    RowBox[{"\[Psi]", "[", 
     RowBox[{"r", ",", "t"}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{
     SuperscriptBox["\[Psi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "t"}], "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.707320020761911*^9, 3.7073200266052055`*^9}, {
   3.7073201187793045`*^9, 3.7073201335680795`*^9}, {3.7073201720990887`*^9, 
   3.707320181751314*^9}, {3.7073202509803786`*^9, 3.707320279255124*^9}, 
   3.707320465439288*^9, {3.707320564679715*^9, 3.7073205687653165`*^9}, {
   3.707320704499175*^9, 3.7073207136848106`*^9}, 3.707320834204144*^9, 
   3.707327773016529*^9, 3.7073279114652796`*^9, 3.707328236107735*^9, 
   3.7073338883629503`*^9, 3.707334842422759*^9, 
   3.707338109785626*^9},ExpressionUUID->"856c826f-654e-4a28-8c9c-\
4ceb3cfe4e37"]
}, Open  ]],

Cell["\<\
and the time-independent Schrodinger equation of the eigenfunctions becomes\
\>", "Text",
 CellChangeTimes->{{3.7073204025021896`*^9, 3.7073204193006573`*^9}, {
  3.707320519123188*^9, 
  3.7073205306519375`*^9}},ExpressionUUID->"36691e56-7acc-4802-9af6-\
2ad825c40096"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eigfEq", "[", "\[Phi]_", "]"}], " ", "=", "\[IndentingNewLine]", 
  "\t", 
  RowBox[{
   RowBox[{"eigfGeneralEq", "[", "\[Phi]", "]"}], " ", "/.", " ", 
   "hamiltonianSub"}]}]], "Input",
 CellChangeTimes->{{3.7073205325932503`*^9, 3.7073205374410844`*^9}, {
  3.707320734894993*^9, 3.707320736386239*^9}, {3.707320839317745*^9, 
  3.7073208413237514`*^9}, {3.7073212847206173`*^9, 3.7073212897283*^9}, {
  3.707321365868603*^9, 
  3.707321414238538*^9}},ExpressionUUID->"c63030e1-5e2b-4462-87c6-\
249fd1d47342"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalEpsilon]", " ", 
   RowBox[{"\[Phi]", "[", "r", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", "r", "]"}], " ", 
    RowBox[{"\[Phi]", "[", "r", "]"}]}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{{3.7073213688510222`*^9, 3.707321386708829*^9}, 
   3.70732777303253*^9, 3.7073279114827785`*^9, 3.7073282361272345`*^9, 
   3.7073338883809505`*^9, 3.7073348426177835`*^9, 
   3.7073381098021207`*^9},ExpressionUUID->"d0023091-8154-418f-9bd7-\
ff195ff1d3fb"]
}, Open  ]],

Cell[TextData[{
 "Every possible wavefunction instance of the system can be constructed from \
a linear superposition of the eigenfunctions ",
 Cell[BoxData[
  SubscriptBox["\[Phi]", "n"]],
  CellChangeTimes->{
   3.7073223123394923`*^9, {3.7073223844139256`*^9, 3.7073224085421534`*^9}, 
    3.707322480228262*^9},ExpressionUUID->
  "abe4e73d-a6b5-4b92-9ec0-d58b75a51d84"],
 ","
}], "Text",
 CellChangeTimes->{{3.707321425315091*^9, 3.7073214684782314`*^9}, {
  3.707322239395274*^9, 3.707322239611866*^9}, {3.7073223695384192`*^9, 
  3.7073223702030764`*^9}, {3.7073226903046236`*^9, 3.7073227254369574`*^9}, {
  3.7073228523798046`*^9, 
  3.707322853558221*^9}},ExpressionUUID->"1302c7dc-ec6e-4cb4-b220-\
c1062c47a207"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", "r", "]"}], " ", "\[Rule]", " ", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "n"], " ", 
     RowBox[{
      SubscriptBox["\[Phi]", "n"], "[", "r", "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n", ",", " ", "0", ",", " ", "\[Infinity]"}], "}"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.707321489749981*^9, 
  3.7073215961706047`*^9}},ExpressionUUID->"55556e38-cb45-48a5-9c86-\
7c395abe1f2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", "r", "]"}], "\[Rule]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "0"}], "\[Infinity]"], 
   RowBox[{
    SubscriptBox["c", "n"], " ", 
    RowBox[{
     SubscriptBox["\[Phi]", "n"], "[", "r", "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.7073214977918253`*^9, 3.7073215574968195`*^9}, 
   3.7073215964072733`*^9, 3.7073217019781413`*^9, 3.7073223093321624`*^9, 
   3.707322473747759*^9, 3.70732777304803*^9, 3.707327911500778*^9, 
   3.7073282361457343`*^9, 3.7073338883984604`*^9, 3.707334842633784*^9, 
   3.707338109819623*^9},ExpressionUUID->"b6776b68-178b-4b3b-8779-\
9be4978c530d"]
}, Open  ]],

Cell[TextData[{
 "each of which merely evolve in time by a complex oscillation at a rate \
proportional to their energy eigenvalues ",
 Cell[BoxData[
  SubscriptBox["\[CapitalEpsilon]", "n"]],
  CellChangeTimes->{{3.707320924322996*^9, 3.7073209275711007`*^9}, {
   3.7073210052756395`*^9, 3.707321037146104*^9}, {3.7073211153399067`*^9, 
   3.707321131926406*^9}, {3.707321162860402*^9, 3.70732116410929*^9}, {
   3.7073216096192527`*^9, 3.707321610533577*^9}, {3.707321644958517*^9, 
   3.7073217108163652`*^9}, {3.7073220906372643`*^9, 3.7073221013493543`*^9}},
  ExpressionUUID->"020b4474-dc5d-4c9b-8602-42de2b5b7f5c"],
 "."
}], "Text",
 CellChangeTimes->{{3.707322043185197*^9, 3.70732208518964*^9}, 
   3.707322128190712*^9, {3.7073226863946996`*^9, 
   3.707322707287566*^9}},ExpressionUUID->"99e8acef-5b91-4fb9-85dd-\
d99d0ba08a0c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eigTimeForm", "[", 
   SubscriptBox["\[Phi]", "n"], "]"}], " ", "/.", " ", 
  RowBox[{"\[CapitalEpsilon]", " ", "\[Rule]", " ", 
   SubscriptBox["\[CapitalEpsilon]", "n"]}]}]], "Input",
 CellChangeTimes->{{3.707320924322996*^9, 3.7073209275711007`*^9}, {
  3.7073210052756395`*^9, 3.707321037146104*^9}, {3.7073211153399067`*^9, 
  3.707321131926406*^9}, {3.707321162860402*^9, 3.70732116410929*^9}, {
  3.7073216096192527`*^9, 3.707321610533577*^9}, {3.707321644958517*^9, 
  3.7073217108163652`*^9}, {3.7073220906372643`*^9, 
  3.7073221013493543`*^9}},ExpressionUUID->"0228ea9c-e896-4fdd-871e-\
c1f94949b18b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Phi]", "n"], "[", 
   RowBox[{"r", ",", "t"}], "]"}], "\[Rule]", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
     SubscriptBox["\[CapitalEpsilon]", "n"]}]], " ", 
   RowBox[{
    SubscriptBox["\[Phi]", "n"], "[", "r", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.707320927907052*^9, {3.707321002478088*^9, 3.7073210376166644`*^9}, {
   3.707321119561737*^9, 3.707321132287935*^9}, 3.7073211930391088`*^9, 
   3.707321611057225*^9, 3.707321653713292*^9, {3.7073216890590267`*^9, 
   3.7073217111007786`*^9}, 3.7073221017416444`*^9, 3.7073223106793966`*^9, 
   3.70732247916463*^9, 3.7073277730635304`*^9, 3.707327911518279*^9, 
   3.7073282361622343`*^9, 3.707333888415559*^9, 3.707334842647784*^9, 
   3.707338109836625*^9},ExpressionUUID->"d9180688-9168-4e45-a8a6-\
1006563bed5f"]
}, Open  ]],

Cell["\<\
Since the Schrodinger equation is linear, the total wavefunction evolves like \
the sum of the simple eigenfunction dynamics,\
\>", "Text",
 CellChangeTimes->{{3.707322503061156*^9, 3.707322532225828*^9}, {
  3.7073228645864005`*^9, 
  3.707322917923467*^9}},ExpressionUUID->"6c3390ec-ed8a-48c9-873e-\
6e37fabfd4bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"r", ",", " ", "t"}], "]"}], " ", "\[Rule]", "  ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "0"}], "\[Infinity]"], 
    RowBox[{
     SubscriptBox["c", "n"], " ", 
     RowBox[{
      SubscriptBox["\[Phi]", "n"], "[", 
      RowBox[{"r", ",", " ", "t"}], "]"}]}]}]}], " ", "/.", " ", 
  "%"}]], "Input",
 CellChangeTimes->{{3.707322150448507*^9, 3.707322155800543*^9}, {
   3.7073221903716507`*^9, 3.707322192332011*^9}, {3.707322279784107*^9, 
   3.7073223050755386`*^9}, {3.707322376193919*^9, 3.707322407526409*^9}, 
   3.707322471244353*^9},ExpressionUUID->"bd6dfca2-63d3-47ed-99f8-\
9b0d52bb88e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"r", ",", "t"}], "]"}], "\[Rule]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "0"}], "\[Infinity]"], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
      SubscriptBox["\[CapitalEpsilon]", "n"]}]], " ", 
    SubscriptBox["c", "n"], " ", 
    RowBox[{
     SubscriptBox["\[Phi]", "n"], "[", "r", "]"}]}]}]}]], "Output",
 CellChangeTimes->{
  3.7073223123394923`*^9, {3.7073223844139256`*^9, 3.7073224085421534`*^9}, 
   3.707322480228262*^9, 3.7073277730780306`*^9, 3.707327911537279*^9, 
   3.7073282361797338`*^9, 3.707333888432559*^9, 3.707334842662784*^9, 
   3.7073381098551207`*^9},ExpressionUUID->"059f82e2-4910-4a24-8efa-\
7c2d26ed5abd"]
}, Open  ]],

Cell[TextData[{
 "where (normalised) ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["c", "n"], " "}]],
  CellChangeTimes->{
   3.7073223123394923`*^9, {3.7073223844139256`*^9, 3.7073224085421534`*^9}, 
    3.707322480228262*^9},ExpressionUUID->
  "2ead33db-a375-404b-99da-f42de6d2d3d6"],
 "are trivially found by projecting the initial wavefunction \[Psi][r, 0] \
onto the ",
 StyleBox["orthonormal",
  FontSlant->"Italic"],
 " set {",
 Cell[BoxData[
  RowBox[{"n", ":", 
   SubscriptBox["\[Phi]", "n"]}]],
  CellChangeTimes->{
   3.7073223123394923`*^9, {3.7073223844139256`*^9, 3.7073224085421534`*^9}, 
    3.707322480228262*^9},ExpressionUUID->
  "be4af610-b956-4b94-9fb4-08ed0eb87459"],
 "}, having first calculated the spectrum of the particular Hamiltonian."
}], "Text",
 CellChangeTimes->{{3.707322631418338*^9, 3.707322654602172*^9}, {
  3.707322767387501*^9, 3.707322816842628*^9}, {3.7073229827254257`*^9, 
  3.707323015869383*^9}, {3.7073230656556664`*^9, 3.7073230693478336`*^9}, {
  3.7073248440482283`*^9, 3.707324845976152*^9}, {3.707326411600178*^9, 
  3.7073264130394173`*^9}},ExpressionUUID->"50346113-d6a0-44de-a20c-\
ac79324380d2"],

Cell[TextData[{
 "The quantum harmonic oscillator is an example of a simple Hamiltonian \
system with an interesting family of eigenfunctions, which can be used to \
propagate a wavefunction through time without numerically solving the ",
 StyleBox["time-dependent",
  FontSlant->"Italic"],
 " Schrodinger equation."
}], "Text",
 CellChangeTimes->{{3.707323071251892*^9, 3.7073230980857344`*^9}, {
  3.7073232154068947`*^9, 
  3.7073232743272123`*^9}},ExpressionUUID->"25a9b4c8-d5a5-45c0-a641-\
c5bb2655402f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Quantum Harmonic Oscillator", "Section",
 CellChangeTimes->{{3.7071871058069887`*^9, 
  3.7071871104476447`*^9}},ExpressionUUID->"7aec4aae-46d1-4b18-bcab-\
3d9424211da3"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"propping", " ", "modes"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7072204712322307`*^9, 
  3.7072204746518373`*^9}},ExpressionUUID->"f14b494d-7caf-448c-b601-\
8ec62c49c1db"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"decomposing", " ", "into", " ", "modes"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.707220475747723*^9, 
  3.707220478119051*^9}},ExpressionUUID->"4ec2dedb-fa1d-4f65-930e-\
5e1e6c3157da"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"coherent", " ", "mode", " ", "by", " ", "translation"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7072204792185397`*^9, 
  3.7072204845486684`*^9}},ExpressionUUID->"7f176cb6-18b4-4d05-9742-\
0982c25ad50b"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"decomposing", " ", "coherent", " ", "onto", " ", "modes"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7072204855850754`*^9, 
  3.707220492302196*^9}},ExpressionUUID->"a1e1f6eb-b9be-4ffb-a9a6-\
29b6a545e74b"],

Cell[CellGroupData[{

Cell["Finding the eigenfunctions", "Subsection",
 CellChangeTimes->{{3.7073241603746758`*^9, 
  3.7073241687369375`*^9}},ExpressionUUID->"9d7a442d-3f0b-41d5-bbb9-\
e7b265c99c38"],

Cell["\<\
Consider a simple one-dimensional quadratic trapping potential.\
\>", "Text",
 CellChangeTimes->{{3.7073231324354725`*^9, 3.7073231397687516`*^9}, {
  3.7073232935402346`*^9, 3.7073232971393514`*^9}, {3.7073233388351693`*^9, 
  3.7073233441646957`*^9}, {3.7073236792888346`*^9, 3.7073236863083973`*^9}, {
  3.7073238099046764`*^9, 3.7073238196599755`*^9}, {3.7073238710858493`*^9, 
  3.707323871253942*^9}, {3.707323997212784*^9, 
  3.7073240053007107`*^9}},ExpressionUUID->"3af405dc-ee7d-4e86-a493-\
711d036032e5"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", "x", "]"}], " ", "\[Rule]", "  ", 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox["x", "2"]}]}], " ", ";"}]}]], "Input",
 CellChangeTimes->{{3.7073236010427637`*^9, 3.707323652567783*^9}, {
  3.7073237187987404`*^9, 3.7073237191068316`*^9}, {3.7073237506662197`*^9, 
  3.707323759164918*^9}, {3.707323948965661*^9, 
  3.70732397251861*^9}},ExpressionUUID->"00b8eba9-83ee-4632-bf46-\
947d9811ca17"],

Cell["The corresponding time-independent Schrodinger equation is", "Text",
 CellChangeTimes->{
  3.7073238253615675`*^9, {3.707323873565697*^9, 3.7073239129279065`*^9}, {
   3.707324017551468*^9, 
   3.707324018919978*^9}},ExpressionUUID->"4c23512c-03cb-4b36-a069-\
0b12aac78fb6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eigfEq", "[", 
    SubscriptBox["\[Phi]", "n"], "]"}], " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", "\[Rule]", " ", "x"}], ",", " ", 
     RowBox[{"\[CapitalEpsilon]", " ", "->", " ", 
      SubscriptBox["\[CapitalEpsilon]", "n"]}]}], "}"}]}], " ", "/.", " ", 
  "%"}]], "Input",
 CellChangeTimes->{{3.7073237688791265`*^9, 3.7073238034146476`*^9}, {
  3.7073239790902214`*^9, 3.707323980103424*^9}, {3.7073241234353075`*^9, 
  3.7073241272530565`*^9}},ExpressionUUID->"c4554190-3b05-442f-bab6-\
4aec0fb66867"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalEpsilon]", "n"], " ", 
   RowBox[{
    SubscriptBox["\[Phi]", "n"], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["x", "2"], " ", 
    RowBox[{
     SubscriptBox["\[Phi]", "n"], "[", "x", "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Phi]", "n"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.7073237522702656`*^9, 3.707323793609208*^9}, 
   3.70732386556985*^9, {3.7073239754132166`*^9, 3.7073239839701853`*^9}, {
   3.7073240688308783`*^9, 3.707324130386172*^9}, 3.707324616274203*^9, 
   3.7073250403192997`*^9, 3.70732525617282*^9, 3.707325900831597*^9, 
   3.7073259479448195`*^9, 3.707325988805461*^9, 3.707326073763112*^9, 
   3.707326154682816*^9, 3.707326197272543*^9, {3.7073265589565625`*^9, 
   3.7073265895739584`*^9}, 3.707327175799568*^9, 3.7073277731665297`*^9, 
   3.7073279116342783`*^9, 3.707328236289735*^9, 3.707333888521827*^9, 
   3.7073348427467995`*^9, 3.7073355196575212`*^9, 
   3.7073381099336185`*^9},ExpressionUUID->"f3fac970-765e-4ec8-90ab-\
da3ea7ada447"]
}, Open  ]],

Cell[TextData[{
 "which is solved for the energy eigenfunctions ",
 Cell[BoxData[
  SubscriptBox["\[Phi]", "n"]],
  CellChangeTimes->{{3.7073237522702656`*^9, 3.707323793609208*^9}, 
    3.70732386556985*^9},ExpressionUUID->
  "2ffbd343-1c10-4f4c-af1e-c9c1ea29c60d"],
 " and eigenvalues ",
 Cell[BoxData[
  SubscriptBox["\[CapitalEpsilon]", "n"]],
  CellChangeTimes->{{3.7073237522702656`*^9, 3.707323793609208*^9}, 
    3.70732386556985*^9},ExpressionUUID->
  "3ed18141-8296-43ed-91be-cd7d8c067f47"],
 "."
}], "Text",
 CellChangeTimes->{{3.7073239164263887`*^9, 3.7073239359291015`*^9}, 
   3.7073245374014*^9},ExpressionUUID->"668c3a52-97dd-4f75-8658-864a90cecb3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolveValue", "[", 
   RowBox[{"%", " ", ",", " ", 
    RowBox[{
     SubscriptBox["\[Phi]", "n"], "[", "x", "]"}], ",", " ", "x"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.707324038823475*^9, 
  3.707324113938329*^9}},ExpressionUUID->"604d0fac-c5e1-4803-9c9a-\
312214228b87"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"C", "[", "2", "]"}], " ", 
   RowBox[{"ParabolicCylinderD", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[CapitalEpsilon]", "n"]}]}], ")"}]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox["2"], " ", "x"}]}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"C", "[", "1", "]"}], " ", 
   RowBox[{"ParabolicCylinderD", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[CapitalEpsilon]", "n"]}]}], ")"}]}], ",", 
     RowBox[{
      SqrtBox["2"], " ", "x"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7073240557028127`*^9, 3.707324101503847*^9, 3.707324133760033*^9, {
   3.7073246118779135`*^9, 3.707324617690323*^9}, 3.707325041306134*^9, 
   3.7073252561928205`*^9, 3.707325900850597*^9, 3.70732594796482*^9, 
   3.7073259888254547`*^9, 3.70732607378261*^9, 3.7073261547053175`*^9, 
   3.707326197293044*^9, {3.7073265589785657`*^9, 3.70732659050263*^9}, 
   3.7073271758215675`*^9, 3.70732777318303*^9, 3.7073279116572776`*^9, 
   3.7073282363112345`*^9, 3.707333888541828*^9, 3.7073348427627993`*^9, 
   3.7073355196755285`*^9, 
   3.7073381099531183`*^9},ExpressionUUID->"dffc1d22-adbf-4763-b25e-\
a5d321c3a31a"]
}, Open  ]],

Cell[TextData[{
 "Our problem is underspecified, with two arbitrary constants (",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "[", "1", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ff8028c7-354e-45c7-9299-55efc006d2be"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "[", "2", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ab8732cc-fcd4-4830-b93b-113680ceb9e6"],
 ") and one normalisation condition (",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Integral]", 
    RowBox[{"|", 
     SubscriptBox["\[Phi]", "n"], 
     SuperscriptBox["|", "2"], "dx"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "82329cc2-d66a-478d-8954-a8a7a84e6dd0"],
 " = 1). The representation of the energy eigenbasis is therefore not unique. \
We\[CloseCurlyQuote]ll arbitrarily pick one that\[CloseCurlyQuote]s entirely \
real."
}], "Text",
 CellChangeTimes->{{3.707324356688929*^9, 3.7073243589703484`*^9}, {
  3.7073244015092535`*^9, 3.7073244929078417`*^9}, {3.7073245534049797`*^9, 
  3.7073245890061483`*^9}, {3.7073247267660027`*^9, 
  3.7073247481234264`*^9}},ExpressionUUID->"45c51547-178f-4691-98e1-\
5242d3481ef8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"oscillator\[Phi]", "[", "n_", "]"}], " ", "=", 
  "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"%", " ", "/.", " ", 
    RowBox[{
     RowBox[{"C", "[", "2", "]"}], " ", "\[Rule]", " ", "0"}]}], " ", "//", 
   " ", "FunctionExpand"}]}]], "Input",
 CellChangeTimes->{{3.707324593587949*^9, 3.70732460806277*^9}, {
  3.7073259249874506`*^9, 3.7073259430833035`*^9}, {3.7073265412976017`*^9, 
  3.7073265421157007`*^9}},ExpressionUUID->"6a6bb49d-6174-46b4-8162-\
ae67edc15938"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       SubscriptBox["\[CapitalEpsilon]", "n"]}]}], ")"}]}]], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"]}]], " ", 
  RowBox[{"C", "[", "1", "]"}], " ", 
  RowBox[{"HermiteH", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["\[CapitalEpsilon]", "n"]}]}], ")"}]}], ",", "x"}], 
   "]"}]}]], "Output",
 CellChangeTimes->{{3.707324596419882*^9, 3.7073246196115503`*^9}, 
   3.7073250429834146`*^9, 3.707325256211823*^9, 3.7073259008695946`*^9, 
   3.707325947983822*^9, 3.7073259888464713`*^9, 3.7073260738006124`*^9, 
   3.7073261547248154`*^9, 3.7073261973125424`*^9, {3.707326558997078*^9, 
   3.707326591447912*^9}, 3.7073271758395677`*^9, 3.707327773200029*^9, 
   3.7073279116782784`*^9, 3.7073282363302355`*^9, 3.707333888559827*^9, 
   3.707334842779804*^9, 3.7073355196925325`*^9, 
   3.707338109977623*^9},ExpressionUUID->"30329b41-ef49-4f1b-ac40-\
9812e874e082"]
}, Open  ]],

Cell["\<\
Since Hermite polynomials must have integer degree, we\[CloseCurlyQuote]ve \
found the discretized energy eigenvalues.\
\>", "Text",
 CellChangeTimes->{{3.7073247728428974`*^9, 3.7073247812919145`*^9}, {
  3.707324951819291*^9, 3.7073249546350565`*^9}, {3.7073252242729244`*^9, 
  3.70732524840666*^9}, {3.7073258344822097`*^9, 
  3.7073258397659197`*^9}},ExpressionUUID->"9c5c295d-bf75-47a5-af63-\
516fa7a12f6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "\[Equal]", " ", 
   RowBox[{
    RowBox[{"Cases", "[", 
     RowBox[{"%", ",", " ", 
      RowBox[{
       RowBox[{"HermiteH", "[", 
        RowBox[{"n_", ",", " ", "__"}], "]"}], " ", "\[Rule]", " ", "n"}]}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "  ", "//", "  ", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"#", ",", " ", 
     SubscriptBox["\[CapitalEpsilon]", "n"]}], "]"}], " ", "&"}]}]], "Input",
 CellChangeTimes->{{3.7073249798768935`*^9, 3.707324991131624*^9}, {
  3.7073250473172693`*^9, 3.707325063753502*^9}, {3.7073251335958176`*^9, 
  3.7073251934158583`*^9}, {3.707325250914392*^9, 3.7073252515513906`*^9}, {
  3.7073258699297724`*^9, 3.7073258963392663`*^9}, {3.7073261901619964`*^9, 
  3.7073261904107265`*^9}, {3.7073265459971104`*^9, 3.7073265526654015`*^9}, {
  3.707335512967019*^9, 3.707335516224392*^9}, {3.7073358052774534`*^9, 
  3.707335807583267*^9}},ExpressionUUID->"adfe9040-111b-46d2-b18a-\
160a3ed89893"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["\[CapitalEpsilon]", "n"], "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "n"}]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7073249914444427`*^9, 3.7073250640703936`*^9, 3.707325097805402*^9, {
   3.7073251479030185`*^9, 3.707325193944135*^9}, {3.7073252521299486`*^9, 
   3.707325256230827*^9}, {3.707325896939336*^9, 3.7073259008885994`*^9}, 
   3.707325947999827*^9, 3.707325988863978*^9, 3.707326073821613*^9, 
   3.7073261547423153`*^9, {3.707326191601271*^9, 3.7073261973320427`*^9}, {
   3.707326559013584*^9, 3.7073265933326817`*^9}, 3.707327175858575*^9, 
   3.7073277732170277`*^9, 3.707327911698779*^9, 3.707328236350234*^9, 
   3.707333888578828*^9, 3.7073348427978115`*^9, 3.7073355197105284`*^9, 
   3.707338110037119*^9},ExpressionUUID->"a3a96322-5813-4f89-a166-\
0f49faa52690"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"oscillator\[Phi]", " ", "[", "n_", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"oscillator\[Phi]", "[", "n", "]"}], " ", "/.", " ", 
   RowBox[{"%", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",ExpressionUUID->"228c2637-\
281e-444b-8172-81cb81eff827"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", 
   RowBox[{
    RowBox[{"-", "n"}], "/", "2"}]], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"]}]], " ", 
  RowBox[{"C", "[", "1", "]"}], " ", 
  RowBox[{"HermiteH", "[", 
   RowBox[{"n", ",", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.7073249914444427`*^9, 3.7073250640703936`*^9, 3.707325097805402*^9, {
   3.7073251479030185`*^9, 3.707325193944135*^9}, {3.7073252521299486`*^9, 
   3.707325256230827*^9}, {3.707325896939336*^9, 3.7073259008885994`*^9}, 
   3.707325947999827*^9, 3.707325988863978*^9, 3.707326073821613*^9, 
   3.7073261547423153`*^9, {3.707326191601271*^9, 3.7073261973320427`*^9}, {
   3.707326559013584*^9, 3.7073265933326817`*^9}, 3.707327175858575*^9, 
   3.7073277732170277`*^9, 3.707327911698779*^9, 3.707328236350234*^9, 
   3.707333888578828*^9, 3.70733484280081*^9, 3.7073355197275305`*^9, 
   3.707338110052622*^9},ExpressionUUID->"07f53997-be11-4732-964e-\
5282499c0ac8"]
}, Open  ]],

Cell[TextData[{
 "Finally, we solve for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "[", "1", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b4fec3a2-ae2b-4e33-8d1e-d74ec29ad4e0"],
 " by asserting normalisation. Analytic solution is expensive, even for \
particular n; we\[CloseCurlyQuote]ll instead employ numerical approximation."
}], "Text",
 CellChangeTimes->{{3.707326227204237*^9, 3.7073262366551433`*^9}, {
   3.707326276572589*^9, 3.707326291181761*^9}, 3.7073264604587097`*^9, {
   3.707326747519968*^9, 
   3.7073268415508003`*^9}},ExpressionUUID->"73ef2d14-56c8-4bb7-8a52-\
9c88b959368a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"oscillator\[Phi]", "[", "n_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"oscillator\[Phi]", "[", "n", "]"}], " ", "/.", " ", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], " ", "\[Rule]", " ", "1"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oscillator\[Phi]", "[", 
   RowBox[{"n_", ",", " ", "x_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"oscillator\[Phi]", "[", 
    RowBox[{"n", ",", " ", "x"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"oscillator\[Phi]", "[", "n", "]"}], "  ", "/", " ", 
    SqrtBox[
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"oscillator\[Phi]", "[", "n", "]"}], "]"}], "2"], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", 
         RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
      "]"}]]}]}]}]}], "Input",
 CellChangeTimes->{{3.707326844440197*^9, 3.707326948093946*^9}, {
   3.7073269928882093`*^9, 3.7073270010725694`*^9}, {3.7073270651391754`*^9, 
   3.7073271639124517`*^9}, {3.707327457794071*^9, 3.7073274729644327`*^9}, 
   3.7073275934737544`*^9},ExpressionUUID->"2e26f7b2-f6bf-4a0c-b493-\
cd356a2dae3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\[IndentingNewLine]", "Code"], 
  RowBox[{
   StyleBox[
    RowBox[{"Legended", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"plotWavefunction", "[", 
         RowBox[{
          RowBox[{"oscillator\[Phi]", "[", 
           RowBox[{"n", ",", " ", "x"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", 
            RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", "False", ",", 
          " ", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            SubscriptBox["\[Phi]", "n"], "]"}], "2"], ",", " ", 
          RowBox[{"\"\<\[Phi]\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "n", "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.6"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"n", ",", "0"}], "}"}], ",", " ", "0", ",", "15", ",", " ",
           "1"}], "}"}]}], "\n", "\t", "]"}], ",", " ", "\n", "\t", 
      RowBox[{"colorBar", "[", "\"\<arg[\[Phi]n]\>\"", "]"}]}], "\n", "]"}], 
    "Code"], "\[IndentingNewLine]", 
   RowBox[{"AutoCollapse", "[", "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7073276040146265`*^9, 3.707327663788639*^9}, {
  3.7073277065250196`*^9, 3.707327710054347*^9}, {3.7073277938425255`*^9, 
  3.7073278249179*^9}, {3.7073279500712557`*^9, 3.707328015455283*^9}, {
  3.707328057086187*^9, 3.707328057394689*^9}, {3.707328156636509*^9, 
  3.7073281678074455`*^9}, {3.7073326423118134`*^9, 3.7073326423998127`*^9}, {
  3.7073326730015335`*^9, 3.7073326734653955`*^9}, {3.707333535399763*^9, 
  3.707333551050355*^9}, {3.7073336032455072`*^9, 3.7073336723936377`*^9}, {
  3.7073339183284116`*^9, 3.7073339295440474`*^9}, {3.707335011310569*^9, 
  3.7073350251486235`*^9}, {3.7073350761595325`*^9, 3.70733508785701*^9}, {
  3.7073351313288956`*^9, 3.7073352037466555`*^9}, {3.7073352733443007`*^9, 
  3.707335295019081*^9}, {3.7073353346400185`*^9, 3.7073353541226373`*^9}, {
  3.7073368739433117`*^9, 
  3.707336874126744*^9}},ExpressionUUID->"febf58de-4f5a-44ac-9137-\
e10f98be7e5a"],

Cell[BoxData[
 TemplateBox[{TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`n$$ = 10, Typeset`show$$ = True, 
       Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{{
           Hold[$CellContext`n$$], 0}, 0, 15, 1}}, 
       Typeset`size$$ = {360., {123., 129.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       True, $CellContext`n$3391418$$ = 0}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`n$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`n$$, $CellContext`n$3391418$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> $CellContext`plotWavefunction[
          $CellContext`oscillator\[Phi][$CellContext`n$$, $CellContext`x], \
{$CellContext`x, -5, 5}, False, Abs[
            Subscript[$CellContext`\[Phi], $CellContext`n$$]]^2, 
          StringJoin["\[Phi]", 
           ToString[$CellContext`n$$]], {0, 0.6}], 
        "Specifications" :> {{{$CellContext`n$$, 0}, 0, 15, 1}}, 
        "Options" :> {}, "DefaultOptions" :> {}], 
       ImageSizeCache -> {411., {169., 176.}}, SingleEvaluation -> True], 
      Deinitialization :> None, DynamicModuleValues :> {}, 
      SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> True,
      StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]],FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"arg[\[Phi]n]\"", {FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False]}, {
              GraphicsBox[{{}, {}, 
                RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
                 "], {{
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}}], {Antialiasing -> False, 
                 AbsoluteThickness[0.1], 
                 Directive[
                  Opacity[0.3], 
                  GrayLevel[0]], 
                 LineBox[
                  NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                   7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                   112.5}, {7.5, -112.5}}]]}, {
                 CapForm[None], {}}, {Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
               Scaled[0.02], PlotRange -> All, Frame -> True, 
               FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
               Opacity[0], FrameTicksStyle -> Opacity[0], 
               ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
     "BarLegend", DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"Rainbow\"", ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Phi]n]\""}], ",", 
          RowBox[{"\"Ticks\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"-", "3.14`"}], ",", "0", ",", "3.14`"}], "}"}]}], 
          ",", 
          RowBox[{"\"TickLabels\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"\"-\[Pi]\"", ",", "\"0\"", ",", "\"\[Pi]\""}], 
              "}"}]}]}], "]"}]& )], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.707328159352488*^9, 3.7073281685225725`*^9}, 
   3.7073282364102345`*^9, 3.7073326431772532`*^9, 3.7073326738431206`*^9, {
   3.707333536673774*^9, 3.7073336731034737`*^9}, 3.7073338888602247`*^9, 
   3.7073339320147023`*^9, 3.707334649978128*^9, 3.7073347248274865`*^9, 
   3.7073348433217535`*^9, 3.7073350258378916`*^9, {3.707335084747475*^9, 
   3.70733508825305*^9}, 3.707335204732996*^9, {3.7073352767935495`*^9, 
   3.707335295534442*^9}, {3.707335336439607*^9, 3.707335354935237*^9}, 
   3.7073355198515463`*^9, 3.7073368750067286`*^9, 
   3.7073381101821203`*^9},ExpressionUUID->"39f21796-7b49-4417-9ca0-\
b5cbf9fa1df5"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decomposing ", "Subsection",
 CellChangeTimes->{{3.707337194511058*^9, 
  3.7073371964417706`*^9}},ExpressionUUID->"51c2dd53-1b6a-409a-bc26-\
61d6c5a88a76"],

Cell[TextData[{
 "We found earlier that energy eigenfunctions of any system merely oscillate \
in phase through time at a rate proportional to their energy (",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Proportional]", " ", "n"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a0ac1757-10d2-485d-b9eb-50b5e86a4155"],
 ") ; their probability density functions remain fixed. We can now \
demonstrate this for the quantum harmonic oscillator."
}], "Text",
 CellChangeTimes->{{3.707335665246724*^9, 3.7073356959682713`*^9}, 
   3.707335734098276*^9, {3.707338173272812*^9, 3.7073382077250967`*^9}, {
   3.707338786264388*^9, 3.7073388311852355`*^9}, {3.707338909508922*^9, 
   3.707338910704441*^9}, {3.7073390699907756`*^9, 
   3.7073390808031607`*^9}},ExpressionUUID->"f147c4de-8583-4729-96fd-\
a92f0ee77a4a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"oscillator\[Phi]", "[", 
   RowBox[{"n_", ",", " ", "x_", ",", " ", "t_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"oscillator\[Phi]", "[", 
     RowBox[{"n", ",", " ", "x"}], "]"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[CapitalEpsilon]"}]]}],
    " ", "/.", " ", 
   RowBox[{"\[CapitalEpsilon]", " ", "\[Rule]", " ", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "n"}]}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.707335740482608*^9, 3.707335785003357*^9}, {
  3.707335832941146*^9, 
  3.7073358553375063`*^9}},ExpressionUUID->"ac8ed901-7c94-4039-b1d8-\
418d3166f646"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Legended", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Manipulate", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Animate", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"plotWavefunction", "[", 
        RowBox[{
         RowBox[{"oscillator\[Phi]", "[", 
          RowBox[{"n", ",", " ", "x", ",", " ", "t"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", "False", ",",
          " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           SubscriptBox["\[Phi]", "n"], "]"}], "2"]}], "]"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", 
         RowBox[{"4", "\[Pi]"}]}], "}"}]}], "\n", "\t\t", "]"}], ",", "\n", 
     "\t\t", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "0", ",", " ", "15", ",", "1"}], "}"}]}], "\n", 
    "\t", "]"}], ",", "\n", "\t", 
   RowBox[{"colorBar", "[", 
    RowBox[{"Arg", "[", "\[Phi]n", "]"}], "]"}]}], "\n", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7073367196068616`*^9, 
  3.707336722336385*^9}},ExpressionUUID->"84c2e73c-8b18-4c4f-860f-\
1bfba994d9bc"],

Cell[BoxData[
 TemplateBox[{TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`n$$ = 10, Typeset`show$$ = True, 
       Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`n$$], 0, 15, 1}}, 
       Typeset`size$$ = {411., {114., 121.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       True, $CellContext`n$3391616$$ = 0}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`n$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`n$$, $CellContext`n$3391616$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Animate[
          $CellContext`plotWavefunction[
           $CellContext`oscillator\[Phi][$CellContext`n$$, $CellContext`x, \
$CellContext`t], {$CellContext`x, -5, 5}, False, Abs[
             
             Subscript[$CellContext`\[Phi], $CellContext`n$$]]^2], \
{$CellContext`t, 0, 4 Pi}], 
        "Specifications" :> {{$CellContext`n$$, 0, 15, 1}}, "Options" :> {}, 
        "DefaultOptions" :> {}], ImageSizeCache -> {462., {161., 168.}}, 
       SingleEvaluation -> True], Deinitialization :> None, 
      DynamicModuleValues :> {}, SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> True,
      StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]],FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               RowBox[{"arg", "(", "\[Phi]n", ")"}], {FontFamily -> "Arial"}, 
               Background -> Automatic, StripOnInput -> False]}, {
              GraphicsBox[{{}, {}, 
                RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
                 "], {{
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}}], {Antialiasing -> False, 
                 AbsoluteThickness[0.1], 
                 Directive[
                  Opacity[0.3], 
                  GrayLevel[0]], 
                 LineBox[
                  NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                   7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                   112.5}, {7.5, -112.5}}]]}, {
                 CapForm[None], {}}, {Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
               Scaled[0.02], PlotRange -> All, Frame -> True, 
               FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
               Opacity[0], FrameTicksStyle -> Opacity[0], 
               ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
     "BarLegend", DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"Rainbow\"", ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", 
            RowBox[{"Arg", "[", "\[Phi]n", "]"}]}], ",", 
          RowBox[{"\"Ticks\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"-", "3.14`"}], ",", "0", ",", "3.14`"}], "}"}]}], 
          ",", 
          RowBox[{"\"TickLabels\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"\"-\[Pi]\"", ",", "\"0\"", ",", "\"\[Pi]\""}], 
              "}"}]}]}], "]"}]& )], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.707336221993156*^9, 3.707336224171382*^9}, {
   3.707336368346671*^9, 3.707336397665494*^9}, 3.7073367286429424`*^9, 
   3.7073377454721465`*^9, 
   3.707338110450124*^9},ExpressionUUID->"58195d2b-419e-44f1-b01c-\
3ba9aa108613"]
}, {2}]],

Cell[TextData[{
 "Mixing ",
 StyleBox["out-of-phase",
  FontSlant->"Italic"],
 " eigenfunctions will introduce phase gradients..."
}], "Text",
 CellChangeTimes->{{3.7073373748226175`*^9, 3.7073373752911434`*^9}, {
  3.707338225036033*^9, 3.707338227928937*^9}, {3.7073383201915007`*^9, 
  3.7073383234584026`*^9}, {3.7073384051757464`*^9, 3.707338405453246*^9}, {
  3.7073385333302894`*^9, 3.7073386011168604`*^9}, {3.7073392037883043`*^9, 
  3.7073392043567777`*^9}},ExpressionUUID->"a298f9e6-fd06-48ad-afca-\
f4231636c26a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exampleQHS1", " ", "=", " ", 
   RowBox[{
    RowBox[{"oscillator\[Phi]", "[", 
     RowBox[{"1", ",", " ", "x"}], "]"}], " ", "+", " ", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox[
        RowBox[{"-", "\[Pi]"}], "4"], "\[ImaginaryI]"}]], " ", 
     RowBox[{"oscillator\[Phi]", "[", 
      RowBox[{"2", ",", " ", "x"}], "]"}]}], " ", "+", " ", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["\[Pi]", "3"], "\[ImaginaryI]"}]], 
     RowBox[{"oscillator\[Phi]", "[", 
      RowBox[{"9", ",", " ", "x"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7073382703004155`*^9, 3.707338298343778*^9}, {
  3.707338337956127*^9, 3.7073384564811983`*^9}, {3.7073392530418777`*^9, 
  3.7073392575732784`*^9}, {3.7073393295245323`*^9, 
  3.7073393691377983`*^9}},ExpressionUUID->"7b534b63-9148-4cda-8018-\
c5175368d779"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"plotWavefunction", "[", 
  RowBox[{"exampleQHS1", " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7073393678807187`*^9, 
  3.7073394026688366`*^9}},ExpressionUUID->"341c09fb-e362-4e24-9834-\
ce3e8a64353f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
yqhNwfvZlQTd9V4Q7D82XfwWSNx4cPucCwHGPG4GurwlRYS+TVnrMbXB7X/S
Uats5Egeoxa3blEnGHivt789oEZ8KObXhz75AA0GGWdXGRBKugqmjUt4cAzN
sFfXZcAuqiaYn7mPB81ZGZc9M2rsBt/JW6yl+hC3AL9/8FJgThZcwZMktTBV
/kjlwhQJloIbajHjSoaHkZhRwOg+epGrwDqzeQLqX2t3fr68hpJtq2akJIaA
+JTzk+L6MnhQasjmJ44HrWuCYRXfZ2GM/Ir2EnUf3CgymcRkNmFwgqzZwPG4
v8IlA3ZLSZAS4+X4GN52IHqu6RrOT42oHAQ3LbR8gscpzT47O6xIDkn17vke
T5h1Zd8cOmDFjqi3SyiveMJ1zWyKKElWzBZy/aPywgH/7LL2nycsWMuhI23M
fA5gIkl+PkHM2Jt2k79f0qtAoHt69FcjE6Z2riytwLgJYg2uzSMjjJis7pzw
J0Uc8Bu/TOu/zYDx5ktmm8jgwUWCUUU5lA4bFDwQb1b9DauBwwdkszQYpc0Q
Q+7UN4iScFTMekiNlXM1lyioG0A7bFE6JVNiJZvlb6yfFEJBh3JQNx0F9mWe
g1Ocuxbc2BWevfcgw3Tj2C6rhZdBVwNfrn4HCcZdX+PwYi8ZntW0BvDLEmMh
ya5FFhTNYE/+I8OR8Qg1J0St6FmMg2nmNa1b3/fR6XALV9/gCcBG1IWnInbQ
KMeu8o+heJCYltjrltpEbZOdbF1KM4HGPf9vKM0aajVk7k5pFwpUT+eMiGWX
0R85YiP0B9XwelVM6KTPLPrtofCHErU++JadJv1LZhwdGJsPr5SbhksMNu9u
juPR/6vrvsNyfhu4j7e5aKlkryKkQVJm52UWQhSFaEiSFPmVNpGKhmgpoaKi
QiWp0PUtibTT0NbUIO2i4ek5jue8n78+93+vv+7jd+Ba3/P8vGc5ZPuUuDaT
Wxcved59nco5tvJsSUVABTGzq/50fFUamSN0eJna2VKyrqwiKCP3K3kfoHy4
uLKaHDOMLU1V/k6Kl+1ceD+piugtP8aosH6Q/lD73646laQ+be95u3e/SOze
5z4xppOvl+LuP0S4+ginT9biem838bUPCfM9NUgqqlXv3Zn8+z9axSrs9Rkh
4mp7Cq4f6iV382Ut4p+NktJs/YsSp3qIWLeLsNiUf2S+dov+/YJ2EqD2YOdh
SW622kKOTPedGhL0QEJgOJeHHWG57VsIp4B02afzTTfiY8u/vSLu/LWI6DxK
TfvSw8+uTtz6dqtWEVHSL+4xiJjCDvG+bpdi957UF80LFFZhsc/E2fR2GXiQ
tMu82m1d09hSe7K3HLgdR/67+5bLKkSQ/bTDX7vh4GcycSpm3oxVwuwqnbzz
OrEl5G9+fKpnnQhb9KbKxLhICYk+2rM7LU2U3Zdfmz7r52dy9GKKGJ/rDLZm
0Y09oxnvSY7OzbA0PTF2ilzG4IPhONLIFzMSKCXOflvi/OXFxWAyPnXlfv17
4kzPv/vTFS7cIm1uAfuicsSYD9fbhAY+RRC9excGFAdmMAd8RXXfnEsmx7pl
NIKPiTK31vb4uY0XkLdRp89oiYswuh7OhT/OTb4/9u7n4rIUYp4fXdL8fPL9
Zkh1u6HFu+nMlkcfw/p1GLL4cToTumAa83OgRlaC40cG/XibjzhOZeoDldT1
JIJJ/XN5naBKAWbGbv8JtYvvSN/r8qCenfyM5zrpWscCDmnf6bItLZqXETE4
GxO1PIYM8E3dwi/Aw6wbfWo+uzyFxO869afeiItx+3K2o8mmklgK+P/pNB7n
nD8baerwqInkfj7NHbb8L8fspvNsN1YtcfKr8TZrHeLkJUuevbg/ixxOEU/Z
FN7PcX/cGrvmqDdxb+w2ltXp4ZS4+rutN4wjWXzMpmUNHZxiVka56JJ8MvHt
xatxw2bOHJtutxbLyb+nVp9Oz42t4kQp3TI9Ofn9xkPTJiVGMJdTpttp0lhe
T5x4Aj7uWr+bnCx/IR/CKiWbh4ZfrZn9hez/PX/3eGQFCX3lNcdxVjVRz2tN
/VpcQ/Tj1KNUHzWT2P8Elil/qCBBdx5EZJzqJPHhbw1dE+tItHV/wUPLHmKi
aXq2TqGTrJpl82lbUj/5rM+RIX97iPsJZenvI0OkOib+dMzlXuJXMFyjPu8v
+WBlW/BZqJcUy6dnleqNk4ol5w3UU36RgVl1N+I0udiZF0MlDNY2E50gr3aD
Hm72RYGHMjY9pSS8VW/ML5CXnfFk+GubSgH5uPupWsyKyfePNXxa5cnFhEdm
eNaBXAH2OvXK4GeGn4nCV5PIS+emsnfaXNwnE/6MxI9znZs2Yxp7vIDn/pa7
nuSw/F2LlqzpbEO76sXpcRnkxPrw82NGQuym4OKJNPkiks7UxrvzibBZijyH
+1eWEh6hsMJdOqJs1Q6PDSNTColY9rT6zQtmsK1H9mfIvvlAFFX/pI7+nME+
e8pe7uX3ZJIldvmn3XsxtuKPg6GnbCPJBvWaYkF/cfaJKSl1Cxd5kYtZj5aE
fRFndjwU6dx92o2IWiySXTQuxtQ1q61+0HGfBIwWRwktF2P0t3R0ug8nELXG
G/4v/UQZ+V0ymyu35pG464UxGnYiTMmRODv+8RLyWfb7IYsaIeaEs+zKOocS
4nkvr77IdRpz7Ktl8jOuSPKpcbM4V/tUxsn8SmLqraukYmiGwpQtUxiNBv05
PmpvJr/P+941fsbPDA5nSR8XyCRKLwy0HonxMR9WdbAbHiWQU6cDBpLMeRjb
svVlRjLxpIc/unj1hgnOxO/iovi2RhKcWrjq4u+/nHCz5esipnwnC1UDa5Zl
DHOEcnYMVy3KI9v3Set5mg9wRPdV8cnEhxANxQMrDRR7OZ9sDTj9jeGk7eXX
A/4+XRyp2cwjTkU2STextLzV18IRW3Xg8AqpWhJkfNOiTLSO4z7wK9X5eCu5
sbv975LrTzlXTe30m1O+kvUhfXm/j3wggbvO/5rFLiM/tq/5FtZTQfiWyzxv
+VhDavn/bBrpaCRlMkNce4S+Ebva0QSHlHaybLfOl66PVSToQAhfjeZvYivz
dFjs8A/iGOisu7Kqj1ytDN1SebKH3OpqM1BVGCKC+a+5pkx+vsz5ylUepvOH
TIQeajVW7SVKztbBxHWMfAuKvz/D6Tf5z1wi+Nh1bnb25h/muWmT/74yVbiz
FXnZroZHb6SU5pNvRolLqrL52JmSw2oXHYpJfFNlu+AJAXZIiK1jgUE+SQgO
zT0rMJX9pvroaHxgMskxFb7q/ZjFbvaek+MfYkfOtsq/eT0uyG7Z65rmPHXy
863Ytpa8YGF2XZEU9yLpUsJssA+8sUSU/TyEJRWzpJjsKKts/Zcyg33NcOge
l3gayV57dcccLzG2z2jEg+6yaCIkk2lScmzy76c9E2D96w65eSDJYb6pOMN1
6N716HE/8u4B6+IqPzHGcrF3ieDZaPLf6Kcxl6WiTLOh4tjOTcXky6cxGb0X
woz3RLTiyPVSIpb6/rk/lxDzQTG14uiOApL6/Fnk6TQWo5Z34tjm8f9Im8lu
h2XWAgwv/+JsNWmGiD2bf9+liY+5s9J/TuaXtyS8Lkz560ZeRmCaoR8rOILc
eOJ4QzeCm5F4fnAZf1kmeTzzhIFDxz9O1wP+zO1eteSnwFWpKO8xjq2XcMWl
q02kumOJWpzgEOfa5vxiefsUcmYRn8Tv8j6OU5XttK6gm8R9+YINXb3dnDdp
1c/3vk8mO/b9HrlQ1MgRefu7XNq3afLzB7+B4fYKjpTCrtihgRYS0rJVOC0p
i/OyOUr4tnU1CemQWNOi+YyIv9aZWxRZQsKfTRSkWRQTvbzYFTHcVWSfdNux
o2p1JF9FIHP99BpSrxUkfFmnlZzfzXvDxqiCXNsSOqdYpZc8aHIvt/vwk9Tc
s1DV9xogv7n3WL7R7iXXilzbPD8Mk2HT3GTpM73k+Kfupr7Gv6Rs3xddwbwe
opzFs/H0CR52Y5TfvvU6xSSa5Th8YpSXfWnfV6UI00KSuObRcRtvfvawR8Nw
/3/FJFZY0dG5eCo7dKoXq3f+5OtLQP9hT5dp7ArtLdULVB6QQ15iS7fnCLGP
nbzWMlJcTOZaXbbZelGEffaT/gyB3BLC9J4P+PZbjP3yjcaFwYAH5LTZ4GaN
PHF2d3RR/E5NN/K4j+dzdqwIk5IfHJL5tITYflrhJCUmzNgv/+wq3llCNouX
ne98NY3Za3b+xlHJp2T1raNxOgtZzAablfKfl14g7N3n/ObV8DMzBEoXF6zN
JPcDjxWzHvAwtZZh+h5e0STphuI77ScTHMMZQVUuao3kymrezOPaoxylGfHa
fnXfydvZq569KBrgTBcM7VrSH0Fkj1zx/hPWy9n17KawGhNCRo53Wq3JrudI
bW06+7ithcjk9WfdcUzi1Bw7/VmIt5xYlDe8fPCTQ+rdRDvMNn4lwoJub+RP
lJOnIgltV81ryNxXBz30RBon/96tNWqr+0baueNSvzX8IGMyUhvX638jj8tc
H4VZ9JGfrxe3RHT+Jt5K7Immz4MkbPsl1rWrveT7kRsH1XtHiOjzHxtW7+ol
TU8KuW1njpGvf8Pkx2f1ELcyve5KTW72vE/ZK3dPqSL3XkZdrxvjYfvenZnk
NKuANP5aJ953l49dlBybPrShmHBt1SjpkhFgX2gz+7V8ooAcmhd4q8CCxc46
cc/n4idnIvd24IqlkTB76ZDeJuPBEvJBZY162Xdh5qGC46j15L9PixVJa652
sRgJKf32Kb3XifHNTT/qnggwSRLjYoN+GeSa4p97qhL8TAO3qWPi5Oft7Ds+
m3Iu8DK1og85V548Ji/cWcKfh8c4fx1nhW2MayKy711aWfZDHNHFbhezRSY/
b3ZOPz1zUz8n8c0C2RepnmSPjfO/RQW/OdKH7slET76fLRY/cET1XhPnd+oC
j+CbjcTC1tT4/VAl5/nPkJ2bTFpJ5IZVmh8TQ8hdIXP54eclJOPJ35hSuwIi
VBavH1dTSS51rd/YOfm9X2u/S4f4jRqycKL7aKV9C9ls0Lvw4vkKwvvtwpWi
hQMk8ckCzZMKvcR2zyWDBy5/yaU4XUeNnh6yQ079TpPM5Pe3ziU1W5xKyJPh
DvvLn3knP7/avFfOmPx8+V56n+8xfjaXyN7M11HF5GdPru/Ig6ns7e1+27Vm
PSaLdzsY5qpPY2/qnqkr6uI/+Xpe9XlRgBD7T753QzIpJp2zZGe0bBRhnzE/
PPcRfykp0m13l30pzhYotbS+5OJBXkmEeuTvFGEs3on13lcrJXN9g1emPBFi
Kp7VZ8/tLiZlCz4ceH1gGpPd9fFYrF0IOblhsWNc4lTGXHrZCb7TPsRwc1LA
s8v8TLKR4YH5QQwR/mu5O76Wl7HtP7jqVUEcWbWucLb+eh7m0TrJgIu/Eslq
9/mtQoXjnBl2I4tNTjSRfNd5U4z5BzhfE8/Pu+p2lyidXXH28okajtUzs/0W
91qJ45+SBvbCe5wVoen3I9+UkkzH+pHpbt9IZkuycdqPGhKmF94TnN1EHhYG
z72jXUmmvtF8Nt+ng1RnC4+J3q4h2kfsRVJ29pPVh0eHPV/3EM8nPple/kNE
7HxHcYxzL4nTctLre/OHcNt+SORd1ktMuIpJXRo3+1zfXlWPhDLy8Osnl1hj
XvZEivLiB035pKhcbjUzxMdWXZd7Ytbkn8f6JA+bvdUsNjvks5PhyivE++xt
jZWFwuwD5Y5zdiqXkhK9zwK1jsKMsebehxYWpYRvbYT4Xg8Wc/H02KE5c04T
c7au0HkiwKQ1ta0/k8kQh5Xx8t/5eJmKVKNVL/dEEDmPIZVrS8Y4lSfffbdf
3EQ8JT8GaYYPclqmJZiMNCeQ39pjWZ8v9HHK9mw4VWjhS0w9bt+PFWjkLErT
1VCybSbR158c5/Ur4xg9O63lc3Dy++i8afXW35OIXk7B+LrmEtLExaUxbUEp
sd7X2LWdv5o8fLzlg6RiG0mYn2r7JK6CvDpq9rt9eIDcbmhYfNqil7B3mJtq
7Bwlw9rqalFhPWSpXkbTD38eturDusGWn4UkJmquuX4GP7vtjeINvsn3e3O5
gDM8vCx2tLGY3kNylxQk771iOiLE3u1Zq/h2dwnRyMmuehgjwr4xfvDtItvJ
73d2PP2nf4izT4cqRbxwdiX5Mwv8nOWFmX18SxzsJUvJ6fozwy4bWEzf2qQD
wSdNiZ33UZGRfn7G5/BGnbHVmeTN8y1q61J4GK3Ez22a15+QuzsH1rRWTXAy
n5SKrq/6Ti5PvCjZyjPIuaKXMm/VwigSenZWRs7XXs726E6laoMgEvsttLfh
QQNn+KF4tfG9FrLkgvxyW/8ycq3O/07R8hoSHnDtncd/P4i74GehufmVRLjC
omB90CCJ/KLWdNCllwTJ1O0wb+ZhT7cau7/7ZAG5Z/NNxPIgi7174/d1cqbX
SJBIYQHZJcwOErlW4v21hBDLvbpif4WZa9O8Zjg6lJKc0yr2PnzTGPtCudoZ
qrdIRRc/h+PFy3CWSaaZbo4ivrsKrx+VH+dI3T7nsia+iYQU3/Z5er6fIye9
PWhVz02ysF+y5VzxN86QjVb4mHsrSanSvebheIt8Vyt66FFSQjwOND1Taqwm
Kjd4I9Ym1pB3OveveAi2kMFs89Lx2xUkeNha+mZ7P9HVUEnYJdlLGN62j6Fb
+dk2c74X6CQWE9PH71vPyk1jT1xf8NBk0W1yyILX4PUiEfaCo1JKv+eWEkXN
5OBpBiLM+7nNPFsXlxJ/H4VP5flTmXfmlTPNrN3JvSvh4u5+/MzAmtMSZysY
or4v0d3jIA8jUn1oCtf7l0R0V+OxR7wTnC0rr1lZr2giHmceKQ6qDnBefw+5
/S8tkLS0futcplrLWZsd37vQtZUseWy2bsnuSI6FbPml/fJfSVmDh5lOeiUh
lZvWCNTXkM0vNSU1dJsmv5c7fTeJn3x90Ej3azQcIln68n3vr/SS9XczgtTd
/5A+LnX5tMnX57A9/4jqbl62z1ubF6Il+eTrvN9P8+v42Mrxih4Vd4uJi2De
364MFrsyvGyP7nkHMvDeLOhvkjC7b3Hn8nWKpWSfX5Pk3EBhZqpmavg2x1Jy
8sKy43rhLIY74rO/ldl58vRQ8fZcPQGmi08yS9OBIT7XlyZWLeJlTss59xsp
RxBB9bfx4rpjHLnpS+b/OdJE4jZc7Tr+uI/jcyJw7O0tL6LHdbgu8Ww5J+XL
+NRLz1rI+O2AoRb3l6R8w973o2klRO1vR3tOZisJ8jJ+v8Sxgqjbm/tHZg6Q
TYbWCleNeomcj6FvtB0PmwSU6NxILSLxXbVNZlH87INWvMaWB4rJrQdGvZyO
qez8usvpgyZBZHTdXgNZXhZz50fB01l2l8lUAecZJIufiX0+fMBvWSa54nzZ
uP46DxMdM+xnJvmMaDRs6L7WWcfh3qx9qHp5KxmNqVZvlakgBlavhw89qiHT
bosr+owOkq07FefoTX5/CV1vmaUlyctmPwoU9e3IJ3Uxl0Jb4/jYXRXzC+7q
FxPBzIP88p4sdk1ofNrBFHuSbTpP6YGTMPuF4ZuwRpFSov5PUjXokzAjyZJ3
fuo++Xm/S77TupTFxGY+XcFj4kySVGem5h/mZcwsJ1ZLmUeSwpwd91Syxjh9
jdXf74c1EWl+z83XpvZzVu1Tv5Ye7kne/Xn9XXhBJecv79/jZ9e2knXbA881
iz0m3Yffb77zsIQYetz+EvFfLcn9d4Xv1L4a4hKzTXn5jxbSrXX/mtGJCmKV
alkz8/AAeTd/gnzY1ktSLhuVuV7iZz8yVdr87E4xufZB64PYERH2p7qkH5sn
P4+q1l257CsnwgipLQlr1i0lK/58mFlwkp85Zf7z9/hOhmjl6Fo53RvnXHqz
79XyG01kRlhwfWFpP+eVluoXfl4/cu3n5R+fr1dztKNvhCtFtBKzo1HPXHQ8
OCcnniw8eKSUPJ+17uaHfVVkZMbh92uaa8gY98CXH2uaieSmzO1z+CuJALdR
37qcIZKtdjmh06GXPNT3e7/AiZcd2i/6chd/Afly2/zNKxF+tvJKTmxIQjHp
093REzvIYu9JOOT6yPA6WToz5a9uhzB77mH1NBulUnJ4yYuhB8bCTGTYzysG
k/89sYPz87dYspg8Ja7KNCEjIqdQXyEqI8DE3c1L7BhmiFnR2ti2Dh7GTD63
KLkxgmh+WpPZ0zXKEdDVX3C8rpGstbQLXafWx4lqOmNwd9YdYtydy740/pq8
z+QjlybftyY07zwwDWsjm9K9+XgGKsiijaZ7FRUGyQbJSp6X//WS+dLzVVe+
5GEnuEgmmu4oJBpvc+p2zGexU7pYofXGPmQnN6vwv0Fx9uoZlzbcWH+VXJlq
tUBCncXsrntm4rLhFJF4UbzflEuAcak9Zq20MpN83KA4+CWLh3EJs/yg8PIx
KVzO+7rZaZBc0Xq1Ocapl0g22UUlVPCwc7kcrDy9Csg7KYdDGdtZ7KuGuxaf
SnYj4zf1DBIFRBij1Ez1pkulxCU6QU1KY5wz5WTWQq+YJnL5Q8mSPvd+jpKx
W/LR8VvEds3vpdu3VHFWXeGbP363ldTPSeyeLuJEQtmaH8Ym//7c4X7TeMSp
msx8t7YyPKuGCF69eLehvJnEdgSGRsZUkCwZdZ4l6/jZb3YMyIsnFxN3yR7+
hWIi7LWenuvVJr+fK0fM0h4I42emnWxx+a+HIZuXJq4af1zLWfn7s5nEhcn/
vzv64XaHK8nJphnXsr/WkC8hWnbe6kPEJsr7hcvk94n5AvfDnTfzsr/OC/ii
X5RPytW0Wg+V8LGvzdVYctKjmESmWWzZnMhiJ39rP1G0zJ6sMDu85VSUMHuP
2lJRIdlSMj3+98K0CGHmQVVdncHV0snXhx8T9fEsZqC3vCYl4CIJSvhufUSe
l5FJebZynm4EGYt+cKb24hjnSveFy/rnm8hNuawrUe/6OKuNfnEtsL5F8t6V
+becjSdObseeSMSXEN9lzOhCr1ayeetMk+vnKshMw0M3OKIsRv2cqf2365fI
k+UDWs8L+ZmdeWS0SCGT8B97eYWVVU5Mws4LP3evIfnfn0mubxok2UYvRGdO
vl7NHmBJB7N42VnSS/fcGM8nqy371Z0dWOw/xkz9dkNHMiI6tYrfSpjtfqcw
0Iu3lPDPW0rWlQkzdtGPj3y+UUrSTUrsd5/iZVLURrm5RyNJhsxy7X+1Y5wn
3R+bHkY1Ee6R3OK8Jf2cP799u+tuehKJ9b5L2m5WcrTYCit997USge+xM3K6
HpGyPzuVcx6XkMLS2epXElrICn3uFRPGFSQ1NEt06pnJP29ZJ73MsGLCltko
u/PVOIe/Ndqsx7qJ/Patsp79s59zLSF+V7H8HVItq7UivKeaw0r6fjDyYSt5
k8vK/NH+jcyVcMhRnfx8vXC23EITq8nXg9LQgz29+SQ/Ka9/A+///Xx3cGda
XDGR5G9TGv3BYjvUSDoa73MlepzICKZGmJ1Z1vZcZfLzr/iWtxObrYSZX0W5
8i+MS8kRiQarbAcWI/OBpIh5GRPNN3P7MpQEGD3j9WbZ9Qy5OPb73KlhHqbL
s6A6+kYE+cJnLtJvmUxynxRf3DVRQvbbnUnION1GmlzMhnPzK0jH7jMLBMUH
ibz03NZvF3rJnmTDko5VLMZ2pVGgY7o5qTVvKrr5g58R+W/ebnflTKLpVtHq
83KQLNpU4nlv8v1/9rmtLdI9PGz17lrleNUCYvtZpWCBAYudZ5n8tMTmKnE9
pHbg0i9hRnNe5HD8lVLysK3rs5/YOCct4OL4uedN5F3dvj8ndfo5F9o2Wp1U
vElyktUeB5z6xtl4X+LtqcuthPjHuWdf9ifZXgc91r4vIRYrP1oobm8hmS9T
RNycKsj77243Jfbzs5vaNZx944uJdwxX7P4vNZy3/mdYAb6tJE/+1erVi76R
1y/5b8S11BCNIelnKg5DROnQGb4vk583598+1dBzmJd908Tb8U5lPikZ8bHY
1cnHfjinzuvj5J+/vsHK1Pv5LLaEposdt5UTYcSdft9hhNl2ewdD70++Xt/+
r1zY0VOYqXbyUn7wXylJOHjqTYk/i3kZsax+XaoZcTti9ltfjJfJcx/pb1eM
IPfWxMb3HUwkCR+eNpvml5DuQvEKy5FWIlq04pGtXwWxaOEvLX7NzxTdqx+Y
MTuT9A7yi2Z6VZC/B/P5zJJryJ4tzupNEkNk34+Hpgcn/z3NdS41mibNy7Ya
OT/zRE0+aRdPyKoNZLFLrp4Zv5lrR/zeKXgp3xJmGy65yzoz+fnSs5mlOJwu
zBTHSCwWmXy/fzrt6NABDV5m6ODNKsn+CFJvalx3Pmby9WG+v6yKXxPZKbbr
6frffRx9ada9+aOe5Izk4cJmxWgyL/l4387J93MFJ4slRQsm3+e9RrwL9SuI
oalN8ivncU6F8nRTnoAmsvbZ4T030vo5cc+Noyf4fcmKF4+ieyWrOda7e3Ln
hbeSJ6cNDz5KqiJF4jX6r2tqyCcLlqP8fH62H2/yvKevikmPea727yFhduzK
7N9TJj8fjlUcW/HGiMXsbYxP2RFuSISjIt4azxFg5gs5938SzCQnIy+3n63l
YawPuL5+aRBJdGRP2x/aPUjO60f59FzuJeY7vTc5jYmzOTnhG75vukL3mhmu
//c/+nwXmd6PQqZ7L8h07xCZ7uMi0+cNyPS8PjLdH0Cm+1vIdM8amT4PRKb3
aZDpPggy3cdDpnuqyP/7PRyYnidHpvfjkek+FDLdx0em5wmQ6X08ZLovhEz3
NZHpHjMyfb6FTO+HINO9C2S694ZM99OR6fNnZHp/C5nu0SDTPUZkut+LTJ+/
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
vRWU
      "], {{{
         EdgeForm[], 
         GrayLevel[0.5], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtm3ngTcX/h++95+77R8iayB5KCyGiIopsUVotSdoLRVJJklRalIQKbUgq
lUpa0K5CZIksKXuyhEJ+z+v7+v3x1HPmPe+ZM3Pm3DnnoGrvW7vcEgmFQt/F
QqEo/w/D9/gP8FdgfsSXwL1UVN2/8QOwh9gXHK/Af4Zr8c40shpfA+sjLluJ
r4o5pjaW4stgQNh1fsHXwvKwWYf/CjXDrvOTYjH3pbL1+AY4PWQ24pugKu0P
hV34n5Di/J4hvgPfGXPsAMfb8O0xxzSGg/ghuC/inN0aO/xHX51gH74/5rHP
5j+/43/Ay2H3+Ru+OeaYcvbge2POVZ0t+NaY+1Yf/+D/wkBix6B8PBSqAJ3x
vtQ5RizEcRfa/hI9qnOJOfYKdQrEinCQ4w20F+BRWEGsFiTwJJwRchthPBJ3
3WocZ/AsvBVxTgyPx52rshyej7sv9VGCl4Jn8arEh+MPQP+Qy47DS8M9UVMG
LwvpwByPl4t7rBrzYcZyJOaxacwViVUCqv6PyvgJsDcwVfAT4f6IqYpXg0Fh
cxJeHb4Kecwp9R33WFVWA68J1+FdKauD14WNtPUz+fXxBlAb/0Z18Evgevwk
6p+uuYS3qf8qdRrjZ8GhkMvOxBvFHVMbp+Cnwpkh12mCN4XxIdMMPzvu+011
GuKnxd2XyprjLWBfYM7BW8Jw+tLSuAhvD/uJNeK4HX5h3LF+cAHeNu6Yxngy
Xi/usSqnA36xriGxuyjrrLUW99jv5Pg8/Hz4OuQ+W+Hnxh1TTke8U9y5mtNa
mru451Zz1g3vrjmM/m8Zhwbwn4HwN32vJOcK/EqoE3adS/HLYBNtV+e4F94b
3uH4Nd0TunbwT8hlffBr446pjavwq6FxyHX66drBcyHTH78BhkVd5xq8Z9x9
qexG/CbIBOZm/BadOH0Npv0h+N3wLUUjNGf44LhjGtMgzU3cMY2hB3553GNV
zlDdG/ACfdWj/n1ay3HfS12oczt+R9xzpT5vRW6LO6acYfi9ceeOIT4rGQq9
CdfGfA+OIPYgdNNvEfFR+MOwKmxG44/onqR+G9qYrXsfRnFcl/hY/AlYSv41
xJ/Gx+n6RVz2JP5U3DG1MQZ/FF4OXOcZ/FloFzPjNfcaf+A6j+GPx92Xyibg
z+seCpmJ+CSoQV/jib+Gvw7T9BsOr+jeijv2Om1MU99xxzSGt7VWoFnEOdPx
GfAvbX9Am7PwN+Me+xzqvIi/pDUSc5+TdW3ijilnJv5G3LmqMwWfGnff6mMO
/i40J3YDxz/hy7XmOf4YPsQ/ggnaV+lzrtqKO/Y2fKO1pPuF9u6lj/n4J5Cl
7hDin+MLIBxxG/OUG3fdmtoH8S91DoFzPsU/iztXZV/p3o27L/XxHb4YtkS9
RkbiD8W9VlT2Pf4DDArMj/gSzXfMLMWXxT1Wjfk9/P24x6Yxr8B/hs2BWam1
B4mQWY2vgQOB+QVfqzUbMevwX3X+YbMe3wCHo2YjvglGB+Y39aX+abs+x9vw
7VBN15b6W/Ctccci2s84iTxcQts3kLOL2J+6XtTdTHwPvhdWh93GDnxn3HVP
1j2uc9ccRJ2zG/8r7lyVHcQPQc/A/KO1p/sxYg7jR6AJ7U2nvYBzicJhjt8l
HsYjCcdq0t6xuCdOMZ3TPo73x30uyokRi8PzIbd5lNh/ceeqLEEsCfdFTQpP
Qy4wGTyb8NxoDn8n94+4505zVCBWVBvEDlL/OLw0jIy4rAQvlXBMZWXwsnB3
2ByPl4PFIVMerwA3hkxFvBI0DZnK+AlQK2qq4CfCexFTFa8GM8LmJLw6HAl5
j2qtezvuvU9lNYjVhIl6FoA6eF04xPl+r/0WPw1e0vOi9mv81IRjD9FffbxB
wjG1UQuvnXBbyjkdP0N1Ard5Ml4v4VyVnYk3gpMipjF+FtwUMk00drg0aprh
Z8PvEdMcbwFrwuYcvKX60LMw9c/Dz4de9BVQvz9+g+aPe7GZngfwC3XO1H2f
eAf8YpgZdtlFePuEY2qjNd4GukdcpyPeSWsmZjrjXeC5wHUuwNsm3JfKuure
gqMh001twYf0NYnjXnhvuJ/jxdS/Bu+ZcKwF7V+FX51wrLp+87S24fSYc/rg
1+oeJn43Zf3w6xMe+wWU9cAv1xxG3Oel+GUJx5TTF78u4VzVuQK/MuG+NWc3
6tpovVH3Hu2X+CNaX/q91P6M3wFbo65zM34LvEPuc3AXPljrm7Yv1XsGfo+u
Z+CyIeo74ZjaGIAPhDsD1xmG3wtfx8x9mivNf8h1Bqluwn2pbDj+APwTmBH4
gzCKvl6gzlj8CfiBuo9o/8UfTzimMY3BH004pjHcit+W8FiV8yT+FEyh7il6
h8Kf1TlRt7f2XPzhhOdKfY7U2k84ppyn8XEJ5ypnvM494WurazpR1x4+J36X
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
+uygtVfimHKuwK8sca6+kffS2tOape7/AQpy+TA=
            "]]}]}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           GrayLevel[0], 
           LineBox[CompressedData["
1:eJwl2GWgldUWRuGDoCACBgoIBt3S3SUg3d1IiISgKEhKiYqEdHd3I92NKKKg
qIiiYmNRitxnXn/MO+cY71rHfc7e+1uLm6lDrwY9EyUkJJy8OyEh+tXECQmD
70pIeBEcws+q+kkSEi5yZ7nsqjCXiVvLLcLX8GQ1gLvX/n+5ekqc8BseYngJ
H8adVAPrvuQ+4nKoIlxmbh23GF/HU9RALrn9d7j6ypjwu/8Zal1ffAR3Vg2t
u8R9zOVURbks3HpuCb6Bpyoq4Q/7X+Nf5o/iLqqY8usn/CkbJntFdgx3VY1s
+oo7x+VSxbms3AZuKb6Jp6lB3H3xAvkG/D3Gv/Bw3A8fx3Osyctl4p7DjfHX
5vPyNF7AIllu8wd8W3Mj2TP8OXMJ67PxG7mu3DLr7tWnyhbqt+Tb5FXx67i0
dWX1E3inPl0+WJ4C94/3Wp5d34TX6w39vO/kffFU3E3eRL+Mk9p7TR/B9bfu
b+vewCf4ueanzJll3XATfNn8iXV51BncTt6YKynPjjeZl8fPwTPUEC6lNXfx
jfhk3HU8Er+KT+LnVSmVw9rN/Ar+HzxT3atuWD+KH8CfwvOsy8dl4brjpvgb
86fyvOpD3F7ehCstz4m3mFfKkvu9p8lu8+/y1cxlZOX4k+ZZ/FA+lflVLrEs
h74Zb9Ab+xlX5C/jafh5eVP9G3xUT27/zXif+A54YPwu1r/JzcHvyefj/PFZ
x1mtK6zvwz1kzWTfchfsS8sv5p8yn+U7mJvKyliXC281r5L9i2er+9Qta0bz
g/jTuKdqbu133GdcPlWWy81t41bjO3g7rm5vWW4Ofg3fj5PgnF7Hlvh7Wvs9
/4p5Otdd1kz/Fh/TU9j3t/kNviMebP1t69/i5uL35Qtwgfie4mzWFdH34y16
L3kL+RW+N/7c/nT6Enl+80eyjuZm8hr8eXM5e/Lw73Jr4iGnduBnIuPmUsPw
A/jueK/kKbl/8Jt4SHwn8QuqpXXfc19wBdTH+FnrmnPl5XnxdvNa2X3xvZMl
Mu/ka8TfnSsfa/VTeJc+z77h8gfxAHyPPJe+FW/Um9n/g7wfnoF7yJvr3+Hj
eir7b5vf4p/FQ+P9tn4Md0a20FzQnF1eVH7A3Jtvxf/AXbT+UX4pX9B8ju9k
biGrYN1TeId5XTzT1XxuBPdQPBvitXD3c//iMfi1+H7hPqqiymftTn59PMPV
Am4kl9r6ZHwL7gHuDn4bD4vPm/xtfJZfZC5kzhHnEm6NfzR/aV36eBbKCpnP
853N47iW8pr6J3i/Xsm+/PJd8ezFG6xPoc+QL9KT4F3ymvHZxBXid4/vIt6t
L7R/lPxhPBDfK8+tb8Mt7f1R1t/cM34f/or5wYT/Dp2x3PD4bMLFuLAsZ5yJ
uA3+yXwpzlVVmSvA7eY24rvVIu6h+Njy4/gR8bnDfVVb7mfuqzhHVRWuILeH
2xTnkNqNa/lvVozzVf46fgQnx63kP+FXcS+cOo4wPN48MtF/B+NY2TnjEr6I
OVecn7gd/sX8tXUZrFsuK2r+hO9iHs+1ktfSP8UH9KftKyTfG+dFPDPju6bP
lC/Wk+I98trx3Yv3zbqK+mm8J77n9o+Wp8GD8H3yPPq7uLW9P8sGmF/gW/Lf
mx+2JzE/gRtlTSJ+HH+eX8oXjXM3zn3cHv9qvmxdMVWVK8zt47bE2aT24jr2
VI47gPwNnBanwG3kj8Tbzr2DX4+/B+6nOnBXuW/iHqGqcUW4/dzWOM/VMi5N
/Nn5ifxo7lPcX3XkfuO+5Uqo6lxR7gC3Lc4ttQ/X9VqqxBkrfxOnwylxW/kv
eGB8/3Fa+T14kvmN+G77u4yXXeCX8cXMeWTF+INx1sV9kP+d6xPPH3se01fI
Vugl47XKu+IJuLV1tfUL+KD+TNy15Af55+M9sz6VPku+JN5LvF9eL55l8Vmx
rlKcCfHz7X1L9qg5FZ+X325uZ8+v/CBzHz6ddUnxZPObss/iXqpqqOL8IX57
fPfVSm4Ml97e+/n28RzkknFT8Fv4c7wcF7cmLzcQd8J/mK/IH/c6VspKmS/w
z5nbyOrwn5lrWl+CPxz3EG5HPCv12bKlekp8QF4/np24qnWV9Q/wXn2V/W/L
M+DB+AH5U/Fz8Ca9g/1X5YPxTPxifKf1H3D6uBvJpnJjrPsCr8Al4r4Q5z/u
jP80fy8vrWpxJbkj3M54f9RB3MCeanEXkI/Fj8XzLc5w+W94CH4JZ5Anx9PM
b8fz3muZILvIr+RLmodx+eTF9UN4a9wD4i4u/yue8fH67X0ifn/5Sr1MvJfy
bvgd3Na6unH+40N67bgfyo/yPfCuOFP0OfHemg/JGpqry6vwZ8xr7BnHP25+
KM7O+DzHHYmbjsfiL/EqXCruF3EXwF3xNfOP8if9rNVxJ4rPCv98fCZl9fgv
zHWsL80f43pyu617UJ8rWxbvJz4sbxRnX3xHrHta/xDv09faP17+BB6CU8vz
6TvxZr2T/b/Lh+JZuK+8tf4jftzeFLIZ3DjrkvDv8Jf41XxpcwHZUPwcvm7+
ybpy8VnB3eXt4+8sL4OPm/fE61fruCdUSn4mP577Ku6Eqht3g/uZK6/qcWW5
E9xe/JBaz03gnoznM985/pZcKm4WnoC/xmtwmbiXxL0g/h2Ab5p/kVdQF3EP
eQeuvrwcPmneF/+duFvJUpuP8I3NNWRV+bPmDda/w2c0P8Lnj8+NuYv1f/Cv
mWdzL8dzXf8Jn9Az2ne/fDbfKf6mcU7rE+Xz9MvytfKyeDguZF0J/TDepg+X
d5ffijsA/tX+jPoa+Sq9Ynzu5D1xx/i9uIvmBvaV509x+615WG3kJnKZ5Gn4
rlwm7gFuDp6Iv8HrcDlrCsf9AffAf5uvxvr4nMkqmS/xvczPyhpaVwG/Zz4Q
55o6ipvEcy3uF/JJODNOG/cq+Z94GH4FZ5Y/iOeaJ8m+xetxeXmRuF/Evz3w
P+bf4u6jGsWdkTvNHcRp1GYuS9yB+Hn8ZO67uI+pxqoS/z5/iE+rtnBZVWp+
Pj+Fu4I34ApxR4lzGffCt82/x70pPr/4BXknrom8Mv7AfFiWTh3DTeW14ryW
T8ZZcDpcIL7b5m7W/cUPN/eLM5f/2ZzN+of5BfFZ56bG3UyfJJsf9xT5RnlF
PAIXs66kfgS/q4+Of3/I/+X74j/sz6yvk6+OszK+L/LeeCLubF0D/Uvc1N4q
sjPckTjj1HHcTFY77g7yKTgrfjTOZnl27hFuIZ6Gf8CbcCVrinOl/OyjcVfm
e/N34k7I/WltFn19PF/jPMOX5X3wJNwlPlf6JXxYb2b/0/IP+V7xM61Prc+X
L9fT4xPy5ngsrmNdNf2j+LvYO1WWLc46viC/x9zdnmv8CHN/PkfcqfAi8/S4
q+PNuLK8RNwT4t8qSRL+/38w/RX3MtUcVuXOyo/F/VZt53KqtPxifkbcneNe
ol7kEtl/Le5lqgVXjfvIuuNxrqiTuIU1dbkd8mk4O86AC3nte809rLvOj4z7
Ft+O/8Wcy/p0/BKuS9yXrUuqT5YtiM+YfIu8Ch4ZdzHrSuvH8HZ9jPwl+V3x
3cTX7c+qb8Br49yJ54T8RTwZd7W/kf4VbmlvddnH3Il47vAL4nwxn+JbmuvF
fcG66TgHfizOO3lu7lFuKZ4V98+4z6hW6hn+HH8yznq1i8uj0vPL+Nlxt4v7
hurLJfZzb3A1VOu403HnrTsVZ4d6D7eypj63Wz4D54zXGZ8t+Q08Cg+I+6M8
A15uniNL5neaIrvKb+WfNo/iSsnL6Mfxjvh3g/xleZL4fuOb9mbTN+J1es14
zslfwlPwc/Y31r/GR/Q29teUf8K/gN+L56q+UJ7RfFrWOp718ur8x+Y99szk
c5mfiH3W3cSv44FxH5Q/hleY58Z9LO4M6hXubmtuxb1OteVqcZ9adzqe+2ov
l089zq/k58V9Is5m1U7V5i/w78fzRu3j8sfZz6/i58dZGeeo6sfd47/3N1db
tefqcJ9Z90E8F9R+roB6kl/NL4gzI84w1Z9Lav8/XB3VgavLfW7dmfi8qgPc
LC63dU/yvbmCXEZuDV4Yz984l9SrXDLrbnN1VUeuHveFdR/G+6bex22saRjn
jXw2zhPvBe4jv4VH40G4fZzVif/7/8oLWfs/Ryzf0g==
            "]]}}, Annotation[#, "Charting`Private`Tag$3446957#1"]& ]}}, 
      VertexColors -> CompressedData["
1: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
vZaKMw9na7msY2D2ltPfdo7x0W0T2rjrMQVbSrefuhDWCB3vuRrUS3wsbbe0
yP87gJfK7UalkjR0t341XTZWBsvTBlqDGQM4n/Q2Lk6wGtGa4bvVHErxo8kz
Tn5xB+aZBK0aMy+Auh3z0vKSHsirH323sYwBg9XvjvIeFyBDoF5Nbz8LP23+
SAtdGoDslS0nz6aVQr06Z32Afgly0+ZZRvsNQkJ0wZzpIy3I5ElIrDtUiVkp
NT+2yg3i5vCNT8oufej9/rt7aHc9LN1c9hqL8XHnVFOw8noujs3c+P52Ng1B
baJ2YQJshO2rTuVUcXE6xCJ87bwmPL2QcznSvgtmy3ukE0c4MNU8crNZtRvL
IzuYsSWtUI86tOngXTb+BGm5F7n1IqzufrOxZCvuc//WS+9l46G1yJsRTi/e
z6FuC5zNgPAS7svYcTbU82FY7cPCyn2D1GbCGyl+kVRdPgfKY+eMfloz4TfC
Te/J7caTsttdFPKc9mdO+n67T7zzr/CprbOYuOJ4PfONJhfnVcyN8rd1YkI7
eP6iyx3ISpL0WxnPgVqEZqtKJhMJ24rzA683Qffg0WM9073QjO61WjTDRm66
dHDONxpaC1++Cr3NhCr77uIgCT5+mgyE9BdT8UBj+LBmRCec914e1irnY9l7
s5GKeio8ds5b6dLWifote5jGxWSPKJIVZRbtOCO/WljInYNYQf/yI749aPh+
rFvLjQvN2OjDCpFc7N1eZr/QtwEp80Kdy5bwoErPvnfOnfjSebUbhg00aDVM
mHdYEP6IvEsLOMjFHcWhcLs3NPTcDpuIPEx4sndC6+p+Lngv9svHPKIhWu7K
ytITPPxKUJ1tRTzKP1ZDO/8+DUZnv+xLO83DQ88fIQqEV5ejj0WF3qYhLn2K
9oB4lM74y9FThEtZ/PFjc4lHUVP3GINwaXHl6KG5ZK5wnHk0hnBJPV7y7jTh
zMX0v5GbSI87zqL32BD+qGdI1qeSuWwCs/aMER1DXj/XcP7f71hhCspkTnm7
eDx5Fx2lpwzL6wiXnnZ880klfS3+k3bzUjc6QlYq6aq95sNViiLqeYmCOrns
8ONXyR6fiGkfTeEjJrBwdHMA4Vt/w6ejzXR0Nzy08/vMx1GhlNtsBwocWPdM
AyaaoNZ/3esw8QqD0wTp+2lgDBjKqvd049EprdK3vmR/pYaStGU4eFy/cNYn
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
NtNqtRsX585ePBJvTkXttqajVycZuODXlvaHcO9kND0hRZ0Ky09CtUq+DCyY
spx1kPDk7qo18xesoeLI0L4JMzkGDNy0Nq/5SXhuv3PBggLSN6jXVtfLkDzc
WPhmUJ+PHn7lnm+EJ22CLK13Z2hQoCxasVeqHCOfnxZFpA5ApG9z4el/Vei/
aRt1bUMpKi7e2PGb2Y7VF495StoX4IS2I/NLaw9yko3GwloY+CWwzcz7YQH+
6HGkr+xhQV9NY3BR2CAy6WmzN3xoRd143AOZzkoUn819mjY2gAtR262Uc/pQ
/PVmu/jTeriNva1d0MrDmhSN765a5Jwn87InttDwzSJWPCKlD1vWTlkNfyU5
uyBjoPhcE6TUmzsppZ3YeDQte38zB3t79+x4wO6G2UJPr+jYVuQqzi1xucSG
4tUI06XBvbjU8SmnaWUrlr4/JjJkw8b29BO3u9p7UZFgIBG/gYHKrLhbY4Ic
WJi2KwhasvBot+DplIOdaOuwF79czsHXroafYmpMNK/mSInRu2HyztBMYzMX
Jr89Jp/4dCJoxjp7nTTxvZPqizaEcdBj2tXGGWUiaWPmycB1TdAVqjTOLulF
5iZbZUtLDowrIx7w35Oena+f98+NiU2C7Xdj1hOPrTN1vZ5PBYN9KP7aGeIh
to+eMitIPu402G3SSkVNnj9FSroL50t/dc8l3mKpuUIj8XoXDuZsFFswwcGc
VMFJ079d4EdqlT5cSfZ0KMXf6ggXaVR+q8I3GtSzhVMqrHh4lNh3WeAgF02j
Oi5ZiTREMEqv2h/hIezK/tP79nOh9ndMZSSKBt8DkV380zzMTEbNSBIOnPJY
kmN9m/C89p5bJvGNTQq5Sp5k3yd6Eq4NkX2X/x58zobs+6EahflCZL7x9GO3
m2Tfo3Ptin6T/a0+v+6oDek7LjufRDuSvd4kFLH4NZm39TEsPxnRcYvvOfWD
zFf4rA4IvUrBhXkDVfGH6VA5bqnv/5qP0T8ya5ZeosAgxXf6zHU6yo+erD2f
yse8s5rHrM5R8PnXQ0nHbjrC5Ktezcrjo95/VkjugQa0yt67umBLD64bXnJM
fEP641G7cR/SU/ZEcUP/31Mce2qO/iM9xViXc1h9Ixvh1wr2elZx0cGXUlva
TPpWt8ABvb0d8Lv8im/0hIOl/45PylCYYMuITXkF0eDO0Pmgt4oJI63RzKB9
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
sfpl8TnX5GZYi9gOWtNYWMaNtW+N4sNGYXCWx8cOXH2qUewj2o6uDZENF8y5
UC+4F/JqmANpDdfnB3ra4aYS+Y57jwsJl1YrvjkHzCUrViWGdsJ1ofUR/dM8
bH9u2sY0ZSG3a916enEPbnvVx/2e5CFq+QITiY89YBi9b0BVOwy05o/diuDi
fpL+MeNDHFzwTGlsEKPBXH4P3WUGG2+//9uiSeak7cf49K2TFCTs7+3T/NID
J4XKZGfSK+dGRNpnjJEen/a1cf5bJu6VXNKs/yrAxB/38fmEFwMh953EiU/K
RX46l9JBg2vc+bl/9AUosnm8/K0zH1yHqZpPX1LhcEsxW9VJgGj3hBKzfXwE
TFvy+FcCFXOf5KiHk9y8pX3l1QYyL9atx27qkDla89fhJJ/MUVZxhwKL5KZs
s/2+mWSObqSaDz0guWaovN5hujcd9dZrBuVJrm1XXRQo///zjdXv562NpyO7
bu/krDwhZq1svDJg3YSRNG/vTXZt2C52qnS3cj8+/l56PUqCjQ3WziE1cXxo
a8nG8Nw7kBLJrgrR4mG00E7Wi+TXCW369b54GqY5fNC8nNeC594XEo3n9YG5
el3Wm04ufp2gdCzcR8H0C4qFVM1O9FJdD7lwhYjVrQpZpEsBTA4bnA5mIIk1
ZyaXePvorD1D+72a4Pu7yCdwTwu61S6ZuHwS4sSq4Oufvwzgr1vo3gElCjq/
uX6dnUjO88eQkqX5DIyuvH7dKrEcx67ftqI7sXGDe81ottUgZsZdfxpwswUt
R+PxL/UjeBc2WGjbDqL61EpeM50DoUnpl+H6Rnjcd209d1iI6vlv9PQV+HBZ
esn0cBkFB2rd+OIh5HxsNlP2JD0ivaJYwc2HDg+lb/keJr0Ii8r39prHh6Vn
yJGgeT0Q5cz3yCbndq5p6KM75Ny6bbTUjCTn1qqnwe9tVQdmzhKLqmZysU/j
gtWJZDZKdkjWHWjpwtWL50ID8kgvqcs/aXOZCf6u5vLWW70wYQW5eKry4cHs
iraq6kbkgadx6vLdUO/Jq54sJX05lerEc2Si84NuZqpcK5Rntz/JtuuD2ft2
9+sk3yLkxUNniTWDJe200qqOCVfrF3eHBAIYfjr027meggeKx1p/fewGb1GH
udU7IaQ177My3Ntg6+suL6vIRWJ3beGu432oTOoc+7hLAKO+6v4NDnyEnJwe
NZ5NxSzvFa3NhLfOxqMm6hfp2Hh/jotuthApLZIHpDMpEHs628T1Vxeix7V0
gxuF8LLNjjMJ4uHglIOR0YSr7hWtuSxDGg5c6/z8juwzxbuAf4zsc7HDkP0F
cn43e0poHpnBxNoF7onHNhEOf0hU1yVefGBG/LkboGBfXST/L7n/TQkn0kQG
hUjXmswJnUpB6OQxjSG3DngeHXFunSD+M/fYmqO36Ng3IVrv/7MCF2fFIXm8
D+N/Bx48Hx9A7u7NnuFiVHxdoMz3+/IeP+qHB1tFO9FW53VmSXg5zOMcRg7p
scFZP2P75qJO6FktlFxypBxPLOSqHAdZODPusdq6dxAqaiNSSi978etT9d7+
2DoUia3Z+0XQj+8H33MVJ7lQm5bKl9rdhKzKTP3zj0n/P/3S3vgKH5Vv3EPM
NjVjut65NZ4JbCh+/FWxNJeP7VuTGj+SPsM8tjtVJKUdfzXaFdsvcWF69JWG
xHkO2PzWa/KuPRgo7p5ZMcRDjqSe4hzNXnhwjm4XvOyAwo59am1dXBTn5pz1
ecKG2IER1i8vGs7azNWfHcHG0gj/EiXirTnzDJqnL6Ji2OKw6ZEDvaDpeORv
SRQiNCefccefCr3XS4dE5zHxziRUwdhRCDGex9WZ87m4Mq66JJnkoE9J8lmT
QToORtTeEuoIYOXrmrX+AB+adTZ6na+pmB7RZh5pL8Cfuhu3BYRvxeJ5LK1k
KnYsPln7nnBMjf0qVUg4ppq9jaVBODYr5ERMw+UmzH3xqnhTIB3PAuJcLj0R
wtbn26GZ55rgofMzZFo+HXNP+xx9Qjg8Z/X3PzqCJpzLzRpsEuuA/vfZadri
/fD4k7ewcbQPcrOfXZYgfljq8HbksmILODFdvqVCLuR/tLVsInw+lSamOnuI
hurOvG8ep9gICW/QuPuED2/5x+cnnrZDkn3qMG8DDRetlzs+MmGDeVSrK26U
j9HsjRznncTHjp5LAJsBhbpIczOhEIssXK7oi1BgGSHUPFnyGdK0h+mrqgWI
u2NZNCbSCRfJX2xrcq7K/uXavSXnKse3+/6nF4OIj+haY1HEQHDW7il3n9Rg
9gvvVSuvC/C5M9N9kzkfJ0tpX0fPUDHV0Ctp3qI+2OxbcDOsno8xeQle2aJW
JNe/m5Y+2IU0h5NjToU8bBFRtAj0Z+L81VW3yvTbsYxy+XTXAS782j+LnKzh
4FG2/NPZvgzM8Rm4Ok2Zh54bKV0R89mQuNRefyid9FpKV8BGKg8HDky0Dk5h
4nR6busv707sojMmD53gYW6kDAocWfg9ptR6l/SlELd12fe9OIinzFVPeccD
UyrBIOMqFcHP7yiNazJR8ba+OtpCCLXb94vfXGZByvPv5jchfISfcJlnso+B
RPfgdL+9AiSv8vl1wI5PfDZxr9dj0j/uF6anXWxCaqTuGfNwOoKiLfX3PBNi
S8my+Br5FmTJR+m5FXPwwaHg+BJXHn7rBr0RO0B6lr3rXhbhzOHJ15vVD9Mw
5l7alKjKgJ70ol8jIjxMXnTI7rRlI1TNJu7ZJgqa7uRbZdxmYFFEbvMn4l0j
ItdTNzxowikDtbnai9rRUpDkf1GmH9B6lX0/cgA+wUX6F/d9QLm/p1Va2DuY
nbO7yCT3r0pK88mOhHK0Sr+d1+jAhsjNP4d20ruQ+XKaY4xqOXqMs/ed8WMh
belv9kjrIMx0k66w1diQOuLpMWLbgFNGanFyJIeLy+Zl6N/nwfPDQuO4jRTM
fLn06pgECz3NrI1O/ny4Tr4+oqvWCcdmu3m8ZR0oFnG7l53DRbunSNDduRy8
+JZ0J1+sF7465e2SUnwMvQ1j63r0oDpyv5lxVRtU+lrNr+hywfi7bnGxah+O
FzlHZPdT4Ld8m8a7Cz3QTI7oPlQiRGF7aJt/XTNmlSRylN6xoFUgtf6UuQC1
JbI79hsJ0HhJyuGMEx9xP7RZsoVUZLL3/zzrIkD9Fp/CMls+plb7jP96SIV8
1IbxGacFeBr8QbqDzPuzsPcPv1yj4nahcCCE+Mmv/KClFffpGJxZaWyWKwRv
j8L+2YeZpF9v9Qol56H55+HYw1ZdKJHjtktt4WGB9MCvbcRDKk5pS7uG07Al
yd6n8lorsPWfvMyjPmy6NDK5VZWLd5ryLGkHCl6tuL8BRp04p3xjkXqfEDMO
pRzStW1CyCvG7ff6rRi+P+65ZlSILgdr0ajuATR2+SyT0fsM5rd6G0Pj90hK
kT7zOIuB9bO/6lYmlWN+6uY1SaQPGsneWS0VLYTBkmIr+TEeborqnyl9QEHO
JqsPl/t7cTP4y8axdXzMgJWw1aab9BSv117xHcisizV0pXEBGdn82RVsLHa6
8VTLvxVHHg+FLbrfh7mOS3ZsXs9FYb7ew59pLTi5c/veNpk+qBi8lC/gcvGJ
E655eyfpUwOPmeUkl6cmKo2wnxHeWp3Ln0v46bfKavP5c3RExg8cepslxIU6
fSvpYxToxnf5cqM7cV2sa2dHrxBTfxp3fXvBxDajueNS7nyw6+R2p7/shNJZ
6Sk+RqSnnPB4Ul3GwN2aRDuvASHqiyQMDQTNuF2kc9IptQrySt/77i7hwcj4
VfvI+U6Ivv1SLuNbDv/U+f5J4myM3ahc68MaROC3s8VBt3tg4uSp77q8Dku2
6Q8PdfGx8+fe41cC+FjwtZElO6MZavmSgqoJNqxdu7VuvuYj5lKBuVdFG1wW
xGknX21H5jF91vHTXLSO+kc8uMPB0NIwqXs6VLjeSL3iE9uLQcH3TyfChVja
ZmNkdbEPO62j/E7Ukd5x2HnwxrMWbMlzEFlmJ4DimYexW/fzcfCdbtaRFNJb
7+nFihF/Vll5Omm6Px23Dk6aqJDcOZC3Z969m3244zhf1oJ8ndQrh6pqk1rw
6OvuVVUTXKwPajv7/++PnMBas8Q2GnbouSV1JJGcTS89Z/iejUsSXqfESd53
q2jPVjOnYPvoAXPpHwysPro55YRAiCdjUyVEqE0ocH45VGxIRYC0X+N3JSGc
ZOuv8TgMrPUISnwZXY6bQ2083R1s9E3dvmdpwiA87kj2f7LvgLxn0VDaohqs
tJ++JbBcABo1M2R8Cx/P9x0yTdhJRQpNr13mfB8MsrQXnCLXv8Bafa8p8XWx
/Odxt7cxcOz5p34DScL5PakXHLcQDolS5LX8uxH2Qd+6rpYHc4fgjR1LCb+r
iucZjdMRbn9QLiWdA/P7SU6Gp3hgDIUue0H2z9R04JHSHibmzgv5kKgrRJm8
2svSaUzIGf862K7Hh1rs0X9rNLvR+iuAnW8lwC7JY171ZK5P2Oa9HkinQmto
V9EI4fxed+rUqTfoCJb47lFJ+ju9MM9HZ7wZ4fcfa60RId68LGDJAVUBqKsY
N+PceWCLWPNqCOdLtfPO5tnR0L1fTCHwSie4Dzyc1pLrm+nzoHOxOQsrgszP
8DZToOIi/y/9PgON2VtFfQjnv2lJHDCJ7YbtSL/j4O/XcJN12bt3IQtzBf5T
Yi4T3owe+jGmU4632Q5Cu3ssWOse8RXvGMQODZ5VFfn3bK3ILD1+PVbdrI+7
eYKFkJ+2cfLE666ZvJkneoqBaTJiv1aIdpD7q7/kVCoXn8PexAVpc9C+oaDJ
1rgdBUlN844c4hJ/Ns59+o6DhW5ZvvNGKFjlhTCPoh6UXk5+fK5YiPjhL08b
9jfD+c0ip5R1LDwYuvFILFOAgdLQ7eMrOEiab9wnVsVHtJHzAxe/NrA9J++E
Lubh1SvVoDhyPnPbr8hp5dKg/UlS3mSADjEBbX3RQw5U/mR+7Q3hYdvfyoL5
rxn4e1vlcd7Dctj+iMwp3M9Gmku26hdNch7zFteGkT7ySe3XvT9CCmKsWqft
GuzAgqHS8zFfSd9NCbBlXWRDOm+91YriFkR7PMriK/fB1d42t7eVC/Pnlxn7
eql4on0lZGUyE1EWplOcpxBv97Nwz/neAdsPQ34uQ1wor+E71gezEYTG9K7d
Akj8/NZXbM8H9cTZqHVZVJyO/x0eSXrHcg330J+X6chPfuxdSHrH04iFvWf/
UvDRMSf3WHcPpvodzNEtFKJo7ZoSZPRgfNzpo+M4D7M8VY8ktvXAQvK0PXUL
BYL7wratmQzQvM473iA9Qv37XWfPpjY47qQpztlaAcPC5SYacRxUmh1acmSo
E5uCj6fm7SPn4bWYsVozCzu0tLZv6B5E+NCjRfN9mVC1n2aTPr0ecfdJZh7n
w8preINRFB9GwxdC7byasWS+4orajWxMl8qWj0zm48yqeqkDCh0QphdOS65o
h4fyHfEp4VycE/8jX3uUg9gTWfghQcWDreIbx1f0wl1tw9O+HCHeZCvWMh0E
CMzxnx5HvFqKMrhRKolwzNO15w7h/2JM2t84TfqqtK8ul3Bs1o2924tJ3kSM
rpQ5R7x34I3k5JeZdBw6c0acvoOCOPcubxqNgUuadU2z+4WY8r2qNiuB9LjA
8lV1bfWwrXoVs26xAF5Uq+FZxDukzw9nJlwtR/Y+486SFWxs31Wtt5A6iGX+
AXxVhS68k3jcUb2uFr0OT08lWAggHbt7ww1yH/X1Zs2PekJFsWvL2MM3HByJ
kTnxmPQQcc842W33WsnPeennvkQG0jNDf81ewUPdEa8fGn9Y+JfplHDRgo5s
EcdkvQ0cZG30cH0rSfbP76aD9TEqZFfNdZwmwUTJrAVKy4+Q3rfVy7OsnA3Z
w6vOihfyYasamV+2ph1rPy98omhL+ojECb8/hP/SfpcWiKQRr7absmg34U+V
gV/YG9IXOcsUv/GJZ15nHrxTZNGO1IGMhS1HufgoKrmu/hUHyQ8za9fZEm/u
WHZ0kvCn+XTkg8UnaFiaNjTVv5b0Nes1E4m3uNCcvz3ytjMHUvSSjzF6FCxa
lTnfJ4yBgYbsLtWvQiywCBRpyBmAc+MeLenttfCtWFFUoFeFaOuF17PIfs58
3zv4II+NxnUDuuJvGpAQFFeyIZMJhl6V9Zsj5OePax6Vau5EbK3c4rO7O5D8
e5F68Csu3ka4eJv8ZoNWv25ZI9pw+JJavoYkOVcLWDqfQvtwbI7sRTcHGnaN
WI/9DWDjzrrclx86+DAYVRJTOv3//1PF6rX8/7zK3JnMXuJp0x7P37v0//eA
rdK+k7OFjsqgyzpzkoXwH2i+PXC9CfKr7y7qAh2nFaZ2BZB1308sRiRZv64T
VfPYmI6eh8P/lFOEmMZ/rPDnWhMGgu0e3TSjQzq6qH5RqhCPDag1kyFNSFa5
u/mGDR3zdrJvdzwSIsXwWe84yWWTNer6Mz3oqF+6O/JohhBNLxirppH75au4
YXN4NB0nNoQdOkLmQjTrWcaIfxNWqWblpom2IG77LsPBN0JcS/rps9y0CYEb
x73037Vi9/lTSwxm9UMxoG5tz4FOTP5JLik8zsOJ43ck3N1YkIsf9tl+hIfo
xrdvqOT+nrNtn1vhRIOmZGyy9G4efO5GXv3/PedPPu/vlzlLg8f4NyaNeJvR
hi01GiRnq27LqLb+/3k1b+F+T2obTD83yofrcxEvuadYW7EPPy8eXJwgSoVv
bHe6pUgvTp8L6rApEOI9y1cv+AAF779PuMx17cQYXoafZwtx5bXc6k7SA4o8
u8v2XmMgfoF2ijM5P69eqF4KXEPBpcwvR+mWDPhedXtk+J3488Tv3F9GTXDf
Gf+kdUUbbmycffftgn7U0lVOur4bgP/cwju2NfWYsb/KdkN2FfZ0GT180DyA
4B0dwadZjbglc1/Sdvp7LAusrtWX6Uapa8e2JIVyKO+s1V5vx0I1NbdwHvHh
+1vp37uID4+MJ83tID4sW1g/VyuoG+m0oSrrf6/Rdb5Ep34FC9Hxv25eXziI
3Jq+B3W/m3Hp+MG3h1I+wDF7cMuNwkFUvq0KfviLjT1jQUsvijYiedP7xrJq
Id7RTY8sbia+zz92fos/BXIJLdPr9Ujuz7gUt4fs/61/T7Viomgo2OZbmXqA
iZyw4r8HyFzHG/zlx9h3QUFpjtZNnw7Yq76PP/2BC/q0P3EavWSeEhpurPjZ
hpQRyUueplz0Sh4vnjnBgaD3UVvn8Q7c+d3SseU9F9unnEscZrGx4bzDSxmn
Lqz7PbFK+JCHO59/qRrUMfFW8HjfKaNe/GhYHRurQOZn7Sw714U9EM2wFF0y
nwljvXtKReAjQPBZPvRPFyJXXOxa1NYNYwfqRHkH4dt1jVrHT704efFUmW9/
K5IWUgZOs/sgmt4f9ayhDwtWUV+X2DWjIr305Yf1xGO2cLV2ZgiwirEiNKuT
gsMzSjYd0ujB0rvLBZP/v2e+W73CuZgCDTnXZzU7u1GnOKIkXyuE9DJZCZ9J
Gva8LWh3EeVgFt9Jrn0PH4wQjaNmAh5+uoQaKuTxMS/sVEF6B8muEQeB3jQB
Ns2wH00mOfaZOX/7iz4q0tfmvru/Q4D9jYYj/o58FD//anMij4rdUybt9xwU
oK3wwuxdpPe5zquWdHtAhReiGaqeAsTvtVlfaM2Hsqj0PJUoKtraGiVe+Aog
YrX3h7MVHyXMfcYO4VT45UdryQQIUJVw50wUuT7tOU6awTeoaL6W7sANFKBy
rxdHhayb6E314l+n4orPWsH/z6usCM2ZmrmVjiWXvppv/f/zI/fIBVWEP7wV
DkkhRnR4VYuKVZD1EM8Tl3eTdQl7F1sdEzp2P7kbE0m4tMYv1VeT8Ke5KHtQ
xJmOycev91o9FqI2QLL0KMlTjUJ6ru1ZOhaYPuZuIH1KXyNu4FdQE8r5BgNj
r+iQ2dFZF1EkROPVOfYlbk1wPtz5VRjWgkX3ZojuahOiznBRr/hqCh7SxrrT
TBhY9K/2z3Myp9babkll57iw1TcuuFTNxyzj9VZmJLdzI6bqB13mofjZpU3n
CH9mbj+jqKRHg3fygZW177hY6HVLvYDk+Hh+DbNxMR3Larxkll1jIUMgG7r1
Gp/0lsOuTnsYaDoxb45dYjOMJN9HSN5kYcH+BzFzyb5XrlTW/BRDQYRW7/wr
UV0YWL5u6bxmIQ4uDK+as52Cxoy/jV11DFRfXJ4eT3wg4eGPxRvXU9C2hxXT
f5wBfs+twbpvQuh9DPZJV6CAa6z1xbamA/E3oqVjfguRF29w87Q3FZRsn4N3
v9TAxv+ro5QXH36M2T7dUwcRd25UueMOFXfdKNfvLvqAhIHJrPvRA5CcLfh4
qfkDnqXxMy8lv8NgjP9e2u5OzLjrR0sPKseL7u3eWxXZWGM+e/jYtk68NYre
9e1cOc7LKz55sYCNZxUM3vasAax3+liS+7IGZUPe+0YXVWGFQ7vzzL5BZP76
d33Z4m7MjQ12H4ivxQFjitqL4wOw0pnlIEr8vMvI1uxT7Gck7x7IzCA94+7b
H6Yxh/lQGS1Mv9xABX01c4XfaQ4uhpWuPt9IznnVsFb4l1ZssMg5YT6tC7/v
OzByIkifYtDq3/9lorpZJNZnWzsmFmnsUCCeP7Nda49jFQeP68TYHofbceHS
DL+XXlxkXKk8JfOUA/dEelNJJQM3fdlWFzbwULhSfbdkLwufBp3i8acbfQcW
zz7by0NinObQs/RexM80/ewoyYTMocl37puJB+Z5dSxd1A3D1m2bjof1ok3s
t9iVpXw8O1+qUVfbDety7VvtLxl4s/NzVa82D9JC9oxpXBZ4S9qZ9dJ0mDwu
Te2T5MCqvLrjjREfIT55yf02pN/dvhhAZ/XC7CK18ay/EKHnY+JH8ihgKe15
K056HU/HrbCiTggKY2TBBSkqwn0yui3W9kIjzjOJTXqc+D4lqdvnOXD4USHt
SfZNkwnbObxWDI2n/tlZRHJUZqIj+AIf5eyDb96ubIZk0t9rC9YIYHA3s1XW
lY9GKx3ezSoqBnYq+JruI/1dED5UQDh/jPe3cjyV3BetiI1ZbgJ8d13/78Ne
PhYmvNH8eZeKZwsdJmx9BHjleyX8K+FMzNv4RYcjqWiNeSCSelKAM6baR/iE
JwssGgqLw6gokJ5yRYFwRmVWvqfV/8+x+FfFP/j/93ZjZIcenBLAImoWZ5h4
0X4X5j0Lwp+tOmHvFAh/PqxueL2U8GdQ5GGy+v9exJ25sJ1w5rXag09phnRM
bTReHUvWY8dFS06Q9e3W3Mq27XT8tkzTtiL8YWcmxiYR/phs/GftYUc8yuza
vOtpQgQ+0GkwJv5zFnl2Pr50MO1ztZ9lkt4aoK1heL4J/heid2en0eE7fCPn
Wr4QPwYjRQTkev6qHrP786UNH2yTLdXl+qFlkNfZVsvB0tdys8L+f15Fvfr3
WFgrgp4yDv68wEO94fecq4Qzc78ta9TUp2H3xgrKdnkeWJyW2tckZ6/f81BU
K6chttltA8+dg2IL+rqv9Xykv4p9qD+tDdtmzLl93Y0ObqXjqxxjDh7qzzCT
+cXD3pmPAv5aUtDfUyMQTu8E88YjGPKF8Az7+U9ah/TcA59jjwUysPXLkhY9
whO/9J3meuoU7E1ImZ+9jIEqCmNZ8DDhedazsq6UJig/6uHW6dKQrr9X+NRP
CLfFn0Zu/RvATL3vylu1qJjP/KcoP/EehTlrHjQXDEBWokNx4l0tjukfuF1i
WYWBm6X3uBJdmL/tV6OcVTn8FznZ6NSwMKq6I66ihgEXs5uJ/Nhy6Iu9fLTT
mo1KEx02M3gQqRnLT7560YYfo3PNN5+rxo55697nywxidaxkZdCpPhjK51w2
dPkEyy0NKwJEiYf6LNM5s5qPq/a2kldmUfFngrI/arAP7T8b6eq1fLgon5v/
T60FWxY4qlit74GDnYibnpAHyV41S/+DvRg9zL+wpbQd+nWvnm0O44IyTzy7
24ODcDXJXZlz23Hm3ppcnb1chNycct2lj/T4z5lPV0oxUFTjsmTlHy4WfJn+
O9udjWthPaYc7W4czDaeM1HBwyKPgolVZkw8NY6e/extLx7PdkkfXsnHjWMv
l5Rc74bJ8ySzUbcuVPqdaq5I4OFt6rfs8iom/ooefLb7RAumqRbW//7CgcZD
11SJOTxcOXYsKbaaCutVzDeel5hwMX0UxZ9Hev3BrN+X3lAwGB17Vz2sGwF9
ue5PPgixysymTI9CQfQRfrYFvxvbPmgsDyF+3pC843AI6Y1Lpqcsdr/Nw8ny
N/WKP5jQNpAt+beAzKmN7SfNo3wst5MIX0elYq1ixj4HS+IJa+wqHEivnNE7
FjiYScXZ1fKFHw4LIK90TO60DR9fKd8zTtynoknjwbNyPwE4jHXNCwkH5kT2
nzhzk/jMHUvpBOIbbt2f//iQef+4fNhBjPiG2Qt11nYy73kxWeIzyPo7y7Wx
9/9/Po3tGv+XzO8+KefVeqTv/Ln+KNyOzPVXMbVl2f+/3y/rZsnVbXSob1su
JyTr8jtvKT+62gSq7G+N84foCLq3omhbuhCKNWY++y41QYwWWKARQodyZFHh
HMLJcClPpz+nm8D+JXktpp2OvfEhBfRSIRYHvjuaEkGFv3eYqJouE+dfVxQF
mRBunN85P8OXB1HxAPlcMr+R8/k2abtp2HB4yyNPMy7CWpMq5Gv4CP41rz2v
iHDor7j9kyvdsNDd7364gQe53pfnUpWYUChcb+BNOPrlcIv6xB4mHKcbaUrp
CnFHUtw0MZCCWHWe6LSeTowrTt2f1ynE80AdXoYBBeZrRoZjUxhovB3owxkU
YtYs3YinnCYYN89msX62Qzv516U+8X74BTLXSC9m4Kl6A+/j63K4eB3XU39I
eqdjaCn7+wCUzco+PHGgoNMvo9C58D3GTlxwFm9jwH2x4nhETDmuBlcIy3ex
ESO5umV4aRfk/TuvR+8qh/nvZdpny1nIOXXyWnTnAFJnb42r+PMJU0oz+x30
3iNj3KUmpZP0i+OuZs3dTPTF+s4YcqrHnm1ac/wi+nFmc73fsW08rOtSlH3U
1IRwvTVS5w34SL0fofDlIR8dsceqrt1pxozldwPOD7Iw51d57vUY4s1Lf4/c
ftgBhaN2tHzxdoiu1ujdspsL1eXHjoj94OCq5Yxb4y3t2O8VULLgLheudx6e
2bGXgyW8DKN5wZ3gSP1bWunPA/fC2PVSKxZsbrl/ePi0ByPrVTsNJ3g4ft70
32ZqD5T+lWhGsdoxnjY29ed9Lvxl+tXOmXGgXPXy43EZGjY55hVKEh8atli9
ab28ACvP1+7nilCxgejC9vEe3DQUVEaQXpkY9mL3BR4VLfcG/WSeMJGn4xb5
YlKA3/9EuPw+Lrb0mintJD459NN949BPGsavRp4x0hfg3OvJhYPOfMxO+BBg
WkLFZMiZG3RHAS6v2PDUeR8ftM3i3vqJVHSqjLwNIbl5+RbHSJfMy9HDy6fq
k9z8dD1XmUPmyJ7SsJhNcjOzvkpKmsxR7nyfW+kk19jXrfKivehw2f/FW4Tk
GpMt93PthSYMqnPbpR7SEb51Mr8zV4iRXhPeefMmTBk48HJwextuNvzsMZvf
j342L8Iwj4XtacVsj3A+mJuGP09MZWB55rex6etJrl3zzHQl+ZWjXTf2MJYG
qTMH/lmxW+BzY556nF4fTHZv1V2czwWVekFFbj8Fel0PkrC2E5u63+2Q4wrR
Le2iba5L8usgPp44x8D6tu8JbaR302Z+81Yjnq8/3VmlhvT8lKOpuy3aiQ+X
33XS7R/Ay7Xs2VffN8Hgg6SmV9h7OB5WcxPJZUAyMvtxbWI5Yn+Enal0ZiNy
4ddba3cNIiZjR8fSLS0IFm6rlQ75iP3ZTbL7Dwxi99CDnRIVHJRsYjrtetGI
Kb88htN8hYgLkYytkiU8fLrS6kY+Bfe3tN1sj+PCanTt0VWkR8hfefn4jw0d
gbJhuaK+vRAclaUYqJBefN/+nRzh7g3RDovQf204821TV+cuLpQ3VZet/EnO
7YjGjlulHXiu7zDlSDcXDBengtWZbPitoO75UdMF1r89HutyeKCnFn+3CSPn
6HXT6pHrvXgk13ZgHvHMb3c4C0oauvFMbJH58ZXdoEb7p/HKebh2JMBGwoKJ
7Rvruk9otsK3f3LHH/c+NKve1px6kouJ+CdLpCSbQTVyTrhAZ6Kqr+BvC4v4
llTFmGIjBXSniD2tTd1oO3b/Y81bITIa3cv+9bYiit934G1nH+6NpqRn0ftw
efEdff1dApiefaG634EP0fz1xwOeUiG9V6ybQ3gb3adgEXSBjijOGivFbCGm
ngtbFXmPAoec9LE3MV1wcOpw76IKofOh29olmIdDY4/23iJcvfWCHnELNPSv
Ki+yjuDipmTEZWuyz3kzb49uO0KHAjtjwd71TJwKdtpMM+Uj0XbD/LY3XYgf
UjEfBwWOTc/u3itkQOlldknXAMkFWsxi2nQKbKpm3pgS0IGxyxzvJRNCRF94
kJLfSkNw5LDt4QeVcLn6yKCY5Lz44pgxsckByF2r2L50HhXeNsK5GSPvoSji
vnm2RCfKw0V6wsPKMXlPxMFMh43o74n20zI64eH25JShezm2mnUqn/zBwtqz
rEPtvYPwk938Q967F5orZGZWBNfhSE5GTtloP3qW+5qLj3Bx4DtjPEWP9GqH
qDXfnvNRRD+R+Yn4ufNR5Z+CVc34ejY/SLWYDW9qwsV3BXy0u9dOPt/SDkOp
HfefxxE/yZl2yvMCF6GH9zrGXuFg87mcwen7ejD4pluM/ZWH+IYfB7GxF0F5
U+f60zvg7udz6QmPCxH9lNKJaDZmVX0Kqw+iwdlr3/MtiWzQ1t3jr3nLx4Pt
I8tuqFFxzv7UjFnk+hvWrdXixQmxw+BiopgbFdwHj7ZqTGNi05hG9u+jQhwt
aAnf8qsPafGP184g3pUwJzR8dF4LFpSfT1LSESDELsHf7QAfm3el2d0qp+Jk
09jODfYCXNx+8tEE4ZvQunXHuWQq7lzcsvIN4dhhvajX/YRjr3oUWlYRjv0b
3xLT8f97vRRmPH0aQPoT71aW+xNyPgP1Zmuda0L5988lUbl0bLOOe+L+XAiZ
h9Q/azuboFpkvudjdzt+NnyVWjeV5GPn1am2PX2gMLdMWpPrvL/YQ85FtwXx
+3NSBF+5mB4rdUaT8HnD4zN2r4U0PI9KvPw+ho2d0zx+iOfwoXX1/QXl0+04
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
odSgnl28CHfbsKCf7ytJEBjoe23uRQfsej1NtqzE/cYqg1bJWBJkOTj/qXlG
g7jzcxbWDbhjfZeYlzAbIoIek8DZ0DX19m0arBH811u7hO8/sl5f9CEJdoby
PrZ0osGiq2GxNBl3v7fXexqCSHBt9buGg6o0SA7RdMpuwZ2q+6v90DUSWB2R
fuTMbIc9MZftd7fjjvV2YW7lURX/z4MEWzXMJcjkdpjmSAmRpeHORp6X7XAj
QdLI4dHlle1g1ZAyJdWBe1rBDHPBiQRfDj1yin7ZDp+SG/wmOnEP/Wzx30tr
EnzqHRdKtifWdec1CiV6ccd6kzH/J7T8z1lLErz5bej71qwdCiwUbzYv4Tot
GZY7LEhAv8EXLW/QDl3qO9sD+3DHehww/7xToGedGQk+ysQowMF2uCl2b/P2
ftw3jaQlcZ0hwbGXtGvfFdtBgm1j2NclHOu3wnzGlUTZaEqCVX4i2Q3EeqKr
wea85RK+liGYf/gUCXoWbnobEOv5D6NvaL+W8PM35K7/MCLBft4bY9Hc7ZBU
uyZjkYE71iOJeQF9z4Is4T6biqrOLif8wp/LAUv4tas3LyYeJxHje7Pd7Tkq
3PCkZM4u4Vg/AuYdm+R5txJ+eNpKf90EFWRtVV+4LuFUa7FLhXok2FY7JjY7
SIWipHi3ziUc6/fBfDpVue/cURKI2N58Cr1UEKoJ09dbwrFcXMxTzA1GeAm/
H1+a20mlgt3DPsv3SziW6475eW/v5WQdEsTZ0y43NVEhYGdNPe8Q7lgeJua6
byveJB0mQU2uCEPsBxWC/vV9c1nCsd5kzIc7akyCtUnwsunFuewqKsjXXnWr
WsKxnHDMqxTOPvUgfLz06ta4cir8eu06IDaMO9afgrno9XUcLoRvdXV8W1VE
hcjqZ2cuLeFYvi7mCRNcmzwJb0rdf1EzjwrZ9jldBUs41rOGuRXnk5v3CDet
CWPOv6dC/VPXV8tYuGM51ZhnKVI/JGuSoFXMnLyQRgX9l2nlOks41u+AuQHX
tbMNGiQYiBls1UymQtMlX/N7SziWN4s5pcJ49SrCLV/vy/z0kgr7q/XCvy7h
WB8o5h2rVW10Cc/8vknM7zkVCtf3+C0bwR3LV8fc9tXLuceE125tHfGMp0L7
54jDKks41reCucwNfW+GKgk2WQosvokh/q5UTTaXJfxQw/Jrhwl/q+W2kyuS
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
qqeLn1E/aH5L91bkMNxf+GNvu+4rBGVv8JpNwf3p8L+UmIhh4OId+BrQ+AXS
XzGTAxJwpyaFCb5/NAziJkK3ROO+QFzirQnxaNxzhKfdf90nniOs8J4miS/g
d3zl0H8BuP9UNIt5ScxbuCQKRN9rVAJz6qHLhzO4bw3Jkhn0GoZfZsrWjIjP
UOz2Y+oDN+7bRs095iQ6wGHWdZ8/fwmsV8sM2GnUg7tn1Tc1ng4otKEcei5U
AmJHv8nvP4P7Bq/Tz74u0CAxZ/fFDLES+N56unGDNe7UceZ8dhsNjJMPfX0i
WQIpzLGKSFfcl60pzfgdRYPPVheaCuRLgGfHwxHOMNzHmx0TxERosOawr9Tk
8RJQONMdsOkz7sOhhdH01TQQPzRTx29cAh6bLU4pVuPu+VSl7898O1Akbj6S
PFUCu5dt2Sb7A/evN+/q/Oluh603HRz5zUrgksq57k9tuB/ZmSp19l07ZOzy
YO63LQHyHaVwj1+4Sxer33pwuh0WgqwrAr2J7zlc8W+9QC/qrCiPk03H24Ez
0r3pzY0SyOs4fFlTBPeF7R6nL2i3Q4egjkbhTWLd0aV5+tgG3E9b8eebyrcD
r+H3HVkBJeCezVu0civuyywdzCJ42yGMPzC7/24JnP5teZF/H+4iy+xVeVe3
Q8n9ZZ33Q0rgX/QyMz1F3CdqJ1ktbO3QWnPJW+J+CejHmU2dV8E9XenUO5Up
KqzJvji7+WEJhJ9JklbRxN3TUdfAgFiXuYoGHr9ArMvefGVLuH4U9zlXv3PL
W6lgv0Vk4UFUCdz2KR0sOYa7J/WY0rJGKiRtkhJPji4BAaHdnb3Hcf/rPeHw
8xsV+gdYiemxJeC5aUdukzHuUkeTOMs+UsF/F+nOfHwJRJ5VCz16Bnct7+9v
0vOpoLDhgnPKkxJIii2Ljj+Lu97NM/7dOVSo4N75VudpCbSsKxeuM8N98rWP
wZb3VFCscVh74lkJ2K/wMGu2wP3djG3ifAoVPgR+IKc9L4F1PLx23la4VzVk
ZgsTHqNJHqcRPrXwXJCyhP9dlP4U8pYKHFmT1guEK+jYmAtZ487I/fvBmfAQ
hUvz7AkloF6UpCa1hN+ppgrTCI8YL+IeIj6nJ+3Oywkr3J+/WOf9mvie+3l/
KZURLp6ouuf5El7S62SgmE4FQzvuaFnC1b2T1e5Y4m5+YavdskwqcIWlvv5G
HOfYiRDvsnO4e369UyBJnJfpXcHBxoQ7BD8yJlvgnqCb6+eaS4WJyI+u0sR5
f57/Wi3cDHf75Rl5/xVQoZkyfsyTuK6o117O7j+L+6H5sizxYirMP9r0+h1x
3ZpMhGVkn8ZdTMEuQ7aSClpbM+wG4kogm/3HPo1TuE9L6cSVVlPBUi/0GZO4
j9TY818ePYF7gxuHWEodcZ0sOzbQGFMCNZqv1WWNcL/uYZ0/0kBc52yOu9OI
+1pyfvb70HHcC1IOTT4ixo1p9gP6LsS4MavBEAw8hjuMd58L66DCXNPgtg3E
uJRx9ETnqC7uFny1QYw+Kux1vPEsP6IEQsdaGUo6uGP975jnBwheyRknrquD
sq2ZxLjq+3gi+zjgLnRVyXP7LBVWFKubrgkrgTthgyNi6rjHPTbMmVvWDpZc
M70niHG+aDHzTLkK7nVtojRZ4jny9rKMeRDxHLF4VpOkroj7f8aarz7ztUOw
kknUS+I59Z+MxoNwedwlntp+yhdrBznvJLvUoBJ4+tersFAW90sNxpNrt7bD
Ot/J5Ke3SyDVVLu9QAZ3rA8d82XT6aV05XbQWr6qWtOfeI4rB6YrSeC+R593
0uFQO5QfjDg2Sjz3fQVE3uZtwD1e3MzPyIA4bhaRd0OJecX40A2F1SK4V/0+
qf78bDsoPW/TW0vMWwZ0iif3rsc9iD9Q6KRtOxzzyD3v41kCR/l5b+9eh7vZ
ZpVZV/d2cLw9E0+6UgK1UuU35jlxP6j9sW3Ktx3YykdKeNyIeVSiuMfz5bhv
NTPI6g9th/ZLZ6KULxPzUlO3Rb5/PaiLmtvchrh2+Lv2Yr+uUwns+/0n++wf
3CPGn51dmUR8T7u3Xlr2JaCp1y52ZQL3vv2ch1Vz2kHFeCOXxMUSeGvAX2HO
wv2n20ZL2ud26M0UdRi0LoGSIw57BRm4+/MNVY6QiHmahu6x+HMl0FpnO/Si
C/e0hzKJbsS8N90n8epeYt67q/nYlbk23Mv0zktcHGuHAz5Oie9MS6C8mF17
a+MS/tXhz2s+GqRYJo9ZGZZAL0dMZl8l7lFcss2TkjQQ8GgPjjhGzAP/bJO/
XoJ7+L11dkUKNOCOm2ZLOUJcVxc6yZRc3NX1hld+MKPBd2VH/3uaxHlX0d7F
noT7XO213r7LNJhUa+8xVCXmdaViGdXPcBcc8OCIukWDgunzE3OKxHFINRs8
E42741eldZdTadDdzPq+uJs4zpJ3uVtu43488+KK+DIaOM5lD5zZUQKnvma9
qriB+7LQ2fNHyTRIzl9pHiVVAp3aqabe7rj/Knr4Q4GtAza3LKvLFi0BDl66
rpIl7tYDi+ye5zvgopCkdygHMY79G/nzez/ufNm1gnI3OuBN01jFicVioPkW
KNbK4N78cqzP4XEHhDs0O/2bLYbeN+vDHTfj3v3s/OjZyg44alPstHy0GDp5
lg8vW4P7t6vuH+LdhmHqR4J11vdymKDwhuwfKkd9ynRWkCNgGIQD916+mlkB
CjUFO701P6PetjlNzS9pGBqeGo/VWVfD71lx9S+8Fainl1IZh1OGYb/F14LM
/GooGrtsOr0Zd4MaVr5I+jDsfZrFsYbnG3AX2JGc5XCX/ddpSs8ahi3eWt+O
fPkG/TwmixuNcH/a2n1NqHQYTu6OWKl/sBYaw4ueVDzGfVXInhPTrcPgvpFs
KRP6Az7v8udI3VqJeobXlaCI9mFI5NWMK539ARyFyUNmKrgfE1vHUukaBl0V
26K1l3+CQV+O19njuFc0ni7LZQzDEa0W+V+m9ZC3STBFywv3jXM+febTwzCr
2Xbc/wUJdm8JGqitxb3t+yd/VxEWGJxjxc7kNIJOy8sYnuAvqEc8mQkN3siC
zOr+/2r+NEKAk3X5+Re4X2t5xNYtyYI/nSFWZzSbwNjm74b0Itx9atro1bIs
OMQtM8dZ1wRpnYuPD07gfuFQOOf5wyxiflR08M04GbJIArXudl9RD9v46+He
YyyIStKhSGo0g8/goW/r7uB+jx50kNeYBWvigtOuhjZDs+0TWEzEnedC7OVF
CxZY5r3vC9zaAoPb375p6sD9Y+Yaw1hPFvBxcq9cuNgKOQN8fDIWVaiXHVHs
7fZhQWKS9JWPea0wMS2or3oTd8+PtdEHAlkw43fn+B7ONrAoXukb9RR3zX2K
rPWPWJBDzmTb/b4N6n4nRAp14D4qXFEfHc0CpTgd7vTlFBgbE3uh/g/3/hWH
jSSfssDxMdfQj7MUEHDOGXu1uRp13c9ZjudTWBBU6FEwwEEF/3be+O0XcS8+
0ifK/54FDauvt5ItqLA1OsngYDDuGW4dMT/yWPDkAW2PQQ4VfFKOc0S+xX31
nVXDFypZMKw1afXtYjucT9ul9JOF+wr5Q4VqtSyoX1BIKC1ph+qxWItcYjzD
/PCxKpWNDSzY5nGVKSVEg8+rX1Oq9uH+JLmO/08nCxJO/jaWrqUB893Ri3Y3
cJcxazu3pp8FyTOLwdu2dIBgrI/98BPcd1MK9YP7WPBsi9/fv44dYDhQ9zw5
H/cW5rO6xV4W7DFsTOPPJnzTdPn1RtwX2vcO3yD80cr1Oy3nO+CjxN7z1r9w
Zx3VzpnsYUF4QzRH6+FOsDGJ5Dy7pgb1uXtle10I9xy9nnvjUSccsXBWs5HG
nV3slRujm7iPZvVTNNs6Qfng8xteh3D/NDh/05rw0Yj8I5slu8BUmEcrxgr3
vdd7zrd1scCdT3VC4HIX7JThWVPqg7v3gqPsCcI3bZ3iFs3vgpkfVSeHYnFP
vfVqqIY47zvm5f35l3XDfWpKrFgO7gdWPE46RHgWK0ZIdFs3zOd2mejX4+6W
K+Vc3MGCL1x2XBuPdYMfTyGvzzDuOnJyhxUIvz/2crO4WzdInV156s2qWtRL
Fuwhk8YCSobVZt7obpCdDUqvlsLdfesZB2nCu/759vwp7Ib+OJnsHsA9acGy
+kU7C8qcbPQaOwiPdeMcs8D93f5kZ1HCx/gijsazE/NmtVjzMW/cKeIS56Ko
LNC/eKT72PYekP5DsumOwt1XKzB5LeGj2SzJfv0eMPNw7C59j/vqY4omIRQW
/INAxQvEfFdX7HvG3e+4n1C66LaccJ0dDOMKYr7OKxeWosLE3WWwjy2gjQVO
4iKVbB97QNXQuKqB/Tvq3WIgON9KjMM/9Mc2dvRA9rfk1cabcG99+Tbbm/Bp
m/FTAmy94Lit/t6HA7i/kvzTO9XCAj2l54G9W3uB+6Kz45QJ7s82Zb3zIFyu
unnb3aO98DRHmCHkjrukw/jG8WYW3LCvWvn3Ui9URy8YCj/A3XrST8Wd8Kbx
Fg6d8F7oN1RZMZWEe8SJjcEpxLi9prKL9d+7XqjbN6y0/BPuiR1CDY6lLDhV
s1JUsLMXDn5aMD84hLt5KkvjXjZx3ZZX+MTP9ILR3A1Jf7Y61Kme8bTCtyzY
J7GbMsbbB8nVkqzHIrgbJog1nYlkQYvJt3vrtftg7QnPqQNHcGcGRCo+dmTB
c7qzAldSH9hYGS+/8gL306n1fKetWHB87L+jq0v7oOBAt8WxPNwZfgoG8iYs
qPLaxWgk98HgkcKRyVrc75Mu5ezSYsHPFxsaqpb3g0YvbSHvN+7LUmvH94uy
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
t3bOqDsVv8V7yGuRZA1TGhzXsjpCsUJ9zhZxCxM63rUQMJL3f+dw92xG7m2R
W/EjFe9JQa3BUmY0KP2tvpSLPNDUJOYeHRf/nXflEfJGKeafj5Dvcrn3RZ6O
/zx4s5vxJA0Uh1e1ryI/+JnNpekN3hPdglJ9kSfv8lpwRP7wfeJJTzrO1J4z
PoDcOeoVx1Hk/T4Hn3HScUdB1td65jQobPp9XRF5sjNNvug13lO3GJHzke+r
qjDgRW57fJzBho7v+7YtXdiCBv/YvX3/WaK+xfeG2AY6rvr430oI8sSJwN9k
5H+b5AIyUvAuknWINoq8cNby0xfkZ8Brw0k6/kNf0EfvFA2EaZHT+cjdKcvV
K6/wbuef9iwTeWPQS5/nyBUNEjMz6LhBA9l9kyUNpCXltG8hz8tXrjhFx6WP
JY6fQ95HrjjjiXzkYvUvJjruui9O8AtyPon1Tgvk1WY2UPQS74dzbTbssELz
uvL86X/IneoOZpyh47eVNfn7kWtWxK/yIm9QYc7/nIx3v+9L+gesaRCi65ey
eooKE2ZdR6/RcdaobsP7yP813X1AQ17MlDu8l44vhnEQ1GxoICGZBDXIfzbu
E01MwrvlU2W7aOTeoUcYspG7772Ya07HazKFv5CRX3znz/oM+WbClOpmOr6Z
WGRz2xbVeWGGQR/kvueeiIYm4n0t7MrdDuShOw9k2SNvV2e6oEHHbaKFM6Xt
aBDr9qLUAHnARsk3Cy/w/jNNtLcaObV68oEMcqcT5UX+dFzRNsVpwp4Gj86N
8Q1aUGGjld+yfwLe7Xu8Xyk50MCra7KxBbnBJYqgCh1PG7GcD0TefNirsBw5
S6PXysJzvJuGyE8yO9KgR9Vl73PkzHfFRELpeM6+odO8TjT45HIi0/r/z2WS
0n0ej3cj5jVrE+TdhcHcx5E7CzVynKXjk8d9nkch56nb/UYDuXYsh48SHT/p
+4SJ0ZkGDhLx+tuRnxl5u97yDO9koex6CnLxx6O3aOZUECy238JGx4fvPViI
O02DWbMF1VvIaS/NRROe4D1wN39hA3J+EXfey8h/Ef689abjzIVX+/8i5/ny
lOs88lUyOUeHjsf21d+yOYP6ipvmvieRK6/OKv5+jPdt75OshV1Rn3MhpFoG
+QVhnSJDOn71wmJh8Fk0jv7l3d9Pons89fFTkUd479gbpZqB/I/z/vUG5Nte
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
+f8AbW/5jA==
       "]], {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], 
       FormBox[
        SuperscriptBox[
         TemplateBox[{"\[Psi]"}, "Abs"], "2"], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotRange -> {All, All},
      PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"arg[\[Psi]] / 2\[Pi]\"", {FontFamily -> "Arial"}, 
                Background -> Automatic, StripOnInput -> False]}, {
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
/wEdeLt3
                  "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -56.25}, 
                    Offset[{2.5, 0.}, {7.5, -56.25}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 
                    11.250000000000014`}, 
                    Offset[{2.5, 0.}, {7.5, 11.250000000000014`}]}, {{7.5, 
                    33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 56.25}, 
                    Offset[{2.5, 0.}, {7.5, 56.25}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{"\"Rainbow\"", ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Psi]] / 2\[Pi]\""}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707338299417018*^9, {3.707338346923091*^9, 3.7073383910487537`*^9}, 
   3.707338458509858*^9, 3.707339259188205*^9, {3.7073393755964336`*^9, 
   3.707339403829483*^9}},ExpressionUUID->"31e3cfc3-31f9-49a6-af9f-\
b6af57c7dc37"]
}, {2}]],

Cell[TextData[{
 "which are otherwise induced in-time by mixing ",
 StyleBox["in-phase",
  FontSlant->"Italic"],
 " eigenfunctions, due to their different eigenvalues."
}], "Text",
 CellChangeTimes->{{3.7073385271584845`*^9, 3.707338528352411*^9}, {
  3.707338578188919*^9, 3.707338608999523*^9}, {3.7073387614423356`*^9, 
  3.707338774652499*^9}},ExpressionUUID->"8028c78a-1ad6-43f8-88ba-\
076d85e3117c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"oscillator\[Phi]", "[", 
    RowBox[{"2", ",", " ", "x", ",", " ", "t"}], "]"}], " ", "+", " ", 
   RowBox[{"oscillator\[Phi]", "[", 
    RowBox[{"3", ",", " ", "x", ",", " ", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"plotWavefunction", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", "False", ",", 
     " ", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       SubscriptBox["\[Phi]", "n"], "]"}], "2"]}], "]"}], ",", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"4", "\[Pi]"}]}], "}"}]}], "\n", "]"}]}], "Input",
 CellChangeTimes->{{3.7073358802975793`*^9, 3.707335933788829*^9}, {
  3.7073386899777393`*^9, 3.7073387101068554`*^9}, {3.7073388515056047`*^9, 
  3.7073388591104784`*^9}, {3.7073392792331104`*^9, 
  3.707339289204064*^9}},ExpressionUUID->"676f4e73-9011-4238-a123-\
5a08451cefed"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 3.173008580125691, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 4 Pi}}, Typeset`size$$ = {750.5, {64., 12.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$3442414$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$3442414$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`plotWavefunction[0.2655629830068008 E^(Complex[0, 
              Rational[-5, 2]] $CellContext`t$$ + 
           Rational[-1, 2] $CellContext`x^2) (-2 + 4 $CellContext`x^2) + 
        0.10841563382300955` E^(Complex[0, 
              Rational[-7, 2]] $CellContext`t$$ + 
           Rational[-1, 2] $CellContext`x^2) ((-12) $CellContext`x + 
          8 $CellContext`x^3), {$CellContext`x, -5, 5}, False, Abs[
          Subscript[$CellContext`\[Phi], $CellContext`n]]^2], 
      "Specifications" :> {{$CellContext`t$$, 0, 4 Pi, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{802., {73., 80.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7073387105385523`*^9, 3.7073388602376013`*^9, 
  3.7073392902531815`*^9},ExpressionUUID->"281e02fd-6904-462b-bc62-\
d033d1e62ca4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantum Tunnelling", "Section",
 CellChangeTimes->{{3.7071870962896404`*^9, 
  3.7071870987427683`*^9}},ExpressionUUID->"8b8836d5-f4a9-42fb-8399-\
8566ab0cf67e"],

Cell[TextData[{
 "The Schrodinger evolution of the wavefunction enables particles to be \
appear in classically forbidden regions. Consider some corresponding waveform \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Proportional]", " ", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"-", "2"}], 
      SuperscriptBox["x", "2"]}]]}], TraditionalForm]],ExpressionUUID->
  "e1a7cff2-c700-43a3-bc5c-5025f010d58b"],
 ", ",
 StyleBox["kicked",
  FontSlant->"Italic"],
 " by a phase gradient ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], TraditionalForm]],
  ExpressionUUID->"1549ee2d-2c74-43a0-b82b-01a91a4c1ac7"],
 ", approaching a potential barrier."
}], "Text",
 CellChangeTimes->{{3.7072295289351444`*^9, 3.707229634249956*^9}, {
   3.7072297853892765`*^9, 3.7072297877005143`*^9}, {3.707229834608117*^9, 
   3.707229834608117*^9}, {3.707229865725167*^9, 3.7072298745102634`*^9}, 
   3.707231552844376*^9, {3.707249370770306*^9, 
   3.7072493724654837`*^9}},ExpressionUUID->"0c5dab27-9be2-4573-b28c-\
7385535db53f"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"incident\[Psi]", "[", "x_", "]"}], " ", "=", " ", 
     RowBox[{
      FractionBox[
       SqrtBox["2"], 
       SuperscriptBox["\[Pi]", 
        RowBox[{"1", "/", "4"}]]], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", " ", "2"}], " ", 
        SuperscriptBox["x", "2"]}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", " ", "\[ImaginaryI]"}], " ", "x"}], "]"}]}]}], ";"}], 
   " "}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"stepHeight", " ", "=", " ", "30"}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"stepV", "[", "x_", "]"}], " ", "=", " ", 
     RowBox[{"stepHeight", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"UnitStep", "[", 
         RowBox[{"x", "-", "3"}], "]"}], " ", "-", " ", 
        RowBox[{"UnitStep", "[", 
         RowBox[{"x", "-", "4"}], "]"}]}], ")"}]}]}], ";"}], "\n"}], 
  "Code"], "\n", 
 StyleBox[
  RowBox[{"Show", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"plotWavefunction", "[", " ", 
     RowBox[{
      RowBox[{"incident\[Psi]", "[", "x", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "2"}], ",", " ", "5"}], "}"}]}], " ", "]"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"stepV", "[", "x", "]"}], "/", "stepHeight"}], ",", " ", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"{", 
       RowBox[{"x", ",", "2.99", ",", " ", "4.01"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"Exclusions", "\[Rule]", "None"}], ",", " ", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", " ", "Red"}], "}"}]}], ",", "\n", "\t\t", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<V / \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "stepHeight", "]"}]}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], "Code"], "\n", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7072208193966928`*^9, 3.7072208443426614`*^9}, {
   3.7072218611471043`*^9, 3.7072218618625717`*^9}, {3.707221897271208*^9, 
   3.7072219627642355`*^9}, {3.7072220132849197`*^9, 
   3.7072220819072676`*^9}, {3.7072221874305553`*^9, 
   3.7072221987897453`*^9}, {3.707222272976853*^9, 3.707222274795181*^9}, {
   3.7072225782990527`*^9, 3.707222597145813*^9}, {3.707222668450097*^9, 
   3.7072227007182455`*^9}, 3.7072227400069094`*^9, {3.7072227793203354`*^9, 
   3.7072229285580754`*^9}, 3.707228798756957*^9, {3.7072297292601433`*^9, 
   3.707229746870408*^9}, {3.707229792006381*^9, 3.707229795221923*^9}, {
   3.707230422678875*^9, 3.7072304390966687`*^9}, {3.707230488704966*^9, 
   3.707230491089522*^9}, {3.707231738196059*^9, 3.707231754384697*^9}, {
   3.707250885127314*^9, 
   3.707250888215081*^9}},ExpressionUUID->"509dd8a0-41c0-40b8-9315-\
1c8acf5bb5a6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      GraphicsComplexBox[CompressedData["
1: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
Tm8ZRqLWtV4xvdgK42EhtxqeJxEVAr+POX8Twqxv7FY/p7qBzH/d0Ag0D8L3
zxyYo2VcQ074zud0SqV4w9fBtGL0Bry3JOddnyaDFkb7n+GNdTAK99uvMfQG
H/DbzjpyhYaIfJqiwOlgi3ORmrByX1ripOKIeL/eUdwxquF+bQod0awv+nK5
YBmjsXREO37QE3NF4yzje/Ox/VmljhsTDIRr3dvGQQ0XLJEcdm6AjUQI2dLV
Tu+VwVIPCP6ePLSOPk3vk+1dScTbtgruITetID6VtFfpWm24jHhm/k7bWBQR
IEt7Z5EMH+998k9gXIGbW0vqQmAEf9d80fiawhpMHO000ncqwsvV8xisozdA
zBIZJ6554/fRqNz+VRqCV0vH1rJfG+cKCUEDW+mI6lAr47NHt+Pyd8KzvijR
E0wzeqk3xNswqSgxtUUzBuIpnQvjw6UI7NiLm1857zISpot2GXnLBth9QXWj
2jckgjnRK6uFczPmp1p5x8QyBOR/Jro8Ik3DzJUbIeKDjERU65uolSM4Vk5n
uqaFJaNb8Q8nfX7//f7GDA4aBoxEwsj6L3/cFKsM2RnBc59EpB9K/d3vsxVL
HT30rYyLkbjF+ovjSY49dsmtnC9GmkRkuwoV0HwXw5RTSFPNWBDSL2/Rf8n8
dz44VFVSdo2eGO0K4PNVa8Tya9v4f0QxEpnx4y/PxmlhR1Kddjz5RiLWZMq3
ldozYH3uxwNfLf4bf/fdSfjOyhtIgou1N+bv+OLoFOWONI6FrTtsv8T+/b1/
9lz0HYl9g/plYniK/sYH25ifqzQRAO1BfS0+LNPgz3cpyPbtC2TkWGkUyjgN
46dZDx3UdIaK1sfvpf5+Htd29YwE8QhIvamjnUY3DYsPLkU7pfog+/FdVZOb
psFiLe3A07V/34dyf8L/f3+Emin1IdRMqc+nZsr8Q82U/VRqpvQDUjNl/UfN
lPMuaqbUE1Izpf+Zmin5HzVTzr+pmVJvTM2U+YWaKful1Ezpb6JmyvqCminn
J9RMqUejZsp9BNRM2U+hZko9CTVT6vmpmfI+oWbK/jg1U/oHqZmyHqZmynkf
NVPqKamZ0i9NzZR8lZop5/PUTKmHpmbK+4OaKfvf1Ezpv6JmynqOminnU9RM
qfejZsr9MNRM2Q+mZko9HDVT+pGombLeombK+RE1U/qfqZmS71Iz5Xyfmin1
09RMue+Bmin7XdRMqfehZkp/BTVT1lPUTDkfomZKPyc1U/IpaqacF1Mzpf6W
min3r1AzZf+Ymin1c9RM6V+iZsr6mZop54HUTOmXpmZK/k/NlPoGaqbUj1Mz
5X4Iaqbsz1EzpR6Jmin9H9RMWS9TM+W8j5op/abUTMlfqZlyHk/NlPpmaqbc
h0XNlPMvaqbU/1Izpf+Smin3NVAzZX+Omin1SNRM6fegZsr9NNRM2Z+nZkp9
IjVT+sGomdI/Ts2U/RtqptSnUDOl3p+aKfc9UTPlvIqaKfW61Ezpl6Rmyv0K
1EzZL6RmSj0UNVP6TaiZcp/M/6nrXv9Drvs4jmPGHGNO0SLJHEs5xUVYjili
RDmUZTxcTrkuxzldchpybU6JEBONWbSLSzWGHJrH5DTigRpbCtvluoY5z1x3
vLr3uvn8F36/7+f9MvM938z7RTP3Ymbuy818rzLz/sbMPYOZ/Tsz/7vNvPc3
c29tZp/FzPd4M+8Pzdx3mdmjMvM/zsx7ZDP3n2b2Isx8rzXzHs3MfY+ZfTcz
/6fNvM83cx9tZk/FzP8BM+8fzdyXmdmPMvP/zsx7ZTP3oWb2JMx8nzbz3s7M
/ZKZvUsz71vM3PeY2Vcws8dk5v+bmffGZu45zezPmfn/bub+wMy9t5l9GDP/
Z8y8PzVzz2dmz9HMexQz9zhm9hDM7CeZ+R9o5r2zmXtSM3txZv7Xm/+8TxBz
D25mP8bM/ygz72vN3Cua2bc1857NzD2fmT0VM/trZv63m7kvMHO/bWZv0sx7
GzP3Rmb2HczsQZnZVzXzPszMfZyZfRIze2Zm/s+buT8wc99tZr/RzPsZM/dC
ZvYZzOw5mdmDNvP+08z9q5n9ITN7hWbep5i5xzGzd2Bmn9XM+zQz93lm9lDM
7KeZ2SM2857SzD2pmT0fM/t/Zt6zmLnXMbOHYGbv1Mx7MzP3dWb2TMzsn5nZ
TzfzXtrMvbiZvS4z+55m3nOZuV8zsw9iZs/YzHtOM/esZvaDzOwNmtnvNvP+
2Mz9tZn9KzN7mWb2e828nzRzL2pmn8fMnp+ZHoCZ9/9m9g/M7M+Z2as1s59t
5v2wmftpM3tVZvYtzezFm3nvbube38zempl9VjN70Wb6D2buPczsXZjZGzSz
T2xmL93Me3Ez9/Jm9snMf+6ZiukDmLlvMLPvYGZfz8wer5l9cDO9DzP3PWb2
TczsS5rZozazj2+mx2CmX2KmZ2LmnsnMnov6yZ6m+sn+tpkegJn+hPrJPY36
yZ6ImT1HM/vPZvbo1U/uBdRP9hHM7NGZ2a81068xc79mZr/HzH6qmb11M+/z
zewRmNl7M9OXMHN/Y2Z/xMzeo5l9aDPvvc3cs5vZBzPTazFzf2Zmf8fM/qmZ
98Bm7pvN7K2buT8ws69gZr/OzPtVM/e2ZvoUZu6HzOylmHmfama/0sz7YjP3
0Wb2ss283zezR2Dmfa2Z/Tcz74XN3DObea9rpgdm5h7YzB6amffJZvaqzdwP
mNlDMPOe2Uw/w8y9lZl9GTPvrc3se5p5n27mvt7M+20zvSIz95xm9qzMvEc3
sy9s5r7BzF6DmZ6BmfskM/srZvYszfTFzNxLm9mLM7PXbabvYebezcyej5m9
VDM9IzP3pmb2tczsGZvpH5jpH5rZPzCz/2hmf99Mr8dMP8xMr87M/b2Z/UEz
++9mejFm+lVmepNm9ibM7G2a6R2Y6SOZ6bWZ6QOa6Wea2c8wsx9qpt9gpvdk
pj9npndoZs/BzJ6lmZ6Amf6QmR6amV6pmb0SM3utZnoZZvpaZnp/ZvYTzOxH
mtnrN9P3MdO3NLPfYWa/1Ew/wkxvykz/zkyf1sw+jZl9XjN9FDM9NTN9RzN7
GWb2Qs30Gcz0nMz0TM3stZjZqzXTCzHTFzPTOzSzX2Fmr9NMH8FMT8lMD9nM
HpKZPWgzPR4z/T4zPVEz+yxm9mnN9EDM9MPM9HPN7AOZ2Uc206cx07Mzsw9h
Zv/STF/ATL/TzB6Lmf1ZM70PM30wM31vM/teZvbNzfSlzPQozeyjmNmDNdPb
MNPfNbNnZGbP2Uw/x0xvz0xv2syelpk9cTM9JzP9RzN7Kmb2Ys30OMz0bs3s
F5nZazbTxzHT0zM/TlrYOq+zmz08Mz0AMz02M/1WM3tCZvaTzfRpzPSqzex/
mdk/N9ObMtOnNNNnN7M/Z2Z/30z/zEwv1cz+kJl9ZTP9GjN9aDN7X2b2zc30
pMz0J825FyaPm7DZzX6kmX6GmX6hmd6xmf0tM3vjZnpOZvruZvbyzPQCzPTZ
zPRczcnxPVoU+tHNXqOZXoWZXqCZvrCZvS4ze+Rmek9meupm9vHM9ADM9NfM
9FrN7FGZ2dc20ysyzxobmj8/y82eq5mejZmeqJn+uJk9PDP7/2b6auZOgUHx
AaPd7Fea6XeY6SWa6Sub2WMzszdvpt9lDvrsWs9p993ss5rp05jpg5rpiZvZ
5zPTHzDTdzOn1T2Sf2e2mz1MM/0PM71FM31mM/tzZvb0zfTJzAuTE+PHlLuv
Zr/ZTL/KTD/YfLLeuj5PD3Czf2mm92Gmp2iuvHJp4L54N3u1Zno9ZvqoZnrq
ZvYXzfQlzPT6zOsmTh78VFs3e8xmelRmesDm3/8YFfztAjd7nGZ6I2Z6jub6
fSJ+eP+Mm/1bM70fM31VM3t7ZnoBZnruZvYqzfQ3zPQMzdubdqmxdZSbvXcz
vTszvXFzYs8m9zrvcLOXa6YPZKa/av5qdPWTmQ/c7Fub6XuZ6Smb135SImFK
mJu9VjM9GjN9T/OKTXkzK81zs99upl9nph9uZv/TTM/EvPjQxf7bjrnZ/zXT
NzLTjzUvyEpr+kalR2r2ts30xcz0nM3se5rpk5hnP/53md/6u9nHNdP7MdNP
NU8Liftj6no3fQkzfU1zw4KzbfcedrOXa6b/Yz5/sezKwv9zs+9tpmdmphdt
bv7l1DfntnKzx2+mR2im/25mD9dM38e8dGj2o5Lz3OxTm+lvmekZm3PrvftN
7Gk3vQozvU7zF6ViS6Q/cLN3bKbfZO52/dCHFWu62Ts303Mz08s2J3zTpNLK
UW76AmZ6imb69Wb2jM30mMzFx8WlPpvsZg/cTN/MTC/a/K9VxV/rGVConZme
jpmesDkw64ciVSu72Qc30zszv1t36uFLdd30DMz0G81bRjeP2dTKXbAjt9eY
7m76I+Y/+6ving8TqraIcLP/baZnZt4QNuTi47Fu9vjN9AbN9NvNXY+dGx67
0k2fx0yf2Lym4rKX+ya62Xc306sz5/brfqf6Xjd9BzP9SnP7uKDdf5x0L7+y
/+Otl930VMz0Y83XXpzWecJdN/vtZvpz5tbjXi3TpqSb/oGZnqM5JvlGeuCz
7sxCiSuONnLTDzPTTzfHNb58tWeYmx6Cmb6jOSIypOWZcDf9FjO9WnPN5b3n
94t0Z6YuPJcx3k1vyUxv2hx3/2C9wdFuegdm+o3miAaPoq6scNMfMdNXNdcc
2CxtRII7M2ZUtdxdbnpkZnrs5rh9G4ePO+qmZ2Gmz2mOuPlr8r0MNz0bM71e
c80XKpealuvOfKd7/8JFiqjpR5npZZvjoudumVPBTa/CTG/THPH9noclarvp
vZjp15pr5tx5M6a5OzOk0ergLm56ieaYBVNqLOnp/su91PXl+7vpv5jp2ZqX
nBq0udxoN70qM31uc87W+9ue+tjdYcGSnWWXuenLmXPvZrSMWeNeM6RBSpl4
N30XM71a8512Bw+UTnbTWzLTkza/HTIwrdRR96a7t0+UvOSmv2juPeT13guu
uQufijlb4pabfo+ZHrG539Y6GUHFAtT0u8z0yc3b5++7XLyqu/SQ93KKNXTT
yzN/l75x9Nxm7iHtbt4IbOumz2OmL2ze88wn94qGu+lbmel1m6vcrfU4YIib
Po+ZfrB5TPruwIBJbvqy5lPNuhy7NMPdfOWp5Xvmu+llmel/m/M/yK4zeZWb
vp/5gwPjc/tucO8PLfx9s6/d865X6Xpjj5sepzmnx5fBx1Pd3Xe8dCHxhJse
lpm+t7nilI4jh2W56dOZJ2acaNopx30+bMCjWnnudUFjYy4GFlXTqzUHjCzo
k1LWPfT4/BqrqrjpnZnpt5sbLl/3TZ96bnqH5tj7DaKaNnbfHPBtWHAr93e1
jqUffctNX9T8TPR7q7a8456efXnw/Pfd9MzM9NjNHZIe5nUY46YHaI6vGJ3y
fJS75KTguYVmuk+0qVdl91I3PW3zjdIdGo5a7Q6+8H5Y9Y1u+oDmJpuj+hz/
2t174rIRM3a66Zmax3fcNuOVve7lFdI+zUp1n932eG+Hc276w+Z706r9fDvT
/fRbzbK/ynbT/zO3rNbjcd9b7n5Xh1cske+mx2mesnNOveSi7tWz17UZUcZN
j8+cEr6rV0hld8ZzZ4Ydre6m721+/N/cadPruJ9LKbW00ctu+pDmsE9CN11q
4f7wvbCUxWFu+rDmWXUGpL/e1b3h9oQrt8Ld9BLNBw8szt/Q3/374sTyfSLd
9JzNxQalhhYf5Q59KavVd+Pd9CPNnfPze/x1untYWpWh1aLd9FfN81c0nnIk
1p0wtNuiqSvc9CTNR5oO2/hinPs/RWYlZ2x2D1626eanW93nax+r3227O7VL
1VW7drvpuZp3jIgsVf9H9/qYbVNWHHfTnzbHJj3IKXbOPfV0xwHjs9z0RM3D
7y766bccd99qv7QOv+2mN2/u8Fqdr/cVuBsP+vuzjYKKqem9mmvMSvnnmvLu
0l8FFZR6xk1/2fzgcK/Rk19wX8n5IuPqi276q+bTZbO7933Vvf+VZnsPtXO3
ONDv7tSO7m29ZzRq2tW9euKRtet7uekBmxd8Xrlc+YHuiSkRM/4x1E0P3Bx5
KTH3+kfu8IB7gwZEuenjmtuGtj+ZNtPd8I2YsJYL3V+e3x6Vu8hdbeS5pPhP
3cVjX3i+8lo3vWBzXtJHS2ZvcmedTi5yK8lNb9t8/G7g2Ihd7t3Vev52/KCb
frA54bXVvdocc3826MqBxLPuqyMTq1f4xf2XqL9FRV1yZyx++FKna2763eaZ
CXMuB990hx546vOLD9xpF1a+nRhQXD06r1ZgVGl3cJmtyR0ruXfWbjEmuLq7
X5v9tS+Gugv6vHVhSyP3+o/OLJrUwt1p3qBOHcPc2euyH5bv6o75flxSRri7
cXrB0C393T9nzwuZFOkOCVkTXX6CO7Jb0s2EaHfi9EMDO6x05207d/jXBHfr
zOtNJu52zw4usrbcMfeZ6qn3J6S76zZY2PvXM+6f2lcumXDRXWF8/fHtb7h/
2hI9LeiOe3bW5TlHH7jz3l67vG/RIPX/AUiGZAE=
       "], {{{
          EdgeForm[], 
          GrayLevel[0.5], 
          GraphicsGroupBox[{
            PolygonBox[{{322, 3025, 193}}], 
            PolygonBox[CompressedData["
1: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
4z+APr61Rl/j36Qcq5wv8C9TXkut8VB8WMpnSTk/aq11/WhrT8wh/E9oRrkQ
7b9q70LPwNfkHe2tlNdWOT/jv6Qcq5y/1FfKZ1k5v+N/pNy33slDXWvoE/tM
H8P/1X4m9wnap/IsfwHuom0NYxTBz4THaFtOXYhHME/vSrQn8RRcorH0/p/y
i65iVZfGM3BhbLJ4DipHJo+fAm3o632tMX46TI89Rown0h5LdQXxQjApcs6p
+Glp56quMH5G2nPXnIvixaB/bIrjJeDmyJTES8HY0JTGy6hPPKFvJPxsOD80
lfFzYCF9F6K/iniltGOVUxYvp9+gvavnMX4RPB44pwpeFW7Bz9H3MX4BXEtu
E+rO01jKiZ1TB68LBQPnVMPPTTtWObXw2mmPpZzqeI20+9YcyuMV0p6r+qiH
14fClAtT7op3gyKUm+r5iLeDOupL90hdW3hFz3poil8Gl+JJxmiIN0o7VnWX
41dovMA0w6/UNYlNc/wq7Rlya+idCb8GFgUeo4n6Tnss1bXCW8NtgXNa4Fen
nau6Nlq7tOeuObfHO0CVyFyHXw9tQ9MR7wS7AtMZvwFGa6/qnqm9ATVD01PX
ChYHXqPueI+0Y5XTBb8x7bW8DO7G79E1i51zq+YOvdSmZzbeT+/MlDvobwT4
nVqjyNekAX5x2murnF747WnHKqe/zmbaYymnN94n7b51pmPOXyLld3Gd6eP4
iZTPZjs9/4m9Hz6gfAjG4xPgcnwMDMaH6HrhZ9LfQ/jDOsORcx7AH0w7VnXD
8Ue0h0MzAn8UXg3MSHyUfoPexehvtHKheeQxhuLD0h5LdU/gT2oNQ+c8prOT
dq7qxuLj0p675jwRfwrqxWYS/jRUi8xk/BloH5pn8edgt969aJ+Oz1CfoZmJ
vwQFQt8Dp+Evph2rnCn482nfK+/Qb8Rf0x6LnTMLn63zpPc9Pc91dhSje5He
F/B5kI2cswRfqjMROWcOPjftWOUs0t5LeyzlzMcXpN239tgA/F6oGrmPZfhy
GEB7bX3f4p/CEt0/9H2Nvw/jabuCulX4m1Bf73d6vuCrtd9o/5P2lfgbaceq
bg2+FvYEZh2+XmsYmw34u7oG9LVWz3t8i65p4DHewt9OeyzVbcXf0/6NnbMR
35R2ruq24dvTnrvmvFNnF04PzQe6lto/gdmDfwjFYvMR/jHkyB+jvz/gn8PQ
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

             "]]}]}}, {{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], {
            GrayLevel[0], 
            LineBox[CompressedData["
1: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

             "]]}}, Annotation[#, "Charting`Private`Tag$3391820#1"]& ]}}, 
       VertexColors -> CompressedData["
1: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
1gf1QaZv/r3TdsR9u13cNE7M8yVOoyn94gAOWZ8VfyvsADXieP3TeCb8cvnh
WUEcWK0KWb02l4YwC77OLBIDZY3kiP0E31hVNn6Xfk9FcMPbqKCMETQrOCWc
tOfh0vyx2EXtFDz9dfxjURgdPfQVtn+J782cSLHsnSKjUd1yyfKaITwf2PM0
tYAPBbX7Jmc8yNhY6/1ioq4fU+eXHZ0Z4EPc+kwnhZgHcb8Eiy+CHly62My8
KS6AQ/LPdSOnSdhikOH6oLYTB7aGKsQReZh4bf+6S7kkKPuSBzIfULFq4cpj
XtZ8uOS+brP5Q8IfbYs6vx/tCD5fcO19Cw/f1NVmGcymYFbF+bBLp5rgQJN9
GEt4j82o+zu2IxXJeZafZwfXQj52qPV3LAdjT7Ymmn4iuPflh6lN9hWo3OXj
5nuJDa9trmOL9LuRvP3ypjiHMtwonOqN62CiwGMwZ/VbIYzDM/Kn5jKxKjx7
h/nCVkQxZX7k7xJi9qeQ3xOLWMjpviETJkb4oE3zxO5mgodJZSXH5NnYbnvJ
O/prG4Jl1PkPVUdRdkL5uizBVf2xtQ1m39uRttPp5U07ARq+xOx1uMBBfVvm
ZkdpMno9HH6KRvLRHJ/7VeIPB98z/u19lEDGyTMlqbYhPFx+27570yEuOiZ3
PKT6EJ5vVrTLbpiO+dNiPxWI+UnJYj0McOtHvLzhqedvhsFju7/Dei5eu19r
FUkehGlezqaER8S5G9/1nCfOgl7s2P7b39n49OEwvCw7YLFMhL96OxPkpUM8
nXlcPNPpWyixkQbfmqSxHj0GxIYXRpJ+cxEbarKhUJ8Kxo9TkRuWjUDfjxbq
VcQDa3fAq7/2FIydO/zfuelhfK1KOWjmSuQyd385N58MU8Wx/f76g3ix73Rz
aCMfd2RPvf25mYxb1WLBmg59kHoYqO/3hY9T65qKzhwlYfdv/2WjTt3Y9a9J
MWm5ACNhHLWYMBIe3hhZVarcAaeLVp61z/hwi52N010kqD1mHaLMoyDW3LDA
W5aPPzIb606Yk+HI/cudL2xBQcfyh/uceJjRGsxLLKDA4IDiKbPxelwv7Qq2
2kjkty7PgipFg3BRs7HW2mqMB/g4FczigByyesLToRNmpqZW7xvKUPHM3vFq
GgvndOev/lcnxHq7d7yvTQzE/1j0SdDdgnOKFxd0HhXi9fMW7dR2JmYi17dZ
1rVC8I1NcmePIl+zd/IBwYtFx36/8ytqw7n+jZnxdqNQvi9/c/c7NqYUj00Z
57bDt2n5nexIAcr9VJtvG3DAbu3j09tImDQOS/mtNIJkllequDcXdaGWeWnT
fdh4bdlJu6V0GL657LZsLxdSms8jvogP4pXyjhdhRO/dW6ovet2QDucjp0jp
e/nw+nztHr2DjPB1qze2iA5h9SPzvCXlRF8kTNx4Z0mG9b6yxw8X9kPk5uGW
Eg4f2ruf1C9PIGHNp8iCK2o9OLK1OUB6gQAvlnxR0fUi4ezgvrqXkx3oNBfW
vysj7j1EJe9cDQkvg08sKWuhoC8nO+S7NuG/+je7JucS/Wxcv5xhRTz/7/ve
Z17x4L1hVp8bMT+pswwn+lUbwW+YuD/pS3Dn4qy/Jz9QcfjsgxXxVjUIkdKU
7zlM9KYd3k6f78Dejy4H2X/KwNX4WSw3nw0VC42ceao9EJuX6y+hWYbWkv0z
EleZEHv1Tl//kRDOZS9uzRgzkapg+j7PtBVFr98PPVIQghi1hv12xL0qtVhU
GLTB90P2srk5o8i6mhqw7hgbhUd69r7RbEe6gbJGyHcBjm7Y7M6eZKNygfYz
a10S2l9lNZkoCUA5L1qw+yEHK7adE5K0yUi15lDyEujwk4qx2HaW4GGqr5sD
qx8fL4YZz5OgYtGjnRGBJDp+ZUb8FmHzsNa6KcdLmYK2RHnVYddh+G9h10zG
Eb1MX/Z97BEZ0svKTm26M4DVP9yZ01TiXkIa/8fXfb9T/f5xADcSIilRaA8j
DS1K44mUJhUhaWooSVQUDSSirZBUFGmQ0VKEjCLrDMdeh+Oc40hSyUp8z/cP
eH1+fVxdFx3nfY9z7vv5rFs9molYk/Ue+c+qoRrz7u3SfhGW6ukxHDcw0NBZ
bSgKrcDT6tvXPsm0Ydq/Ot32+wxkq144XWZdht8X32vWnhKh4im/eLtIPL8/
OHaRb87Elu/l3B7xfoAZurQ8M168vp28Y9XGh4WYdPtcx4oxrbgw/31Q4Qg2
moJ6CzJTP0My5cOF5CYBCvbNeLR2bxnCc4efyvnxCQ7duYnX3/Mx+s2Q0Ter
CjjUzd5x8VYG7sh9Gs5Y2gI/v2f6PT+rUfTSUKP180ec+Mxb0ZrQjFG7f3vW
i9cdLQ/W+kwUj+OvLQ8UHV/CRFP+lM3SFe34UOUxJHmoGUO5+4M2BhYhmV/9
Et7iefzvvq5lZ3i4+8Mv/YpnMT6fUAh5dIiL11HPJh/YLoRZ6G2jCavq0Gc3
tnqok4EM3ahupmY1kj2CP1ZKtmGj9FleoT0Ds2pWhgb2luPxy3a3W/+/F+xa
ciE+Xjyv/fleOj2TDVfdd4qcHSI4nq0IndfLwPOj8zuj9zCgmP1vwVdOK7Yc
1r966gcTGh1JcywSvsJIzU75QqUQu5umqF/ewMaZS5LNe5h5yDyt0H/puQBV
33NvasaWYfE9qYO/JD6BETbWJfQ8H/Kuy1aGDq+ErGmt5rIjGZjR9Zi17DsP
UxyfX6lMacf5FTo+i/uacfZJoN0fqWJIu88899e4HT8WVgY1SrZA6tLMlf2/
i2FzNf62cScXCxbu4YUdE0I3BnbyW2phdUI6SiB+Xd9Mcw80C66B3PpFjiM6
RLDSPZt+4xADf+J9M4vuVOKCYnB3r1obmN+chGfF653LY7zWvrPj4FPz+y+Z
j0VQCbkWGc1iYLiS1MqNRiwID9YfqhgvwrrvutmShkxsrNbech7FGMc37vH3
bIX9McEy1gMW7E8dlJ6/Ih9bhyYOX2YshPT8iPST3Wx8FngtD3LJQahj7M3l
qgKYeWk/Kptcjq9PRt80Ls+AXGauQW1GC5izq/vfFbdj74h57/TTmtE/pr32
1tciVMdfCJ24qx23xk3MupbBwyYjzkDO22LwFVUPRmhxsb02fte1VUI0Vzt5
z26og5bJ2kLzBAZqjty0t7CrQrhJ8HYnxTZc93TnT3dlwM6jruOhTjnmF2yd
8OyLCPE+L0fGZTLgL3l6+JIBFvQK1hltMxLBKO6W0b7hTLT6PjOT+1iCdhvO
Yo/kVlQ4K+yPWcNC2vwrd7NOFuDLiGUK9VeE0JffeWQwmo0ZBitH/XmYC70O
29V7dwswfKP5dnvxviBNZV6gm0ImFljuuXlemy/eH/cPXmmvxJGxk4/EG2bA
o+/nr3jxetY14syE3rB2PDw+db3REh6klkwvt1tejNlLivZXT2/Hxs23rOev
acF7hseF+QtKMDukRi8ygYuoNT+WJu0XQu5rmYHgSy0W7HPUdolg4p5dUJVf
Uh1QqLfTgSkez1tdmAvUmah59P4Mt7waKrsOV33tEaG12d128RoG3o8eZNQU
VsBC51cUX6kNY/bsFpWHM/A2cdzjkstlsPw3ya38vAhnY1x0I1sYCNC4emrP
afH4KOMWatvTioknDVgH7jBxc7R/wsefhfCLibW5oNWKhuPZKkNdLPS9Nzn2
WOYLGn5LSEZ0CVBmV674bUMZjoenHp64PBtS1Z2144r48HsmK9qoVoEqw667
o6Iy0DBbu97QugXbjJXPTjTnImDFLJyxEOK24aB97M06yKx88vQMuwzHVJ2m
er/LREpdtesOGz6a/t57ePOMeP2h98/09+YMlHisb/6dzoPJqNxGl1IuRB+f
KsUcFkL9XVB+z5VafDMzbJk3tQwaULcq42Rj48P1BrM6+XC8NW61cmQ5mB1+
Y3XSMnDi1J8g+aAWaEz8G/KhiI0T1+tmYnguuDqDbRZGAkxzNPwXFstBjkO0
wvbODDwcHsJL+NWCEFX73YG7q3D/n/Etx0kZmHI2Qnr/dh7Gqf7yLAjmwoZp
cCB9t3gdUzsxjiNZh4DU5dXjcpl4NWdBTe36QqT62QQM/BMi4+iJxXEeZcj8
sc3nUMwnpKqE+8rE8RGT1XM16FaFeP94YGLPxQysa7HTPzi5BfaVK1aMUGjD
x9XxBwyjBVjaYu2oZyp+fzSofjwqHocjD28Saa1vBt9cycDarQi54zy22fu3
w4Ytd6DZkQdcVvfU2C/eZ2mwKjtHtWNle8zkppMt0D/P9H/rUALlZPmfujHf
MPxeyvzeE3wcdf5+RGp1KfIUKrtKGtuw2X3ZotxhAkjMmp/Fs2Pg4b1XtsvE
v4/DV4NLKuLfZ7T8rnI58e+TGv/Bb/0S8boytOTqtilCBI82KgloYOLS4nea
w6e2ItvBdOwiR/Hrc+R3S1aJeH41KjIeNUqI0NmZV0tihWhzX6N+7D0bFqqy
R0OkBVj3qhbfxfuKygGPWf7MMgikHC6oVLSAz3l2/EiBEDJpaUPHjMtheXtF
0q7EZtyqMjEVJQmx94XnmCzzKpSXZqokXW3CGpvFkecvidfTCkGhXsY1SLlb
eDvzHBfp37vj2DuFSBvZcfDq+DrsWR/4vfhHA04UyLQ3ygmxSy6oKO18AwTd
LU/u/qzDkzYf2fmvBZgglTTax5ULxcS5PdbatXg+qkYLtgK89Y5WCr3RhF0f
tAqkvauh7zxjxM8CPgKP1d7/xmlG3wP5MxvaKhHx4uOc0lV85KU6NW2QaUF6
5tGLWocqcG7LUu/h11uQ82XNyvTlfGw7xHS+N74cd9/cy6t5x0Py77OnKxwE
uD93z5PcxjIsW5Vu/+R7M9Lv8Dk4IsQN5sm4cxw2RHu3ZLFLm+Drpxfx0bQV
dp1mC7jfWWgKthPv/bkI/mk9hdvbiqxYlVvOCixYB+oNPZnTiLa3056nxYtw
enXGUQM/Jp5OmCd01qtD8hXd2AuVIhgo1yQul2bi0GfHfJFdNcwDva4ED4rQ
O9gwxtWage0RK9b5LK3Ats8JDoV/RGAd9lyY8YQBTVbIuYx+NjiypxM3HBRh
t7eScvZPBgYXFz9RFo9DBq80pk3ntiKoN32JoXg93O204eOLkYUo0f2ZMvWH
EN/HZk4u02dj/fWG2+x5n6F056J7yicBMjQ9c6YElqH5tZXzRadPmLJhe/yH
cD4kUoemvs+swFrlg9JyXhnwNjXKl1NswfwwZZcC2xqMj7JYfinpI0xDv2SY
+Tbj+VL5zcHHv+GYXuZEZdEnpDnMK7YRr5uYs6+fbaxvw/Qvwd6zhwtwIexh
QuQO8T5nq9OuFWntuLRzhKQ/vxlvZMNNhv8sglps9gy19e0Yo3Cu/1I7Dy8m
fuy7zC1GSn3E5KDqb1iy0CXeo6sFcz0TVPnMEuRkR3bNNP2GyjfnnrV+FO9P
Q3p8vUpLodF2GE6n2rBvl9pEn60CWORPSnzcwcCbzCG7H09FMA/JtoluFT+P
yQxtUSATKxaWTXqY0IqkHeom+Sbi56jWQ2W2DQtQHWLyw8XrnQuLY+X9hVhX
pHPbYBUb1/OeXNIQr485HV1NlrnicdhZIWWlVhmuB4yqeXGUj2S3sZYJX4S4
z88OeHGZg7mCtWP2TGzGy1GDSLwnxFaFq+57zKpxsWaC2X6ZJkw5Z7U2yU28
/7dN2bpodi1sNqbeyP/dCPuxg/JBi4RQPvP3af7aeizmcn+5dNbjfPXCtoF6
AaKs7gTNS2pEWTB7xe/NNahN15sooyxAg9X0dOcFzXhYyvFve1UFtrdN+akA
Pr6EDe9sPcqDYk5TVOToSohUV9x89rcFP4Mevf3xvAU7DT8FvM4qRzPb6r3V
tBZMfTrnxo9iPnIK0+Icz3KgYmwi3LuVBzl7t4qdPAHWnpct+WxZBof9VQ7D
nZpxJI0RsKtJCHZYV93MvWzx6zws4yya0NMY6V/+oBXsSZWmxWdZ+JQzg5U6
nYvH7Nqx87aKEFvomiT9hQlGct+4pS/F+72G1ffjckSonRvCKBWPi380PhbF
5NTg8+vb1wfF69jPnZrG8ucYuG++5kYLqxJqE70+x6u0wVtYpDZV7O9YpwcS
Izg40X86peelCDFXDS1fFTEwqS2une/BwsbVUfIW00XQktY6yxavB9JkIzmF
T4sR/sHtQ8XNVtz659Ya4sfC4k7JkGsP8yEYk/q03laIm/sNcrJq2Qj9YdvR
X5wD/vkJ8k6zBSh1TkkrYXMws2p9/TxBBg7G55k2NLSAVznx5671dRjVPljG
N/kIC8ujs27HN2HRj6a41a5taBwWHffXRoCahnC91T0MeM+L2qf5/xyAkodh
5+LEf79jQSMfpxbhe73miiWH2vG6I2feomc8/GYfeb/lsXg/7v3278eub0i/
cZkf/6YFSV4rN5WEleDR9ejX+ie+YSXPLVElQrwfV7+SfDKoFJ1eUzQiX7TB
rvXZs0d6AsT1PjXIjRGv+2dvtwutFo83cwa+b88TIKgubLB3PxOnXb9sPvmr
FeGnfx9Umi9Euofd8e0aLOx9Yt99qk78vuxYVvfwhBBTNZWWe8ux0Scbm6vB
EMDxkHLDxDdCaN/ldxj8YKNjk0LMJPH+aWD06fziz0IYud23C5/NQTzne7z8
uia8Ppz3M8xbiNPzJ560fVcDxZHs39+MuHhb1V+4Z70QxxdpHUp9WYfB3HNa
PWrV8D2R4fr6KR9xUm5r2qbwsHV9sWXzuUoYhoYf/DqZj+ZKl2Ox4n2worea
jItKBfRDvqjPsWvBL4O0g+X+fChErJa/UMjBtv7v2x7681Cn5amtIZ6HP7yU
ehZ8rQwX1n0TFrxphsihNSI0WYiU12+yWffYGN8/K1M7sAnLU3hK6463IlT2
upHNWxZYcSsv9x/mQm3f3XuBM8X7CNaD0wNCJkamzhoKONYAbb3FFxe9F2FW
mvZDv31MlESeqpb1rEVa1C51NIlwV67VIjubAd/h2/QOhVZh3lYvHU35Nhid
KB9b4MRA4OLax+GHy9HSOEa2iSVen3vbZqe+Z+BB/YS3rCVs3IxTqCs2EyH1
ycueWeL5Zf2GVf2eKMW4tT9nMNNbMfJvmPIBPRbCErS0J1QUYPskTsKFGCE+
Le8/vi6AjbaVmtkHB3NxWp6ZcdVDALWPSzvreGVg6br4LjTKhLCCl7zanI8R
huOSVMT7rTuftS6/Pf0Ra93Vu5zVmuFxecmPnVHtiLkpXXR5Bg9L7i3IPDyr
GMZHDil2zW7HMW3Dz5X6LdjlNHLZp0klOI3zq7ZlfkNqxRY3k0V8JJ3QaBgY
UYrmrrDFmqO/4XhA0OMMLh+fFPZb+agwsHr76/2LjdtwlHPx1q4zAvwtLByT
PYGJjM1x29d5iJDRHZAlUBTizEW5LdUvmJDoaWzPP9iKLyuh6bNVCA2T0HeD
t1iYcCkmfpuVEInK846evCN+X3mvavt5jo2oG6W5XE4TjPTqMpVvCvF1Wdi0
lJxqbOduqMvM5uLazeaH+YeEWHhu9fzRj2sRdr7QMNWtERKbJdelTBIiKYPZ
WsmrR+Ocr0+sP1Zg86ygy4y8Fix7d3D2nt8tePn7sFy/cznuqDTZeInntS3j
HqXKi/eDXgPzzNbO5YB16c7pmeL38aJrzpceaYnXaxaKvyTGlMHwwmfWKs1m
tI9LPaE9phV/zizqPaPNhueshnRWDxcpStb9e4taMcpgygZTM/FzmaG6qC2t
EXNXTb5RId6nLM4zEYyIZeL6iwL9b9/qoB1i83Z8iQjXYgYkNKczMemeVCaU
asDIL5DO7BLB73KxSToYKDDSK5UbWYmHI1q7rTTakLEjZ7zXLQZaXNRsvnwt
g5Rq4w6lYBEUHo6rT2gQr2e79Wf0v2FCrmWBIUNShL6gBVcNPJkYQs88efsi
SJ4uH89CK1QlNn36VM0CZ2H9wODBL3CXvfd4mfjv5njVXcVgfhkMou9o3ojM
hmWXk/WqZj6U7t2SMv9ajoVH5ggGkzKwXENHZHSqBY5MhY+9hm1A7KzljhcE
CDAJ/nN1GhMKgfaj8sTjp6NmN7aeboZpbdFU7ztFqOpfu+7rKfF6g3tgvUIA
DxFzcsYZXCzG8A25IhupdvxbEeb35U4Ljp+VPZx9pgSj/kxTeXflm3j+cJ6v
G8jHpXpO/s+DpbDP9Q5c9LkN1nPcjy0YL4DVrXYvq/MMxPBk7Jx+iRDuHfHB
4JUAJe79Ih8rJsJHfjq8W1X8OgVy+1J0hJhm9nXS8QEmTrjIyWcOCnF4Jk4f
dhZiZK7PzYnfxPPilorddUeaMNB49kuwjxCXJ5UNO+xdg7PGJfLHd3DRbHQm
fuM28Xgbkr5m3p466EtcSbv6kwMPW7NrHx/wYD6y3/L0eQGKC3+NPvpWPI7F
SLw4zG7G3C17k99dF2JKztg3T1PZkJybufLfiyY0Rshy/La3osf7sEEki4Xq
u0U8zWtcMJ571C8cJcJ6zqL63l4m5hjl/prDaMBBVoLH31fieeKC+yUHdyaW
OWzlLmXV4q1q3q7ddSL4jrWwmShej/484HBGp6cK6Uf7q9nSbRi/tOZ25C4G
3A4pdl9hleMBuzGlnCdCgPshL6MkBhwqbSPyI9hYUGmy+uo2EQ7y3lxQGGAg
7pPs5rzRDGj9uxTTV9KKojPPZ5QOMfFlxAc3nttXqMTuS9r8Vfy86Disvb6D
jbuCsy8mhOchp1R3fFSkACJnu+rz4tehdO2I2Q8uZWHYrUmJF1z5sHBhxpUk
tEO1Z/jB4TI8dDNbhlJHFkMv8M74S8vaYaxe05io1IJhufvvxQ4VI1Tp6vwf
Rd/Q679byWEsH66neH2d30uwdYd6aLTuN8Q+uDizrJSPTYyXR/51liL5kRK7
1L4NB9U32f44IBA/798XyY9g4oOs1fYJN8TPmdmMK7n94vW3+tHleyOYmBxa
LfM6qBVGm2YnThfPd75Kww+onmTh2M5FN2/xuKgcHnki/agQZkf+Zk87VAsP
/ifHrFeNmPPqgu4DXSH2aB4ssAyrxyXV0PyK0HIsO3FP9pBsC5buPhQzIN6/
Rzme+rNtGwe/mtuSVi3l4eGJjpdDw8T7HUHQbp5+GQp/Wox7YtIMvcOr/uX0
CbH/8p02SzM2du9yW/5UswnWPZ5ZkW9acfzF3zWBe1h4zww/FSbBRWvwP5af
kwhH86vWy75lImHO3hkhG+txaEnps8Z8ERYdNm/tWsBEsH1jnptTDQpXzF3X
8EO8rmt5u+Tl/z+fbF1pMv14JYKl+lW6xrfh/tT88E2BDJRGmT9Pm89BumzC
cOn7ItiGaofNK2dgd6ezXKcqCy/GHo6+PkaEm2tm+/uvZaJ++jqpNoliFN+d
LrJyakXZ+d0c3UQWZEJczb9I5WP2NZ0niguE8DrNafMaXoYW8+5hqxflIOJD
TuI2WQE6/R7tGmFRjtlTP+4dV5QB5r7uUMUXLRgykFB7md+OP7kj70t+aYbb
ynUXrTni8Sy7Q/+pXTuaByar7izkweK0ynaX7GKUJjwdOV34DWeavNbe4rSg
4/Sp+dWvSzBfZ5J1vP03KBR76g2+4MPJxiSiJ74UlxZ8TpC82YadMY3NyhCg
f7fjrwVfGQi3lek10G7Ckd8KE2M8hDhgdoi3+mcN7ldX1B/S4OKyx9m2kxDP
3xU3A/G3Dgtvv1o5OoKFgjcps6vXcOGgkWZbu0z8OpcMHytRycT3hSEK3JEN
EPpn3HDJEL//uurePdvKxN7au+zyCbX4pNtXNkkgQtKAr/mBKAaUn26qf7Kw
CjGG/R6OSm2wf8kM7XJnIEr6hWWMpPh1+r7aoT1LhI6L5nKLcxio4zUxaytZ
6DhV7j5ykQjp1T7zNssxISo/H6vnUoLhtx3i4p63wvKs/8Bf8b7qgMWdOmuj
AkTfXf0i8ZwQTzffjRiWwsaq8A+VyQdyMc/Mw9FriwCvrLPVbtlyMPFGtd1a
yUz0/w75kaTCx4OYaMOOW+1YPEtCX8GMB29Hn7Oa5sWw3mQk4TipHQ8X33kh
YdWCDyPf1dauKIHD8ePb0pO/4ZSOGUfLmo8Oty05cjqlOHF9bEVobxuWu96Y
/OwXHwvWaiyXNmCgRtmuJ3JmG9xupBWVXBXgyflnnafnMWHm6KjTHsXFKo1Z
hWX7hJh+80b0UF0tApw5MrEjxPvC7vXLBsq4GKWlv1inuRUvs80s/2mzYFn9
9+zTk404+dd446xQEf59euGrdJuJ49r6K8yu1EH4rSF7C1sEQX2KuokKE6+q
Z6aOfFMNzhbHzAd9IsxUXzF//HoG1PqaH8yMqcAWFz22vFwbGkIzIuIiGRhc
xpdi7y3D+mljUtRPi/ApTnbGrFYGGgf+YJg1EwdfD5SM+tkKx5Ild1qfMDHN
4clOndeFMLQNXGsxrhW2vkYJtjJsxJavf2VY9BnvfRWijwgEWB+tvPznjjLc
6F2woFoqG8PnjerXz+BjTopv3EWzCix7/fCI4E4GnrK2Lz9s3ALhzft54bxq
PDlupTr660dMLC9dNvp1MwY+Ra/ZOqEN33//GB5+W4BbRw7PlDJggr3g/YHx
Fe3wyXl0Z/neZtwZ/T1e6FeETUG7GaPPideN21Mru0/y8L3GxfzZiWIsrCkc
+8qZiz7n95E59kL0GwcYOC+tg4eGpP2GPwzEq+6ZIq9TDUmvtFf/P+8td9/B
6tJ2Bg5IPJkcIFOBvg1rZJntIsw+9qPC+wUDy61PXTEtZOPij7q+bztFcExq
Mhd0M7D1r8irzYuBRFvmPqXKVsz68CpRqo2JhqVS4/KzvqJT8Fx/qXj/0zxp
5Bv9NWy4pc2J8uTlwSnFZrVOogCcXGGJ5cMyTD2aIPFc9RNGd6Qn3L/Ix7Fz
89iLeyvQNKxHbb9LBhjS1xn7f/OQtvu+36XX7bB4cXnh6j/NsGnPmLJ7qAjR
qvEPS0zbMStEz+XePx7sjisXqnUWozdSp82ri4u/Jj07F7sKUbzHJjh+XS3k
ittrm4yYyEnbVBAcWoP8Xq7zse8iMNucltc6M9Acbtoq/agSzFFp7ZZqbbjq
v87W0I+BnCVc9psDHIzzHePwL1b8/ryZ9Os4k4GVLkH9R9aw8Hf2sG0dGiLU
z9D10ZvPRJ6qu7O9dTH0n6/fEnq2FQsynXbtusvCxOz37c8350Oe6ar1x0yI
S8cu2Uz8yUaG5tO+KJ8c4P6P2gZ1AfZ4Plc8qlyOZ2cvRsVUZUAzcOfRU+L1
srNu8c/9pe2Y63njsPG7ZjC3T4v9+7kInpYyqT92t6PwlNvjtR94eDQz63Jj
SjGsTnBan8/i4uHT9Jo28c+7e2mHpzenDjFSizfcTmYg32aLf8D+KojM0iyz
FNqwXtlqW4MLA7fvm555sLgclw8mpAgKRLhzgbHfI4OBj3uGcmzE+1hcP67t
slyEDwi/nSHDxC3lvYwtFSW4/j3uQPqrViSmXwvQN2Hh/Ll63yWXC3C29qpe
uHjf8GrNOpmnkWxMcD5SrPAqF+Va4h3RfgGmrPua90udg4i26DCOUiZWj+//
PH6ueD8VdlQl7m47jtb7/lu3iIfq89sf5CwpRmHt5oD4me0ISOQbtpuI97Hp
exUs5pag9JGtX3kyF07bAt5sOiBEfECb0+WsWkSYdr++GsnEoNPAu/D0Oshm
3Vv2liFCmrHtyLmaTLQuvZOm1VQNtqJa05weEThM/w8iMwY61GUNxlVVoCc9
qGXu6DaU9mL7zTAGOjnnZheHliEu8vTwsb7i9djjGz7OPAYyz6gsuODPRGpR
uJ9rXyuS4hffvHFdvM+1KP1yd3gRIg8lJt/Qa8W7T6sMrv5g4eOwO7aa6l8Q
mrd1qlWfANvCsp/eXlMGp2Ke1iLLbCSMXq6dxuAj+kmQNX94Bd4pHXzm/jgD
nX8+jWHbtyA3jjE4ZwMXxfJG6RWWQqzjddr8DqjDkMrXlpfFZbD6kG7T2piJ
7oW+Sft28MGbZGzwjM3Fq6KVQSZHhPh4Irovwr8Wrn7TL1RplkHh5GrlNmE2
uipCfYu7+LhwPSL52ZVyJH/umn4lIwMBK29kxdxowX174Zx9X9g4kivH26ae
i6C96wx+rhTAZM8Hp3mhHEQvHKP58XcGkhh66uZ9LUib4VoqdYOLyY0ljdv3
CHEvYlGVR38t1H8su2uSwcS8I2e7UncXgrlmD1dRuhV4sZtp4VaGdzP8Vpx/
9wl7NjYXPxWvCzI+numd6leBLNvK2faBGXB4+euAhFYLzJd+U7ggnoe/RG5t
T34gwPghu4yPYMK1wXXmnZNcxDuWjfV2EKLgkCjZX6cO84ytOgoXcDHLuJb9
xFwImXpjV/XsOozN3jJv/QfxuOH+5nnwQSE6JMeXFCfXIvqExTBLKy5sH29/
fUu8X35jVGFx60QdJMwOe3uGi/eZA385YXuFqB+7b3n6t1rYjtw46pYjF8fK
7sbI2glxXRS9smSjeB6r3tynuIoLYzeNXM1N4n9/RWH3tnt1OCVzaur1AC6u
Zke1TdgtxLZJsicXyNfh2Kmbx0Jl25DyQ7ox47EA9l83y98zY4Lqd6C+r6Gc
ui9DOZW3Qzk1f1FOfe9POZULSjm1/6WcOmdIOXXvmHIqf5ty6vNPyqnz55RT
ORWUU/MR5dT3+JRTeXqUU/sRysnzXYRT9zopp3oNKKe+96GcundDOZXbQzm1
7qKcOq9COZUvSjn1uQTl1DlPyql735RTOd6UU58DU06dt6ecyuWgnFpfUU6d
P6Gcyg+knNq3Uk6d96OcuudLOdWXRDl1LoJy6l4q5VSuHeXUPpFy6nwd5VT+
NuXU58yUU+f5KafyPSinei4op75npJy650U5lQdFObXvo5w6L0c5lVtLOfW5
H+XUOWrKqfwEyqn+IMqp8xWUU/dbKafy8SinPt+gnDoXSjmV40059fk/5dR9
CsqpfBXKqb4MyqnvWymn7rVRTuVfUU59jkE5ec6TcCqnl3Lq82HKqXP1lFN5
GpRTvYRkXyFx/pByKv+Bcio/lnKqh4Jy6vtWyql7bZRTOVeUU31PlFPnbSin
7jtTTuUiUk7lq1NOfT9FOXXfh3Iq54dyqueOcuocIOVUDgPlVI4r5VQfBOXU
98iUU/fyKKdyuiinepcop87tUE7dj6acylGknMpjp5z6HpBy6v4U5VRuEuVU
/yzl1DlzyqmcH8qpnHDKqb4hyqlzNZRT95cpp/IMKad6/SinzlVSTuVaUE7l
31JO9WhQTp1DoJy610k5ledGOdVnSjl13ptyKm+Hciqvm3Kq94dy6rwQ5dT9
a8qpPEbKqX49yqnzmZRTORiUU3m5lFO9G5RT5z0op+7JUk7l41FO9YxTTt0n
opzKc6Oc6oOgnOqVo5w6P0k5lVNBOZVbSznV30o5dX6eciq/iHIq55xyqi+J
cuq8GeXU/X3KqdxOyqneasqpez2UU7lqlFO9DJRT/W6UU+dCKadyNiincncp
p3pUKafO4VNO5R1RTuWiU071K1FOneujnMpDoJzKQaX8/PxnqduU2jD2xItJ
jAcCVHsXsqtBO3VvlHIqt5NyqveHcqo/lHLqnDzlVB4R5VQ+OeVUTzfl1D0p
yqmcOsqpPgvKqV48ykO2/XkvHy+CxPLFnTsEAnydtnxm2iXaqfuSlFN5lZRT
fTeUU72ZlFPn7Smn8osop/LMKaf6qSmn7jdRTuXIUU71TVBO9dZRfqaxiv90
uQgWhnpD6yYLsURPLuZrDe3U/XfKqfxhyqn+MsqpHmTKqfs+lFO5apRTPQuU
r4zhv2Z1t+KAxpZqKX0hDt3UWnNfjXbqviflVN4m5VQvD+VUvyflEod++f5N
bsW5fx6v042FCP9jJjq2lXbq3jflVO4u5VRvF+VU/y/l1L0hyqkcNsqpXgbK
82YNWc50bkUo9/61k1uEyLd3vGpynXbqniblVB4m5VRvDuVU/yblAR0Kkyxn
tiIhN+fQnH1C9GT5zhtbSDuV40E5laNOOdXDSDnV5045dW+RciofknKqL4by
/buSezO54v+/9cd5d92FmHT8fgBjGJt06t465VRuMOVUvxjlVE8x5cal1mVz
7wuxQfC2R+qiEOZTUuuDQTuVX0E5lR9OOdU/SDnVY072m6/se/nQVoh7nklZ
LuKf78pkLVrjRTt1v5tyKkeXcqpvi3Kqt5fyvy8fXFYSr7dEcs8Dq2KECPNp
vyL5lnYq/4dyqn+Bcqq/lfJbY0esH/tbAEutrck+8UIsVvnYfYBJu5a3h4JG
mQDvVv2t0nktRNmTK3sLv9FO5UtQTuV7U071AFJO9YlTvnWt5fWZtwXwP79p
1pkcIUYVzTK8PY12MmeGcCrnn3KqJ5TyiRpnNjw/LsBW/cejX4i9dOAsa/8G
2m1sq7IaNon3z3lXp4/OE0Jpcc3l6lO057HCnq2TE2BT+17zRrHfenKnJ6eQ
dirninKqZ4RyqqeYctWO8Xk3mvnQnqCvYCn27N1Prxf30r5/RGRj+Uc+JDcO
lmaKvUs9bWaFFod0KkeFcirHnnKq75LyN1oT/2qG81HrXRwy94t4HuQUf2y0
pn3Yqii1fW58vI2/Z/NQ7DbXG61EfrRTeUqUU30WlFN9uJRv3T11wbMNfNyo
ddJQyhfi8tpfbb+SaY/xjtnUMZMPJwXDhnNi/yAl4zfQQLvJm6f+XjUtmOBc
dmBngfh96DkredSyctKpPDfKqT4dyqk+bsoP6q63N01twYEP5z9+FvuO6wmz
Rxyk/fLD9nkj7oh/ruwslblfhYh8Mvf5sFu0My7Pr43YJP65sT6fBsWuzlnw
uE9Au8PO9PkfPvFwoH6OZnSREGrzl93hhVSQnrpkZqzgVTOquq00bieL1yGy
nrI1qCKdys2jnOotopzqPafcdWTrQNz1ZkQNy91uJp5nwyef3S11gXad5hfb
Dh1pxsExCyL+iOd9lqFv6qxM2sOv6Mu2Tm1G1xzl8XbidcsGpyuHvJdXk07l
nlFO9c5QTvVWU2655/fuZ/+akLbsgq18mPg59bmZFeNNu9zid++dqpvgu64j
LO2mEDl3Q8cVp9FO5QhRTvU1UE71ulKeJX9mtO7bJqy13VnhLF5XDyXfc+3q
o92zYdkR0c0mjDpQrDoxQIjlX6PyJyytIZ3Kh6Sc6ueivD3KXFnCpwltusf1
YsT7mjdss6HbNrTv22v1Ts21CZ87VEx0fYXQqxMZKJykncrboZzqNaCc6jml
3LLliJTZpiacPb3j6OKzQoz/sTCuL5F2Kj+Ncqq/hnKq55pyo0N+Fm564tdB
KibcxFMIOanzqq0i2qmcE8qp3HjKqb5Iyme2Rdx7KN8E0ZW2nE3uQvSMLfCv
mEE7ld9IOdWfRfm9+CfGb3u5yNt8varMVbzPneTycZMp7VQuBOVUnjblyi4p
giIhF9GqCzq2u4jf59pjuvJ2007lF1FO9UFQTvXDUk7lA1BO5SRT/vdHwYK+
z1zYRJ1RP+gkRIWRg+Pre7RT+XKUUz0+lFP3/Smn+sEpp/IoKKfyuikXuHPP
a8WK/+662WbujuLnelMc+1E57VQ+D+VUrwHlVB4C5VT/KeVUjgTlVG425VQO
A+Vlf3oKrfy4yH0ld/z8LiFe7ek0ualMO5ULTTnVy0k5lXdB+SZf045BVy5i
HmZvYOwQgjlWWO6jTzuVL0Q51ctAOZWbQbko7upVn91c6MgGab+wEaJyRaLp
eRvaqZxAyqk+JsqpnBDKqT53yqm8F8qpPHzKqXwSyr1O3PIYWCkeJ2NHmGdu
EEKLO95xeCztVG4t5VRvIOVUrgvl2dW3ndPmctFyoshm7RohLOdbnCgspJ3K
U6Kc6qGgfIRx2J7Tk7goNb16kG0shIffxYvXf9JO5d1RTvUHUU71hlO+UN0g
tPVvI6K5IwMEi8XzzoyOGDXQTuV4U071qFKewze6sL+2EcFJpaHH9YX4fmr6
m5oDtG99hcPctEacOH/jSf8sIdTy7fIeXqWdypmknOrtorz5vJmVw71GOGza
/NZ/pnhfOf46Z99r2t03rFtRdaYRayaM/qw0RbwvOJzbolVDO5XTSznVh0i5
9HgLbevtjZj3jcW5qyHE1bTerjaJBtJDWraOZi5pxPi0kJZpquJxUmGuTJI2
7a/OOfDzexrwzXbsMMMRQgxLvDvT8BTtVP8C5VT/NeUuybLD6yoboKhRE1Mz
TIij4+wzVkfSrs17pdWZ2oC5dVGrzg8JwPHR3GadTfv9tfJO4083wG2P3sXP
XQI8sXro7zaykfRAlXdtTr316HYylbJuFMCsL4YX/4R2Kj+fcqq/mHKTNXsV
zlXVY7ye3OOeagFe7jvgnVZE+8Bpxdm33tdj6fcSk0iOAKrFWipff9Lu1rDP
5cPpepx12+7b/FWAEwzrqb/F4yblDs9Hdcr31UHS67iE2xsBVj2u3KzsTDvV
00E51ZNOuX/j/nyz2jrcXP5qgluSAM+nLrZmnKX9pWrawwsZdZg09HuJ2wsB
lB+F2F6/Tvug7/5Nf3zrsMzf080tWoD6qE27FF/RHm3/4QV3hHj9e/18s9tV
ATwf5DrL9dGufaNvmNzcWpj7afec3i5A1/7l288HN5FO9ZtQTvXLU/5pRGnJ
MhXxfiv159tbmwXoyyqeW/2QdruAx2GuvTWw/p5+8oW5AIMaO4ctek178LkN
OpU5Ndhjt/lX7WIB5FjnkkS1tHc4P9gQZ1uDM3PPfF85Rvw+WZEls21OM+lU
bwXlVG845QFCt7E1y2sw5LgqwVZegKl3LWuTTGif7LimfuS0GlyKGOl8XEIA
7d+NySNsaN9i/+PYqfZqhAx73Pqogw/95xIOn87T/natSYiZbzXiawp5w4r4
MFM1faXHpJ3qwaFcfpbiYM7Jarz9e06//gsfBfknA+OraXdQqDxs4lSNrAnz
z73N4WOj11MHPR7tw0qPmqy0rEbZrnC1g2l8WDcqyup1025tdbfTcGI1Bpod
1+U/52P/88odsybwSKf6HSin+rUpH1CdW7BoWDWUZxY2ez7i46jSiuGz5tEe
W5UbNf9bFWYe0j+rE8HHiROPk3VNaf+984eF3ocqbPo2kBh0mQ//FS4yuk60
U/0slK9FWtrzhCrYKib/3evPh2xnVM0zN9rvT7mkpRNdhb1zHNca+fBx5TE7
ScebdjOexuCMwCp4uH5tavPk47bsEnud67TfdlrzctK2Kjz8HTp24yE+YlhS
SdpvaF904oHCmJ+V+PF3rpfSGj5yDty105JoIZ3qe6I8q+CUwJ9XiVXb1zdd
MxG/bvJLj7iNoH39JIvsnvJKhL87sHbkCj6+vqz2/jiW9j1fBz3q0yqx0u2+
muIiPlh/NKK26tJ+dfKe5mf+lbgmkH8tP40P7qUH/PNbaad6TCineuQpf1So
fPf64UosfmTsK6cufi5KGuRUD9Geeip700mLStTt8LSUVeajU3XK7Hhv2nlF
0z5gfCX0WC3fhg22YOjJY/fKWNqpHiLKvy4x1jdXrMS8yuwho94WvK0bmRGQ
SPsqrX+bH0pW4uP2oobdP1sAP0HRm1Tal0h6hmxsr0DFrob7z3kt2FISLlIu
pH1a6hHV59kVGHF4mPqKghZ4OPbP+NpBO9UPQjnVw075uJAWG9uECsw4Nq4y
IK0FlxPjTWdK8klXdNl1Vya8AitPzAplJrTgXp/DHl8V2runbdXcd7QCbuc2
j95/qwWfbmRFLl1CO9XLRrmPfeC3tr0VuDxzGv9ZcAu+/CvhLjehfUTIx/QT
thV4WPL7/feLLShyrptpvJ72SZLaDpdMK1A4MXyPp0cLqsz7ktY40G7e+Pf+
s/Hi1y2zPil4Rwt+DC3Is/KhneobopylNt9lvlIFlh1MusiwbsEfFxN52yDa
d1gcXJEmXYEtSr62Yy1a8LfW0sI+hHbXDGZ9UUc5zu2aMfTAuAWy749W7Yml
/W7kk0k/8spROXjEImVmCyYdj2t3KaCd6gujfFpZTYdnWjm+xy2f1j2pBTMa
3sx3Y9EeP0I5SyK5HNKWSt1G41ugtzHX42QN7Z/OeO0eE1kO/aiUB3ni8d1A
hyvh3U471ZdBOdU/TjmntWVoekA5dv6wXm3xjwfTYf+CfQdpb7W1jF7sVo4g
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
st4j/1k1VGPevV3aT3tB2Z99liPF75PRt7uMQqoRtnpnrNtf2ruOb3bdJ8OE
dcqMn1MPVCMi+IVv0z/aDZRrEpdLM3Hos2O+yK4a5oFeV4IHafdMcuxQk2TC
s/rxg5SN1ei+uD504RDtv2u/14T1MXBPcup6k0XVsDrX9uySRBvpHhqS9hv+
MBCvumeKvE41JL3SXs2VpL3Pbmz1UCcDGbpR3UzNaiR7BH+s/A8fLDeqdGpl
gLtlYswe6WqMPD6LqStNu+9YC5uJLQz8POBwRqenCulH+6vZ/+HDrPaWsxoZ
GOYVadnZVoUjhwt53sNoH8EMLDOqZED3sfrABXYV8vcd6SmRoV21kMNQ/MKA
6y/VbVGPquCz7cUkdzna78q1WmRnM+A7fJveodAqzNvqpaMpT7um+d+SUxkM
3NG4IzkvqAr1FusX5P2HT82bWtzwhoFU0zGJmcerYLS2bbWaAu0xUos33E5m
IN9mi3/A/iqIzNIss/7DtUzWFponMFBz5Ka9hV0Vwk2Ctzsp0j4781hBcgwD
/0KUZBtQhS6jWS5pI2lPGvA1PxDFgPLTTfVPFlYhxrDfw1GJ9vnLQr+oRzIw
Jf3qaxftKmxZVOijOIp2w/fpeX4hDKzijdjzT6kKiXOO3NmlTLvpK7lsa18G
ghbKfpjQUAmnKS/SpVRo/9ypaSx/joH75mtutLAqoTbR63P8f/jaefOyMk4z
kLjj0oGEz5X4rL6eYT2W9k0J2zK0jjPAvig9ZvnLSkxTaWuOU6Wd2ea0vNaZ
geZw01bpR5Vgjkprt1Sj3Ur3bPqNQwz8iffNLLpTiQuKwd29/+F2cY8/9O5i
YDxn6MiOs5Wok5k1YsN42mtb3i55ac/ArNaVJtOPVyJYql+l6z981/SvqXtt
GFg2cG7cN8dKLB36OvGBOu2O0T/eFm5iYNeMgVyvDZUI6z08/4cG7cc8GmJc
VzIwaLpo0WqNSpg/vLDswQTa/S4Xm6SDgQIjvVK5kZV4OKK120qD9rB7aY3D
TRgIWTDNqXioAl0em1+NGE97VmaY5sNVDGhNU75vxa/AI8upuqdVaOcw/T+I
zBjoUJc1GFdVgZ70oJa5o2lvbXa3XbyGgfejBxk1hRWw0PkVxVeifbSs5e3i
tQxskGyX3pdcgX6JXDWrEbTPVF8xf/x6BtT6mh/MjKnAFhc9trwc7Uv19BiO
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
ZLiUlD2RRfsBHxXSjWQiJPKGF2N+dUFo7hurYCm0r+w4ZcGXTYQX6fP3dnR0
galIUs6V/Wh36j2V/D2PCOJ2efZHKrtA1TrKwEQQ7cQUNVpDEREKDl4+Y5zV
BaLPgub+40N7sZSGtXs1EYrz27iTfbpghtNN/QA72oXnNdK1sUSQdwv8Xe3Q
BcSzjt92MqM9slpzULCZCBXHlD59NuqC6lCryI3NKaQ7GmhdbukjAvbDyzwJ
sS4IX9chf15Ce8xq/SlVKhGWXc9h3u3qgl6ZX+Vi82gvK1Db+26QCEoH1siK
652w1+ZVkssM2rdznCQ9GSfCmwjLbacpnVBQ/dds6Rvaj9ZWlDDNEGFYjUmw
vbETFiYLFdS+oP3CTYU433ki7JsrPWZS3Anqey/xBPejPadTVv/yOhHirLgu
20V0QrfPBwJnH9q77xdK9m0RoY2z1nvMuxP2vLlWataJ9kUZaSZtFkZ/a3SO
drvSCfYUniepLWg/81gcK8VDAh/ppo/+qp0wp+hhIl6P9nEjYeXFwySwW/Xn
SZnuAN75w71qBWjf9TeV54Ysow8US0nvp3eAjSi1ODgX7SeK+Of6FUhAdqT+
l9vUAbnnQ+Nas9AeycVTiNUggW6nvHt5RgecKB4+dyEF7SX18ZEK2iR4GDQU
ciq6AwI/x8mmJaKd7s51PZfRx+oUY9MbfToY89bgGopFu1QP68GYCySQezHZ
2nu+A6xvpnW5hqLdNDB8468VCW6YJH+xVO+A7HS9dyVBaPeTY/rkaUeCHCad
pc9SHTDdvhTz2x/tHXGbyZYuJOB3f3loZqsdAqTMDB95of3m+d+ch4JIsKFh
+YC1oh1ejrF3pNmhPWnT+/vTUBKcXNj+ND6rHSb5qt8OWaO99v18K0s0Ce68
KS3gj20HeZ0bURIWaOfk/vHox1MSjO/kootfbwdcNv5sqSHalRpcr1xJJ8EB
fM1soVk7cBC9pP7oot3Wc1KD9JIEtr7OzIr/tYP51gFWjdNoL+obWa4qIEHP
EF4B9rbDmH1Aa5sK2ikPHagyJSRgeeql38bUDnLxR/J2KqH97/Gh8sxKEmif
PXDl/Hwb+GLo4ebH0G78ZOBWaAMJPpT4x17uaANWEWXdYQm0/zQljJ6nkiAj
WH7yXkAbyAz8aPrDg3aBbedxuEESUJWHNv45t8Edthc5GjvR/l9Z10vlryTg
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
mh5o/x8trHDi
        "]], {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJxNzA0slAEcBvA3DneXfHRHaUuptXF1w0hlOLaXJmUptLsyXZg7GppqdShC
dhm6uLKTLhb5WtJsNTmnmtbkIyqlwpo0R3Iqncs51Wb3vP/t2bPf9uzvciL1
UIIZQRAn/uV/k1dzXfKnrQKJlZvvYm5z+wbXLspceylmJN52d/gO9/mr/Gu0
cHY6GRQ6B3vWvyRnKC5jfwjb+RPmT//md83DTJcLMeLfcHu0hXCNDnZ+yhJF
LcCvdIpkPcU53C2plXr4S7nH2Yk/sLzv4XnpIhxC42VxDfDCnufZAxTXpx7I
O7MEC2reFDgZYeuPRwtVFKvsxouFy3BKSNI1C4K+Yi3vUtVIdzATvmE4aH6Z
DVsL676pOZR91/JbfSCcoimSZiTBRSxD745SmFSEmUeoYUOGxCl3Et7fdmWz
qwPD5H6j5JEhEI68tc9zTAynKRYV3tfh4rnCiRtqeCzc0MmZhF/Qw4s82EyT
H2y86Ev6w94lsvfdYlhjmWeVI4eVw1HrgjvgGTpjfeYU7Fdaoe9krTZ5q8S2
51wgHJAY5378JCxovp4eJYdtIhvrVE/gZ4eVHV7TcCM/PWGYZW3y9nbXpTke
3HRedWa9GO4q9RprkcP2rdJhyRM41l3dGjEFk1ZD2RWOa/Dft4f7kwcHp1cn
S0Swji5QnC6DG/Ta+kwVPB8ibtBp4KDZzsJslo3JnZULS7v94Hd19sJ4ETxr
w6yplMHKgfHh0A44V1Gp3DYFizp8QmxZtiZPBLSMJPPguA2ro4dEMNtAxqbJ
4Bjf4/wsFWxWMPKcOQjffS3wLv8KN/mOj9r9gB9UJUulS/AWVzY7yAiX3mu/
tUAxbWeC2/1luG3E8oMXYbdigvix+aiyhGJOfHP8NMWKqSOz1avgQW5Tq5Fi
5ilCIjCDM3R1tLXm8DHaH6ccGly2N3zsE8U9V6rv7LaA/ezD3LUUb3S+ScZa
wdFCLeMxxcV3yH5HOmzkzPD7KPZJCdrEYcApLfIv+RTX/tLUf6Z4dFdAqj8T
/guzdIiJ
           "]]}, 
         Annotation[#, "Charting`Private`Tag$3392135#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], 
       FormBox[
        SuperscriptBox[
         TemplateBox[{"\[Psi]"}, "Abs"], "2"], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotRange -> {All, All},
      PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                    FormBox["\"arg[\[Psi]] / 2\[Pi]\"", TraditionalForm], 
                    TraditionalForm, Editable -> True], {
                   FontFamily -> "Arial"}, Background -> Automatic, 
                   StripOnInput -> False]}, {
                  GraphicsBox[{{}, {}, 
                    RasterBox[CompressedData["
1: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
/wEdeLt3
                    "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                    AbsoluteThickness[0.1], 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                    LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                    CapForm[None], {}}, {Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -56.25}, 
                    Offset[{2.5, 0.}, {7.5, -56.25}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 
                    11.250000000000014`}, 
                    Offset[{2.5, 0.}, {7.5, 11.250000000000014`}]}, {{7.5, 
                    33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 56.25}, 
                    Offset[{2.5, 0.}, {7.5, 56.25}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                   Scaled[0.02], PlotRange -> All, Frame -> True, 
                   FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                   Opacity[0], FrameTicksStyle -> Opacity[0], 
                   ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]}, "BarLegend", DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{"\"Rainbow\"", ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Psi]] / 2\[Pi]\""}],
                ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
             "]"}]& )], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"V / 30\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7072208255172853`*^9, 3.7072208658913603`*^9}, 
   3.70722110994376*^9, 3.707221747216798*^9, {3.7072218238180623`*^9, 
   3.707221862464179*^9}, 3.7072218999046793`*^9, {3.7072219331133537`*^9, 
   3.70722196474708*^9}, {3.707222016522861*^9, 3.7072220836647186`*^9}, 
   3.7072222005121264`*^9, 3.7072222760969806`*^9, {3.7072225791787887`*^9, 
   3.7072225851784534`*^9}, {3.707222686451517*^9, 3.707222702519748*^9}, 
   3.707222741292367*^9, {3.7072227913392005`*^9, 3.707222831579302*^9}, {
   3.707222866342121*^9, 3.7072228966802416`*^9}, 3.707222929275025*^9, 
   3.7072288013753505`*^9, 3.707229038812192*^9, 3.7072297485143356`*^9, 
   3.7072304396508365`*^9, {3.7072304963407497`*^9, 3.707230507555953*^9}, {
   3.7072317509284797`*^9, 3.707231755285839*^9}, 3.707232452417859*^9, 
   3.7072328688905263`*^9, 3.7072329080236473`*^9, 3.7072331858222833`*^9, 
   3.70723332436641*^9, 3.7072334083661733`*^9, 3.707233886805851*^9, 
   3.707233942855747*^9, 3.707234011082341*^9, 3.707234280768014*^9, 
   3.707234379667125*^9, 3.7072348461603394`*^9, 3.7072351651898212`*^9, {
   3.7072354157780457`*^9, 3.7072354446450086`*^9}, 3.7072368101189747`*^9, 
   3.7072372157681403`*^9, 3.707238960786087*^9, 3.707240831673005*^9, 
   3.707250851129777*^9, 3.707250889451386*^9, 3.707327774898899*^9, 
   3.7073279140746956`*^9, 3.7073282408702497`*^9, 3.7073338921785016`*^9, 
   3.7073348449386644`*^9, 3.7073377598780875`*^9, 
   3.707338111792198*^9},ExpressionUUID->"a52ec19f-2856-4014-8d33-\
059ed9ab1191"]
}, {2}]],

Cell["\<\
This wavefunction has an expectation energy much smaller than the height of \
the potential.\
\>", "Text",
 CellChangeTimes->{{3.707230510075077*^9, 3.707230516278926*^9}, {
  3.707230580349909*^9, 3.70723061673106*^9}, {3.707313998258337*^9, 
  3.707313999409343*^9}},ExpressionUUID->"2b2a203b-7411-41f8-9552-\
1da05e24a5c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expectedEnergy", "[", 
  RowBox[{
   RowBox[{"incident\[Psi]", "[", "x", "]"}], ",", " ", "0", ",", " ", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7072315053175554`*^9, 3.707231536025422*^9}, {
  3.707231578722234*^9, 
  3.70723167206594*^9}},ExpressionUUID->"926ec0d6-3a02-4850-8c53-\
c4882bb4716d"],

Cell[BoxData[
 FractionBox["3", "2"]], "Output",
 CellChangeTimes->{{3.7072316629956512`*^9, 3.707231672585054*^9}, 
   3.7072324527718134`*^9, 3.707232869244742*^9, 3.707232908303835*^9, 
   3.707233187936161*^9, 3.7072333246645803`*^9, 3.70723340865136*^9, 
   3.7072338871406307`*^9, 3.7072339443591247`*^9, 3.7072340114219246`*^9, 
   3.7072342843502207`*^9, 3.7072343799675283`*^9, 3.7072348463393574`*^9, 
   3.7072351656357293`*^9, 3.7072354161311293`*^9, 3.707236810410051*^9, 
   3.7072372159723625`*^9, 3.7072389610895844`*^9, 3.7072408320738215`*^9, 
   3.707250851523658*^9, 3.7073277757352495`*^9, 3.707327915318914*^9, 
   3.7073282426847486`*^9, 3.707333893751992*^9, 3.707334845551276*^9, 
   3.7073381124821987`*^9},ExpressionUUID->"eddaf153-5d5c-42ea-9f5e-\
2d94d2d33cbb"]
}, Open  ]],

Cell["\<\
In a classical analog, this would mean the particle cannot be found beyond \
the potential barrier. However, when we evolve the wavefunction through \
time...\
\>", "Text",
 CellChangeTimes->{{3.7072317709096327`*^9, 3.7072318285455694`*^9}, {
  3.7072318786205573`*^9, 
  3.7072319052950816`*^9}},ExpressionUUID->"1bc3d323-e15f-48fe-b62f-\
636595a674d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"endTime", " ", "=", " ", "1.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"incident\[Psi]", 
    StyleBox["[", "Code"], 
    StyleBox[
     RowBox[{"space_", ",", " ", "time_"}], "Code"], 
    StyleBox["]", "Code"]}], 
   StyleBox[" ", "Code"], 
   StyleBox["=", "Code"], "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"simulateWavefunction", "[", 
     RowBox[{
      RowBox[{"incident\[Psi]", "[", "x", "]"}], ",", " ", 
      RowBox[{"stepV", "[", "x", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "6"}], ",", " ", "12"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "endTime"}], "}"}]}], "]"}], "[", 
    RowBox[{"space", ",", " ", "time"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.707220924182947*^9, 3.7072209608529263`*^9}, 
   3.7072210952548065`*^9, {3.7072211648462725`*^9, 3.7072212395794797`*^9}, {
   3.7072213420288153`*^9, 3.7072213451881485`*^9}, {3.7072214312192965`*^9, 
   3.7072214330190473`*^9}, {3.707221675647952*^9, 3.7072216762170925`*^9}, {
   3.7072222393145776`*^9, 3.7072222396055794`*^9}, 3.707222308159439*^9, {
   3.707222374324005*^9, 3.7072223774461856`*^9}, {3.7072224081729765`*^9, 
   3.7072224091736536`*^9}, {3.707228884487322*^9, 3.7072289160670023`*^9}, {
   3.7072321181462116`*^9, 3.7072321339027257`*^9}, 3.7072398253539953`*^9, 
   3.707240845087672*^9},ExpressionUUID->"155f738c-e5d8-4b98-98fe-\
c4d89ce1cedb"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Animate", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"plotWavefunction", "[", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{"incident\[Psi]", "[", 
          RowBox[{"x", ",", " ", "t"}], "]"}], ",", " ", 
         "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"-", "3"}], ",", " ", "8"}], "}"}], ",", " ", 
         "\[IndentingNewLine]", "\t\t\t", "False"}], "]"}], ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"stepV", "[", "x", "]"}], "/", "stepHeight"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "2.99", ",", " ", "4.01"}], "}"}], ",", " ", 
         RowBox[{"Exclusions", "\[Rule]", "None"}], ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", " ", "Red"}], "}"}]}]}], 
        "\[IndentingNewLine]", "\t\t", "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{"PlotRange", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1.2"}], "}"}]}]}], "\[IndentingNewLine]", 
      "\t", "]"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", "endTime"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], " ", "//", " ", 
   RowBox[{
    RowBox[{"Legended", "[", 
     RowBox[{"#", ",", " ", 
      RowBox[{"colorBar", "[", "]"}]}], "]"}], "&"}]}], "Code"], "\n", 
 StyleBox[
  RowBox[{"AutoCollapse", "[", "]"}], "Code"]}], "Input",
 CellChangeTimes->{{3.707220965737072*^9, 3.707221063443224*^9}, {
   3.7072211213597865`*^9, 3.707221121845224*^9}, {3.707221351442078*^9, 
   3.7072213523107243`*^9}, {3.7072221260694847`*^9, 3.7072221475285807`*^9}, 
   3.707222333864207*^9, {3.707222547361051*^9, 3.7072225706584835`*^9}, {
   3.7072226070030746`*^9, 3.7072226226727138`*^9}, 3.70722268371769*^9, 
   3.7072321402205257`*^9, {3.7072509401106415`*^9, 3.707250946731022*^9}, {
   3.7072509901448755`*^9, 3.707251053574712*^9}, {3.707337063126523*^9, 
   3.7073370950857973`*^9}, {3.7073371373678374`*^9, 
   3.707337138925153*^9}},ExpressionUUID->"da076eff-1ac4-4048-815e-\
2ebdec351689"],

Cell[BoxData[
 TemplateBox[{TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`t$$ = 0.7438894271850586, Typeset`show$$ = 
       True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 1.8}}, 
       Typeset`size$$ = {360., {118., 123.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       True, $CellContext`t$3393493$$ = 0}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`t$$, $CellContext`t$3393493$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[
          $CellContext`plotWavefunction[
           $CellContext`incident\[Psi][$CellContext`x, $CellContext`t$$], \
{$CellContext`x, -3, 8}, False], 
          
          Plot[$CellContext`stepV[$CellContext`x]/$CellContext`stepHeight, \
{$CellContext`x, 2.99, 4.01}, Exclusions -> None, PlotStyle -> {Thick, Red}], 
          PlotRange -> {0, 1.2}], 
        "Specifications" :> {{$CellContext`t$$, 0, 1.8, 
           AppearanceElements -> {
            "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
             "DirectionButton"}}}, 
        "Options" :> {
         ControlType -> Animator, AppearanceElements -> None, 
          DefaultBaseStyle -> "Animate", DefaultLabelStyle -> "AnimateLabel", 
          SynchronousUpdating -> True, ShrinkingDelay -> 10.}, 
        "DefaultOptions" :> {}], ImageSizeCache -> {411., {156., 163.}}, 
       SingleEvaluation -> True], Deinitialization :> None, 
      DynamicModuleValues :> {}, SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Animate", Deployed -> True, 
     StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]],FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"arg[\[Psi]]\"", {FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False]}, {
              GraphicsBox[{{}, {}, 
                RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
                 "], {{
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}}], {Antialiasing -> False, 
                 AbsoluteThickness[0.1], 
                 Directive[
                  Opacity[0.3], 
                  GrayLevel[0]], 
                 LineBox[
                  NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                   7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                   112.5}, {7.5, -112.5}}]]}, {
                 CapForm[None], {}}, {Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
               Scaled[0.02], PlotRange -> All, Frame -> True, 
               FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
               Opacity[0], FrameTicksStyle -> Opacity[0], 
               ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
     "BarLegend", DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"Rainbow\"", ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Psi]]\""}], ",", 
          RowBox[{"\"Ticks\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"-", "3.14`"}], ",", "0", ",", "3.14`"}], "}"}]}], 
          ",", 
          RowBox[{"\"TickLabels\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"\"-\[Pi]\"", ",", "\"0\"", ",", "\"\[Pi]\""}], 
              "}"}]}]}], "]"}]& )], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7072209723589387`*^9, {3.707221068773715*^9, 3.707221122300147*^9}, {
   3.707221229856222*^9, 3.7072212554785423`*^9}, 3.7072213531110754`*^9, {
   3.707221681519698*^9, 3.707221704824314*^9}, 3.7072217799760265`*^9, 
   3.7072218774016504`*^9, 3.7072221481518617`*^9, 3.7072222168985004`*^9, 
   3.7072222814584074`*^9, {3.707222320554716*^9, 3.707222335248086*^9}, 
   3.707222388949748*^9, 3.7072224933653984`*^9, 3.7072225494310656`*^9, {
   3.7072226103141537`*^9, 3.7072226231262093`*^9}, {3.707222689688222*^9, 
   3.707222706053258*^9}, 3.7072290396518154`*^9, 3.707229764433989*^9, {
   3.7072321428779325`*^9, 3.707232156221769*^9}, 3.7072324553489065`*^9, 
   3.707232871704936*^9, 3.7072329112023153`*^9, 3.707233191844102*^9, 
   3.70723332603508*^9, 3.7072334099512787`*^9, 3.7072334800302315`*^9, 
   3.707233891065343*^9, 3.7072339474037533`*^9, 3.707234015404217*^9, 
   3.707234297260554*^9, 3.7072343835314755`*^9, 3.7072348471139374`*^9, 
   3.7072351689574823`*^9, 3.707235416921497*^9, 3.707236811126484*^9, 
   3.707237218457451*^9, 3.7072389645193872`*^9, 3.7072408338045588`*^9, 
   3.707250855028741*^9, 3.7072509475465117`*^9, {3.7072510297542353`*^9, 
   3.707251061110136*^9}, 3.7072517886644073`*^9, 3.707327778779251*^9, 
   3.707327921165629*^9, 3.7073282461315584`*^9, 3.707333896322548*^9, 
   3.7073348509331045`*^9, {3.7073370795263867`*^9, 3.7073370960655518`*^9}, 
   3.70733714030637*^9, 
   3.7073381179241247`*^9},ExpressionUUID->"f60aa245-341f-4a29-9417-\
4841563b65f8"]
}, {2}]],

Cell["\<\
we find a non-negligible wavefunction amplitude can emerge beyond the \
barrier. The wavefunction has partially reflected off of, and partially \
transmitted through, the barrier.\
\>", "Text",
 CellChangeTimes->{{3.7072319169956512`*^9, 3.7072320005900283`*^9}, {
  3.7072454310340595`*^9, 3.7072454326698384`*^9}, {3.7072491533714833`*^9, 
  3.7072491571061463`*^9}, {3.707249228496072*^9, 
  3.7072493037354307`*^9}},ExpressionUUID->"aa5b74ba-7f18-4e31-b01d-\
34053f31817d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"transmitted\[Psi]", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"incident\[Psi]", "[", 
    RowBox[{"x", ",", " ", "endTime"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transmittedGrid", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "3"}], ",", " ", "8", ",", " ", "0.01"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transmittedProbs", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"transmitted\[Psi]", "[", "#1", "]"}], "]"}], "2"], " ", 
      "&"}], ")"}], " ", "@", " ", "transmittedGrid"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transmittedSamples", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"EmpiricalDistribution", "[", " ", 
      RowBox[{"transmittedProbs", " ", "\[Rule]", " ", "transmittedGrid"}], 
      "]"}], ",", " ", 
     SuperscriptBox["10", "3"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7072487191670904`*^9, 3.7072487876154385`*^9}, {
  3.7072510719976454`*^9, 3.7072510827079678`*^9}, {3.7073140286279526`*^9, 
  3.7073140293150253`*^9}},ExpressionUUID->"f1fda9e9-a48c-4e22-bab1-\
a8aabcdf3e7c"],

Cell["\<\
This implies a possibility of measuring the particle beyond the classically \
insurmountable barrier.\
\>", "Text",
 CellChangeTimes->{{3.7072491741457796`*^9, 3.7072492318893843`*^9}, {
   3.707249313368738*^9, 3.7072493356020246`*^9}, {3.707249389556947*^9, 
   3.707249409056898*^9}, 
   3.707249450200861*^9},ExpressionUUID->"702e363b-ff42-4ed5-b4fa-\
e294bd031fa4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox["Animate", "Code"], 
  StyleBox["[", "Code"], 
  StyleBox["\n", "Code"], 
  StyleBox["\t", "Code"], 
  RowBox[{
   RowBox[{
    StyleBox["Overlay", "Code"], 
    StyleBox["[", "Code"], 
    RowBox[{
     RowBox[{
      StyleBox["{", "Code"], 
      StyleBox["\[IndentingNewLine]", "Code"], 
      StyleBox["\t", "Code"], 
      RowBox[{
       RowBox[{
        StyleBox["Show", "Code"], 
        StyleBox["[", "Code"], 
        StyleBox["\[IndentingNewLine]", "Code"], 
        StyleBox["\t\t", "Code"], 
        RowBox[{
         StyleBox[
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t\t\t", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                RowBox[{
                 StyleBox[
                  RowBox[{
                   StyleBox["transmitted", "Code"], "\[Psi]"}]], "[", "x", 
                 "]"}], "]"}], "2"], ",", " ", "\n", "\t\t\t\t\t", 
              RowBox[{"ConditionalExpression", "[", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   StyleBox["transmitted\[Psi]", "Code"], "[", "x", "]"}], 
                  "]"}], "2"], ",", " ", 
                RowBox[{"x", " ", ">", " ", "4"}]}], "]"}]}], "}"}], ",", 
            "\n", "\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", 
              RowBox[{"-", "3"}], ",", " ", "8"}], "}"}], ",", " ", 
            RowBox[{"Filling", "\[Rule]", " ", "Axis"}], ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Default", ",", " ", "Red"}], "}"}]}], ",", " ", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.5"}], "}"}]}]}], "\n", "\t\t\t", "]"}], 
          "Code"], 
         StyleBox[",", "Code"], 
         StyleBox["\n", "Code"], 
         StyleBox["\t\t\t", "Code"], 
         StyleBox[
          RowBox[{"Histogram", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"transmittedSamples", "[", 
             RowBox[{"[", 
              RowBox[{";;", "n"}], "]"}], "]"}], ",", " ", 
            RowBox[{"{", "0.2", "}"}], ",", " ", "\n", "\t\t\t\t", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"bins", ",", " ", "counts"}], "}"}], ",", " ", 
              RowBox[{
               RowBox[{"counts", "/", "0.2"}], "/", 
               RowBox[{"Length", "[", "transmittedSamples", "]"}]}]}], 
             "]"}]}], "\n", "\t\t\t", "]"}], "Code"], 
         StyleBox[",", "Code"], 
         StyleBox["\n", "Code"], 
         StyleBox["\t\t\t", "Code"], 
         StyleBox[
          RowBox[{"Histogram", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"transmittedSamples", "[", 
               RowBox[{"[", 
                RowBox[{";;", "n"}], "]"}], "]"}], ",", " ", 
              RowBox[{
               RowBox[{"#", " ", ">", " ", "4"}], " ", "&"}]}], "]"}], ",", 
            " ", 
            RowBox[{"{", "0.2", "}"}], ",", " ", "\n", "\t\t\t\t", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"bins", ",", " ", "counts"}], "}"}], ",", " ", 
              RowBox[{
               RowBox[{"counts", "/", "0.2"}], "/", 
               RowBox[{"Length", "[", "transmittedSamples", "]"}]}]}], "]"}], 
            ",", "\n", "\t\t\t\t", 
            RowBox[{"ChartStyle", "\[Rule]", " ", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"1", ",", " ", "0.3", ",", " ", "0.3"}], "]"}]}]}], 
           "\n", "\t\t\t", "]"}], "Code"], 
         StyleBox[",", "Code"], 
         StyleBox["\n", "Code"], 
         StyleBox["\t\t\t", "Code"], 
         StyleBox[
          RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"stepV", "[", "x", "]"}], " ", 
             RowBox[{"0.5", " ", "/", " ", "stepHeight"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "2.99", ",", " ", "4.01"}], "}"}], ",", " ", 
            RowBox[{"Exclusions", "\[Rule]", "None"}], ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", " ", "Red"}], "}"}]}]}], 
           "\[IndentingNewLine]", "\t\t", "]"}], "Code"], 
         StyleBox[",", "Code"], 
         StyleBox["\[IndentingNewLine]", "Code"], 
         StyleBox["\t\t\t", "Code"], 
         RowBox[{
          StyleBox["AxesLabel", "Code"], 
          StyleBox[" ", "Code"], 
          StyleBox["\[Rule]", "Code"], 
          StyleBox[" ", "Code"], 
          RowBox[{
           StyleBox["{", "Code"], 
           RowBox[{
            StyleBox["\"\<x\>\"", "Code"], 
            StyleBox[",", "Code"], 
            StyleBox[" ", "Code"], 
            RowBox[{
             StyleBox[
              SuperscriptBox[
               RowBox[{"Abs", "[", "\[Psi]", "]"}], "2"], "Code"], 
             StyleBox["[", "Code"], 
             SubscriptBox[
              StyleBox["t", "Code"], "final"], 
             StyleBox["]", "Code"]}]}], 
           StyleBox["}", "Code"]}]}], 
         StyleBox[",", "Code"], 
         StyleBox[" ", "Code"], 
         StyleBox[
          RowBox[{"PlotRange", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "Code"]}], 
        StyleBox["\[IndentingNewLine]", "Code"], 
        StyleBox["\t", "Code"], 
        StyleBox["]", "Code"]}], 
       StyleBox[",", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t\t", "Code"], 
       StyleBox[
        RowBox[{"Text", "[", "\n", "\t\t\t", 
         RowBox[{"\"\<# measurements > 4 \\n=\>\"", " ", "<>", "\n", "\t\t\t", 
          RowBox[{"StringTake", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"ToString", "[", "\n", "\t\t\t\t\t", 
             RowBox[{"100", " ", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"Count", "[", 
                 RowBox[{
                  RowBox[{"transmittedSamples", "[", 
                   RowBox[{"[", 
                    RowBox[{";;", "n"}], "]"}], "]"}], ",", " ", 
                  RowBox[{"u_", " ", "/;", " ", 
                   RowBox[{"(", 
                    RowBox[{"u", " ", ">", " ", "4"}], ")"}]}]}], "]"}], " ", 
                "/", " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"n", " ", ">", " ", "0"}], ",", " ", "n", ",", " ", 
                  "1"}], "]"}]}], "]"}]}], "\n", "\t\t\t\t", "]"}], ",", " ", 
            RowBox[{"UpTo", "[", "4", "]"}]}], "]"}], " ", "<>", " ", 
          "\"\<%\>\""}], "\n", "\t\t", "]"}], "Code"]}], 
      StyleBox["}", "Code"]}], 
     StyleBox[",", "Code"], 
     StyleBox["\n", "Code"], 
     StyleBox["\t\t", "Code"], 
     StyleBox[
      RowBox[{"Alignment", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0"}], "}"}]}], "Code"]}], 
    StyleBox["]", "Code"]}], 
   StyleBox[",", "Code"], 
   StyleBox["\[IndentingNewLine]", "Code"], 
   StyleBox["\t", "Code"], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", " ", "0", ",", " ", "\"\<# measurements\>\""}], 
       "}"}], ",", " ", "0", ",", " ", 
      RowBox[{"Length", "[", "transmittedSamples", "]"}], ",", " ", "1"}], 
     "}"}], "Code"]}], 
  StyleBox["\[IndentingNewLine]", "Code"], 
  StyleBox["]", "Code"]}], "\n", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.707248817450094*^9, 3.7072489338600044`*^9}, {
   3.707248965425183*^9, 3.7072490256012897`*^9}, 3.7072498154052486`*^9, {
   3.7072511278164783`*^9, 3.7072511304739923`*^9}, {3.707251678778043*^9, 
   3.7072516832612963`*^9}, {3.7072517442985945`*^9, 
   3.7072517477091575`*^9}, {3.7073148639526577`*^9, 
   3.7073148669903407`*^9}},ExpressionUUID->"378d9657-0695-48c0-a264-\
ffeaefba4a75"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 417, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 0, "# measurements"}, 0, 1000, 1}}, 
    Typeset`size$$ = {360., {123., 130.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$3394217$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$3394217$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Overlay[{
         Show[
          Plot[{Abs[
              $CellContext`transmitted\[Psi][$CellContext`x]]^2, 
            ConditionalExpression[Abs[
               $CellContext`transmitted\[Psi][$CellContext`x]]^2, \
$CellContext`x > 4]}, {$CellContext`x, -3, 8}, Filling -> Axis, 
           PlotStyle -> {Default, Red}, PlotRange -> {0, 0.5}], 
          Histogram[
           Part[$CellContext`transmittedSamples, 
            Span[1, $CellContext`n$$]], {0.2}, 
           
           Function[{$CellContext`bins, $CellContext`counts}, \
($CellContext`counts/0.2)/Length[$CellContext`transmittedSamples]]], 
          Histogram[
           Select[
            Part[$CellContext`transmittedSamples, 
             Span[1, $CellContext`n$$]], # > 4& ], {0.2}, 
           
           Function[{$CellContext`bins, $CellContext`counts}, \
($CellContext`counts/0.2)/Length[$CellContext`transmittedSamples]], 
           ChartStyle -> RGBColor[1, 0.3, 0.3]], 
          
          Plot[$CellContext`stepV[$CellContext`x] (
            0.5/$CellContext`stepHeight), {$CellContext`x, 2.99, 4.01}, 
           Exclusions -> None, PlotStyle -> {Thick, Red}], AxesLabel -> {"x", 
            (Abs[$CellContext`\[Psi]]^2)[
             Subscript[$CellContext`t, $CellContext`final]]}, 
          PlotRange -> {0, 0.5}], 
         Text[
          StringJoin["# measurements > 4 \n=", 
           StringTake[
            ToString[100 N[Count[
                 Part[$CellContext`transmittedSamples, 
                  Span[1, $CellContext`n$$]], 
                 Condition[
                  Pattern[$CellContext`u, 
                   Blank[]], $CellContext`u > 4]]/
               If[$CellContext`n$$ > 0, $CellContext`n$$, 1]]], 
            UpTo[4]], "%"]]}, Alignment -> {1, 0}], 
      "Specifications" :> {{{$CellContext`n$$, 0, "# measurements"}, 0, 1000, 
         1, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{415., {162., 169.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7072488078851447`*^9, 3.707248894877884*^9, {3.7072489251256003`*^9, 
   3.707248993311486*^9}, 3.707249027811527*^9, 3.707249816919526*^9, 
   3.7072508555131617`*^9, 3.707251131162092*^9, 3.707251685658326*^9, 
   3.7072517496650295`*^9, 3.707254189171913*^9, 3.707314867673588*^9, 
   3.707327780056693*^9, 3.707327922139632*^9, 3.7073282470445604`*^9, 
   3.7073338974669576`*^9, 3.7073348520054674`*^9, 
   3.7073381190812283`*^9},ExpressionUUID->"e00156c6-a60d-4525-bd0d-\
be5323a71808"]
}, {2}]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 162, 3, 101, "Title", "ExpressionUUID" -> \
"06642691-0715-4a26-a4d0-fcad207eb3ef"],
Cell[745, 27, 325, 7, 91, "Subtitle", "ExpressionUUID" -> \
"388c0da2-de93-42ff-8686-57560a826f60"],
Cell[1073, 36, 544, 14, 30, "Text", "ExpressionUUID" -> \
"3824f30e-ad1a-41ca-9fa3-aed3beb25b9a"],
Cell[CellGroupData[{
Cell[1642, 54, 197, 3, 58, "Section", "ExpressionUUID" -> \
"96d49411-808c-402e-8587-4cf6bb752dd9"],
Cell[1842, 59, 736, 18, 105, "Code", "ExpressionUUID" -> \
"fc943dda-f9e1-44bd-ac88-beefc4d79be3"],
Cell[2581, 79, 4606, 103, 514, "Code", "ExpressionUUID" -> \
"3d89aed4-19ef-40b6-8c4c-d3824f5ba1bd"],
Cell[7190, 184, 2889, 88, 185, "Code", "ExpressionUUID" -> \
"b6090fb9-af65-416e-b856-941d8a8ea276"],
Cell[10082, 274, 536, 16, 86, "Code", "ExpressionUUID" -> \
"d2e5fc00-f07c-4d4b-b4df-b97e8b0d82fa"],
Cell[10621, 292, 980, 25, 141, "Code", "ExpressionUUID" -> \
"a6fff3bf-5687-4f43-a944-128f7d9fb5c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11638, 322, 163, 3, 70, "Section", "ExpressionUUID" -> \
"1844c1eb-1d4c-4ff3-b53f-0042200be0f1"],
Cell[11804, 327, 717, 12, 49, "Text", "ExpressionUUID" -> \
"3b9f712f-2542-4755-bb68-17dcab6fc296"],
Cell[12524, 341, 2077, 51, 75, "Input", "ExpressionUUID" -> \
"c9b5977e-cb19-4d88-95aa-e330fcd293e0"],
Cell[CellGroupData[{
Cell[14626, 396, 1624, 37, 183, "Input", "ExpressionUUID" -> \
"23031046-d31e-4ed6-a398-382162bc6970"],
Cell[16253, 435, 61069, 1052, 232, "Output", "ExpressionUUID" -> \
"f9aceceb-bac5-4c1b-b91a-1ec68b6d8f3b"]
}, {2}]],
Cell[77334, 1490, 564, 10, 30, "Text", "ExpressionUUID" -> \
"4b33c49f-81b0-49a7-a53c-a2b27503857a"],
Cell[CellGroupData[{
Cell[77923, 1504, 1782, 39, 174, "Input", "ExpressionUUID" -> \
"d49bac33-9b0d-4e59-b736-06fb5882f647"],
Cell[79708, 1545, 63873, 1110, 232, "Output", "ExpressionUUID" -> \
"3f1edfa7-8a30-4c3a-b8ab-28d306fca616"]
}, {2}]],
Cell[143593, 2658, 685, 12, 68, "Text", "ExpressionUUID" -> \
"a795a433-08db-4a40-826c-cd6fd3899a7e"],
Cell[CellGroupData[{
Cell[144303, 2674, 4359, 93, 402, "Input", "ExpressionUUID" -> \
"ed5b14e9-0015-47ed-a289-ace2f925fe9b"],
Cell[148665, 2769, 34046, 581, 256, "Output", "ExpressionUUID" -> \
"af8c84d6-f817-4019-a5b3-1c077981bec8"]
}, {2}]],
Cell[182723, 3353, 446, 8, 49, "Text", "ExpressionUUID" -> \
"add7be55-20fe-45fb-a2ce-6a687dc1a26a"],
Cell[183172, 3363, 1023, 23, 33, "Input", "ExpressionUUID" -> \
"fcb9b5cf-42ec-4b62-a533-ed35217f3e3f"],
Cell[CellGroupData[{
Cell[184220, 3390, 7136, 155, 628, "Input", "ExpressionUUID" -> \
"f0865b95-a499-46ce-a592-44456980c53e"],
Cell[191359, 3547, 5736, 107, 348, "Output", "ExpressionUUID" -> \
"743b5af9-7669-416e-978f-3a2706626734"]
}, {2}]],
Cell[197107, 3657, 571, 10, 49, "Text", "ExpressionUUID" -> \
"b3672dc8-f9b2-4c50-bdbe-10dd462f375e"],
Cell[CellGroupData[{
Cell[197703, 3671, 325, 8, 30, "Input", "ExpressionUUID" -> \
"d2b73624-d87e-4077-8691-dfd3713438df"],
Cell[198031, 3681, 112690, 1909, 270, "Output", "ExpressionUUID" -> \
"d5b3e8d8-6f6a-41b5-91b2-2fb47bb0513f"]
}, Open  ]],
Cell[310736, 5593, 704, 12, 68, "Text", "ExpressionUUID" -> \
"a8c70ef1-0db7-4242-96c0-4ca96b7af2fa"],
Cell[311443, 5607, 760, 19, 50, "Input", "ExpressionUUID" -> \
"6c136413-b6ef-4725-91c2-4b0854393173"],
Cell[CellGroupData[{
Cell[312228, 5630, 5748, 149, 463, "Input", "ExpressionUUID" -> \
"2050a5a1-5bd2-44ca-8f9e-a3d7315f2de5"],
Cell[317979, 5781, 16657, 314, 336, "Output", "ExpressionUUID" -> \
"768e9041-60b3-474a-9204-8e033227abeb"]
}, {2}]],
Cell[334648, 6098, 477, 9, 49, "Text", "ExpressionUUID" -> \
"3d388c4e-23df-4a2e-b252-04bcc0f72a37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335162, 6112, 173, 3, 70, "Section", "ExpressionUUID" -> \
"9999bc67-9945-48f0-8c1c-3e21349dac87"],
Cell[CellGroupData[{
Cell[335360, 6119, 184, 3, 49, "Subsection", "ExpressionUUID" -> \
"b6343981-caca-4df3-ad66-847c8e4c6149"],
Cell[335547, 6124, 523, 12, 34, "Text", "ExpressionUUID" -> \
"322847e0-8b6f-4e85-9969-a7fb7ed396b9"],
Cell[336073, 6138, 925, 24, 51, "Input", "ExpressionUUID" -> \
"c2d9e666-d24c-4604-aa23-de46091c6f82"],
Cell[337001, 6164, 199, 3, 30, "Text", "ExpressionUUID" -> \
"e21fcf9e-4a4b-4ca7-88a7-40f61618105a"],
Cell[337203, 6169, 468, 8, 30, "Text", "ExpressionUUID" -> \
"5d6e91cd-f668-4b19-9b0d-d87ab7378260"],
Cell[CellGroupData[{
Cell[337696, 6181, 535, 14, 32, "Input", "ExpressionUUID" -> \
"843ed6d6-ae17-4137-b65b-43848454a1f4"],
Cell[338234, 6197, 1234, 26, 70, "Output", "ExpressionUUID" -> \
"45284b0e-5481-4f14-bd92-b0d3fd2528c1"]
}, Open  ]],
Cell[339483, 6226, 368, 7, 30, "Text", "ExpressionUUID" -> \
"49d17306-5c24-4bcb-94e4-c6fc516cdc7d"],
Cell[CellGroupData[{
Cell[339876, 6237, 987, 23, 50, "Input", "ExpressionUUID" -> \
"07ad8dd8-d967-4dec-aabc-dd2cf3326ecb"],
Cell[340866, 6262, 990, 20, 70, "Output", "ExpressionUUID" -> \
"0036913e-adf5-41c8-8dff-7c080adaf664"]
}, Open  ]],
Cell[341871, 6285, 252, 4, 30, "Text", "ExpressionUUID" -> \
"73898a67-962d-448d-bf7c-43fb958d9195"],
Cell[CellGroupData[{
Cell[342148, 6293, 461, 11, 30, "Input", "ExpressionUUID" -> \
"edc82ec8-4d4c-48f4-9f84-6b07f0669ad5"],
Cell[342612, 6306, 1101, 24, 70, "Output", "ExpressionUUID" -> \
"8b6108fa-d3df-4428-bc83-ab60292f8006"]
}, Open  ]],
Cell[343728, 6333, 294, 6, 49, "Text", "ExpressionUUID" -> \
"235916b9-182f-412d-86c4-cbb9bd8b1400"],
Cell[CellGroupData[{
Cell[344047, 6343, 1174, 30, 70, "Input", "ExpressionUUID" -> \
"52f65e66-ba8d-4e77-ac27-38721814104a"],
Cell[345224, 6375, 738, 14, 70, "Output", "ExpressionUUID" -> \
"108d505e-4930-4506-86c9-d47252e1e64a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[346011, 6395, 227, 4, 41, "Subsection", "ExpressionUUID" -> \
"6fe4d653-0b9c-4a82-8ef4-ca19f38d7dd8"],
Cell[346241, 6401, 592, 13, 30, "Text", "ExpressionUUID" -> \
"5d9ce4ef-f7ca-46ef-bb75-d40a09bbbf0d"],
Cell[CellGroupData[{
Cell[346858, 6418, 999, 22, 67, "Input", "ExpressionUUID" -> \
"1ab279d2-52b7-49e3-8dbd-88488b1f5363"],
Cell[347860, 6442, 894, 19, 51, "Output", "ExpressionUUID" -> \
"e0c238fc-8082-406f-8958-aea004ba3775"]
}, Open  ]],
Cell[348769, 6464, 307, 7, 30, "Text", "ExpressionUUID" -> \
"54ea2302-bf3d-4963-90d5-5920fbb907ad"],
Cell[CellGroupData[{
Cell[349101, 6475, 397, 8, 30, "Input", "ExpressionUUID" -> \
"cec64203-cbc4-4aeb-9735-fbf423897af1"],
Cell[349501, 6485, 1264, 34, 46, "Output", "ExpressionUUID" -> \
"856c826f-654e-4a28-8c9c-4ceb3cfe4e37"]
}, Open  ]],
Cell[350780, 6522, 280, 6, 30, "Text", "ExpressionUUID" -> \
"36691e56-7acc-4802-9af6-2ad825c40096"],
Cell[CellGroupData[{
Cell[351085, 6532, 547, 12, 50, "Input", "ExpressionUUID" -> \
"c63030e1-5e2b-4462-87c6-249fd1d47342"],
Cell[351635, 6546, 650, 16, 46, "Output", "ExpressionUUID" -> \
"d0023091-8154-418f-9bd7-ff195ff1d3fb"]
}, Open  ]],
Cell[352300, 6565, 722, 16, 31, "Text", "ExpressionUUID" -> \
"1302c7dc-ec6e-4cb4-b220-c1062c47a207"],
Cell[CellGroupData[{
Cell[353047, 6585, 486, 14, 30, "Input", "ExpressionUUID" -> \
"55556e38-cb45-48a5-9c86-7c395abe1f2b"],
Cell[353536, 6601, 661, 15, 55, "Output", "ExpressionUUID" -> \
"b6776b68-178b-4b3b-8779-9be4978c530d"]
}, Open  ]],
Cell[354212, 6619, 840, 16, 31, "Text", "ExpressionUUID" -> \
"99e8acef-5b91-4fb9-85dd-d99d0ba08a0c"],
Cell[CellGroupData[{
Cell[355077, 6639, 647, 12, 30, "Input", "ExpressionUUID" -> \
"0228ea9c-e896-4fdd-871e-c1f94949b18b"],
Cell[355727, 6653, 908, 20, 30, "Output", "ExpressionUUID" -> \
"d9180688-9168-4e45-a8a6-1006563bed5f"]
}, Open  ]],
Cell[356650, 6676, 326, 7, 30, "Text", "ExpressionUUID" -> \
"6c3390ec-ed8a-48c9-873e-6e37fabfd4bc"],
Cell[CellGroupData[{
Cell[357001, 6687, 705, 18, 56, "Input", "ExpressionUUID" -> \
"bd6dfca2-63d3-47ed-99f8-9b0d52bb88e2"],
Cell[357709, 6707, 801, 20, 55, "Output", "ExpressionUUID" -> \
"059f82e2-4910-4a24-8efa-7c2d26ed5abd"]
}, Open  ]],
Cell[358525, 6730, 1150, 28, 50, "Text", "ExpressionUUID" -> \
"50346113-d6a0-44de-a20c-ac79324380d2"],
Cell[359678, 6760, 509, 11, 49, "Text", "ExpressionUUID" -> \
"25a9b4c8-d5a5-45c0-a641-c5bb2655402f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[360236, 6777, 180, 3, 70, "Section", "ExpressionUUID" -> \
"7aec4aae-46d1-4b18-bcab-3d9424211da3"],
Cell[360419, 6782, 225, 5, 30, "Input", "ExpressionUUID" -> \
"f14b494d-7caf-448c-b601-8ec62c49c1db"],
Cell[360647, 6789, 237, 5, 30, "Input", "ExpressionUUID" -> \
"4ec2dedb-fa1d-4f65-930e-5e1e6c3157da"],
Cell[360887, 6796, 258, 6, 30, "Input", "ExpressionUUID" -> \
"7f176cb6-18b4-4d05-9742-0982c25ad50b"],
Cell[361148, 6804, 259, 6, 30, "Input", "ExpressionUUID" -> \
"a1e1f6eb-b9be-4ffb-a9a6-29b6a545e74b"],
Cell[CellGroupData[{
Cell[361432, 6814, 178, 3, 49, "Subsection", "ExpressionUUID" -> \
"9d7a442d-3f0b-41d5-bbb9-e7b265c99c38"],
Cell[361613, 6819, 525, 9, 30, "Text", "ExpressionUUID" -> \
"3af405dc-ee7d-4e86-a493-711d036032e5"],
Cell[362141, 6830, 486, 12, 46, "Input", "ExpressionUUID" -> \
"00b8eba9-83ee-4632-bf46-947d9811ca17"],
Cell[362630, 6844, 280, 5, 30, "Text", "ExpressionUUID" -> \
"4c23512c-03cb-4b36-a069-0b12aac78fb6"],
Cell[CellGroupData[{
Cell[362935, 6853, 582, 14, 30, "Input", "ExpressionUUID" -> \
"c4554190-3b05-442f-bab6-4aec0fb66867"],
Cell[363520, 6869, 1241, 28, 46, "Output", "ExpressionUUID" -> \
"f3fac970-765e-4ec8-90ab-da3ea7ada447"]
}, Open  ]],
Cell[364776, 6900, 667, 16, 31, "Text", "ExpressionUUID" -> \
"668c3a52-97dd-4f75-8658-864a90cecb3d"],
Cell[CellGroupData[{
Cell[365468, 6920, 320, 9, 30, "Input", "ExpressionUUID" -> \
"604d0fac-c5e1-4803-9c9a-312214228b87"],
Cell[365791, 6931, 1452, 38, 46, "Output", "ExpressionUUID" -> \
"dffc1d22-adbf-4763-b25e-a5d321c3a31a"]
}, Open  ]],
Cell[367258, 6972, 1191, 30, 55, "Text", "ExpressionUUID" -> \
"45c51547-178f-4691-98e1-5242d3481ef8"],
Cell[CellGroupData[{
Cell[368474, 7006, 516, 12, 50, "Input", "ExpressionUUID" -> \
"6a6bb49d-6174-46b4-8162-ae67edc15938"],
Cell[368993, 7020, 1228, 32, 51, "Output", "ExpressionUUID" -> \
"30329b41-ef49-4f1b-ac40-9812e874e082"]
}, Open  ]],
Cell[370236, 7055, 423, 8, 30, "Text", "ExpressionUUID" -> \
"9c5c295d-bf75-47a5-af63-516fa7a12f6e"],
Cell[CellGroupData[{
Cell[370684, 7067, 1006, 22, 30, "Input", "ExpressionUUID" -> \
"adfe9040-111b-46d2-b18a-160a3ed89893"],
Cell[371693, 7091, 967, 20, 46, "Output", "ExpressionUUID" -> \
"a3a96322-5813-4f89-a166-0f49faa52690"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372697, 7116, 297, 7, 30, "Input", "ExpressionUUID" -> \
"228c2637-281e-444b-8172-81cb81eff827"],
Cell[372997, 7125, 1023, 22, 42, "Output", "ExpressionUUID" -> \
"07f53997-be11-4732-964e-5282499c0ac8"]
}, Open  ]],
Cell[374035, 7150, 631, 14, 49, "Text", "ExpressionUUID" -> \
"73ef2d14-56c8-4bb7-8a52-9c88b959368a"],
Cell[374669, 7166, 1270, 32, 83, "Input", "ExpressionUUID" -> \
"2e26f7b2-f6bf-4a0c-b493-cd356a2dae3c"],
Cell[CellGroupData[{
Cell[375964, 7202, 2236, 46, 214, "Input", "ExpressionUUID" -> \
"febf58de-4f5a-44ac-9137-e10f98be7e5a"],
Cell[378203, 7250, 14498, 278, 362, "Output", "ExpressionUUID" -> \
"39f21796-7b49-4417-9ca0-b5cbf9fa1df5"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[392747, 7534, 162, 3, 49, "Subsection", "ExpressionUUID" -> \
"51c2dd53-1b6a-409a-bc26-61d6c5a88a76"],
Cell[392912, 7539, 829, 16, 49, "Text", "ExpressionUUID" -> \
"f147c4de-8583-4729-96fd-a92f0ee77a4a"],
Cell[393744, 7557, 777, 21, 46, "Input", "ExpressionUUID" -> \
"ac8ed901-7c94-4039-b1d8-418d3166f646"],
Cell[CellGroupData[{
Cell[394546, 7582, 1244, 32, 238, "Input", "ExpressionUUID" -> \
"84c2e73c-8b18-4c4f-860f-1bfba994d9bc"],
Cell[395793, 7616, 14118, 273, 346, "Output", "ExpressionUUID" -> \
"58195d2b-419e-44f1-b01c-3ba9aa108613"]
}, {2}]],
Cell[409923, 7892, 525, 11, 30, "Text", "ExpressionUUID" -> \
"a298f9e6-fd06-48ad-afca-f4231636c26a"],
Cell[410451, 7905, 934, 23, 36, "Input", "ExpressionUUID" -> \
"7b534b63-9148-4cda-8018-c5175368d779"],
Cell[CellGroupData[{
Cell[411410, 7932, 398, 10, 50, "Input", "ExpressionUUID" -> \
"341c09fb-e362-4e24-9834-ce3e8a64353f"],
Cell[411811, 7944, 163059, 2741, 270, "Output", "ExpressionUUID" -> \
"31e3cfc3-31f9-49a6-af9f-b6af57c7dc37"]
}, {2}]],
Cell[574882, 10688, 405, 9, 30, "Text", "ExpressionUUID" -> \
"8028c78a-1ad6-43f8-88ba-076d85e3117c"],
Cell[CellGroupData[{
Cell[575312, 10701, 1053, 26, 114, "Input", "ExpressionUUID" -> \
"676f4e73-9011-4238-a123-5a08451cefed"],
Cell[576368, 10729, 2479, 48, 170, "Output", "ExpressionUUID" -> \
"281e02fd-6904-462b-bc62-d033d1e62ca4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[578908, 10784, 167, 3, 70, "Section", "ExpressionUUID" -> \
"8b8836d5-f4a9-42fb-8399-8566ab0cf67e"],
Cell[579078, 10789, 1088, 29, 55, "Text", "ExpressionUUID" -> \
"0c5dab27-9be2-4573-b28c-7385535db53f"],
Cell[CellGroupData[{
Cell[580191, 10822, 3102, 78, 303, "Input", "ExpressionUUID" -> \
"509dd8a0-41c0-40b8-9315-1c8acf5bb5a6"],
Cell[583296, 10902, 119251, 2043, 302, "Output", "ExpressionUUID" -> \
"a52ec19f-2856-4014-8d33-059ed9ab1191"]
}, {2}]],
Cell[702559, 12948, 336, 7, 30, "Text", "ExpressionUUID" -> \
"2b2a203b-7411-41f8-9552-1da05e24a5c8"],
Cell[CellGroupData[{
Cell[702920, 12959, 331, 8, 30, "Input", "ExpressionUUID" -> \
"926ec0d6-3a02-4850-8c53-c4882bb4716d"],
Cell[703254, 12969, 790, 12, 46, "Output", "ExpressionUUID" -> \
"eddaf153-5d5c-42ea-9f5e-2d94d2d33cbb"]
}, Open  ]],
Cell[704059, 12984, 365, 8, 49, "Text", "ExpressionUUID" -> \
"1bc3d323-e15f-48fe-b62f-636595a674d1"],
Cell[704427, 12994, 1515, 32, 69, "Input", "ExpressionUUID" -> \
"155f738c-e5d8-4b98-98fe-c4d89ce1cedb"],
Cell[CellGroupData[{
Cell[705967, 13030, 2388, 51, 278, "Input", "ExpressionUUID" -> \
"da076eff-1ac4-4048-815e-2ebdec351689"],
Cell[708358, 13083, 15782, 298, 336, "Output", "ExpressionUUID" -> \
"f60aa245-341f-4a29-9417-4841563b65f8"]
}, {2}]],
Cell[724152, 13384, 487, 9, 49, "Text", "ExpressionUUID" -> \
"aa5b74ba-7f18-4e31-b01d-34053f31817d"],
Cell[724642, 13395, 1278, 33, 93, "Input", "ExpressionUUID" -> \
"f1fda9e9-a48c-4e22-bab1-a8aabcdf3e7c"],
Cell[725923, 13430, 380, 8, 30, "Text", "ExpressionUUID" -> \
"702e363b-ff42-4ed5-b4fa-e294bd031fa4"],
Cell[CellGroupData[{
Cell[726328, 13442, 8110, 203, 666, "Input", "ExpressionUUID" -> \
"378d9657-0695-48c0-a264-ffeaefba4a75"],
Cell[734441, 13647, 4177, 86, 348, "Output", "ExpressionUUID" -> \
"e00156c6-a60d-4525-bd0d-be5323a71808"]
}, {2}]]
}, Open  ]]
}, Open  ]]
}
]
*)

