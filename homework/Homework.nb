(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    884051,      16523]
NotebookOptionsPosition[    867812,      16142]
NotebookOutlinePosition[    868177,      16158]
CellTagsIndexPosition[    868134,      16155]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Mechanics", "Title",
 CellChangeTimes->{{3.7071415759932766`*^9, 
  3.707141578651087*^9}},ExpressionUUID->"06642691-0715-4a26-a4d0-\
fcad207eb3ef"],

Cell["\<\
An introduction to, and derivation of, the fundamental equations of \
Schrodinger\[CloseCurlyQuote]s quantum mechanics\
\>", "Subtitle",
 CellChangeTimes->{{3.7071415966918125`*^9, 3.707141606368494*^9}, {
  3.7071621409939594`*^9, 
  3.707162174631261*^9}},ExpressionUUID->"388c0da2-de93-42ff-8686-\
57560a826f60"],

Cell[TextData[{
 "Note: we\[CloseCurlyQuote]ll work in natural and non-dimensional units \
where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[HBar]", " ", "=", " ", 
    RowBox[{"m", " ", "=", " ", 
     RowBox[{"\[Omega]", " ", "=", " ", "1"}]}]}], TraditionalForm]],
  ExpressionUUID->"156f8d8e-be71-4b80-b7a0-d89ec693aeec"],
 "."
}], "Text",
 CellChangeTimes->{{3.707323361841241*^9, 3.707323395293643*^9}, {
  3.7073234301065135`*^9, 3.707323463396082*^9}, {3.7073430610070753`*^9, 
  3.707343063284197*^9}},ExpressionUUID->"3824f30e-ad1a-41ca-9fa3-\
aed3beb25b9a"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Initialisation", "Subsubsection"]], "Section",
 CellChangeTimes->{{3.7072506717283363`*^9, 
  3.70725067336299*^9}},ExpressionUUID->"96d49411-808c-402e-8587-\
4cf6bb752dd9"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Code",
 CellChangeTimes->{
  3.707401573738562*^9},ExpressionUUID->"296086aa-794a-4cba-b7b1-\
255315d8e092"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], " ", ":=", " ", 
  RowBox[{"(", "\n", "  ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"$FrontEnd", " ", "=!=", " ", "$Failed"}], ",", " ", "\n", "   ", 
     RowBox[{
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "All", ",", " ", 
        "GeneratedCell"}], "]"}], ";", "\n", "   ", 
      RowBox[{
      "FrontEndTokenExecute", "[", "\"\<SelectionCloseUnselectedCells\>\"", 
       "]"}]}]}], "]"}], ")"}]}]], "Code",
 CellChangeTimes->{{3.7072503647797594`*^9, 3.707250380426972*^9}, {
  3.7072504113361893`*^9, 
  3.7072504116593933`*^9}},ExpressionUUID->"fc943dda-f9e1-44bd-ac88-\
beefc4d79be3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"colorBar", "[", 
    RowBox[{"title_:", "\"\<arg[\[Psi]]\>\""}], "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"BarLegend", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Rainbow\>\"", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}], ",", 
     " ", "\n", "\t\t", 
     RowBox[{"LegendLabel", " ", "\[Rule]", " ", "title"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Ticks\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.14"}], ",", " ", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", " ", "0", ",", " ", 
        RowBox[{"\[Pi]", "/", "2"}], ",", " ", "3.14"}], "}"}]}], ",", " ", 
     "\n", "\t\t", 
     RowBox[{"\"\<TickLabels\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<-\[Pi]\>\"", ",", " ", "\"\<-\[Pi]/2\>\"", ",", " ", "\"\<0\>\"", 
        ",", " ", "\"\<\[Pi]/2\>\"", ",", " ", "\"\<\[Pi]\>\""}], "}"}]}]}], 
    "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"colorBarNorm", "[", "title_", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"BarLegend", "[", "\n", "\t\t", 
    RowBox[{"\"\<Rainbow\>\"", ",", " ", "\n", "\t\t", 
     RowBox[{"LegendLabel", " ", "\[Rule]", " ", "title"}]}], "\n", "\t", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"plotWavefunction", "[", 
   RowBox[{"psi_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"r_", ",", " ", "range__"}], "}"}], ",", " ", 
    RowBox[{"showbar_:", "True"}], ",", " ", 
    RowBox[{"title_:", 
     SuperscriptBox[
      RowBox[{"Abs", "[", "\[Psi]", "]"}], "2"]}], ",", " ", 
    RowBox[{"legendpsi_:", "\[Psi]"}], ",", " ", 
    RowBox[{"plotrange_:", "All"}], ",", " ", 
    RowBox[{"ticks_:", "Automatic"}]}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"ReplaceAll", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"Plot", "[", "\n", "\t\t\t", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", "psi", "]"}], "2"], ",", " ", 
      RowBox[{"{", 
       RowBox[{"r", ",", " ", "range"}], "}"}], ",", " ", "\n", "\t\t\t", 
      RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"r", ",", " ", "title"}], "}"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"PlotRange", " ", "\[Rule]", " ", "plotrange"}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"ColorFunction", " ", "\[Rule]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
          RowBox[{"Rescale", "[", 
           RowBox[{
            RowBox[{"Arg", "[", 
             RowBox[{"psi", " ", "/.", " ", 
              RowBox[{"r", " ", "\[Rule]", " ", "#"}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "]"}], 
          "]"}], " ", "&"}], ")"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"ColorFunctionScaling", " ", "\[Rule]", " ", "False"}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"Ticks", " ", "\[Rule]", " ", "ticks"}], ",", "\n", "\t\t\t", 
      RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}], ",", "\n", "\t\t\t", 
      RowBox[{"PlotLegends", " ", "\[Rule]", " ", 
       RowBox[{"If", "[", 
        RowBox[{"showbar", ",", " ", 
         RowBox[{"colorBarNorm", "[", 
          RowBox[{"\"\<arg[\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "legendpsi", "]"}], " ", "<>", " ", 
           "\"\<] / 2\[Pi]\>\""}], "]"}], ",", " ", "None"}], "]"}]}]}], "\n",
      "\t\t", "]"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"pts_", ",", " ", "_"}], "]"}], " ", "\[RuleDelayed]", " ", 
     RowBox[{"{", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"Line", "[", "pts", "]"}]}], "}"}]}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->{
  3.707250684768882*^9, {3.707327748060455*^9, 3.707327760834208*^9}, {
   3.7073278667410846`*^9, 3.707327898062024*^9}, {3.7073282132515697`*^9, 
   3.7073282139600525`*^9}, {3.707333754300393*^9, 3.7073338615878*^9}, {
   3.7073340125736313`*^9, 3.7073340529269733`*^9}, {3.707334381805196*^9, 
   3.707334421595986*^9}, {3.7073344531517878`*^9, 3.707334468083632*^9}, {
   3.7073345256643486`*^9, 3.7073345579097366`*^9}, {3.7073346224611516`*^9, 
   3.70733462515864*^9}, {3.707334674005803*^9, 3.7073346769948883`*^9}, {
   3.707334772049922*^9, 3.7073347895875607`*^9}, {3.7073352516801615`*^9, 
   3.707335260732541*^9}, {3.707336437367014*^9, 3.7073364376138935`*^9}, {
   3.7073369285395813`*^9, 3.7073369408217382`*^9}, {3.707337653904242*^9, 
   3.7073376740077686`*^9}, {3.7073377055022078`*^9, 
   3.7073377306157417`*^9}, {3.7073378127003174`*^9, 
   3.7073378489704437`*^9}, {3.707337901504786*^9, 3.707337980119998*^9}, {
   3.707338085551382*^9, 3.7073380872327313`*^9}, {3.7073458264056044`*^9, 
   3.7073458433898745`*^9}, {3.707347091911105*^9, 3.70734711619184*^9}, 
   3.7074011759380417`*^9},ExpressionUUID->"3d89aed4-19ef-40b6-8c4c-\
d3824f5ba1bd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"simulateWavefunction", "[", 
    RowBox[{"psi_", ",", " ", "potential_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"r_", ",", " ", "domain__"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"_", ",", " ", "times__"}], "}"}]}], "]"}], " ", ":=", 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   RowBox[{
    StyleBox["NDSolveValue", "Code"], 
    StyleBox["[", "Code"], 
    StyleBox["\n", "Code"], 
    StyleBox["\t\t", "Code"], 
    RowBox[{
     RowBox[{
      StyleBox["{", "Code"], 
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", " ", "\[Tau]"}], "]"}]}], "Code"], 
        StyleBox[" ", "Code"], 
        StyleBox["\[Equal]", "Code"], 
        StyleBox["  ", "Code"], 
        RowBox[{
         StyleBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"r", ",", " ", "\[Tau]"}], "]"}]}], " ", "/", " ", "2"}],
           "Code"], 
         StyleBox[" ", "Code"], 
         StyleBox["+", "Code"], 
         StyleBox[" ", "Code"], 
         RowBox[{
          StyleBox[
           RowBox[{"\[Psi]", "[", 
            RowBox[{"r", ",", " ", "\[Tau]"}], "]"}], "Code"], 
          StyleBox[" ", "Code"], "potential"}]}]}], 
       StyleBox[",", "Code"], 
       StyleBox[" ", "Code"], 
       StyleBox[
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{"r", ",", " ", "0"}], "]"}], " ", "\[Equal]", " ", "psi"}], 
        "Code"]}], 
      StyleBox["}", "Code"]}], 
     StyleBox[",", "Code"], 
     StyleBox["\n", "Code"], 
     StyleBox["\t\t", "Code"], 
     StyleBox["\[Psi]", "Code"], 
     StyleBox[",", "Code"], 
     StyleBox[" ", "Code"], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"r", ",", " ", "domain"}], "}"}], "Code"], 
     StyleBox[",", "Code"], 
     StyleBox[" ", "Code"], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", " ", "times"}], "}"}], "Code"]}], 
    StyleBox["\n", "Code"], 
    StyleBox["\t", "Code"], 
    StyleBox["]", "Code"]}]}], 
  StyleBox[" ", "Code"], "\n", 
  StyleBox["\t", "Code"], 
  StyleBox["\n", "Code"]}], "\n", 
 RowBox[{"Off", "[", 
  RowBox[{"NDSolveValue", "::", "bcart"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{"Off", "[", 
    RowBox[{"NDSolveValue", "::", "eerr"}], "]"}], "\n", "*)"}]}]}], "Code",
 CellChangeTimes->{{3.707250715794982*^9, 3.7072507338769197`*^9}, {
   3.7072509292068596`*^9, 3.7072509295035706`*^9}, {3.707350667196171*^9, 
   3.707350671470053*^9}, {3.70736108935268*^9, 3.7073610925868363`*^9}, 
   3.7074011850781393`*^9, 3.707401431661846*^9, {3.7074022027349186`*^9, 
   3.707402205610793*^9}},ExpressionUUID->"b6090fb9-af65-416e-b856-\
941d8a8ea276"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hamiltonian", "[", 
   RowBox[{"psi_", ",", " ", "potential_", ",", " ", "r_"}], "]"}], " ", ":=",
   " ", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], 
    RowBox[{"D", "[", 
     RowBox[{"psi", ",", " ", 
      RowBox[{"{", 
       RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], " ", "+", " ", 
   RowBox[{"potential", " ", "psi"}]}]}]], "Code",
 CellChangeTimes->{
  3.707251170532781*^9},ExpressionUUID->"d2e5fc00-f07c-4d4b-b4df-\
b97e8b0d82fa"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"expectedEnergy", "[", 
    RowBox[{"psi_", ",", " ", "potential_", ",", "  ", "r_"}], "]"}], " ", ":=",
    "\[IndentingNewLine]", "\t", 
   RowBox[{"Integrate", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Conjugate", "[", "psi", "]"}], " ", "/.", " ", 
        RowBox[{
         RowBox[{"Conjugate", "[", "r", "]"}], " ", "\[Rule]", " ", "r"}]}], 
       ")"}], "\[IndentingNewLine]", "\t\t", 
      RowBox[{"(", 
       RowBox[{"hamiltonian", "[", 
        RowBox[{"psi", ",", " ", "potential", ",", " ", "r"}], "]"}], ")"}]}],
      ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", 
      RowBox[{"r", ",", " ", 
       RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
    "\[IndentingNewLine]", "\t", "]"}]}], "Code"]], "Code",
 CellChangeTimes->{
  3.7072509143164854`*^9},ExpressionUUID->"a6fff3bf-5687-4f43-a944-\
128f7d9fb5c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"quickNormalise", "[", 
    RowBox[{"psi_", ",", " ", 
     RowBox[{"r_:", "x"}]}], "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"psi", " ", "/", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"NIntegrate", "[", "\n", "\t\t\t\t\t", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", "psi", "]"}], "2"], ",", " ", 
       RowBox[{"{", 
        RowBox[{"r", ",", " ", 
         RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], ",", 
       " ", "\n", "\t\t\t\t\t", 
       RowBox[{
        StyleBox["Method", "Code"], 
        StyleBox[" ", "Code"], 
        StyleBox["\[Rule]", "Code"], " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", 
          RowBox[{"\"\<SymbolicProcessing\>\"", " ", "\[Rule]", " ", "0"}]}], 
         "}"}]}]}], "]"}], "]"}]}]}], "\n"}]], "Code",
 CellChangeTimes->{{3.707339850746274*^9, 3.7073399085081654`*^9}, {
  3.7073399561620646`*^9, 3.707339956413348*^9}, {3.7073400623341837`*^9, 
  3.707340062748144*^9}, {3.7073457173662796`*^9, 
  3.70734577330595*^9}},ExpressionUUID->"ccd7b523-7507-41b2-a3fe-\
e8c9c3660a6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Wavefunction", "Section",
 CellChangeTimes->{{3.7071454544855328`*^9, 
  3.707145458217955*^9}},ExpressionUUID->"1844c1eb-1d4c-4ff3-b53f-\
0042200be0f1"],

Cell["\<\
The quantum wavefunction is a (L2 normalizable) complex field defined over \
some continuous space of states. For example, consider a 1D wavefunction of \
position:\
\>", "Text",
 CellChangeTimes->{{3.7071417658577995`*^9, 3.707141767839119*^9}, {
  3.7071419089597363`*^9, 3.7071419976660614`*^9}, {3.707142968918906*^9, 
  3.707142969971336*^9}, {3.7071430732360344`*^9, 3.707143094170619*^9}, {
  3.7071431623357377`*^9, 3.7071431979101667`*^9}, {3.707144344075688*^9, 
  3.7071443523917384`*^9}, {3.7071612586212254`*^9, 3.7071612595250645`*^9}, {
  3.707161362335261*^9, 3.707161409260783*^9}, {3.7072293265987377`*^9, 
  3.707229331322433*^9}},ExpressionUUID->"3b9f712f-2542-4755-bb68-\
17dcab6fc296"],

Cell[BoxData[
 RowBox[{
  RowBox[{"example\[Psi]", "[", "x_", "]"}], " ", "=", "  ", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], "4"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]}]], "+", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox["x", "2"]}]]}], "-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "2"}], ")"}], "2"], "2"]}]], 
     SuperscriptBox["\[Pi]", 
      RowBox[{"1", "/", "4"}]]]}], " ", "//", " ", 
   "quickNormalise"}]}]], "Input",
 CellChangeTimes->{{3.707142972993812*^9, 3.707143029805561*^9}, {
   3.707143580292692*^9, 3.707143586929079*^9}, {3.7071437400211444`*^9, 
   3.7071437567570734`*^9}, {3.707143972965328*^9, 3.7071440076461535`*^9}, {
   3.7071445565305448`*^9, 3.7071446000502477`*^9}, {3.707144783536746*^9, 
   3.7071447837524395`*^9}, {3.7071457039587*^9, 3.707145707674501*^9}, {
   3.7071490117309513`*^9, 3.707149036578884*^9}, {3.707149181831385*^9, 
   3.707149195032548*^9}, {3.7071497906578484`*^9, 3.7071498102905426`*^9}, {
   3.7071498493014526`*^9, 3.7071498586696725`*^9}, 3.7071517728661523`*^9, 
   3.7071520498403916`*^9, {3.707182093243137*^9, 3.7071820958874283`*^9}, {
   3.7072289606197605`*^9, 3.7072290062025366`*^9}, 3.707229100793229*^9, {
   3.7073610621146984`*^9, 3.707361068279758*^9}, {3.7074012146814256`*^9, 
   3.7074012168010263`*^9}, {3.7074015929421606`*^9, 3.707401600235937*^9}, 
   3.707402035706444*^9},ExpressionUUID->"c9b5977e-cb19-4d88-95aa-\
e330fcd293e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"domain", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "1"}], ",", " ", "5"}], "}"}]}], ";"}], "Code"], "\n", 
 RowBox[{
  RowBox[{
   StyleBox["Plot", "Code"], 
   StyleBox["[", "Code"], 
   StyleBox["\n", "Code"], "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], ",", " ", 
      RowBox[{"Im", "[", 
       RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}]}], "}"}], ",", " ", 
    "domain", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"AxesLabel", "\[Rule]", " ", 
     RowBox[{"{", "x", "}"}]}], ",", " ", "\[IndentingNewLine]", "\t", 
    RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", "\[Psi]", "]"}], ",", " ", 
       RowBox[{"Im", "[", "\[Psi]", "]"}]}], "}"}]}]}], "\[IndentingNewLine]",
    "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7071432716241865`*^9, 3.707143387701651*^9}, {
   3.707143525964118*^9, 3.7071435341403437`*^9}, {3.7071440002447133`*^9, 
   3.707144061458255*^9}, {3.7071457202163734`*^9, 3.707145722242098*^9}, {
   3.7071492249871836`*^9, 3.7071492265551395`*^9}, {3.7071492781561656`*^9, 
   3.707149286488986*^9}, 3.7071493818990393`*^9, 3.707152060514746*^9, {
   3.707163140217251*^9, 3.7071631414173927`*^9}, {3.7072504014407535`*^9, 
   3.7072504046596165`*^9}, {3.7074012850843954`*^9, 3.707401303624999*^9}, {
   3.707401608190261*^9, 
   3.7074016094497595`*^9}},ExpressionUUID->"23031046-d31e-4ed6-a398-\
382162bc6970"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
nQ1k6dRuHBywYfZidSnLiTbwPyY3mcQ=
          "]]}, Annotation[#, "Charting`Private`Tag$60115#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
83A094r36/0Z0G+/t/mPeh7OWyPI+fo0AyT2FO1Qf5iLe3bo61lFMMAhW81e
7VkOVvTJazdOZoCr+Nkof2Y2/vPFuFfrNgMqkzWsrLsvY3rOdXqhkgGMjg9X
k7wvYxmeYLruHgPs0JSCDvsydpQosVRBDFCMnlhctEjHjS6Lr7Z3MmBkOjvU
YCoVv/bhn5/sZgCMp+vWZafi6XBpoVt9DHhYcF0mfE8qFrti7bj1zZI+0R81
o4WXcOyb8mHRMQbUrotqyDqSggvGWpYPTTDAxKlJglc4BdfOvRHLm2LAgTP6
ROHTi3hcgMddcI4Bx/rmX2prX8QHLJy/UjxM8FL4dKlROhmv6SJmlksw4QOf
zLVjrgm4J0Vdg5ZiwqKssfOL0XgcZ+MWtUmOCd72gxpH3ePxwsiD1drKTNh1
Hu6P+Mbh0T9uSmH6TIg8UV+jWhiL8xouhibuY8KhrQHp0wqx2PpcXUuOMRM6
pJqbklpi8GOSsnpgxYS9ni1p1t/P4UpJ5P/bjQn25qlZe+yiscfkJ8x9jAmf
zbrTDP9EYbG7FLfAcSZwx7fw/smKwhlaRy4rBTDhkUFsjsL7SBxmRdf4xjBB
z6VTyTH8LDaMOjo3XsKEukytaHpFOF65L1X7v5tMSCVyhGVPncH17PrzqyqY
ECwnUY1Gw7BC9mpBqRomuCfW+5p3hOJ1VfVq7u1MyDBSVpK9F4yfBoyd9e9k
QoLGoyMuSsE4QZO/I7qHCSu2PHboqQ7CHI887Ir7mRC+IaZie9Np/HGQP+T9
ZyY8c/pmxfkjAOdfhebv40ww95h/Mx8ZgG2PHWNwTDHh9b+k5sc1AbjrV0PO
hjkmuFw/Yeyp44/vMj2RHS8LOmomFOzL/XCE+sO/z7eyoBTzj0u+9sGxHiO/
rsiyYJVxuC5/gg9Ozlzx7ag8C+TU5gL2a/ng/Fn9wQUVFhRX6WeEl57ADXc6
6sUNWOA8fPLP4trjuH14vPrbfhboSp8e/ifZG/eQrIp/D7DgTaMR729ebzx0
3CTfyJoFhq7rJN8u98IcMs/DT7mx4P6/tcy95DHMY/crUMuDBXTj+X2PMj0w
ESfgw+vNgvTQ4Yg9Yh5Y5PM/B3NPsWD1PjcQ1jqKtYoHtFuiWBAzKZdiEu+O
w4Q+c/IXscCezq42DnDF5/bzzg9cY8HuLRwe64Vc8YUgqR/Xb7DAy3uLis/D
Qziv33NEo4oFC4zkujz6EEapU02ujSyoTSuYtmg7iJubqDq5FhaI7XhsgwIO
4s5pxbu/21kgc7k+KmzrQfzWxL84oYcFL94XNM8kO+P/GPNRdwdZcPXipzr5
AUe8QkMoNGyEBXpap9MczB0x45jmKYNPLGh7ntT04bEDFnp05vDbSRbc9tUt
HGmwx+rRK/RX/GVB02x06vk2Wxy0wOS2EGLDXve/DVk7rfGmEV2J4yJsGOSd
GghtscId7ad3x4mx4cER1R3hllZYKPVDZIMMG45G9N9+EGyJ66UQh6wmG16J
xRzgHjLHR4gfGw20l+ZFyNm/DTXHxC9JrUO72bDVU1s2RtgcuzSmhmYasWFC
5pqVhosZXmHj+YfLkQ25TXaBwGGKb2kWrhN1YcPU6K+9AzdNsNXmfhUNNzZw
KWdzUf+Y4JJJ3QBfbzb4PfjWrH7iAN4XvX5mIIwNT94uf7CMMMJJVY8nqq+w
YcDo+fT+pwZYJYOD2VfEBpXonQujlgZ4KFRZZrKEDeqG70tfv9mDFfYWeohV
sMEdxVaXT+rjZ4OnPyU3sCG2bRfxQm43Dm0pX1nWzIbW9k5ZyWY9LHHzg3hb
Oxvezn06GWmnhwP8TV0XethgGvtJeluyLhZkbn1/9D0bjBnTqTaEDm6aduSI
/sCGxlzRFd/vamPP/tSN+V/YEOz9aK+BnTZGRRyOL6bYUK17RFbwFuDtwp5e
ossIeNggWdPavgs/vaM7lkgSEO23Z35RSQ2f07z74SJNwIJ4iE1klSpWaxN7
n8ZPwCE9qY0x8qq48DVXf+46AkDl5+SQsgr2WdbeckuUgEcv1hvlOyhjsXiV
xsrNBPQ+7pX4PK6E+1eX1t0TJ+CGiVq1dZgSBsm4O2grAatPuxpFl+zAxAHD
gi55AhTzNqVxU4q4ub8up1dxSU+N1drTlQo40EU247kSAa3LhGNbzBTw0ClW
0jtVAnrij811ZMnj8pyekAltAto4jvoXaG3HxmMWNkwzAo5JX5GavyGNOf1a
zEkLAgRfrPDIEpbG9xeUDvBbEaD+6ePz2RQpvIEU0Be2JeAy0ZdTE70VT+x8
pSjrQoCn7xDHt/NbcH7j3m3yrkv9jsuXrSe3YIv9tVJKbgSE9r1ZXpglgesc
s0U1PZbqB41vXborjhOiHdhGvgQ4bE/b08cphoH9hM/Uj4BfplcvFWVvxjMZ
u1Za+hNwfnqV6WnlzdiubOOCfRABpXz5c0zfTViq7/2Y51kCfP00PvUtiuBH
Im6tCSkEJHoqxGu8FcJig73rvFMJSI+wrCRMhHBYrqbXgXQCdkfaqAW3rsc7
BPlXU1kEjJZzyY/WCuJ8uvng5QICflu7SrU2rMXzvdvuBRYRsE5G1ZVhsBZb
JWfz2F5dyjvNujCpVwAzmCfLhUoJMA5jCIh9XYMDV25aKKggQPJ2jurxnfy4
rznRJLKKANcR9/xz3auxXORcketdAv4LvOuaeHQ1Hl3s2belhgDLkF02u4to
bDJ3JqOsnoDTxajbS4bCkuPvFKufEMDTxvlUXJiNI2/sjcnoISB4u31peCQL
Dxy59/r0UwIKdxm64nEmTv2QEKHxYsmPI4rdZW0MzDGo3t34joCVqnTRWC4f
tsst2VQ0SMBigS/393V8+L4d7R/1noBlsakDvhm8S/8wJrTnAwFNq5DNwxwe
3N+b6dE5TsD760P8xo0rsWIyF741ucRDzIDkcpOV+IKxD5n0nYC/a6oevxvi
wnodBjWmMwSYGpV5vOHhwhXNs1wv5wk4fqVw4NOJ5Ti22rLgPR8J9zfofzfJ
5MA7evfHfmWQcHLufgZDiwMPjmkf/8kigaNTO8yoaxEpb5DT5KVJSHh73Czf
/y8aiVr5avt6Enp/DZ4bm55HF/L+q1cTJqGkoCRXx3YeqdVMX9PbSAJfDVxt
a/6Dkr8O+NlsJkHw0UcegaI5tMusmgiXJkFr32VfKnIWjR27NXteloTNy3h5
BDhnUVp00cClbSQI9BcWdUX+QuM1SWUliiRolCST65J+osyNRwy61UkQK76x
WNH0A82Mrw3fYEiCeH12+ULmd5S/ku0uaUzCVTO3BJFd39F+ES5jBRMSrLqf
3HFr/4YKzafW61uQ4LXCIpTDcxIdqH1U7WW/pDcrUc1o4Cv601efF+BIwqcK
/89eul/RtYl70RHOJKTNtQW+uDmG/hMpNE9zJaHlVKiB2rkv6EZM0Lc6TxIa
piK+hzh9QlYFJ160epPwc5grkO/dR7TsgRvqOUHCJZcn2Y4OH5HNpFn8qB8J
26qWCYi4fUBcltJbGKEklKWYN4amjyDnTW8d7RJJ8Pnr267iPoSqTnTl6iSR
sP3Uh02/iCHEVY/fbr1IgruXcf/bwEF0w67A9ncqCRK+B4pfbx9AM6luVmk5
JMiphlkGtr1B+iPWaSF5JFwwiCK7d7xBmfJ7nx3KJyE9kJNT8OprtOuJtJlC
MQnViRauphdeoVjuKaPum0v7/XSX1US8RK8thxPu31rqV04QF+F6iWSL+zpy
y0m4EXzAnhn/Aj2F+3s975Cw85WEg17ecyQUFLyb9wEJ+zgOZ3UP9aGKcS5N
3cckmLVh/hOdPYhTfTZYqnOpPqIu645vD7I8/7mWfEICV9B4fIdgD/oj3qEy
1EuCpPbtnSVDT5CeU/KO0FckdG0y8k9z6kTptyJOur4h4Z7q0E6vtg70Zd63
av87Eg49yAp0UehAFzIstwu+JyFr/1qmG/kY9fcKylR/JoGfV6hAYroNSYkw
juWNkTC6Vl5d06cNhXovlEaPL+VTb6/xZ7oVbVo1tMXiOwnCVXp75P+2IE+9
q5unZpd47UgckVBoRov3t62X5qbgSVB2XiZXI1LI+dXCw0tBTEl/CvNmA3KN
QCc+8lHQuHg11sasAbXv399awKIgHg8n5hjWo+QhN5+1ayhQ/ZugHtpShx62
yAr9EqDAXVkIvZOuQzM3Zlr71lHgrWB/xjntAbI5dVYoSZiCNLpVMtGnFonw
5bVxiVPwl9u954VhDTL75uo7IkHB+Yfm/VmPq1HUM2nhRkkKAsqGr/Lur0af
8/71DZGhQCI4WKnS/D6qUHwu/EORAvsrw9q1Z+8icGD4DelQsNrJNoQ2qkS+
On0bsB4FnwsWXEq/VaDiLVmPsvUpqNMOfimTWoF4prdstN5HAcfByYzSlnLU
c073cZcpBcH3kio1pG8hTk++UzfNKZgQLT26NbEM7TDt3XjecsmPUc0E++mb
KGO90ym9fyg4GnLljFnrDeRcESTywJmCklt6KfdTrqOUNO2ODBcKqhrJQibz
OmoO4vH3d6XgqVKwtUxcCZLcnd4hf4SC1kqbDTEJ19D3V5X+149T0KEo9USu
ohiFL//SmRZGwYzez3i+IwWIU09tVU44BScJVHadowBFR8XvLTy75P/dcXZ+
dj6K45JrvX2Ogs42p5nHFVfQJe6T9W0XKFApGbrY9TIHrTFoXuhKXprnMZPe
K52DMmL5NZ6lUPByefHvxshslMNbUzOUTkHitpkyllYWurZqoXIuj4KB81lZ
nO8vI0lD4++L+Uv5J9pWE2aX0c2EK3Iriygg/vHmPtyajiqYOjepEgoyn72K
S6tJQ7XsmGLpcgrici6ViDZeQhom/cPylRSUXVn75ei+S6g+eauoyh0K8u5U
iXu9SEHNZGeuXvWS39tC/h7+dRF10eRlh3oKvirbSIRZJCMTC5fnhxopWPaq
121qJAk9Tb1DezRR4NK5zv7k5iT0gt8q2b+NAl/1CtF75YloSCD7fFI3BaZr
V836/olDLjbjbWm9FJBP3sYzrePQhwzNlTl9FMjrD/3nU30eja0bOnv9JQV6
06EfITIWzawXD2kcpKC+7BAq0zuH/O39a9veL90TujLOAEWjuZy2310jFNws
DlFepRqN/gp7nHr9iYKxSEO+OtUoxC1S7v3j21Ie1yLYww5nUZwzx625KQqS
JDeZtE9EIEaB6dfFHxSoWaeYGoVHIGLTjDvjNwUngnRif5WFI0Ex1YPiHDRs
rxxystUPQ3qZ0bM8nDQ0MbXlRTNDkRfraeL4chruyK5rv/MtBDX89qi9w03D
NcE9hl9KgpFbVw6tw6ahz8n2zRGd0yhZ50upOElD+tttLxwqA9G/1UrAS9Pg
92gqOnJzIGIUPvHsWUPD1/mfnOvJAFTlz9HquIGG9tAdDcXsU+jtV0N7HREa
8k6sWdBP90NcBzOnxTfR8MxkjfjljX7IZr/CxglxGljqIL9S7ST6u9E1MFiW
BrvhTMNLCT5IMq2C5bSNhtYx0bI1W3yQKd9CsY48Dcb/Ha991XQCFc+k9fIq
0bBgOLJ1YvkJtO9Rm1SGBg3DlzUKZ1W9kN+u1Y3Bu2iYmLHwsE32RLl3nK2d
gAbZzLp3Z8eOoe+5c5ESejQoTQKjt9QDpftKv7u7nwa+tDCmvNkR1PAp4GSG
EQ25o6RPQrM7+mLfzBtygIa05leKpJo70tjjoKxrToP3qf7DJnJuaHh9UlKv
LQ26sVqyXaquiHHxjfg9exqOLsafzmg6hJRWStZlONKwQmrxNq/JIRT7veGz
kwsNu8+tzyk84YLkWqa1J48u+TloGyTa7Yxs1LT6e4/RQDAj7yd4OqOI8njv
e140fMzY7rCN4YyeZYplh/jQINB+yeRpkSMK9raa4TtNw+foix4Pv9ohEWXX
dolgGpZXCDin7LBDzQs+OTqhNDgsW7Xhb4QtYiUm6gVF0GCZKLRLSeofVHiz
OfXLeRqoN+UXNtyyQntOPj3ClUBDBuedTc0CVmhcbUhD9AINtoeYp7ads0RK
j+dHbVJo+ET2qPz2skDtnxWU2rNoKH19W7nfzQx5VQDvaA4NlZH7A2UnTBEV
aPxuMY+Gw++eXs7wN0X23B7RO4tokJ47bOGSYoK+iRc8v3Zzia95Xhv/l0Yo
deJ26cNbNIT8qYl1I42Qyr260IFyGtrCPtw8aGKIzur1i6+5S8OiTVzm77f7
0JpDbP/oOhpcb5t+NJM1QA+khPcVYBp4p3xrdiXsQc7TUhtQAw2vjGWyDL7p
oxsR+q0zzTQcs6L8jBp3I8380DWuXUs8yuxxcErRRcPu8WNnumngifncEsTW
Ree2ZeLsXhrC97xaO52kg3rwXbe+5zTIuexwz8vSRq7vvt7XGaDheqrZWedS
LcR7dS7OcYgG02Msu75nu9BtT26noGEa+mPW0Q1cu9Ds/Cbuqo9LPDeydwYF
aKA4QVtr0W80iNXPfWtNV0Xbht2lNadoeFTN99N6TAU9Kz21aPNjidfg6HuO
Oipog+rFkuRZGtaK/pS1XVRGTRxXgsvmaKiqHyUFXJXRkfayA+3zNAz+NuR4
3amEGMm1m0cXaLi/oqI5VlUJVVq3zy4u0vBabqKX98YO9D8XZrBJ
          "]]}, Annotation[#, "Charting`Private`Tag$60115#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"Re", "(", "\[Psi]", ")"}], 
       RowBox[{"Im", "(", "\[Psi]", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7071435348785505`*^9, 3.707143542516124*^9}, {
   3.7071435840794277`*^9, 3.7071435894132886`*^9}, 3.7071437526544294`*^9, {
   3.7071439978290014`*^9, 3.707144062627507*^9}, {3.7071445610174665`*^9, 
   3.707144583481642*^9}, 3.70714463900497*^9, 3.7071447957537775`*^9, {
   3.7071457122468567`*^9, 3.707145723427042*^9}, {3.707149197595375*^9, 
   3.7071492270335455`*^9}, {3.7071492789573464`*^9, 3.7071492869737315`*^9}, 
   3.7071493824505644`*^9, {3.7071497951213818`*^9, 3.70714981247514*^9}, {
   3.707149852632801*^9, 3.7071498611877995`*^9}, 3.7071520953703136`*^9, 
   3.707152766844473*^9, 3.7071529681480117`*^9, 3.7071539071635237`*^9, {
   3.707155957149432*^9, 3.707155977866574*^9}, 3.707156010943268*^9, {
   3.70715606673641*^9, 3.707156093676105*^9}, 3.7071649961416793`*^9, 
   3.7071663388198304`*^9, 3.707171094920657*^9, 3.7071756674236403`*^9, 
   3.707176168156183*^9, {3.7071813404412637`*^9, 3.707181350105031*^9}, 
   3.7071813956274967`*^9, 3.7071819948177404`*^9, 3.707182184785655*^9, 
   3.707182219679021*^9, 3.707184269071168*^9, 3.707185378354104*^9, 
   3.707185497859684*^9, 3.707185766749367*^9, 3.707186352646841*^9, 
   3.7071864147094307`*^9, {3.7071866657554154`*^9, 3.7071866981829214`*^9}, 
   3.7071867396698847`*^9, 3.7071868067300806`*^9, 3.7071869260984755`*^9, 
   3.707217933321546*^9, 3.7072290362911015`*^9, 3.7072324483547053`*^9, 
   3.7072328656832066`*^9, 3.7072329048017893`*^9, 3.7072331763035994`*^9, 
   3.7072333210490046`*^9, 3.707233405420326*^9, 3.7072338835073037`*^9, 
   3.7072339370744896`*^9, 3.7072340066986494`*^9, 3.707234249974229*^9, 
   3.7072343761614923`*^9, 3.707234843777314*^9, 3.7072351615785475`*^9, 
   3.7072354129106474`*^9, 3.707236807477562*^9, 3.707237210975844*^9, 
   3.7072389577414317`*^9, 3.707240828050643*^9, 3.707250405418311*^9, 
   3.7072508439641514`*^9, 3.707327767716283*^9, 3.7073279016707335`*^9, 
   3.7073282309857435`*^9, 3.7073338835511646`*^9, 3.7073348381892824`*^9, 
   3.707338104924907*^9, 3.7073459961888647`*^9, 3.707346048155705*^9, 
   3.707347148489056*^9, 3.707348759302453*^9, 3.707348978688219*^9, 
   3.707349123894549*^9, 3.707349472917169*^9, 3.7073511247100024`*^9, 
   3.7073610160218463`*^9, 3.707401189170291*^9, {3.707401266438774*^9, 
   3.7074013106679773`*^9}, 3.70740135578664*^9, {3.7074016053972745`*^9, 
   3.707401610187065*^9}},ExpressionUUID->"d2e50f9c-566b-40f9-bfb6-\
957f93b81477"]
}, {2}]],

Cell["\<\
Although the wavefunction describes a physical system, it is itself \
unphysical. Only its absolute value squared can be observed.\
\>", "Text",
 CellChangeTimes->{{3.707144220630987*^9, 3.7071443077130194`*^9}, {
   3.7071443680425262`*^9, 3.7071443998602724`*^9}, 3.707154028223499*^9, {
   3.707154599035097*^9, 3.70715465064983*^9}, {3.7071547056816807`*^9, 
   3.707154740284052*^9}, {3.7071549528169208`*^9, 3.7071550061986876`*^9}, {
   3.7071659627604713`*^9, 
   3.7071659709460144`*^9}},ExpressionUUID->"4b33c49f-81b0-49a7-a53c-\
a2b27503857a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  StyleBox["\[IndentingNewLine]", "Code"], "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", " ", 
     RowBox[{
      RowBox[{"Arg", "[", 
       RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "/", 
      RowBox[{"(", "\[Pi]", ")"}]}]}], "}"}], ",", " ", "domain", ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", "x", "}"}]}], ",", " ", "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"Filling", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"1", "->", "Axis"}], "}"}]}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", "\[Psi]", "]"}], "2"], ",", " ", 
      "\"\<Arg[\[Psi]] / \[Pi]\>\""}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7071444013913136`*^9, 3.707144468076036*^9}, {
   3.707144604819686*^9, 3.707144656759567*^9}, {3.7071448012877693`*^9, 
   3.7071448528845973`*^9}, {3.7071457292282095`*^9, 
   3.7071457326783156`*^9}, {3.7071471916323175`*^9, 
   3.7071472087778006`*^9}, {3.707149251401376*^9, 3.7071492518858833`*^9}, {
   3.707149319266218*^9, 3.707149394132081*^9}, 3.707152069101699*^9, {
   3.7071615130664344`*^9, 3.707161525030201*^9}, {3.707161622236106*^9, 
   3.7071616432369223`*^9}, {3.7071631508777742`*^9, 3.707163155132735*^9}, {
   3.7072504238890734`*^9, 
   3.7072504269536963`*^9}},ExpressionUUID->"d49bac33-9b0d-4e59-b736-\
06fb5882f647"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
wdma81ymu8RQ5pK9Y47FFxQ/W7JK4N/8Ya/iUaNz1gGbzwT2J2Q27Lx9UnKQ
ODM7dzPhEDNwft3+Zq9CNvLfTQn7uo8Czo3zeJVYr0NaEWOEoj4ruMNZ+lmZ
kEA/PTkX2M+0oXldvp0ics0I+xRez3xjrjTSiGIW3b7MFxQgWuvp1nmQn5j5
9VPJMpYK9Lf4lkgaiyAF2cfqFtadaKd8Rk1qCh1hj4KHreXQwYEaopvXVWCr
KjO4YV9jcoTIRgHTFdk5ihQw5b3O7LqwGqowME+KFmcF97+k1IX1SyDsTVzf
cCB3dV0RuilW6VWQ2kuwOB2Yz9s7ibA30VlfK3XNbRJVGx7ZZj3BBK7L6Je6
VGSiSCCd9a6fAqyP9jy91kklup7KOl/qogK6yik33TUSaFPL9giqaQeyCK8d
zK2kI+xRbPbMMR4YoxEzXQHTnO7MIPzST90nj7KQ7oKVyTtnCtj7mhysX38F
Ym9i96pbSa6G4ST2JnYydVifEYIIexPZZhFPlKrLEPYmwrs37W/cU42wN5H9
Kf+rw8t6hL0JD9vB+hHrJoS9CYUjq26URtAR9ibAxCtRqlgjw5uoCBJdt8qw
nEjv/bsb+DUSLloBqwRFexH2I3rX7+skFEYR9iNiFes+pvSOEP/9/T72I6pO
9sktBtUx/Ijq05EO+t2PCexF3Nsqan1tqAlhL4JrSI2rc74LYS/Czdsh43zY
IMJeREtwv4xPdz/Di/hU5S4w4tLC8CLqbJa+fP9SzvAiOBsfK7HNJTO8iDcW
q9MUtiUh7EUUDBiuT9XOQtiLSJfqy+rifoqwF7HKO38wb9cFhL2IeqHhVe/Z
lvWt3DqVXJ2oQFbpjYtKET8y8givyTzLCn5L8EQtvhBD20Pi7tccZwOX2kVl
5Gz5EPYlDlPsp9LcmRD2Jab7jp0V4J+A2Jc48dryhvz6Loh9iZ1TElWxE9UQ
+xJKYY4+y2P5EPsSO5zfet3nS4LYl6DH9XTu1X4AsS/huRi2T/+DD8S+xGjQ
nTvZN05C7EukpE+wXni2B2JfwkNPuMP+sRrEvoSHcDrbFlthiH2JwXzbCB5N
Joh9ib43LldvmA6S2JfQWMm4sGRcR2JfQteYZzDFL4/EnsTpsVoe7ZkKhD0J
9Sj/Mb/3tQh7Ej/CzA5v3kBD2JMgyI3PT3a3IOxJJFkafAiMj0HYkxjWUEdx
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
2/8739jbYPrfA3sD+Pn/A/j6y1o=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
dqw57l/5D+BCDcw=
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
RT1fy3jt/wDGhgz3
           "]]}, Annotation[#, "Charting`Private`Tag$12277#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0s1LVGEYhvE30pQcs4w+CEQnUhs/UhtNk9rYyu2YJliZUy7TSnfWPrWP
vZZuba9ma5X8BxQK+lIhwcBqEwVqv3dx8zzXdb/nHOacSWYHMwMHQggLksoJ
oTwvhPShEO7nhvAJP5UeqZIKXaNuQPcZj8pNyfB3+An+sMxy1VLJN/GD3Bc8
Jrekg+/jJ/kCmeNq5Dx/iX/AfcXjcluu81n+FZ+Qea5WUnwz/5D7hp/JCDfK
LXJp6eU6ubvca/zLvm8vtL+3r9qLJC8/hBP4ivnWNRP2Gb4Urzu7iwvi83Am
Ps++o6/BKbPYLOPazAvxfdlb+FP4kfPb+C+uj/fTz+FFfA7v6g+ax7hW87n+
sX1MX4KX9H9wbnyfuBF/sH/XJyXBnYnfwHVd5j2uh5ty7jcOcsS+Yq7pKnVH
zXzzJHfVXHDtpP0NX4Y3nN/Difg7cAdet//U1+Iq87iZ5K6ZdfGb2y/zp/GQ
8z/wP9wQ76efx0u4HO/pc8xi7oXuiTmuW+ab5CPewmelT38D99undUXyjquP
/5v4zvhhbhO/lKx0u3eDeVHS0o7/A1aqVCU=
           "]], 
          
          LineBox[{1837, 1595, 1397, 1253, 1168, 1123, 1880, 1638, 1440, 1296,
            1210, 1077, 1838, 1596, 1398, 1254, 1169, 1918, 1676, 1478, 1334, 
           2011, 1769, 1571, 2061, 1819, 1124, 1881, 1639}], 
          
          LineBox[{2074, 1441, 2035, 1793, 1297, 1993, 1751, 1553, 1211, 1948,
            1706, 1508, 1364, 1078, 1839, 1597, 1399, 1255, 1170, 1125, 1882, 
           1640, 1442, 1298, 1212, 1079}], 
          
          LineBox[{1840, 1598, 1400, 1256, 1171, 1126, 1883, 1641, 1443, 1299,
            1213, 1080, 1841, 1599, 1401, 1257, 1172, 1127, 1081, 1842, 1600, 
           1402, 1258, 1173, 1128, 1082, 1083, 1843, 1601, 1403, 1259, 1174, 
           1129, 1884, 1642, 1444, 1300, 1214, 1084, 1844, 1602, 1404, 1260, 
           1175}], 
          
          LineBox[{1919, 1677, 1479, 1335, 1130, 1885, 1643, 1445, 1301, 1994,
            1752, 1554, 1215, 1949, 1707, 1509, 1365, 2019, 1777, 1579, 1085, 
           1845, 1603, 1405, 1261, 1975, 1733, 1535, 1176, 1920, 1678, 1480, 
           2040, 1798, 1336, 2012, 1770, 2090, 1572, 2062, 1820, 2112}], 
          
          LineBox[{1131, 1886, 1644, 1446, 1302, 1995, 1753, 1555, 1216, 1950,
            1708, 1510, 2047, 1805, 1366, 2020, 1778, 1580, 1086, 1846, 1604, 
           1406, 1262, 1976, 1734, 1536, 2124}], 
          LineBox[CompressedData["
1:eJwV1nWUVlUUhvGPDgNcIoJ0SIiAqEslFImhW5BQQFFUEOkWgSFm6E6VVilp
VDrGpNOWsotSUkD97T/etffz7HMX89177rkU6dCtWdd0iUQiLX0ikZwlkZiY
OZHYlSmRqChdMiYS7blXuMX4TtnJVZWH+SR+CHcWz5ZX5Bm+K7+EzyNp3OPy
CF+LH8qdw69LV3mW78Yv5fPKh1w1qcjX5pO58/gNGcZN4nZzlaRNVtfyHfju
/DLuLvmIm8et4H7BLaU6V4mrww3Df+GN+FOcTt7Ew/Fk/R7zq/osUll/TP2D
v1ty+DcLxL9n/XNqDy4ft9y6Czi9PIDz4b36b8xL4VxqNvVO7jH1Y9fP16/k
i+BfrU+ot3IV1Vb4J/3f5uVwWTWXWpSr4drKal1uuHWn9df0f/Ob9J/p08sc
PAJP0e+1ror04J7nenLv4vzyCVdTqvD1+BHxW/BcGclN5fZxj0pPriPXi1uB
C8g+/C2+Qz41X4BX6X8zay0/4wvxOyTJ/FFcXz/S7Iz+uv4iv1m/S59B5uEU
PE2/37p/9Fnj3umPq3/yJaSXdS/g3vqVZhf1GaSgfr/6HZ9bsrt3eeLeWL9Q
Xc0V5X63Lp2ag2uj/0W9aFaeKx+/SS3G1VRrufYxfQM+L06JvY9v4PvxJfMt
eHf8bTijmkm9PfaROt88VT+dL4gPuP4aziYP4ar4hP60eUnJyRWM3+a6F9U+
3CprCsV9NdvFL+LX8H9wT8mv+BK+T2rHu4ob6lPjvdP/q7/Mb9Xvib9PMsf+
xAv4UeoM7qD11/XZ5XH9SfUMX8baUuptaiGumtrHdS/p+/L58WrrL+GM8iAu
jA/oj5mXjndAvUnNy1VVd7v+Lf1avhj+0/r0ak7uaf1v6mWzClInzhPcSD/K
7Eo8T+krnfh+/Bq+iOzh6sZ5wjfmR8d7HfdMRnMzuUNcNenHdeb6c2tx0Xh/
uXpSnW/Cj4l9GH+rjOFmcYfjbJH+3MvcAG4dLhbvBfc2t447jdtKfa4G15Qb
G88/1shYbjZ3hKshA7gu3EBuPS4e+5l7h1vPncHtpEG8u1wzblw8s1gj47jX
uaNcTRkY5zP3KvcevjueCbeYe487i9tLQy6Je4Ibj2/EGhnPvcF9ziXJq3F+
c4O493EJOcgt4d7nzuFnpBFXi2vOTcD/xhqZwL3JfcHVkkFcN+417gNcUg5x
S7kPuPP4WWnM1eZacBPxf7FGJnJzuC+52vIa150bzG3ApeQwt4zbwP2FO0gT
rg73JDcpzmBZxk3i5nJf4ToymOvBDeE24tJyhFvObYyzFz8nTWPPcS25yXG2
yDa8N94zWW4+Gc/Tf21WV4ZwPbmh3CZ8T9xLfBzniWdo/i7epL9g9rw0i73J
teKmxPsi2/E+nCXOdvMpeL7+G7N6MpTrxSVzm3GZuMf4RJxn8WzNV+DNcR6b
dZQnuPpca24qziA78H6cNb4B5lPj7NB/G/tbkrne3DBuC7437j0+ie+KZ26+
Em/RXzJ7QZpzDeIM5qbhjLITH4jvZpzt5tPwQv13se9lGNeHG85txWXjmeBT
8U2OvWC+Cm+NM8/sRWnBNeSe4qbjTJKGD8Y3Is5X8+l4kf5YvA8yPM4XbgS3
DZeTo/j7OO9ij5ivxtv0V8xekie5RnF+cTNwZvkQH4qzT1abz8Bv6Y/HeyIj
uH7cSG47Li+f4x9wgdgv5mvwdv1Vs07SkmvMteVm4izyET6Mb46z0Hwmflt/
It4fGcn151K4Hfg++QL/GN+l2C/ma/EO/T9mnaUV14Rrx83CWeVjfATfEmem
+Sz8jv5kvFeSwg3gUrmduIJ8iX/ChWK/mK/DO/XXzF6W1lxTrj03G2eTT/BR
fGucrfF/TbxYfyreN0nlBnKjuDR8v3yFf8aFY7+Yr8dp+utmXeR3fCW+25Lb
t6Y4TlLbWPs/nzJ7XQ==
           "]]}, Annotation[#, "Charting`Private`Tag$12277#2"]& ], {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         LineBox[{2126, 2125}], 
         LineBox[{2127, 1076}], 
         LineBox[{2128, 2122}], 
         LineBox[{2129, 2123}], 
         LineBox[{2142, 2141}], 
         LineBox[{2143, 2140}]}}, {{}, {}, {}, {}}}], {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotRange -> {All, All},
      PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SuperscriptBox[
        TemplateBox[{"\[Psi]"}, "Abs"], "2"], "\"Arg[\[Psi]] / \[Pi]\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707144468714523*^9, {3.7071445638333836`*^9, 3.707144657591799*^9}, {
   3.707144797038803*^9, 3.7071448534693966`*^9}, 3.707145733229862*^9, 
   3.707147194119525*^9, {3.7071492480327024`*^9, 3.7071492523175015`*^9}, {
   3.7071493208135514`*^9, 3.7071493950857344`*^9}, 3.707149822818655*^9, 
   3.7071520955552363`*^9, 3.7071527675463696`*^9, 3.7071529683685446`*^9, 
   3.7071539073640604`*^9, {3.7071559573656*^9, 3.7071559780459785`*^9}, 
   3.707156011126173*^9, {3.7071560670372334`*^9, 3.707156093976494*^9}, {
   3.707161521454491*^9, 3.707161526010844*^9}, {3.707161624658103*^9, 
   3.707161644458665*^9}, 3.707164996357485*^9, 3.707166339026862*^9, 
   3.707171095822734*^9, 3.7071756676775665`*^9, 3.7071761687733746`*^9, {
   3.7071813418294325`*^9, 3.707181351041233*^9}, 3.7071813958280373`*^9, 
   3.7071819952655506`*^9, 3.7071821852336383`*^9, 3.7071822199108086`*^9, 
   3.7071842698889675`*^9, 3.7071853813532248`*^9, 3.7071854983832703`*^9, 
   3.707185767534862*^9, 3.707186354196496*^9, {3.707186666090684*^9, 
   3.7071866983944454`*^9}, 3.7071867398646293`*^9, 3.7071868071135864`*^9, 
   3.7071869262924795`*^9, 3.7072179336598997`*^9, 3.70722903647603*^9, 
   3.707232448724306*^9, 3.707232865883316*^9, 3.707232905039873*^9, 
   3.707233177892178*^9, 3.707233321233944*^9, 3.707233405758942*^9, 
   3.7072338837074385`*^9, 3.7072339372754583`*^9, 3.7072340069036865`*^9, 
   3.7072343764422555`*^9, 3.7072348439930925`*^9, 3.7072351619478316`*^9, 
   3.7072354131173973`*^9, 3.7072368076677694`*^9, 3.707237211207511*^9, 
   3.707238957988658*^9, 3.7072408283116903`*^9, 3.707250428204486*^9, 
   3.707250844575248*^9, 3.707327767993784*^9, 3.7073279020681486`*^9, 
   3.707328231274747*^9, 3.7073338838947105`*^9, 3.70733483859234*^9, 
   3.707338105340409*^9, 3.707345996639862*^9, 3.7073460484204187`*^9, 
   3.7073471488185587`*^9, 3.7073487596624556`*^9, 3.7073489800114408`*^9, 
   3.707349125179861*^9, 3.707349474074709*^9, 3.7073511262110014`*^9, 
   3.7073610162598763`*^9, 3.70740118927908*^9, 3.7074012665222826`*^9, 
   3.707401356012669*^9},ExpressionUUID->"5e4aa087-d647-438f-9de2-\
17347cf25e27"]
}, {2}]],

Cell["\<\
In the Born interpretation, the absolute value squared of the (normalised) \
wavefunction is a probability density function. If our wavefunction described \
a particle\[CloseCurlyQuote]s position, an integrated region of the squared \
norm would give the probability of finding the particle within that region \
when measured.\
\>", "Text",
 CellChangeTimes->{{3.707162946246744*^9, 3.7071629474999647`*^9}, 
   3.7071629923259077`*^9, {3.707163280721895*^9, 3.7071634028309755`*^9}, 
   3.707166091473895*^9, {3.7071733518455863`*^9, 3.7071733531647415`*^9}, {
   3.7072198617307453`*^9, 
   3.7072198629523206`*^9}},ExpressionUUID->"a795a433-08db-4a40-826c-\
cd6fd3899a7e"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{"Overlay", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", " ", 
          "\n", "\t\t\t", 
          RowBox[{"ConditionalExpression", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", " ", 
            RowBox[{
             RowBox[{"x", " ", ">", " ", "2"}], " ", "&&", " ", 
             RowBox[{"x", " ", "<", " ", "3"}]}]}], "]"}]}], "\n", "\t\t", 
         "}"}], ",", " ", "\n", 
        StyleBox[
         RowBox[{
          StyleBox["\t", "Code"], "\t"}]], "domain", ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}], ",", "\n", 
        StyleBox[
         RowBox[{
          StyleBox["\t", "Code"], "\t"}]], 
        RowBox[{
         StyleBox["AxesLabel", "Code"], 
         StyleBox["\[Rule]", "Code"], 
         StyleBox[" ", "Code"], 
         RowBox[{
          StyleBox["{", "Code"], 
          RowBox[{
           StyleBox["x", "Code"], 
           StyleBox[",", "Code"], 
           StyleBox[" ", "Code"], 
           SuperscriptBox[
            RowBox[{"Abs", "[", "\[Psi]", "]"}], "2"]}], "}"}]}], ",", "\n", 
        "\t\t", 
        RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"Default", ",", " ", "Red"}], "}"}]}], ",", "\n", "\t\t", 
        RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "\[IndentingNewLine]",
        "\t", "]"}], ",", "\n", "\t", 
      RowBox[{"Text", "[", 
       RowBox[{
       "\"\<Pr(2 < x < 3) \\n= \!\(\*SubsuperscriptBox[\(\[Integral]\), \
\(2\), \(3\)]\) |\[Psi]|^2 \[DifferentialD]x \\n= \>\"", " ", "<>", "\n", 
        StyleBox[
         RowBox[{
          StyleBox["\t", "Code"], "\t", 
          StyleBox[" ", "Code"]}]], 
        RowBox[{"ToString", "[", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", " ", 
           RowBox[{"{", 
            RowBox[{"x", ",", " ", "2", ",", " ", "3"}], "}"}]}], "]"}], 
         "]"}]}], "]"}]}], "\n", "\t", "}"}], ",", "\n", "\t", 
    RowBox[{"Alignment", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"0.6", ",", " ", "0"}], "}"}]}]}], "\n", "]"}], "Code"], "\n", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.707164679923886*^9, 3.7071646803620634`*^9}, 
   3.707164760691659*^9, {3.7071660077937007`*^9, 3.70716602586668*^9}, {
   3.7071663461579094`*^9, 3.707166348327171*^9}, 3.7071663836435633`*^9, {
   3.7071664292788806`*^9, 3.70716659385884*^9}, {3.7071691607723284`*^9, 
   3.7071691641421013`*^9}, 3.7071692030924797`*^9, {3.70716925986016*^9, 
   3.7071692966744385`*^9}, {3.7071693424712963`*^9, 3.707169483609089*^9}, {
   3.7071695340002403`*^9, 3.707169736742014*^9}, {3.707169880385307*^9, 
   3.7071699107196994`*^9}, {3.7071699419375925`*^9, 
   3.7071699728451166`*^9}, {3.707170022600559*^9, 3.7071700701515756`*^9}, {
   3.707170194206633*^9, 3.7071703049259844`*^9}, {3.707170479144236*^9, 
   3.7071705018148355`*^9}, {3.70717062310413*^9, 3.7071706421474013`*^9}, {
   3.70717068581218*^9, 3.707170755486099*^9}, {3.7071708161206603`*^9, 
   3.7071709171123877`*^9}, {3.7071710471071696`*^9, 3.707171102825331*^9}, {
   3.7071712113937254`*^9, 3.707171282539364*^9}, {3.707171375595237*^9, 
   3.7071713945300107`*^9}, {3.70717143195852*^9, 3.707171631619712*^9}, {
   3.707171661862711*^9, 3.70717167397589*^9}, {3.7071718227736588`*^9, 
   3.7071718295898457`*^9}, {3.7071718717963066`*^9, 
   3.7071719069018908`*^9}, {3.707171968482173*^9, 3.707172158517458*^9}, {
   3.7071721914259405`*^9, 3.7071722095381174`*^9}, {3.7071722479193115`*^9, 
   3.707172301134406*^9}, {3.707172367662093*^9, 3.707172369784873*^9}, {
   3.7071726772424936`*^9, 3.7071726923480496`*^9}, {3.707228570370618*^9, 
   3.707228577269972*^9}, 3.7072501404759665`*^9, {3.707250434143778*^9, 
   3.707250437240896*^9}},ExpressionUUID->"ed5b14e9-0015-47ed-a289-\
ace2f925fe9b"],

Cell[BoxData[
 OverlayBox[{
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
uw==
     "], {{{}, {
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwl1wfYjWUcx/GX195biOy9hRSRMiKbyB5lZWePEpWUVPYoWxq2zIi0yIpK
mdkqKQ1KJX3+uq5+1/P7fv/ndZ3znPu571OBrv2b90uakJCQREom+/+6y3W3
VNSLu97wgt8TExJSuO6S7foDXnhAXsXP481emwW/Lp24h7nOXAW8VZ7khnCT
uYsyiLuTK8VVwJskM/eadORb8Z248vg9GcMN5l7iLshArhJXkiuPN0ombq50
4FvyHblyeIuM5p7gJnHnZQBXkSvBlcMbJCM3R9rzLfgOXFm8WUZxg7gXuXPS
n6vAFefK4vWSgZst7fjmfHuuDN4kI7mB3AvcWenHleeKcWXwu5KemyVt+WZ8
O6403igjuAHcRO6M9OXKcUW50nidpONmyiN8U74t97yclj58Wb4IXwqvlbTc
DGnDN+Ef4SbIKXmcL8MX5kviNZKGmy6t+cZ8G+45+VZ686X5QnwJvFpSc9Pk
Yb4R35p7Vk5KL74UX5AvjldJKm6qtOIf4h/mnpET0pMvyRfgi+GVkpKbIi35
hnwrbrwclx58CT4/XxSvkBSxXqUF34BvyY2TY9KdL87fwRfByyU594o05x/k
W3BPy1F5jC/G5+ML4+YyVo7Io2ZFzfKaFcLN5Cn5RrqZFTG73awgLiD55Q5p
Kk/K19LV6wp7XR6vy4ffkWTcy9KMr8834UrhDTKc68+N4Q5LF64Ql5vLi9+W
RG6yNOXr8Y256/F84bXxPevrZRjuh0fHd4sX4ln4K9wZF8S58O1xj/RP5X18
v9n+uGd4An7L/Ce8Gi/DSfWXpAmuixuZl8DvylCuLzcq1gdegGfiL3EnXADf
hvPg2nhf3AvuOe7N2L/wJGnM1eEeir0Lr5MhXB9uJPeFdOTyczm53HhZwv8b
4IvSiH+Ab0gVw2tlMPc4NyLWIp6PZ+BDuAO+A+fAufA/+m96MtdPZJt+n9dc
0E/oe/VEe+pk/Cx+w98UxL/g7/Bl8zR4FX4D3zS/DX+N98f+Yf53fD58v2sD
8yLm1/Bl/Kd5RrwFr4m1j7/VD+tr9Cf03vrweE7wPDwdH8QH4j3HvsXn07Pr
t8W60T+WrbiW2Z74HvEzeKn5j3glXor/xRNxQ1wbPxjvL9aADOJ6ccO4z6Ud
l5fLxuXES+RG7Fl8A/4+vj4ujFfJQK4nNzSe2Thr8DR8ALfFt+OsOAdOqn8k
7+GaZuf14/pnelL3ZxIejxfHM4iv4Iv4knlqvAIvwf+Y58SH8T48wfyv+Fy4
lmu9eH/mV/GP+A/zDHgzXh3PPz6pf6Wv1AfoPfQhcd/0s/rROPf0qfp+fn/c
79iP+Tx6Fj17LFH9Q9mC7zXbHWsWj8OLzH/Ay/Fi/Hfszbg+ronrxjrDK6Q/
150bzO2TNlxuLjOXDS+Uv2Kv5uvx9/J18BOyV1rzufhMfFZcA++SF7inuQXc
9/gdvAhfj30c18U14rcDvhbnIl6FC+gn9C/15Xr8IHlMH+R1l/Qz+hE+hfs6
F0/Be8yy433xPcdZYf5nrFec0TVLPL/mf+NfE2NB+Hx4p+tmXD3WHj6Hj+FP
cRI8EY/F8/3Jz/oF/Tuzt/WF8XzxX+l79fF8Hb167H381Tir8UqcPz6/9MWP
4oGx/+M5+NVYh7gVzokz4Mx4nvwRZxL/AH8PXxsPkN3Sks/Bp+cz4dfjPsaZ
xN/P3x17TZwl8X6lD9eN6x9nCp6NX8G7cAucHafDGfFN/AHehO/RP5Hn8VP4
NfOL+C28AF/FX+p79LF8bb1a7A387/ol/Xc+vfu5Aa+IMyzWMj6Ov4izAf/r
+jju6tov3rf5D/g0PmyeHM/CL8f3Y54N741nADc3/yPWK07rmiHWrP5L7EFm
O/SN+t36Wf2o/rE+QX9Sn+v1F/CbeH683zij8X34rtgzcN6YS2+uC9eX+yTO
cy4rl4ZLj6vhj+Q5bgw3h/stznKuFlc1ntdwcb7i5XF26sf0Q/oyvZfeWe8T
z45+Ks5bfqY+Od47n9Xn34N34qZm12Kd49Su6cyLml/HV/AN80x4O96A74r9
EZ/BR/CHSeIHhWccj8az46zWz+vnzVKZLcPz8K9xbuqf6WPMaupV9Br8r3F+
43dwHv0N6Yk7xXcb6wTPwC/hj3ATnBmnwmlxVbxTnuFGcbO4X2Q0dy9XOZ5V
3Fs+lMbxufiUfBo8U67IKL4Gf2esX9xLdkqjOA/5FHxqXCXWuYznRnIzuHPx
vvHr+Gc8ElfHlWL94Nx4qfTgOnI9437g6XgS/gA/FPs+To5Txe8A/D5ejyvH
epRxeASebn42/k38Gv4JH9J36yP4e/SKerW4F3gdfhvn0o/qB/Ulene9g97D
677Tv9UP8dP0F/Ud/Gf6B3rDeB71ZHpK/k/95zgn+G36u/qd+mn9G327ftP1
aTzcdZq/yW9NXMbn8BnzlHgJnosvm+fAB/EuPNz8etw/XCHWn3kh89/wD/iK
eTq8Fr8V+3acQfgI/hwvxjdcH8PtXbv7+4PcVPxCvD/cIP4NnIhT4Epxz2Us
N4ybyp3Gi/Ec/GP87tA/1Yfx1fTyetVYx/r38f3zab2PNfhNnDPOOvwNPoAX
4X9cH8Xt4v3523zmF/FJ/Ll5MjwFT8Tvm2eJ/5/GO/CD5ldj7eOkrsljz9d/
0v8y26qv0yvqp/Sv9W36U/pQfYrXn8KL8Gx8CQ/Fd+FyuEp8D3ihdOPaxnvl
tkl9Lg2XJPHWo5/wavxmkCF8Vb5srNU4V/EC6co9wnXjtko9LjWXkHjrv4RX
Yq+SwXwVvkysodin8XzpwrXhunLvSd3YV7ibSW8dxwkvx7qN3xV8ZaK011aK
fQ7Pk85ca64Lt0XqxJrj/pX/AFkFC3M=
            "]]}]}}, {}, {
        {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwNw2kv1wEAAOBf5ov00lFMruYIoQ0p/xxDxVzltkJslGkdqFylk6SQVISE
ROnwtXqe7Tla0x5qCwuC4IiTxoUHwT8P/e2Af33tnmW+9cAOJ/ziSS/Z7VM3
zfS8jY74wVjPWGq7466abIbnvOqwS8Z43CRPWegVh3zvMXMtsc0xV0z0ol1O
+dV0z9rgfReNNsdiWx31swkOOuu+lXb6xA3T7PeV3y2w3nsuGOVt3/jTant9
4bbZ3nLGH16wxUd+Mt4Kr/vYdVPt86U75lvnXeeNtMoen7vlaUM2+9CPnrDc
a066Zop51nrHd0Z42Rs+85tZ3nTaXYuc85dN/vGBy/4HP51Kmw==
            "]]}]}}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
       TagBox[{
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]}},
        Annotation[#, "Charting`Private`Tag$60270#1"]& ], 
       TagBox[{
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwNw3kv0AEAANBfmy/iz5wNFRO5yiYRipHKJDlCi8JGrIacRYVSIbeinOVI
Ofpe3tteaHlDfv2ZIAiGjQkJgm8OeGKNh341z30/+9w0fzlus3c966xd3jfL
RNd96xOLjfW7g9aab7q//WCL9wxzzm4rvOauE7Z5yQ3f2WiJca445CML/OMX
O8xwx4+2WuY/p31puPP2+MBs9/xku0lu+t4mb/vXKV943lVfW+dNrxjhgq+s
9LrJbjnqU0u94A/fWO8trxrpor0+NMfLXjTKaJfss8pcU4z3p8M2WGim51y2
32pvmOq2Yz7zjgmuOeJjj5yxyAMn/W+nx54CstNJAg==
           "]]}},
        Annotation[#, "Charting`Private`Tag$60270#2"]& ]}}], {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox[
      TagBox["x", HoldForm], TraditionalForm], 
     FormBox[
      SuperscriptBox[
       TemplateBox[{"\[Psi]"}, "Abs"], "2"], TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], 
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"Pr(2 < x < 3) \\n= \\!\\(\\*SubsuperscriptBox[\\(\[Integral]\
\\), \\(2\\), \\(3\\)]\\) |\[Psi]|^2 \[DifferentialD]x \\n= 0.196048\"\>", 
     TextForm]], "InlineText",ExpressionUUID->
    "3d8b220c-8104-48f3-b2b2-130ef0920079"],
   Text["Pr(2 < x < 3) \n= \!\(\*SubsuperscriptBox[\(\[Integral]\), \(2\), \
\(3\)]\) |\[Psi]|^2 \[DifferentialD]x \n= 0.196048"]]},
  Alignment->{0.6, 0}]], "Output",
 CellChangeTimes->{
  3.707172308860105*^9, {3.707172357821191*^9, 3.7071723708262243`*^9}, {
   3.707172677880554*^9, 3.7071726933045654`*^9}, 3.707175668178421*^9, 
   3.7071761691588187`*^9, 3.7071787386911964`*^9, {3.7071813426784906`*^9, 
   3.70718135141107*^9}, 3.707181396182229*^9, 3.707181995867051*^9, 
   3.7071821856165676`*^9, 3.707182220359777*^9, 3.707184270506235*^9, 
   3.707185384131092*^9, 3.7071854989159694`*^9, 3.7071857684679976`*^9, 
   3.7071863566400776`*^9, {3.707186666223669*^9, 3.707186698760919*^9}, 
   3.707186740222046*^9, 3.707186807407622*^9, 3.7071869264364758`*^9, 
   3.7072179339807167`*^9, 3.707228592800452*^9, 3.7072290366291914`*^9, 
   3.7072324488555536`*^9, 3.7072328660304823`*^9, 3.7072329053029275`*^9, 
   3.7072331787789087`*^9, 3.707233321433999*^9, 3.7072334060753803`*^9, 
   3.70723388398542*^9, 3.707233937391369*^9, 3.707234007321926*^9, 
   3.7072343766246767`*^9, 3.7072348441252766`*^9, 3.7072351623901277`*^9, 
   3.707235413226689*^9, 3.7072368077938004`*^9, 3.7072372122303457`*^9, 
   3.7072389582475395`*^9, 3.7072408285157194`*^9, 3.707250143925824*^9, 
   3.7072504396958675`*^9, 3.7072508450013113`*^9, 3.707252513713107*^9, 
   3.7073277688052883`*^9, 3.707327902371648*^9, 3.7073282314542437`*^9, 
   3.707333884082235*^9, 3.7073348387283545`*^9, 3.7073381056821175`*^9, 
   3.707345996942752*^9, 3.707346048628419*^9, 3.707347149057058*^9, 
   3.7073487599469056`*^9, 3.707348981029941*^9, 3.7073491258198614`*^9, 
   3.7073494747315097`*^9, 3.7073511269710026`*^9, 3.7073610163684034`*^9, 
   3.7074011895936165`*^9, 3.707401266610791*^9, 3.7074013564187207`*^9, 
   3.707401616865877*^9},ExpressionUUID->"8f12b72f-ad68-4b7a-86d8-\
9ffefc71854c"]
}, {2}]],

Cell["\<\
Alternatively, if we measured the position of many particles all described by \
the same wavefunction, we\[CloseCurlyQuote]d expect the distribution to \
follow the norm squared of that wavefunction.\
\>", "Text",
 CellChangeTimes->{{3.7071729995819073`*^9, 3.7071731313809404`*^9}, {
  3.70717333607369*^9, 3.707173336722187*^9}, {3.70718435145334*^9, 
  3.707184362793939*^9}},ExpressionUUID->"add7be55-20fe-45fb-a2ce-\
6a687dc1a26a"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"exampleSamples", " ", "=", " ", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"ProbabilityDistribution", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          StyleBox[
           RowBox[{"example\[Psi]", "[", "x", "]"}], "Code"], "]"}], "2"], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", 
          RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
       "]"}], ",", " ", 
      SuperscriptBox["10", "3"]}], "]"}]}], ";"}], "Code"]], "Input",
 CellChangeTimes->{{3.7071664514447193`*^9, 3.707166460865343*^9}, {
   3.7071733906385136`*^9, 3.70717341814071*^9}, {3.707181419298007*^9, 
   3.707181422933382*^9}, 3.7071820306249323`*^9, 3.7071822779278965`*^9, 
   3.7071863868958893`*^9, 3.7071868027329397`*^9, 3.707186902787922*^9, 
   3.707186969065593*^9, {3.707232565301318*^9, 3.707232566266459*^9}, {
   3.707250446163162*^9, 3.707250510379472*^9}, {3.7074021067476993`*^9, 
   3.707402152148591*^9}},ExpressionUUID->"fcb9b5cf-42ec-4b62-a533-\
ed35217f3e3f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"Animate", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Overlay", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"Show", "[", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"{", "\n", "\t\t\t\t\t", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", 
               " ", "\n", "\t\t\t\t\t", 
               RowBox[{"ConditionalExpression", "[", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   RowBox[{"example\[Psi]", "[", "x", "]"}], "]"}], "2"], ",",
                  " ", 
                 RowBox[{
                  RowBox[{"x", " ", ">", " ", "2"}], " ", "&&", " ", 
                  RowBox[{"x", " ", "<", " ", "3"}]}]}], "]"}]}], "}"}], ",", 
             "\n", "\t\t\t\t", "domain", ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"Filling", "\[Rule]", " ", "Axis"}], ",", " ", "\n", 
             "\t\t\t\t", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Default", ",", " ", "Red"}], "}"}]}], ",", " ", "\n", 
             "\t\t\t\t", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}]}], "\n", "\t\t\t", "]"}], ",",
            "\n", "\t\t\t", 
           RowBox[{"Histogram", "[", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"exampleSamples", "[", 
              RowBox[{"[", 
               RowBox[{";;", "n"}], "]"}], "]"}], ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"{", "0.1", "}"}], ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"bins", ",", " ", "counts"}], "}"}], ",", " ", 
               RowBox[{
                RowBox[{"counts", "/", "0.1"}], "/", 
                RowBox[{"Length", "[", "exampleSamples", "]"}]}]}], "]"}]}], 
            "\n", "\t\t\t", "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"Histogram", "[", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{
              StyleBox["Select", "Code"], 
              StyleBox["[", "Code"], 
              RowBox[{
               StyleBox[
                RowBox[{"exampleSamples", "[", 
                 RowBox[{"[", 
                  RowBox[{";;", "n"}], "]"}], "]"}], "Code"], 
               StyleBox[",", "Code"], 
               StyleBox[" ", "Code"], 
               RowBox[{
                RowBox[{
                 StyleBox["2", "Code"], 
                 StyleBox[" ", "Code"], 
                 StyleBox["<", "Code"], 
                 StyleBox[" ", "Code"], 
                 StyleBox["#", "Code"], 
                 StyleBox[" ", "Code"], 
                 StyleBox["\[LessEqual]", "Code"], 
                 StyleBox[" ", "Code"], "3"}], " ", "&"}]}], 
              StyleBox["]", "Code"]}], ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"{", "0.1", "}"}], ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"bins", ",", " ", "counts"}], "}"}], ",", " ", 
               RowBox[{
                RowBox[{"counts", "/", "0.1"}], "/", 
                RowBox[{"Length", "[", "exampleSamples", "]"}]}]}], "]"}], 
             ",", "\n", "\t\t\t\t", 
             RowBox[{"ChartStyle", "\[Rule]", " ", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", " ", "0.3", ",", " ", "0.3"}], "]"}]}]}], 
            "\n", "\t\t\t", "]"}], ",", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"\"\<x\>\"", ",", " ", 
              SuperscriptBox[
               RowBox[{"Abs", "[", "\[Psi]", "]"}], "2"]}], "}"}]}], ",", " ",
            "\n", "\t\t\t", 
           RowBox[{"PlotRange", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
          "\t", "]"}], ",", "\n", "\t\t", 
         RowBox[{"Text", "[", "\n", "\t\t\t", 
          RowBox[{
          "\"\<# measurements \[Element] [2, 3] \\n=\>\"", " ", "<>", "\n", 
           "\t\t\t", 
           RowBox[{"StringTake", "[", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"ToString", "[", "\n", "\t\t\t\t\t", 
              RowBox[{"100", " ", 
               RowBox[{"N", "[", 
                RowBox[{
                 RowBox[{"Count", "[", 
                  RowBox[{
                   RowBox[{"exampleSamples", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", "n"}], "]"}], "]"}], ",", " ", 
                   RowBox[{"u_", " ", "/;", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"u", " ", ">", " ", "2"}], " ", "&&", " ", 
                    RowBox[{"u", " ", "<", " ", "3"}]}], ")"}]}]}], "]"}], 
                 " ", "/", " ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"n", " ", ">", " ", "0"}], ",", " ", "n", ",", " ",
                    "1"}], "]"}]}], "]"}]}], "\n", "\t\t\t\t", "]"}], ",", 
             " ", 
             RowBox[{"UpTo", "[", "4", "]"}]}], "\n", "\t\t\t", "]"}], " ", "<>",
            " ", "\"\<%\>\""}], "\n", "\t\t", "]"}]}], "}"}], ",", "\n", 
       "\t\t", 
       RowBox[{"Alignment", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0"}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "0", ",", " ", "\"\<# measurements\>\""}], 
        "}"}], ",", " ", "0", ",", " ", 
       RowBox[{"Length", "[", "exampleSamples", "]"}], ",", " ", "1"}], 
      "}"}]}], "\[IndentingNewLine]", "]"}], "Code"], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"AutoCollapse", "[", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7071647236125536`*^9, 3.7071649353118525`*^9}, {
   3.70716497272719*^9, 3.707164977496866*^9}, {3.707165045372439*^9, 
   3.707165045994536*^9}, {3.7071732189746695`*^9, 3.7071732372000694`*^9}, {
   3.707173300985273*^9, 3.707173302242024*^9}, {3.707173559269908*^9, 
   3.707173560404168*^9}, {3.707173597217518*^9, 3.7071736019488707`*^9}, 
   3.707219526558853*^9, 3.707219757367989*^9, {3.707222986217821*^9, 
   3.7072229867872543`*^9}, {3.7072286153997407`*^9, 3.707228657333459*^9}, {
   3.707228688345074*^9, 3.707228715837148*^9}, {3.7072325716873193`*^9, 
   3.707232579498927*^9}, {3.707245703463701*^9, 3.707245709389325*^9}, {
   3.707245769491022*^9, 3.707245792117779*^9}, {3.7072459402561417`*^9, 
   3.707245945672223*^9}, {3.707245975950809*^9, 3.7072459816035366`*^9}, {
   3.7072468850674047`*^9, 3.707246912682671*^9}, {3.707247197420576*^9, 
   3.707247241548131*^9}, 3.707248558119252*^9, {3.7072495890582047`*^9, 
   3.707249631155781*^9}, {3.707249748879838*^9, 3.7072497932818055`*^9}, {
   3.70725048533263*^9, 3.7072504886473255`*^9}, {3.7073410786549907`*^9, 
   3.70734108335161*^9}, {3.7074016470062075`*^9, 3.7074017108895683`*^9}, {
   3.7074017425674663`*^9, 3.7074017432826076`*^9}, 3.7074018594520164`*^9, {
   3.7074019044312844`*^9, 3.7074019054193964`*^9}, {3.707402170097099*^9, 
   3.7074021710129614`*^9}},ExpressionUUID->"f0865b95-a499-46ce-a592-\
44456980c53e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 858, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 0, "# measurements"}, 0, 1000, 1}}, 
    Typeset`size$$ = {360., {123., 130.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$102761$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$102761$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Overlay[{
         Show[
          Plot[{Abs[
              $CellContext`example\[Psi][$CellContext`x]]^2, 
            ConditionalExpression[Abs[
               $CellContext`example\[Psi][$CellContext`x]]^2, 
             
             And[$CellContext`x > 2, $CellContext`x < 
              3]]}, $CellContext`domain, Filling -> Axis, 
           PlotStyle -> {Default, Red}, PlotRange -> {0, 1}], 
          Histogram[
           Part[$CellContext`exampleSamples, 
            Span[1, $CellContext`n$$]], {0.1}, 
           
           Function[{$CellContext`bins, $CellContext`counts}, \
($CellContext`counts/0.1)/Length[$CellContext`exampleSamples]]], 
          Histogram[
           Select[
            Part[$CellContext`exampleSamples, 
             Span[1, $CellContext`n$$]], Inequality[
            2, Less, #, LessEqual, 3]& ], {0.1}, 
           
           Function[{$CellContext`bins, $CellContext`counts}, \
($CellContext`counts/0.1)/Length[$CellContext`exampleSamples]], ChartStyle -> 
           RGBColor[1, 0.3, 0.3]], 
          AxesLabel -> {"x", Abs[$CellContext`\[Psi]]^2}, 
          PlotRange -> {0, 1}], 
         Text[
          StringJoin["# measurements \[Element] [2, 3] \n=", 
           StringTake[
            ToString[100 N[Count[
                 Part[$CellContext`exampleSamples, 
                  Span[1, $CellContext`n$$]], 
                 Condition[
                  Pattern[$CellContext`u, 
                   Blank[]], 
                  And[$CellContext`u > 2, $CellContext`u < 3]]]/
               If[$CellContext`n$$ > 0, $CellContext`n$$, 1]]], 
            UpTo[4]], "%"]]}, Alignment -> {1, 0}], 
      "Specifications" :> {{{$CellContext`n$$, 0, "# measurements"}, 0, 1000, 
         1, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{415., {162., 169.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7071649494213247`*^9, 3.7071649792661242`*^9}, 
   3.707165012010634*^9, 3.707165047411086*^9, 3.7071663564921255`*^9, 
   3.7071665763721304`*^9, 3.7071711238503685`*^9, {3.707173226129828*^9, 
   3.707173237901939*^9}, 3.707173303191354*^9, 3.70717356075187*^9, 
   3.7071736026179905`*^9, 3.7071755727525663`*^9, 3.707175642908661*^9, 
   3.7071756851899595`*^9, 3.7071762101666117`*^9, {3.707181352428508*^9, 
   3.707181396698818*^9}, 3.7071819968854246`*^9, {3.7071821062541666`*^9, 
   3.7071821080923033`*^9}, 3.7071822364481173`*^9, 3.70718428644858*^9, 
   3.7071854296366005`*^9, 3.7071856257341404`*^9, 3.707185836612664*^9, 
   3.707186381711664*^9, 3.7071864581460857`*^9, 3.7071866316523385`*^9, {
   3.7071866672850227`*^9, 3.7071867000400934`*^9}, 3.707186741275679*^9, 
   3.7071868080554543`*^9, 3.7071869439826236`*^9, 3.707187000605755*^9, 
   3.7072179506122055`*^9, 3.707219528147133*^9, 3.707219758606738*^9, 
   3.707222987387691*^9, 3.707228660921582*^9, 3.7072290369925795`*^9, 
   3.70723241308138*^9, 3.7072324494414105`*^9, {3.7072325817388096`*^9, 
   3.7072325880054145`*^9}, 3.7072328665363464`*^9, 3.7072329058574276`*^9, 
   3.7072331804453173`*^9, 3.7072333222101383`*^9, 3.707233406576743*^9, 
   3.7072338844933414`*^9, 3.707233938039568*^9, 3.7072340079230385`*^9, {
   3.7072342266568003`*^9, 3.7072342287880774`*^9}, 3.7072342602884226`*^9, 
   3.7072343771945415`*^9, 3.7072348444123025`*^9, 3.7072351629375772`*^9, 
   3.707235413777996*^9, 3.7072368082934*^9, 3.707237212512588*^9, 
   3.7072389587900105`*^9, 3.707240829487894*^9, 3.7072457099467306`*^9, {
   3.707245775016694*^9, 3.7072457927508817`*^9}, 3.7072459838459005`*^9, 
   3.7072469138357315`*^9, 3.707247252068598*^9, {3.7072485499601803`*^9, 
   3.7072485671266837`*^9}, {3.7072495900157447`*^9, 3.707249631584449*^9}, {
   3.7072497531797276`*^9, 3.707249793710867*^9}, {3.707250470174689*^9, 
   3.7072505132759204`*^9}, 3.707250846060772*^9, 3.70725236922126*^9, 
   3.7073277696930456`*^9, 3.7073279044764566`*^9, 3.707328232054243*^9, 
   3.70733388481942*^9, 3.7073348398905325`*^9, 3.7073381066324654`*^9, 
   3.7073410865833125`*^9, 3.7073460496564198`*^9, 3.707347152531063*^9, 
   3.7073487633855486`*^9, 3.7073489857532825`*^9, 3.707349129069213*^9, 
   3.7073494779880114`*^9, 3.7073511591073833`*^9, 3.707361030396098*^9, 
   3.7074011901562924`*^9, 3.7074012670068417`*^9, 3.7074013574694214`*^9, 
   3.7074014679921026`*^9, 3.707401579990266*^9, 3.707401628220356*^9, 
   3.707401907117673*^9, {3.7074021663238277`*^9, 
   3.707402174512808*^9}},ExpressionUUID->"d049d6b8-122e-4052-a739-\
9570dcce66e9"]
}, {2}]],

Cell["\<\
The probability density function alone however is an incomplete description \
of the system. The complex phase is very important; we\[CloseCurlyQuote]ll \
here-forth indicate it by colour.\
\>", "Text",
 CellChangeTimes->{{3.707144505941615*^9, 3.7071445357153425`*^9}, {
   3.7071446796274433`*^9, 3.7071447049328423`*^9}, 3.7071548470360613`*^9, {
   3.7071548787705183`*^9, 3.707154919770935*^9}, {3.7071736261112127`*^9, 
   3.707173657600625*^9}, {3.707184381376152*^9, 
   3.7071843827606792`*^9}},ExpressionUUID->"b3672dc8-f9b2-4c50-bdbe-\
10dd462f375e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotWavefunction", "[", 
  RowBox[{
   RowBox[{"example\[Psi]", "[", "x", "]"}], ",", " ", "domain"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7071447124641047`*^9, 3.707144724583819*^9}, 
   3.707145739979908*^9, 
   3.7071520807468987`*^9},ExpressionUUID->"d2b73624-d87e-4077-8691-\
dfd3713438df"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJwUl3c4lm8bx63s/RiZiZJZ2bLOi+zZEFJUkqRUJFklkVIyfojInmWPbG4k
2dnZHntkj8fm9f51/3Ed93Hfx3V8z/P7+Zy0enLlHgkREZEzLRHR/58fKtQq
Dw+XsN8jDeGZiBnuPw7QllWcx+CBJvkzVX549UqgUuP0DDaGN5Pp65IEc2Sk
nGw8gZ1Sv9c0UqsKAhcNmMTD8ZjDxItHq4O6oKsrHM/F1IedekunX0etCH0O
k5IvX7VjH+/gYn/jjKEo21b2ZEgN9pCkKlR3Jxpsd907dLNDsAfpBGIo+gkB
nUOF3KdK4MntDkPDiD5g7aGwThhuhnjGRx6hQVOQss8vsEvdA28vrI0wKs6B
XUC0nfHrIQgw/2NTSTUFljk1C/tNY/Cu+ZyAnsEIVE/HfvX6bwoKnpK5KY+N
wRwmdVvs+xxUXBzqlwhdhTOmG61ZWYvwlCoigYH3AIx4GSOXZVdgbGF9NSGN
GD0eJTLlgTWg79mbpgzZh+96ggwJpzZARD7374HSMuiQp14uldyEOQodD+VP
TeAYV/lARW4b4h5HJGV8r4biUeqXnBy7kPQay5ejngKrZ3mcHwT2gbv6XTX1
uQ0QzgjIv0xzCD8Su0UevCCA8hhRcI0TEbL0ZsYqmpchnM2WTtCFGP08ucql
2DkBr2MevJOxI0HTmlGBYe9GIKo1oi7gKSmi+G26/7J9ENwfhyzzOJIhzsBz
0lJ6/TB7R+j4datjSOd5LynJSg/47c+RDduQo5ltYXZPyk4ontdaojenQCKN
J1l0qf5Aut7T2ufalGh663ZIcHE9tF2psxTUo0KDXiQZ06U14JNZSHijRI1u
jZw3PHe8HB7kdF0VVqNB5sQ04LaYD0Pkn7LcZWnRzf5f+cCeAWwtjOukgnSI
rP5xv+XdRPBSrDnoFqZHr0xIaUxOfwG3fToKY24GdDHTiHvIIAg68i/OfWJi
RPgNHZHz1d7QwGdT5/8fI1o7eUK2wvoFvC+6Fj9KzYT47jkm14w9hNv8g5Y3
PjGhz7ekWBh7LeGw8ByXKAUzSpRq3utVuAyvSWebw14xI52OdJHQFTXgPHXh
zmkiHEqmKvwpISl1dF8m69SuOORDfWpmu04Ack3rNw8PcWikINoj8GgetsJs
SaN4FrGeJ/I/Qqc4wJFgRqpyfg7bJnfm+2koAo9ulbzcUJrCYpSvUxK4FaBS
1fDM7PMxbFNfOiqaoAnaM6OjpSeGMI/yLokGaR1gtqSwa9bqxnz7SMuavDig
oIGjla6+EQv9Erw30vsaTp0rDqKm+oENBJMeRNLnQ0GXComufBLoj/c60XS3
weKtsltmxbXwgDeSn3xjFMycQkQElTvgLW0hq+bDWaDUxNel/uqDoL1vg/UL
M9BY9p6JpQ4PwmdtLHWMxoBRX+IXZE9AA8U9N3mFEejpfHBgEjMDwZMnbF7e
mYP3H0PD7TPmobTHxZA0dAtWrH8RndJahvMTXb8VZ4nQsOf7LXLFVbD68a01
aocI+X/G5Y9IrEO8FveKoPUm7KTZnM8SJUBRCIFLrGIULDvzLPakt2CGezyr
VjwPWKutn4kJ7YC2fnbXS6u/8On7sN4V3j0IJ6l3avizDHWBfNP27Adwk+O/
QXLSTbgiX2/3cOcQ2M+yiLhwroOdh7SRE4EIZeO/rgc9mgP/fttG8RVidE+Z
VX7JexQCZInPWC2QoKs/5Uhl/wzBR97PN0xWSFFIorbb47IBkJyx8FGcI0Ne
fxmsjHJ6QcUoiqm1gRK5/zFNSoj8BSKvK793/aRCcozeKtOaVUDI0jhtglGj
+l1xn9SaIkgcOO91pZwGNVN6nwtszIGdWcN2yKJFm//indrsUkHf58H2fCod
ctZg82Ezj4VX3DMkrIn0SBTrvJtzORQC8xoXimIZUNcZet5zHn5gOGdsRneF
EbkOq0v8fPsKhOaHpIpaGZFq+YkMuxOOsD5//DWvPhP6o+Q849RhDTnzx5Qv
NjIhlbzXtS/4TQFZ0Drh1ZiR20DtW8pEHWjBMYVbYMyopoXWIwinCLoNv0Ui
lHAoMAc38TNFFNjuMji/Lcchgbeta8/3OKH6W/ftFvolLDRFKnK2hhUe5a2d
LpX5h732qLm6sHgaNh4vRvNITGN8myRd6dKyQFttKKl1bxxTTL7bLWWpDlpy
Km+oz4xg4v/wCt9P68FZ44hjTmJ/McnnvMoWF0Ug32SVw2esFZvwCyFZ1rAH
nd+1r1LYKzC93k8PPRLSgCiLWFKn2ueoN0LVh0Qaof9UmIVUchXQUfMX+lUP
Q262XpaiSRu4nIjvSJebgb/xxM8vz/wF3tmi63kds3D45q+miu9Rjhf/FYic
mQC5A9e+mIpxkL8zdUXSdxiah3wMHkVMg0mMnVz7qSkoOT2xq5/+D6SLqx2u
BG6ADyOydY9ZgvRacxdOTiLEZqTfsFu8Aq03Zy+G+hCjfUXqt6+K16BE+sG8
QuYOXHGrOyGUtgGz8pHnrf/MQNd8hulA/iYQ49bbYtYqoDYn+PGP7G2o2rmV
dou9FfjrnKwLo3bB68mUV8zBPwj1miXyiN6HqAsyTn42BFBxFA0cfnMIftc8
/1503gDjbM6nUT+IEMmj9A8FEwvwn8vMv28FxGg9e+EPtnLUa3Yyf5vSSZCO
0+YdJ89hCHFmD17NIUUJn3z5Yi4Ngkm6S6lYFhli2PZTpfHpA6eWY/9O+lGi
3+8chJn4f8PLBzU+L98d5buLTuuXazUonz34NP+SGv2NauRZHSwB8ro3c8qe
NCiPPb31hVEePNpawCwcaVHS8f7MZ+nfIFeownnLhg4FOkUVuz6LByKx7tfP
bejRNInP/bzYz0Bm9mjnmCUDSnqQreEw4A+MRvrxLRKMiAesku7e8QIXcv79
+BxGZLAUOBUX5QQqV4oYX4syoZOrDhoEXlt4T7Fi8CedCY17JdN5lJsDH3XM
72OnmVH4ztkyd8wAUmj2c7djmFGmr5DIHwoEec5EdZa8OHQ1WGBF0PA81M9I
ytRH4pCL3TOnl+Z8cP7NbrKt2AI24/DjIlbHCy4KlfhqkVns+PNj2gevz8G4
kY9Fi/Yk5qIetZLxnwo8rTHg/ug7ii1k8wbSaeiAzpe3qg+PD2BvSjsdyj+p
A+G+c+upu53YzTN2eVHsMlCopPomPLMOe8mlQV1dGgQH4qYaQ+vfsGfZ9Fq8
5OWwHnMwwBeXC5p3TGmmqLqBJGr0zsumejBIyXtkZDMBh/IDKYynuuCRZuVt
Ws45uDBXefwgYQDUAp7ELsZNA0th8iFlwyhgSylnmMrxMPNlJgcfNwkZNytG
SlrwgG8wzFZNmgXLbx5Uik5LYLaiLhWQuQBGinfb77jvQly1nQE1tgzUDnGf
Vp8So5Sc2jPMFauwn6/5xYueCHGtcI+i9HX4pyjUTDK4Bgl/yVWlswnwr8xV
+5LhX5gpKb7LU7gFIiPD+iKCBWDTLueSGLcDL2+p32BLwsNWgLbUYtwe9Nrj
xskvrsFWtGnLreAD2G5Zzmgg2wQpT0mBPXkiFJmZOaL3ZhVe6xieNZAjRtJ2
utH0ltPgqzSblitOglLbK7ll3PEQStLivHWWFPF9Vmhr1x0C7zoWwVIJMrT+
La/Bj34Acs59KseIaJDt0Nj38vofgFaG2e9v0yCLWOKXHRVZ8H4ge+zkHC1i
knJpeHw1GaZGWD1GZ+hQgaqAyDmur7BHu+tTMEKPHnTbikbJ/QecdMKjD0YZ
kIfuncb1577g/9aCwcCREd32/G/QAXOD3vYvds3zjMhqea2pvv0JfH/ntlT+
iAlt6M1E8S7fOTrnFCuaYUK/JRv0v+xehds5bnxlt5nRXsoxh0f0mrDOddqj
eoQZlXVy9Ut2yMIYV2BguzkO9duauPTcPwPWQ/8K1YZx6AL5ylK5HBukSPkH
2rxbwlgGi13PLOHAjlFVzqX4H/ZiqH2ykPQUlBIosyTSpzFN3crr95ykIZ/o
jxxhcBz7TIs/aUl/Ee6ekxW+zorHyp/2pu4p6YHSn9udv3l7MQtLQ5KsVin4
YrgUO/KiDXth/TjySesdyPKbVHALrML475hLGtxOhDZtgqN+tCOWWa7Va9Va
B/H0ZCWqchUw4tmXvyE0COWRRnj/X61AQjT8VcphGiqNmPVTtntg9Utiww32
OSh4X2qm4z181PsS3Smck6BrGnO3VX0crHyNbQ0qh6HOinnDmXUajr/7b63I
agI6VmmyykX+gb71yFNZ+nXoyY/kChNcgjZM//sr2UPIk82SILxYAbuYHEHL
RGJUGHBsscV9DYKyGKUiz+7BgZUz+z2bDbg+JfdBOWIeAra/dek+2wTZQ1Om
IqdaiBISmnd9tg2Wj1RXKXR+w0In9tTWfBeid0xuTVLMgvtOC5337X14Tez5
r3BoA6QZLE4e1zqECWUn7zVSAtTXfyI6F0aEvAvpfSjKliBUK23v/mdilMow
4/Swcxx8fIyyiT6SoI1Lxgz3N4YhnL83vSqIFJ2gU2s+GTIIM7S+104HkSHK
nBe8j2ePuIy27G+TLSWaclCIcPn3GwQta1cuP6BCCsVjbwKP1wDe3rxGzoIa
JYltVtsRSkG+TDQ2/zYNIsSvkH3jyockT+WiR8a0SLai4HPPwHeY2LGReaVJ
h0qDLrxhtUmAqvwm7LQ2PbIsUQm/OhAOmEgFkbgyA+IL/NO0nBUADsT1vzJP
MiIxq7ueFe/fQByu9k54PCPaeqhqw0F4DuM+5H3nuZiQz/CjVywrD2A91MYk
7CsTym37b5q35CYE4W0cjrMxo4TzZYxspJcghOIZ9juAGRm2svSjx6pg0/IV
p8aAQ98wjwGmPAlISK8NnfXDIX8rr0PR/ZPAQpvXRZy8gF03HsSBMjc8j6BZ
9cycxXALf1xtmsQg7W+M/WjNJCYwfv/ZDU0lYCdpPalwMIppD+j3kIlrQ31V
PhOOexC7K4BbHbygBWTjKl9drnVhpK271jFZAiDjLZ7WUVqPHUtr7JjneA/M
47lfyolzMcrMrKZllSIwpOId0ihPB1bq6Os6Yx3g8rIVP1ddB+V9Rvp60uOQ
YVJkG3W+E9jMdxF11yzwRfxZulLQD2vkB755V2ZgST78fYDWKMSjQNdnrqOw
t0qryCg0CUVKZ7JfcOBhwHDQRP/kLCx2RDZRdM7D08pHk/tiCzCi55fcQ3fE
vbjjZ9i9l8HCUpInXpYYqUUIBtF6rMLFvnTlW0FEqOvicd2gx+vwOuqpum/y
BhhWFco72BPgS+uHlFKOIUis+4H3f74F0kNtZPA8F1R0WjfuW+/A1KeIT2Hi
g1DzNQTibu1B33DD23X2VRhhU+q3MT6AF2TO3HVsm5BloDd/nIsI3ftgkbF9
dQ02rKor8WzEqPe+/TxFzwz40XwrecJAglQ1V3Ds63gI5p42FKcnRWRxusmD
fkPwzrEbvWciQ92TOuZr9wfg6pPZZWo8NeqmlvydU10IjlPvmgf7adBpX+rV
eKYcqLY67DvfTIvCr924yGaeAhx5mML9ejpk4JzMKpUbDRWhKz+tq+kRe3av
vpVKCHSNuE4HVTGgzyfzch4tvoMFuT4pcStGlNA4ZOAW6gFEI4p/qocYkYCj
9KuR3adgVNpQZH+TCT2TpWFrNL4L6reCpF/2HeX1S5Kmh9c1aPO92NhymRkZ
R0nca6rXAjx7lF/gH2bkqz0WIj0kD58dRYcK9HDIpiblA6ujMCjHvWSzbsEh
nTdxTWdeHYfBEyckpT8vYnop3qFblezwxDiFZS9vDgN7zeFUciE4P935iapo
CmPjFvogzi4P97xaxSIWxjAzu1tyulkaUM/AmGclMIyFG7/IpPfUBb6+P3J8
Cj1Y7PVCbQcdPpBmJF/X7m7GhH9r/E0tdAZZ98p3ZowlGMlSt+Pd/iwg++/J
fI5OOziqqhKLjs7A8tpy9F5PL3SnFidWPp6FZBW3yC/qeCC9pdSsLzsOp5Kv
GT2RnYDLzmoB4pnD0G62mXyHawbuhrI/Kj09A5GFjv3naZbBxUJeb9mPCLnd
n7tNvLMCH591zF/QP+KDYDahf7MbUPJzJBITmwQOfHb/w/VNULlpZv/8eiHM
y+8uL//bBkPvODW33Q4wKxY2IxvahcOo41qX8YuQSXls3al/H+LeyIs9rCeA
dvf2XlLlIVhy0OcPtK/DSFjqCEUPETKt8rD/wzMPgd+EBv51ECPxLen8k+Jj
8OES1+HnZhLUcZ833vTEMAQ2mjifaidFxt8JI7OUg/DlhK32H0UmZBNin5Fs
ZwPcbu4aVGVMSJOK8awc3gxypLp51qSYEW2QIp10rB6UMrxLEs1mRno/zEM/
uCjDwQlrF3dxHBKv+ddLQ3UWlk7Hd6ek49Cjzmjf6CIeaHzTwjZIP4qd8A64
tnNOFxodTB1+svRjNlgYXYqaKszMZxK1P+3AXhHvRNmkaIAswfjmzbhajDWB
IfNS0mfoC9M1VZ2KxzqrC3ppf1SBf/H6GEN3IzBl28l/9J2EK1yHE2/Zu8G2
wOKcs9IcXFHKUv0WPAj1Z05OOg9OwQWpAmdv3TFQSlIAOV48dKFawVyOKZB3
DBQRKRuFrScVz/Z3luH6hYZ26XBiRN1ghbEfrAI1td9kxvwBEBZNdDaXCeDP
esYqWqwDxDPLpjIJW+BAoWhoIlQK4l77gkpje1BWSKnEpr8OjKefVZm1HoAE
3fHAoVYC0J4fiC4xJUZrzQqX9CimwNteOGJNjwT5RU3IZ7Hh4QOnuenJJRxy
oBcqijnFAhEu04L5P5ewcbPXn5/gcGCLTcPf7X9Yo9GHkQweAfiqwFaoODON
hU+QSyfGSYEvX2Bpy/EJ7NGaCquPrRpcLFHluWiCxwJEeThNOPXgJ61G6Up4
L6Yvp95t/EAOLty2e3B2tw3LLZQ38KK8AXncqcUGwdVY/iWSXX2WePj66cJS
tMl7TPbeR2MmhV9wfGVZLlu8DIiUZq6KjvSDbbFoAntHC6g1yqptkU5DXkpk
0aU3PaBrRa/2QHwOAmkyRluJh+GTu4GUWMgkdHnnCNlQjoOsoqnNq91hUD/d
p73XOQV5aV0ZpyPHwbLvxDunuTnIjR39S3lpDV4d096In1sEYaXncTaZB/Ba
ZOTeM9MjXiEM4cS/ESNmee+E5xZrcElIzSBjYg+MTQ1DvDU24Ky8d1Cv7yLM
ewqFkFzdBK2cfL6Prb/B13pN5Oa1bQjPWEnjvFILHeaTztUXdkH1R+xHCr9p
WJRFoeRq+/AmouIY6ccNyBp6PictfAiJ5YWFIqoEeHPtd/2WDxG6CNeYho2X
ge0c5TGtd0e84tQf6G00AW+Cb3JFuZGg73r/GPwVRuCLi3xJ6mtSVLVipojl
DUJeBW3iSS8yJJO9u9LE2Q+8GaytcWaUKFeA5nzQ5XpwN9MQUjKnQl+ni3h1
H9RA3qf3N4f0qdEJNaxMzbcM2mReuz6+TIPszaeOK/nkA7o4KemkQYuu7o98
F3RJh/3xMhZVWTo0MrHrfms8AeI2NUf25emR7+27pF6vIoA7dNK7SowBcc41
2nAlBEJC/7HeaA5GNM/GvF/H7w3SnKwszJGM6AdDoE7P96N9yXtWmQrHhCS3
16MHJ+3g+414861QJjQ2WlYiXmsB9Xp6dfH0zEiU7uopk6+X4MOxs3VZvsxI
OjzMQVxMDaq27ErzKXDIzUdP3f2xJNB/+qTu5nXE573Xv+8M8gP5ZbpHhqML
GI963M0WGi5w0srbGV6cxagd5HxUfEXhA1fG83+Hk1h34LtFeXFFmDsZkMSk
MIa5nVBd+x2qBe+7GrenogexF7/ssGYDbfjIJ+Cd0NqFRais9l1W4gGnFAHF
p9UNWPFFqoNMRR/gopIJu3ssH3OdDuC9xfIDiJ9kLWntpB55d72rUG875C+q
x52s+AVkV5+RUH4egzf3khvwhR1AffMibiFxFliWTG/sK/XD1zUOvEHiDNzc
YTBoJx+FWcPPsT9HR8H3xAmitH8TENbGerozbQTMmBK/t4/MgHy4jvdkyD/Y
S3pd+WN+HnBDFFmCV7aBu3wxhOfeMly+6ysDzMSI0d+01u/GKmyydn/wridC
5xfCDuQurYPo+RO3vH0JkFQQUBCoTwATPZLd29x4IDKQjlW/tgUVrl+47tzN
BZG3X6R1NXeAuEext768D9IESjS2VfbgeZ7amOgR51+5mnV7TuYA/kufFSlg
2oT5gr+XztASIdxdjo9DxWuQs7Tj+52cGHnazffkRM8C9RpljSERCbpnmee1
Jz8KQcLrpb/3SVB2kvEtj/Qh8KuXMXxCTIZ+lZUbOPw3AKcC2T/m/KFGAaxq
NiKqRUB9ZzAlvIkG+ayaSl+yzwFLwdRr8hW0yGXE4rT4aApIRrFwihTToXt/
31CBdwzE9D4aV8qjR7wfUnUc6kJAUifB7lQOA+IuIrUOy3sPvEzsmjzmjMg0
vfrRa7+XEDrp76XUw4iW+Sy/vf3oAAlXV7g0jZlQpve7r/cZrWHndJM8vp0J
nT0zVeVhaAKUq2dOmOoyI410/76WXG3oYTUJcv7NjH68n9CoXb0Ay9Hb3oLq
OBTfT3JvwVcEvntp1q3X4pDgh23rY4Uc0Grt1vC644hXvrPOF5SxwWNSA54b
63OYw8UnzAfrgsAsOhqGW5/CMkIuCQSflAP5+IDsJ8Lj2G7PPv47uQa8FzgT
KZs8jFUoX6ZOn9SFVLYCXt38HizEREIpIusUOEnt+U4NtGCEseg6leuOgOJV
vQ9xZRjnr4lX5jHp0B9nYUD40wYBnCsDUkEzMKHrSpV6qxcEV9Di66RZYCZa
sxwkxcNbUl6hjcxxyGq/z0KxMw7ih5K11z4NgyFX5fZU3zQ84My6l8QzDYOV
/wU87l8Ck0Q69cOrREj7BlfYq74VKMOlP/n8kBjtvV1MpGrYgA05c3m3rSlw
tjn7RaBrE06eNWgILSmBXqe6c50t2zA9pSTlv9YGymBkaVG+Cy09ykLrjgvA
p/HCbatsH1zHKzSsvhLgZyJzXXXcIXicEuHLENyASP7R1PZfR/6X//Xf7ME8
MAa/H2/8SYwWlaSVpz6OwXsLoYcS5SSI0fB5BK3BMATzFXnTVJMip7tvFp4f
8fh8cWBGqhQTaro3GnlO9T50oEKdR/lMKHRSce1h43WYiSlx9BBjRhO1oldz
vutDDp1aOnMqM7q6LqMdXqECZnqSJxZO49C15LDb1/TPwU0Ku7dyiTiUy73g
my5+AqITPn3J1x3FYvx5rwpX68CHt4+vh3/uxw76Fq/vbavBE5H/pndmOzBn
er5MvUgVcObQW9pO+YWp8812M7wNgfnRS4aBC8nYKB+r6oWkSvgt/DBBs60B
uo6VkixuTYCQyIJGU3QXlEw3fC47NweaIbKZVzkHoZE1s7AWTUPKuphiHdUY
WPvTVdfa4sHSvuef9tAk/JfQswjKo9B8PBRPOrQMGoM8Mom+R55RHrIWOrQK
D8773lP4cAj642d/sbYRYHptqpMhtQs+SCkk3+vZAjYPlCGCFQIzpYB4WPUe
1FK1xLE2r4HPnUnNwewDuB5c+/HsIgHqyllsvLWIkcpV3tj7WVNAds0vrkOJ
BM2fGbYK1sTD5i4/Rd4UDmkSlrmphViBXO+a3XDaCKYi4e7eoKoHP4I95qOT
/2JnGw9XnUzOw6rrTMbJ2T/Y+a1493ay+3BlQcvNgAvDlrt45JknkoHh5TNe
kpI/UEKXOzf+dxoat/zwu0//AgVXTAn99ixUifjHyHqNw3FvzTt9n4dBJ04v
fsVkGkpHRJILFSdB3GpB9b3VEliNuARPFx/ChNrLfZeIFaibMYoUO+I5iWei
bCEhm/Bw4cdd6zfVkDN/MzM8eBtUqajsyf0bgbLyxrvDV/sgdOKa9YogAUqQ
utmu9SEMpMIbsaoNwN3WXn+fTIx8xy+sDVuOg+8LtYs2USSoIY3HyajoiGfG
6GKtakaxvnnMIr9CGygzvwpD5AAWsTwZfm1bA14mm/8wHOzEKIpZ+UZjxIBw
S45VpuA3xmB6NeHHK39gcrNQEt3LxKK8JC+gwBLo0WqgMPneCbVTLOFOu7Pw
5gVvrd77UdAwRfuIfRQc63aeu1hPwt30dwlvHuHByU61lDF+Gd588VFVNiFG
TkkbNwK/rkIoq+qVy1eI0FbTcPmVAAIwkm2VU/L1gyaS4+8O24JKZkbB/Dt5
MMT6+ILW6z140h7E7pS7Co/6G66OOx5ATLX4MxvmTaA8pZMbxEuCLvNZ0y4X
4IFyb6shIH4Io/E1G7Fb0oEvUf8uEaq6MbK+D5pp25ywPs9wJ721CUsQkWP5
3uIOZ729Pj782Q5bA7QqWiKzsPfVVvKKYR+Y7sk8LpGYhUiXix/+Ok7A5Kp7
WcDUMNTRfbUXEV4GyvR69soyIpTxrETMh3MVNtT2WT4KEqPy6xLcBSxb8Jrl
2IBYdz4oNP9nv7K1DyGml0Ji5444/SJ9yN4gCQra426J2RgCghVdKFknHmPc
Zd8wDtSF29kNHKmb7djowfmFnr8GQOiwbKj88hPbe3XwLZU3EjxomXxQcDcU
/2S0UkBz0OygmIeO9lL9SWIz99IR0GXJu8NhMgVFbV4fXmuNwanfU+Sbx1fg
5xSdZ1ACMYrbedXSe9SzbQmubFo1f6BNUFmIwLYNFseyUh7frATtnb984yT7
8LBBydu/Zh2+zhApdB95RlMpzS2hVAKQ+DYEstwgQaG6LZv3e0aA90JwatAm
Dh1L0v+1IYYDJq4wx77RJYz6PenjjTRmmGFTrPXlnMdIdiydb2bxw6dB7tIq
8hmsbrekvuaCFDw9v+ReIjuBmcp9j7FiUwOpV1rsxc54LKf6r0TjgS74ihZl
+nb1YlAWpF+ucAGoZs+0diu1Y6VuCuTBFqYgPfXuhRxzDWbh/0rQgCQOZGuO
N37pD8Tcrh9UOzvXwlWr+5uTRx70sbIn4ZJiP6j85iC1MGuBnoEDpmNNUyDW
YbmQrNkD1OomzXoyc7DXfCqFqXoIApbD96paj3w48gKN5NwY/Gw1JZ04OQJv
fMtXVfKn4MNUoxSH0jgkNX97dqlxDl7SbeQ2rKzClSxeq7TmRWhe+tPnbnMA
tkmbhxJaK6D/Ps0k78gPqmhrPHQM18BxdMunV2kfPC8rtDPLbMDirdj9dc8l
4Px533FYbRMWSNfinOMbwIPkuq6B5jYIPM36Des1oMG7tW0vvAvN+uzLrxum
QOiaq2m95D78061MEbXcgHl1EqOLnIfgK1tpec6CAHiuiYwhDyLUtXAQ8Cto
GXr45f0KPYnRbdnIcLugCSA+fveyreMRPxE9jSS/PQKRRwwZ5UKKmOgn1OVq
BoGNra0h1pUMJXLOXT0h1Q8Tu2o6Hy9RooCv/3Wu+dRDSvfbi7lXqJAD3VbQ
XnANREXHCueoU6NbpBbmhNYy4H72fapJhwadiSv4crokH+hPlyxvKtMiKWvu
qOu/0+GDmY0P/1k6VDHhPUwhkAhBX8iWHkjQI8+2kujn7RHQVO+q8eEUA/oV
9gNHxxAECr9PjYaxMqLWmWtEjx284VW0sr3RZ0ak43HXm5/iBYzMqT7ZoGdC
KRtXpLTvPoRjWOWgcDATEj81e5vIwBKsvSqeTlEzIwWP4tT5uUvw1uejTsIb
ZvT7/X+XFz6pgT19x6d5UhwqPmv/2/aPJNTuO3xVe4lDNhdePsu8JACea6VF
TocLmD2538PcF5ywFnPMM4BhDhtLrcV1zYiAe0We61PeKSxM7YbVTqICdEks
3ts3HcNOSTUNmmpqga1lz0Lb8CBWe2Zzf6JOGwwhzFmOphvbTnHbMk/hBJbi
GDJMvRHT/8Ryx9f9DfB9JTDLURRgCmPSb9ZoC6A/nrClzZECM39GTPKvtcOl
M0REFUce/O38cmu3xhgsPOJ2I3XrgJitx+Op72ePuIw7+ApxP1SqfUMmDTOA
u6Gf7TiFB66p5ruL7GPQJJM29qxlAkp8dNl5H49AuKOvMQs2A5XazPT023Og
FkGdHtw8D1P7JB7X17bAl9G8kc9kGRi+L+kbHRChzWNPLbX1VqFP+STv1TEi
NFzd1Uujug5WmTtyjRsE+JPltsqrRABl74KnBXN4OBf07BWfxhaUeZxj2c7I
BT6Bw6uKcjuwNiJF+92/Fzinm+qTzx7t+6aBN2qnVsDfYVogQ/AAGtxFeUJo
NuHDDI93FhkR6tnhGOGaWwO6QvaHgUf/AZMF/apkc9A0Ja9ZuUWMbhnN2Wdb
jAJDzs5y6AYJ2vqlPk1bMQQf1ia7rLZJEbN1CBdf6gDQxZ418/5Njcax3utp
XkVgEkPOsvGTBulfOGtVEZUDYpTuuPIftKiA9OfPjNOpgDFgfjQ5dOjj5htO
xsUYCHATWUv7To8uK+j/+0YTCviXsmKLqQyI0WdYKo/NDwr3ZYxYTRjRJ8ck
myLyVzBs+6PftYMRhdxWi1rscgA9vmOGkpeY0IDUHYXop9ZwzW+mlKmVCd16
eD4ivMgEks5ENkRpMqPLPONkt4V1oCM0H2f3kxk1vL2mVu6lANH5t01vIRy6
TmP53JFVFG6vivBWVOHQ8HK0yR1TTtCmEGJNXV7EOl1pc8hV2GDBPC6emvUf
9jvplOqHp4JA1jL9JYJ5Gsvx7f1D9V0W+HMXn97QGsdSLg5FuOWpg22mZADf
1DAWP5pGY0ytB3YygswjSz1Y6faEy7HrZ4BF48UlmVutmPdYh4Cx3VNQlyYl
7mQtx85ohs0EHf8Ommld+8dD2uCj5l+aIesZsHRWhj2BXvDm/aUcVD4L/1Vb
vtmtGwE5Ztefj+bGYXV6mdAxMA7Noi5JZb7D8MkjPlG4ZBqa4wS+6cZOQc79
B7tO5UswulWq+V6OCJ3rljqn3LACwQlYxagLMTrzun80ongDBFJ9TiSOTUPy
N3uXw5+bIDzEsO1dVgatzGJGtZXb0FcpdnuV8AdySKxGqTJ24c7vcptPJfNg
fjdHuTRjHwanHhzPfkMAIppYkbbgQ4irxPkLGm3A5sz+x8IKIhQi8b1dw2EB
2n2K7yuUE6PYW3KiCxVjQDlxNv4gnwRV2bpdjbk3DP/p3ac+LCZFxOEF+jIw
CGFvE4dDzjGhJ3HpO2ey74N4UmdTdDYTarlIOuakZg4+XaI81ULMaD2L33da
ygDS/WPPkicyIytzN8Z1a4Bjd76snubHoVeJnO8LVs8Bs4vh0GEMDo2rOzw8
sXQCfPMWzGNtR7HLF0lUEn10wI7BzcDrbz+WRdEznVB/8chfyQYCBTuxej7a
wCC3C8AmWlesLVKHBQld90xn/Q82KLp0ZFdSsSfbRHkKlyrA2kqQZMygAb5u
NpPK5kxAqIQ1YeF2F9z8GEdDIjgHVZU7Y2nDA6De7UN632EaLK49iL4/OwrL
DIPpt4PxkOh9q5UFm4RLOXH3c0lHQdb+kI2idRmC4xkl7D2IESab8elqyyq4
3k2e2+86hBdDnKTJGAGi3x99f6MbSpxdfVTrtuDnHenJ62Y/4G2TTI5q7h48
ML9SmPp+DSo9ealj4g7AvcUnInyHAALeErq2QIzqZNTHxI5Nwy/tklNqMiTo
8XGVMo3beMh6RHHLbQyHeo8fZ7mSxQpTXbct62dHsFM0pyeMLuqBS87iiOTY
Xyyax8n0Gq0kNPySUJSXbcMsnX74q+hag1gVmUcQfRX2pYGhgjIqCaY+3vHU
gj+A6J5x302eBvVThmyXZf5C8pLoIwWqOTimyupFcncctm6mmzemDsN74nN6
0rLTcJax1OTs0d4loanNClBfAo2xG/hAl0NoKg8Ll3u/AtpuuezMMUc9XWi3
8dh7E969umTyYrEGUj7UNL9/sw2/t8PqVUbrQW0wVLf6yT4scFKf9SUlACG1
rZzK5BCus96QGxjbgK6rLi5b0cRI9FKarUzEOBw70HaVCiFBLacjm327h+Hs
qv1tQ/wopuDpbfvAWRtmZNN4hAcGMOON+NdcsZqAapvTxo93YWHnPPoVYs/A
Z4e8YW+5eiwl78CzUeEDcMbh5ToOszHHU5GEK1bFoGqEil3sO+GPnNnu35lZ
kO81F1y4PwrVyIfvvdYoFA16m6lrTsJVCyFdBVU8DFdmLOP+W4bhwwe01Ede
d4OXnmDgvwpfU3t5cY5ESKCucWf0JQH4B2XnaSIGwMnbmTj37RZ4PY9k0W3L
hUt9r8vXnuxBlbHmeuq9VUjZImFPvnsAcgt3HKtZN6Ge3VWGiJ0ERRdf6Wnr
xMPMW7JKl7EhTGbOQvm1ki7cLLVQ/7jfjZnh60cHLvNA6MEHkZ3LzVjxCZUT
tcKu8OXDlmKAbztE1V/oLCafBed6MdtU5j7w0LMXPHF5FkYCmh8lGk/A2ws2
nnF1w3DeiiJJnHMZBq9MOlsmHu2JhfY6NepVeNX0sFVUgRjNfX26G0i2BcY4
CbOq3QJwmms6nz+7D9FMXVVYPwFoGlkaGrpI0PLkyA9y6mHAO9pfW17GYwbf
9nVK7+jCqVZFOiXpDmzyW1xFv6cOfJ7o+4+OpxZ7RkNlVngtAqZx76XvGneD
bnBLgzPMwZuOFyxjdmPQL78+tLE1AoEiiuqTclMwbBM99O5wFAK4rijvUK3A
ivhwzoejnDSt29HYEm8CD87DE0/UDgcPPCg6yLfhyaLOszvC5VBaMZcYuLoH
AwVEw37v16GHXGH/89CRH8yX0lCXE6DGdRvnc5UESe/Huj8gwkPXt+eHZms4
JEq1Rm2eioOr64oCrTJ4bCy2qVvynB48+JtB9q6kDZvbOXTT4boF8u49XrsV
PVBrwMVhLzAHgfZnNCMFx8H/xtct6B+GLzl1TQX3j/zZVcuFKZUYVSjN5gve
3YTnRCxVvSx1UHCcol398j7cvmnD4/djA9J0sWP7Nwcx1fRLA88atKCeODeQ
7r8u7PTg3seUH3zQFZrmcFKlAYsfsT6Zw+kL7JZnOSrXOkC+6146Q8XskYd/
5hmkmoTC0ugt27kRyLvvbcHptAy2N71yyE8Tow6qDcz23hZ83DMQGLqUC8dl
nkcLaRyAmdWQ9OOj/KV94UrRtx7GpvsNnK4X6cLEpqroD+ce7Ktj/9l+I37o
OulVEW7Wgo2GWTUuODiB3YkfnZejeiF6vxM+fZiFB2XDEorHJ0CQ8a4BT+Qw
3Bkl2cVmV2CQrPZW/k1ipC2wVKI1sQls/naYwGIRTAmqFMk27cPnonGt+HwC
FPwn3vtbbBQLPEyVsdjRgQwavvV7mR3YP1wv87SaGlTwO4el9XfB9ku/djm5
OVgOWe49JTIGHJYC38zU8GBVK/SdaH4ZLEYf2wYHEqObyzu//Ka2oIFxqI7K
vBh0L2Z4c2IH4E3lPh4+QgDBah3n9fsjmGBfSRiFvB5csbUf77j3Bwuq/LNI
TWIHl1p+fU/J+As7307QjEzNggcLabld7Dh8jyVajvo4DPv11ndL01bA+2OA
cWYAMSI5Py9blLgJMoEcvjXnq6DUd6a6JLYToyinquK+KwF26Iqp1HQnzLhu
2w7SzAE1W483Xc4yCHx7nC9rTYzY9zfVtpO34FbTWAifcD5IlgcFnXxz1BfX
kkjLaTdByHGhO+n2EDZUPpYcEq4DPR6uFnd8ujHW5zLiOt844JpVaSpN8AQM
cJq/YKAbgU9sq0q9p7bg90AAXfdkHhBlXf9+jvIA7Gu1l2i2CEB7NbPj+A88
9uetZubrYl34GmQqyFzWjj3oIw1LuXEZmI5FdvK0dgOF21urGpU5YGU6NIpN
H4OH8yMdEl4jUOro3rZ2ZgVuefItX0whRlaNv51xewcQiU0yqQcRwLY+w6h+
F4cSHVdYrX4wg+H8w4j55SXsT7z4zEcnZkirsfYdFpnHtm/6ZkS94AdfcT4l
UrYZzKDj3RcGCim4Jx97M1tjAjPivmblv6AK6bd1Q1d98VjtKf3o+EVdmFF4
eqZ9tRdbOt7bxyGgAA6Zvq+/WbRjetonBpcyrgFBd8sk40oNhjduQNp7MaB2
tnZArzUY+9PKY2vIVgvLkfymXikloKDwODVvtg++twble3K1gN2r0KTdzCmY
nUbv24R6IItJUclRfg7yxe9Q5scNQYnUX2Q8PwlKp1/tsQ+Mgc/fy7+3ZUeA
Xy5LC58wBTJNq/+S6MdBq27xgUrpHNyVmP41XbMK5SQfItIrFoHS/TPZc7UD
uDlKasAEKyA3L8plceTb7C9GH+RrrkEY3plZwnYfQg3PP+0X24DfCSZSI3tL
kGdNYdWssAlaV2PL1UMb4UU7Tf8vlW1w3LtNMq1fAweeXorqJ3fBZa/oWPuD
KdCYYL0gLLoPGh32o+OaG/DBRdurkfkQKNyL7vnaEYDec5W3zYUINQtTxFdl
LUMh9yW9RXdiZEbKHRmWOwHohs284WMSNEql9sfv2QhwliDSMCdS5DX/1QLf
MAjaNRJDw8/J0CSu+rIE9EN9Yp/va31KpLD24nlZTD0osgi2/zOkQqQ8OdQP
U2og6LRo0BdEjTacegTfrJVBTTBE72jQIO8pvFdNZz4QWBP/XFCgRToslVKy
S+nQ9p+iEk6EDpGU6DznuZgI7+3GCbHi9EjuubCi9m4E8I9fFHzCx4AI5IV4
87NB4KtcMBmMY0QBJxw9RL94w6mRdo7HoYzIqLq05ZfMC5Bu13v/j5YJJTk6
cPxMeAh5T1ui1QKZEH8PJSv6zxIkvxJ+UVIxo+ZXLL+KmC8DiboCzdfXzIiN
hsvEG1MD9S9vNylJcGg31eZyMJEU8Mla1wu649DrWauvnh8FoLw2eOgd/SIW
oxPPWnuWE/J0z6lOnZjDIlkNvO5EiYATfeFunvgUduZbaP/52wrQcCFGc81m
DGM4NkEfz6sFZgKD0xqHg5guk6Sa0qE25BgaLnsJd2NxFn0PdGY4YALdfGDj
24jN8INpRIoXJNz72873vgALOB62neKfD1plkS8bhJJBm++Q5DRrO8T+HMr+
sF0LgeaTb1/zjEHCsmlH6I0OuKEsLargNgt65w9EX473wY1RXc6fAzPw+KPd
7Ys9eHDjqMx6ITUGi1XzndcrJyCrQcLzytURkBVw+fYja+bovS92AxlzMBls
FO9ZPg910d2alT+3oLw08F6C4TKML5Jlz64RoTk1j/QzF1dhW3j7Y9oiEZIR
W//1/MI6cF/nZ2IX34SJ9KfBU1IEeMvtkvr46ijUSeAe0ytvAX+aMtmLqVzg
XM0dzz+3A0LXmz61Ef5Cl/Y1ag/BPaBW0/eQ3VmGb0Q+x+hOHAAxxYnYSIpN
MCdR5V4lIkKVp0RV75OsgxKH4JDXDhFyxq7lSh7Nbwb+EiVhnRg9eu7MH/10
FAzX9j+6r5Ags9FSWbq6IaCmUom4uUGKFq0prl/NHQCSM6WVj35So0XV/hr2
hCLYK49qFKiiQVKH+EyO/BzAbVuv7ufSImaHF9Qi2qlArhuqupdOh+b3yjzm
BWLBV49qdziFHkkfizUKORsK8hFEdJ2JDKjIofq+uo4fkDj9uspkzIiWzX+Y
kGi+Au/vOu8i2hhRtEUDJfWOA8SRM9wXMmRCKp8ePjKOtwYSxU13kWYm5Gx8
I7x13gQc1Tp5K9WZkXDXf+vL93TgkrFV991qZiSx2kSi26gATios1e4qOCTU
UNBRZSEKZSI8uvGVOHTa5Ines2+c4NN7oFB6uIglja03CRKxQQZ5412r0/+w
k6q1I3fOCcIezz+ugZPTmHD79Q3WJ7LAXhJz+bLJOMa1XiVq9l4dzBzl34eR
j2Bv39qvC3DoQbP6yEdh+r+Ygiju93SdEEy0SP8YjGvF1I5nLWaSPoG6/XGs
/HM5JqQZ6xp24xvsiTKafHdqA3c/Sw5Pwxng9D/RL0jeCzE211xHfs+CNn/U
xNeUEXjIb1FZSzkBLM9kZoqbx0Fy925x4dthEBMP2WpMm4Zu59j9oDtTwFne
JeGSuQSfZcO7l4SIED8z8uCuXoGM4grBxVfESOll2+vbORsQrro1kW82A0p6
dLYLZZsg8Jslob2tHBpGh4eVirbBSpJPmP7YH3hg/Y8fn7gLaux8ARdvzsOL
Vf0TXMn7YMxy2XHOiQCxKpM3TT8cQimNZs2o1QYI6tMepJUcef5/vc6D3xcg
71WbsGMxMVLc90n5+ncMtM9IKk1mk6CO0h2DW47DwHwHa9kqIEXuqi9vrGsN
wtzDzE0/cSbkSejc6Jy6D/3XxvwLM5nQiwsv5OU9zeHKkrXjuCAzqmRmfnjP
1QCE9A2XD+OYEQ21QfBwCcDgP/2banw4pKdw9o2/wHmwz0FUE19xKC7hriUm
xAfupdGKYS9GseimOHXZo7yYd3lqETb7MfNKJ0E7MXUINasw7lfvxM58pnax
kZSDqXxvnuWHddhZWVeO/HvBsBMZ9ptqLQ1rbcoyXPlWDvkHpHnZtA3gOMFj
f//jBOj+iDX0VOuC00FYnCHfHHh0Db7srBoAs5x0JSO/aSh++85Qvu9oziXf
Mbik4KGOPgnbyZ4EUbtzy2ozeHjILpP3vm4ZOBdJVXqdiVHes+J+yV+rEHX1
Gu/17UPw72dMeFREgHuiHL2P4nrg0nEOp3OVW2C+2nUlubgAVMSxFfZve5Ct
0BDCbbMGA/Rl/w4iDiB19gfT1iEBrkxBubkiMZq3JU0yl5iGFLX2KVcJEiTa
HmARZo8HquTtD5Z4HJKn52JMWGWFf/pSGbzH8JjRJs6IS1UP+rHU6y+JejHh
PaIBqXlJkPgQtEBj2obJ6EpZlZHdhYVTz28cM6rCOkre7E/tJsLlkN5zdiR/
IPiWwYvXH6eBWOF8rjv7X5DSHKj1Z5wDoebrjjNXx0Hm1cvqG3nDcCaPL677
9DQ8LdrRfho+AY9unZsMllmC7tnQrxWmh1C5HT/B9noFdOgJF//FEaNNU+rJ
m+6bQH/v/EmTrJ8Qd/35TWL3bXgl3DXcwFwPlg8lxPiPOOLr36bSueUNCBtg
WwoyPISeQkvyqLUNKDAIUjgfSYz27nxAoT/GQV1Vn4UzkATlLTaKo8lh4N/h
UVVfGsWcxVz+ES5rQ+9uJnvM7gC28Is9ZmRBExI63/KflevCek4uS/r5ngab
nScXRV3rsRpyz0lGQT8I4mjv73idg2lT1p5y/FMEhA53RmqjTrCaMiIuGp6F
UErXvxWmo8CeecCod3sU+u/X64jITUIe8k+eEcMD7sHYx7APyyC27kq1p0KM
DG9wXhT3WQUUuiFp60WE5H9Wffn2nACBwnqn800HgfY020rMyy1gi/9ZsxaV
C1SK1AcN9/cgYNV4iApWoeZd7Naxmwdw60H3dgDbke8wBW/K4UjQ3S5IqBvH
Q68udfECyTD2sPOeAcstXahsYKvs5urB6Ozst/j+8oL1O+3A+JBmzPWffvTF
uRdgSC8desK2HWSrcZcl1mdAapietGO9Fwz87cyFbs8CCSeTpZ/GBNgbdvNy
lAzDPVplyGZehh+2mr31n4mQr8gwjp9kFbJ3uIzvXSRGb1QY/73c24RODWF8
ceIPCHK1ZWYZ2wfRIm7uiXYC6NIdt85pI0HXTnnkBrEMQ7cbj+zUIR5buqVj
b66jC75D676+VzqwyIRU1gFvLbCxD98ssKzFHk5VufK6hcPX8J/+6zLd8PfF
qJjKEc8Pk3z+lWc+Bn4l1e3UdHjI++Ep0yQ0BUrwKGpycBR+/nrX606yAjlZ
Vl/9jnKCX7n9/dw2AX63WK2qhbXDZxruTexgC+6dJ/IJ5C8DpxNOk/fm9sAj
WNko2m4d1sJ6hje7D+BCJpNm4S8CJDxj6ikzIkGL0zFqD2jwcG7svqjyCg45
edAZx07ioKlHJY5SE491hUhExJ3Wg/YomiLz/jasIWn0mweZBWwEFXMLHs09
Udw3niyhOcjbeij3mn0cssUjtuTmhsF/oeN46K0VCFInEr6SRoyMh98nstzY
hLbwavG3i3XQnpqYl6yzD70CvNlBcRsQwfDr0OHlILYTLh1BSacNIkx2VGY5
XZjmbzcWXt4TkMRj01Pv2YClifZOKp95C82jDxyMujsAuG/S/syZBevQfvqa
nQlIWmRbrqofgWmmkq2oR8vw5mBar56LGD1ID802sdgCneRsEbiaCzK1TJ5+
ygfQRf2wbgi3CRGWJ+OqfYax2prHL8v/6IImxW7SYWgP1pZjdPXASQCSvqvw
Q2QL5hAy+uPC7WdwRib8scfLXuhPdWf4GT4L/poCAiepJuCLTBvv6n/DYMzL
oB07ugIz/ziaTY98cqQ24JvM4CZ8Ef9vjKKlGEgL+yPCf+6Do97MrUtpBEiL
HCquUBzFNqRRvcSwDtBz9dnnNHVg8i1PnVtLETim5C5cKD/y7dkhu2qpOdCr
pf+wwTEGkrLvqLWu4SH8saXGm4ll6Ciudb34kRitBUf+eDG8BVNyacL8vkVw
v0P7nnvRAWTLuBsJTROAzdfo6YP3I1iCEMsxgrIe8K+IaLul/sGkJU6O9bnZ
At14qkZ7wF9wsKUmyC7PQkysVualoHG479Uh+iZoGJaPOeR8iVsB3fhcSb4Q
YhTZ/lEwOWoT8rXeGqn2VAH353hFsspObPyjf87hx3PAV/spu7a+E2o1lg2W
SOcAqmhOBKYtw3UzG4c7FsQoKyZccjp6CxhnznhkV+aBkZ644xu3A3gL2QX9
DJtwXG7tD4fXEBZzmae9v1YH5P0l/6YndGOnBdW7XI/43mXhIGLFawLkmo2t
d7eG4VRxsFgd9xbwnGd9FGGSDzzKhI9BRAfAhUhZklYIQHzDIp++Fo9puN4w
e5mkCwexjHE3+9qxJ70tmxRcl6DufbdodnY3vLu5U/QL5uCpKg/x06gx2F94
elk8egSWuHMfPudbAb+HucmhScTI87q1mdP6Ef+eIvqzEUWAn0Sx7hnbOLQe
/qOrY5kZyqLUI1/a4DGdtNiOW3R68KTc44q7dQ/4J2ntRUvMAYF+g0N/ewwM
evCJ9PQj4HT/X94VoxXwBun7CUc+On9ucG9+vgtreDJvW1HFBRGLnQGSBluw
WfpdU9srF56M6arpnT0AQeaMpmX6TXCZEQtN/zWMxWm5WJzb1gVKQfuI0PYe
jGo++yHn7mlou5lxbGFuHJrfnWlQ9xuGtgt6dzQoOzH9VL1nsyuKMJwpFHPT
swsyYqgfCYrOAfHPBve33ctww/H+bo4XMeLv7gu92roFyQ0Lu7LHCiF+2UtI
Oe0AUubxlt/WCUBguGF9tWEEi/8qQBNwUQ/GfrQFcjuOQ9jXOy+jY4ah19NP
1yxoBeIMXQI6jvbZcAHu3JedTszxa9jst11h8G8iuz39v7ru9K/nvG/jeJaS
RJJiLFlGTZYw2Rrk22SXNVunbTBdIeukMZFdKKSMrFlKRiMkZbKrMMm+hkGF
MEmGiLLENTeu47xuvdx7/gEe/D7f93EcK28Y53YP3zPl9TMj++Et69Nhpcak
IekNXWskGaGTfNt1m/zZGD7EdPCYmiVGadrn0xVOZadGjA4Z2KdWH+ND/M7z
7rlZqY57xsWfNqtnHK8QEnTix8eGTVPPwxlZOcbgj1er7LAsNd6Y95weMe6g
MXxkqwFeRWWGzYwqLp8fvTNcIvrev+afZcReDP26oXuB8Z+f6u0ItC4yRh5p
n9bh33/v71l/t2utw4PUTYPTvE06eBpB/1P89Oq9W0a/rn6Zu+oXGFMePRpy
sF2eUfenRsWbL+QYu2YenZ81vchwGHXojt9v5dx9X5fYnp55M3Vj93PXN9Rs
bHScOPTqnKmlRmqPWRfbjjpgfPrtzrGzfT8bXnc+1vL999/Hwzdt997umpPa
Ot7fLHBLH2NxfsgBP+9bqe+zf4k/697I6NF6s/vQbx4b4XNd99/dkWOYb+/o
Vuv9TeP+53En7TsWGM513lRb8OaVsT/+UOyqf/++tv/Ude6Cnrmpkdknu7xu
5WmMCD15Pjghz3jx8cu+ZiE5hvcvrXpNX3QjNebq8qTJTm2MhSO9B1dJKDUS
U26WlEYnG7bOxQlpoZ+Njfv6DatSucQImJqWZ+eblZppNyiw17SvjHcBXv0K
WpQaY6/7nMlbnGTk2Z/IvGz12eie8n7y7bJ3xqhFY4JWFWYZV7Ojd7d2KzCC
M7u3829VZFywtbbfFlfO3TLi6NePy2zca/8VEBUzp4ah/gmT//uj9yuy7knI
ukcnK19HVh6arN9zZH1fJes+k6y8CVl9BGS9j5B1r0DWvTNZ+S2y8rZk9YuQ
9V5J1v0QWfkDsvKUZOXfyfr9Ttb3dLLuccnKF5HVP0HWexhZ9ylk3beTldcj
K19NVp8MWe/TZN2LkZU3ISs/S1bfAVnvNWTdT5B1f01WnoysvhGy3j/Jukci
K89AVj6TrDw9Wf1BZH2PIOs+kKx8EVl5abL6Lch6nyPrXoase3uy8oNk9cuQ
9d5N1v0ZWfkVsvK4ZL1nkHVfQNZ9Mln9DGS9v5F1D0PWPT1Zv+fI+r5KVr6Q
rPcGsr7/k3U/TNbvI7K+V5LV90XW90Oy7nnJ+j1FVl6QrPcNsu4NyPr/P1n9
CmS9Z5J1X0TW7yuy8gtk/f4n63s8Wb8fyOr7Iet7BVn3g2T9viUrn0TWew9Z
9xdk/R4jK89N1vsmWfdGZP3eJSvPQNZ7Cln3DWT1lZH1/ZSse2ay8pBkvReS
db9DVj8EWe/rZN27kZWXIasviKzvQWTdZ5KV7yIrr05WPyNZ9x5k5S/Iym+T
1UdD1vcfsu4xycpzkdVPRtb3VbLuncl6jyMrT0nW+zRZ92JkvR+R1T9B1vcY
su4jyXqfIyt/Rdb7L1n3WGS9V5HVv0jWPQhZ+Qyy3nPJyn+T9X2ErHtFst4f
yerLIet7I1n3v2S995KVLyTr+wJZ935kvW+S1d9G1vd5su7lyXpvJyuPS9b3
IbLuNcnqJyHr+yVZ98Rk5RHJ+t5C1v0jWX3BZN0fkpUHJKtPhKzvoWTdJ5PV
r0bWPQNZ+QKy8slkfe8j6/6WrL5Osu6NyMr/kNUfQNb3WLLuo8nqUyLrvoCs
e3+y8sJk9fmSdV9IVt6PrL4Qsr6nk3XfTlZ/Gln3J2TlQcjKk5PVp0nWvRRZ
+SWy+g/I6nMi696DrPwFWfltsvrRybq3Jiv/TFZ/Ell9kGTdX5GVhyKrT4Gs
fmCy7hvJyhuS1VdCVv8aWf3cZN0Lk5XfJav/h6w+Q7LuwcjKZ5HV70BWvy1Z
94tk5QnJ6iMhq1+NrD0BsvIJZPUFkNU3RlZ/Kll912T1vZN1f05WHpysPimy
+jHJ6jMma7+BrDwIWf0M5P/2u4HVV0tWvzhZ/fpk3fuTlb8nq7+LrD5Ssvqj
yboXJiu/S1b/D1l9hmTtdZCV/yGrj4OsPj+y+onJuhcmK79LVv8PWX31ZN3j
k5WPJ6tfi6y+ULLuacnKt5LVj0PWHgVZ+Riy+irI6rsj636UrDwnWf2/ZN1X
k5V3Juv+jaw+JbLuLcnKP5LVN09WvoCsvD9Z94Vk9YmRdQ9LVj6VrPs4svpX
ybrfJitPTdZ9IVl9TWTdp5KVFyXr/o6s/SSy8phk9SORdf9KVv8q+b/352Dl
wcm61ySrr56s/AhZfQ5k9cGRdX9NVh6arP0TsvJdZPWtkNXXSNZ9PFl5dbL6
q8nKd5DVt0BWXxtZ+0hk5TXJ6k8iq3+VrD55svY/yMp7kdW/QlZ/I1l91GTt
rZGV3yarT42sPmay9iXI2gMiK+9IVv8QWf2lZPWxk7XHRVY+mKy+LrL6fsna
LyArL0ZWfwtZ/Y9k7dmQlV8kq0+IrD5SsvI1ZPVdkNXPTlbei6z+FbL6G8nK
q5DVH0HWPiJZfQtk9R+SlXchq1+drLwZWf0vZOUzyNqjISsvSlZ/E1l5GLL6
YcnKY5HVj0JW3oOsfTSy8t9k9bGRlT8iq++ZrLwdWf03ZOVlyNrHICtPSla/
E1l5JLL6Y8nKu5HVP0PWviNZfRNk9T+S1R9PVl6TrP4ksvZ0yMovk9UnRlYf
MVn7amTl6cnqtyOrH5usvQ+y8sNk9XmR1QdM1l4uWf07ZPXhkrWnQdY+GFn5
fbL69Mjq4yZrL5KsPgyy+inJ6rcna6+HrL1WsvpjyOpzJWsPgqx9K7L2CMna
Xyarz4msfmWy9lnI2psjax+UrH1csvp6yOrPJWt/g6w9MbL2H8nauyarP4us
Pmuy9nDI2vcjq4+DrH5Msvr1ydp7Javfhqy+WbL2Ksja3yKrv4KsPkmy+ujJ
2nMmq1+KrL5nsvZiyOpvIKtPkaz9PLL6TMjqFyVrn4CsfgOy+gbJ2mMlq5+H
rL5csvL8ZO1xkNU3QVb/I1l5dLL2y8jqQyGrn5SsPD9Z+wdk9T+Q1cdIVt6d
PMC++uZX7dnqKyRrP4Csfgmy9snI6nchq2+VrD4EsvZcyepfIqsPmaz+CbL2
VsjqPyGrj5Ss/XCy+tLI6i8na/+IrH4asvpiydqDJKtPiax+Y7L2Ucg5C0JK
zTqx1XdI1v4AWftlZO2xktWPRVZfNVl7N2Ttc5PV10ZWfzpZ+0tk7UmSpz00
GV7feINWvypZeydk7SWStf9MLutksXT+Yfaq9TbJud8Wo9WfSdaeBVl7eGTt
+5K1x06O93S02tHkLVp9tmTty5C1T0nW3jbZa05GA6ff2eqHJGuvgay9N7L2
a8kffvdtndD8HVp9qWTtl5C1f0jWnjNZfXtk9d+TtZ9F3nHb7Pu2+9nqfyRr
j4GsPTey9mnJ6r8jq4+erD0rcm+zuEFHXdjqfyZrj4msPVey+vLI6q8na9+e
rL5KsvYjyNqfI6sPjqx+dvLNwr3D7yWz1RdL1n4LWfuPZPX1kdWfT9YeNln9
kmTtPZDVX0bWnhxZ/Xhk9dWT1e9FHnMjafSntmz1S5O190RW/x1Ze7Jk9UGS
tc9AVl8bOTbjjwerfmarH5WsvRKy+vDI2kMkq2+RrP0DsvrgyPlHDv9YP4Wt
vmCy9nvI6h8kax+UrH5MsvYqyNpLJ6uPlax9FLL2Fcn+0ScndenA1h4BWfuA
ZO2Lk6OcnApnz2Sr/5isPSKy9kzJZxLXTPtjP1v94WTteZG1B0wudP346tVz
tm26z8wWTh/Q6tMna9+OrH1scpfel99O8GH7XusQGBvNPvzQYl6drz6itW9B
1t4kWXv15Bc3UmdMHMFunBHgkxLFVl88WfttZO0/k70PN/WumM0Oi8/x9LL/
hNZ+All7hmTtoZNPbVlrRP/AVh83WftYZO3rkktX92rzTzRb/fBk7bWRtfdM
dl5U5tj5EVv92GTtVZG1d0sePzOpzoqv2dqDIWuflfxPe/dIMw+2+rXJ2rsi
B324VHXJWLb67MnalyNrn5ocueiZydytbO0/kLXHSNaeO1n93GTtZZH3mZsW
B9xlq0+erH03svqKydqPJqsPm6x9KrL6fMkZ4Q3/nlqLrb0YsvZbyeq7JnsN
Thhb0I6t/ney9tjI6mcm59p1vus7hK39A7L2CMnqvyZr75ysfnWy9s7I6n8m
l24dfumHNWztgZC1z0lW3zg5eNyTHvf3s9WHT9Y+Hbm6w8w078ts7S2QtX9I
1n46WX3zZO2/kZvuXZ08qMoXtPbJyNoLJydk/1zQtim7rdXoRrV7srWPQtZe
KfmIezfvjz7sLv7Nw3MWs7UnRNa+L/l0bI2M9Gh2r6z3n3aeZHu5ZvpN/sDW
vhZZe9fkwoO3B35jyU7o51lYuy67zQKXrz+5st0emaw5FcDW3h1Z+/PkxUPP
ZpYGszMzw0xarWMP2V9nRtQfbO1HkbXnTN7c+GHctT/ZuevicivdYvvNbTsg
4B1be2pk7ZuTE19+WBZvVg79dnz6yQd27IW9+7fs14GtfSey9pbJGcdr+i7p
ybZsfW/rkeHsDXYTqzoGsrWvSL7V2DU0ZQHbrpW5ac/l7Miev3+asJ6tvSey
9pfJNmN7FYf8xv41MP/57oNs7aGRtU9Orr4mJO/8aXb4bqd7z6+zV92deN65
iK19QPKFp649TpayLd6Yn+pvUh4dWmX3kelWbO1RkbUPTTZv0vtAhD17Wedn
vx9wZmsPjax9cnLFoaHR1zuzl0xtuvGNJ1v7UGTtNZPLLzsXXnMke+G2Scvb
+bG1d0ouV/vHQRP92YvXjKobNYcdHDxgv8lKtvbXyNpDJy/7xaOrbxR7uV+7
2xf2sLVPSDZ/3DLmczI7ZLTT5G+Ps1cMrPtl/UW29s3I2hsnr+pabe2n++zV
7ct9M/4FW3ugZKvED68i37IjmhYfPVvGXlPv7/7O1SqgI8tfmlXakh11eWPG
6hls7fOSN8fmG1GB7E2BrkfiFrI3NL6zJy2CvXZWrTWvE9nauyT/6jnB4sth
9pqGh5ZUSWeHnx82q8k19kr79SOHFbG1/0pe8ebJzfHv2aGZ7fpPL1cRvdw/
yz3Emr0ko6bj0W/ZQdPWvqrvz9YeM9nO7uq57bPZSScsYxstYudbLhvqEMEe
tifwaIsEtkv+6OBOBexn45xq/2e8KTq0rKBijq8Z+nBhz5fVRlRC7/Gccebn
XuZo7VeTH3/06L1yINt+r+3laG92hOWx2xcmsgMumT5vFMruMiDK+vI59lWv
jDGOnpXR2uMm78pa2vWAFzvIu7tT5xFsxzFnigZNYs+bdCp43nJ2s4Un42+e
ZgfvS3m3uLMFWvvi5Kit25smdmMnhYWMyu7LfjB1xKkOo9luLT+HFc5jv0vo
7jAsla29aXLV7S29l5xlNwmvtTLxCnvw9GevLB6wE1uFHU81qYKelHhzcFMP
tvbcyfVmxj+90Jt9td3C2dMGsV2PNd+ePJZtlrG4wG0BO/Ze60Vex9na9yYP
22ZW8+1ptsW4+7s2XGD7P11+8f5dtntRTq0J79nZZmEJQe0t0e9sY69815Fd
zeHIqxI3tnvXJy4B3dk7F7gdmjKEPaX0Repof/aHZ/2vGQls7amTW5gH2Rz/
gz3GMW6o6wl2+vgvf7W+yA65t/9RowK23aXqxRUcq6Kv/tqps00z9gpv3+DG
Ldllecdqft+e/fiDb7v5PdgHnE7MKvVl9w2e9L4wjq39enKqVWpolUS2S1TN
Os0Os79KSu04IZP9NNd27sN89qJOpz5nNa2GDvHLe7fdmR2xqeLLSd+yo0t6
5Ja5stOSL6Q69GKbtMha+LMve369/PK2sexlnpU/5uxir57T7M3v8extd6bk
dU5in4gsOu2Tzv5k+TH4YC57TlnVSkPqWaEb53V1nN6QfSFzdvcVTdj1Ip8s
SWvBTm12wsTZjV3Re8oH0zHs8KTzLw5tZ7tuNKl6I5b9YF77Fv/EsV167/Br
ksi+mTv774g0dp2qTR9Oesi+nty1IMy6OnqZ28Ena2zYHc82ebjOlr3jrumd
rV+xfyqX+ee+RuzqA/rGXPqW3b9giHdVL3b5gD8HWw9hp5S1G2A7jG1vXatH
/RHsFx3+auM8nr1q6Wirfv7scw19M1b9ym6Se+2raZHs+Vvdpg5Yz25bx7Zm
jc3saJsz4zbEsAPNGpfFJLKdCrPbHLrMXhLfe/nGq+yciX/cnX2dHflk1aLO
t9gmuZ2upGez71zb5HexkB1yaGjMQwtrdNtrniHPLdm5Bd9Pf1uN3d6+pVtl
G3ZesNlfreuyu3gdqr6wObtg8r6SUGf2uqWxOWtbsQsPh++Na8Pe1GBiryud
2MWFtRfa92VHm1lNcOrP9mxo2t9lIHvH4KK6PYawBxw9d2jqKHb88jkvj09h
j218f8zIMHbSjEtbPcLZpqkn7zddw44fGTOiNJJdHOk7bN0Wdkilon5X9rDv
Dn20KmUf23nnjQtb97Ovu6f0npLMrjcnqHvlY+zEQlO3rufZ5TuVBDW7yB4a
mn/U+jL7g8MF1wfX2N1+iGg77y/2nWt1WhzKZ39JaVW3eaUaaJct7/40r8z2
WXRixlMLdqanZ0ZMNXbEA9+fatuxG1psO2vqwPZ66eOf58gOvtm8froTO3/b
Ef+5LdiJbbLqv2nDdh9tGfDAg+3vccP+ZDf2zm82n4vqwTZ//U2D4X3YV5d1
PX9pEHts4pyGx8ayF1Z4dnHdfHb5bh2rbFnIXhq8sveOxewVpi0zEpax11aa
mXp2NXtXlbID77exnfr2f/Ulmr1n1faWZrHsxKoee2rEsY9aLd/ZfD/7ko31
htGp7IFDxmf9mM6+Hpls43eafct2WMSss+wHtaJCw6+wi+s6zE3PZddp8t04
BxMbdLdNS0vMy7OnVrseVliBnVbqdzS5Etv30hYbDyt20iyTjDH27PvP+47y
aMg2HbfptUNjtrenS4MXDuzPDXwCg5zZfc6dbbaxMzugS830oC7srcljh//g
zn619f0Sx27s9f7Nsw96sh/VDQ+/NoIdNG1YscVsdsP2PpmOQewzZT9t8ZjH
rhYW1m3OIvaOPWcin4WyM/Nd2mVuZk9NdK/8eAu7RmD/7C/b2KMq+S3tEMt+
6RCTtWsP2+5Hq1lLj7OPNavfJ+Yke+zrZvYn0tjxi3pkFJ9hu0XPs/O5xPbJ
fp7ikcOu/Nv7FWMesBOmVPphziN2ycfGlZKeslfUGTG80Ut2q0cTmrsVsW/u
/vmL9xu2/Xdr4iJK2KdNtgftfc+emLl3QOZHtmXE0a8fl7EPDM8s+fLl//2/
naydcw==
      "], {{{
         EdgeForm[], 
         GrayLevel[0.5], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
            "]]}]}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           GrayLevel[0], 
           LineBox[CompressedData["
1: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
            "]]}}, Annotation[#, "Charting`Private`Tag$13203#1"]& ]}}, 
      VertexColors -> CompressedData["
1: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
bLu0U2dLBzTSCi7w90WzFCWW8ftdZ67vV/6+aFugKZW/LzKJrdlP3h+vz/bn
74sc2wIt+P0e7aJZzeeGYW4T/H43kA8X5/fFp4E/U/l9IZG27TR/XyQ854kR
n7+vX0bui25vf5rB75fb0jzyOf/kCGFyX0RhxDnxea6TL7kvKhtkkfuiv5Xi
5HP+f3e/JvdFQ4/3kH0tNVeNfM7/vzFNsn/LvapJ7vLwKrkvWjcvV/CcLV3w
nP+fRWqkDqx/+p3kwq2C5/zlqjLI/jWMEuyLHB8I9kV7DIJIfnmNYF+05JKg
3wf/CPZFn8YEOpAxVeArfJIF+csj5dCmXN92WB7VU35yhY2kRflDqw3pyGTv
SF9uR/iKvx+EpeTZMJ1Y/Cl/UTeeCstOXa3SBtVl66zkEln41xmXTZvHwLR9
vp/cvVowa1ftNlNFFnrPm87POMLEL7eEXVHOTciZs+5XziADf/vz5phLsRFY
ZLLEiMilE7b584rDmJhkH56ZvIYFF+ke1+4vbEyPdEn3yORANHXKxfrJekQG
3yyN6O3GSYllI58JvmLwbloVtQVBrLPO613q8MVh8Gq1HKGvvn1y+RZcpCqq
p294VYOny359yVzcgO3nrqT72nGhlCazyraoBTOmfva5rp+DL76uGV1RDFzo
dOFNMHj4eFzu2/CyTpxfv2Ka37NS0OM+7vIgfGWK+AMDvyg2SnxpsTFbarF8
lVWAwjfC59M633aqc/C6aEbDRu9OsFTezTB42IaVXOV972pZWLlnolef6Nel
wRKqx8dqEWmR1FPWQeQxE5YWUrnY2rBfLLKqHnqlNmp3/xUgJ2vlwiQdNtTF
zry/dqEPEfmhjfbRLLxdqiT58Uk19OVlNm8S56DGc+uWFW84GPtyYR3laz1a
CqfUh1swIPH9zcMxIpdl0id+2ixqgXdMe0lRKQ0v1fxp1YRvsb8xO6LxSTso
b+eHnmihoiBN+FGxGAePpe/uaY+iImZZ43RqDRULn8jO8BPloIK2aLwylgot
jdjpDbNoyL54dn7IZg5iP6r3dxC5q5Lxt2T9GSKHtioY4QgHCWyT+dv2duD4
2e/kvPMqyxA8j5q1gJx3d5a9Jes2wO+34HlUu+OCvegIi+SDBoJ90RvxckGd
1wiePx96KtgX3foh2Be1WAj2Rdaqgjrf81uwL5JLFdT5RL+AT7MS7IsKTJbe
q/NrxvsvOVmuL5gwuzM5OUOF8GM5tkZ77jYir+zHHDNinq20ip15roWN7n3j
438HWSj82XBApZiDKP+zSus4DeivmUF5IMNCTknazowSDmYrRpW8/N2I0zMq
qvtjic/VtC8i6DQH2mYXa3Y0tmOqddJl/+sNGHE97734VTfe96vdcibmQK6s
afQC5VoYDes/3DKLgtmc2qW5w1zIfjhqoXK8DiGfPMwOqJTiCNN47mF3DmZd
9tSaRumD9XWd361lVejoFbYfXVMIG9ab3x0WPNRaxMbeKmFgeJpwTUtuJb7s
E80R9iL8zmjDI6doNkI83z0M/0TD37LlA5lNzdj75I2ZShMT1mE0Xd9OJhwD
ApqW6NXgQt/nSxeIupGWFzNdsagXTxdknUvq5sHiWo3MK2on3gUnnXVglGKf
c2B6kgQLfx20X1YQ53Ahrt1N7F8jjNbLLsoeomOrl5Hek8eE75od4j1wvw1Z
QvbSYt5UyF9cLDHwi41LNv/M/hPvgmu+EavHpQtHbKlPpRQ5eBjgsHMTvROb
/xPkoBR5gV7R1gj0Kurch3PRn5tQey7zppQiE1NmXVlnXMeCc1a2hIlWE95n
q3WdJs5BuWzQK9WADVf75lOmg2yErpEbVkskfLK76I3C+nqsolCu7nVlwCXZ
JtKrktBb9vxf6d+bIdX5Mn7qEHH+OwoHY9NpqKr2EKse7kGT+1Kpl5dr0Jsr
hzuDjWAV+S7784WLMZb/BsUXPBzssVZ4GtGGJevLLkptLMFz1Ylv94t6sWLD
wX+J89m4dYn3CN41yOL80NUl5iaVdsLxDjE3T/1hmLKIuXk/6FHtPQMK6lvZ
2sEziblca1Bptqkbkdmin3dG1eLKlm+rV7WVI66K4xewpAcmTxJslb73Iatf
6qvPNybq5XvMZ7ypgv5qHyXDHAbO3b+4K6GC6K8KOaO5YUROMhOyVJWkY9VX
yo86Z6KeYm89S1ncjknvLXJ3PlDhU+Euoj/JxlOxnNjl5VQoqOdeGfnVhcr8
Y9KcdRwo6ccoqxt0Qrh/mY3T12ZkyAy/ulzCRFn9ksCmASZ26mH62tRG9J2y
rZu4TPgVJ930KZ/YcCtSyNwwlfCFl8u31xB5hHZg5p5O3WY45OkaPg5mwXqx
bh8RvbH15K30lmON+OGdVDVvIx3mHjGLt17l4NzrM+uX1lPg/1njjbJdLVRl
OnXr37cjT/a96h4qF1cW1h8PfNmHr0c/53czv0FKQ/7OjrF86LvR5vsU8BCf
llWtUt+No09XLjrVVQG9oP6WZ4ad4Cqu36hSwMbB2gXGDptohG4MWz92b0Hn
8y7dKYtZGFpxkf7OkonLfgvOjYvU4mSF7qTn4TassH9u/HySi/t64pw0Qx6q
E0utKdubkNh78USKfzHCkjbdqfRnYcJSrv0k8bnMv1y/8s+2ER/P5a+32N0N
3oSu9OgLDhZFhL73GW3F3u5Bt5FdXQjL33I2SY7ol20Kv57JUqHjnZJ8UL0J
9zuXhN0rZEBMxsymdS+Ru2/IlsxsacOIRLiQP4eFDWI6pqJB3fAq39J72I6N
tImjHemFHPRGXc2MN2lAh9VK0w3jtSgdYh2KoVMxO/LiovEULo7zDCtjamvw
j7rg/OkddUh9ahH6eAEXTAWK7CcqD5mbi1Z9E6chZ8qdn04ZZTi+ZW2R4QAV
U2JkZpdPI/zS2UejB4l+rv1puO8ztRW3+gc0xZ6wsDhi+ZeXexkQrtx6d8Sq
FcdtajmGi3PAHrs8uJaYT/TI5btPjxHnIBmwQTObgw2y/uMP8ltQ4FW+4uUS
Gi6+sJa+v5WDnVvqnG14HVAobq2u3tEM9Rs+fQNuRL/vdfHdf5SFY4E+xcmf
2Yg5YecsnMVBkt2KS2lCDZibysnf9YCox4Rn8tvKOMhhNZrsiGiCtFr/Tr/U
Gqhuzno6/UIrtoWrS7lI9ELvy0/flLk82G5M+/Xgaj2EI8sevHAswjSptU+l
hvuw31zTfVs6ExJP1B4gvAq5cokBF5Pb8VltU4/sNTYWdMxa9GANHVpq1u/O
+dXgc0KEe4RFI4Zq7omxX3FR9ej8e6VWHr4XJl7bVU/HbwWNOKl5FTBR7V/p
84QJ2+26eWrEdY57bzHUDWpC3cYgsUev6FjX/2DZxwAOHmkuDz+0gAKxnMOG
odFdSGE8O392GZHvipNTlr/vhLaBQCdzlgh0smNCsC/iGSzXjqc2wbGIsmvL
eibu6y+RN0hlof/cZtaVMTbykrv7r8cT/eWqI6ZTVo/lJf4LFp2owfwhZ4Q3
N6Gi82hPGpOLqxTdKpNrPFR9/pd8uqkFJomDTnG3v6F14dmVki8pqNpsKflq
JRvVSjvHH/2iQ30y2aNEuBbKZtM3bnSvxhmptsH0rz1INzMaSif830NF9EsT
uiTSGqB54EgzckdK875XNsJDPqR19S0Ggqpsu4Wfs+Ee5PVf8MVuyMqmz14a
x4GBbZKX6pdW7O5XmVxdyUK0QvuhEGIuiziXXlg4l5jfReFep4NrcXVoW6Es
Mfd4zaxi5QYu9P7IFVc285DdIRXYuaYb68Xr402OV4B6q3NNWWon2iqyPr1q
IPKhs8Xt93+6IFN6aP7NoT6ovK94uNSlFufG3JUMsgvReH9UqselG7668tUW
hO8SufJV+un7VjStEq6UN26C+M/+Lk4bAyrLG0s5Gmy8o3eMeea24EFUXS+0
WfgRQel4uIyJMyJ7f8aGs3H73jT1FfkcpJX7v+xc1ICQrl9bTLNqYCocZZOi
VY9POo1/crZzseHDia1H6Twc7s03bwmnIvXzWXuzlWW4yNnTfEmnDT+p297U
Ed+rSfUZfe+pDMwdLw+0dm1E8v7HK3z/5sD28bVTnlNYyIvom62wkgFd+7X3
pxZwUHT0n+YyxxbceMc+E3qmGS/DNL2s7zMx4qO+e1CPhZDqjqwwBzaUv8/T
fU/oyWaLkTep+xogxPm14fF4DYyfTqkq0G1DQNCsSSmhXoixc7fIj/ThoMnk
J4V3tTg7sc6mvboQMZcT1DxlO1DstyR/YyAbxUqJe9N/0mAx+1CdfCcPIgpC
l4640sBalWu9XJKYbzKRkZ/K6fiv8dyTR0Ten6Vy9ItNYxsm7S5HB4Q2YY1W
kW0bMU/eqj32PE34sy6R1IBEChs+t2yTj6QQvstPjWLEqkcFe8W1A/dqUC+2
/GT0tEZMsIWtuI+50EjW69Ut5KHUn/aMcrIdD65zb8zklSA21z1vH68N1gHq
Zx73Ezr2aP/2ruvdUNdKMQiMqUMoky2SvKIEoRMe9/QJ/+vxLUNIT4MFzj5o
2xD+5z//niuzmxuxb1a3dsauWnwzraQHUymgzKDoenG5WGLhkTGd0YGLYp1L
8z6wYZF5IV3DnQZXwwUbB2N5uGdqzVvT2oby/aFKT01LUFK7UOw5kbckNg6a
ZkRycF6j+Obw9jZ4ro38+HFGE6r3T3C47xlYV9iqUWPDRkpb77E0egeWj+hX
+xOv760oojVKvL6ygtPU2R3E5w259Wl+HuGLL+efvbejHDs1xqerpnTA6lG3
otGqL+i3YWbc8qYj9dv6m45V3diX7ES/ksZB37zPhU+lWyGqNbvsrkoz3g2q
ma05zcQi8UNsOVcWXtZpaVxjsnG84oTEvyQOynlu3qyOegRtmVE1er4GzTM3
3xx9QuTC4IE3PfN6kRnycfu7DTwIVTlm3NjXCN3Vsxe9VSmG9/zUDQ4H2rH5
zTt99lk23q6/skfWng5Jyz/7LDzpmG3yvHbYlwPvf/Mzkk5Q4G0s0L12ZYHu
pXMEuhf7iZZ2nPDdD9WCjQz92Dh5aFjitjwdH2lWwxtyKND9vr10Yi0bBhmX
O1fT6OiOVd188VobrqlE3MwpY6HZ77DS/AbCp382SWqYaMFbk4Irew1Z2B9z
r/3KbwYOiSf3WUk0A+Yxrv/MmCjv8jhVdI+FjIPfWNNeNSLg0CPD8AsMsFwH
z/8k/MW6J9O5xwi/m6+yNm04gfBRd3+scqquh3/5ip+mc5mgHyh3fkv4onad
d/I09WaYyr7JLN7Xhf3d2ULX5hN+IO6DLkOKipPZQw2ps1rhs7fIlW3MQuKD
q8tecxmYeqTceapvPf93vzoWNnSYPrA+0unXg8+eFoXrttVAvbK8IG+oGTul
5rN+yfYifzBoSHk+//eqZweW/8pH4NgDO9E/RF7XUhc9bMbDmEjy4qlvmiAy
Mz88IrEYp0+nv7geTuihsoxK/TUWFELP9g2ZV8PrbNOuGSmE/7d/+ZVO6DBb
cnx0k3YjbLbeehrXRsPGa6Mfdl3kICu23/OCezt28Dwto2TacbzK+PwxEzbE
THMlD0TToePWrKFa1YQv0z/uGV3JRPqbjATLfBakH65S6p+swyrL18X2xTTo
3L/z/XxfD14/iRmQLa/BrIdyHpa360Av+d2ouoyLt3dNCweJOeUkbiHEc2ZA
O2xUtdKpEg8Cdxp3KfdAY33cVf9TRE5XaNY3rvgfX/cdj9XbxwHcjJKfiMoo
ZZREVKhEXy0VKe2UUCGZldIihAiZmRUNKiq7kr1HyN7j3vcx7tCUjJ6jnn+/
/ft+Pa/n9et2znWu6zrn+nwa4cW8sOOSa5mQcV5T25j8/cVLAzTuCLbBpw0e
LjlmNCgKaPxdepMAf3vriMCQLpi+l3TU6QgFskoi7WSkCODosJXM+Prg1bpr
Akci+oCpxnqaMs6GCG5D8YhBcl0tHKe0vJwC+spJu7JUCLDk7r5r7tELJrFP
ArlNqKAjMxh54xABoyOH705YkeuaMypbJRyp4HGjItp3Zj/8/XbetnXkcyzA
yiefvM43vw21m9knf7A7USaAvM4FI0tPz+yTW6iEOc3sk6/SPao5k7eTfDRt
4cw+udYnNcGZfXKhA02vZ/bJ07J+uM7skyvdWtoxs2/2oHFnw8w+uWCPcf7M
PrkWz9uYmf2xFYm8F2f2yUc3V+bO7JvZs1VHZty+ZPv8mX2zMseANTP33SBP
3p+8naoql19/ci3Wx/zJ23n9rfdP3k7kqdnBMz6/evpP3k5B5ak/++QfLar/
7JMXEfP/7JPblJX82SefJc/+s09+ujfoz74BzI7+sz+gs3Tyz76BYPWdP/sA
kcZ/98mtmhP/7Bvom3X//d7+3d99crU9jD/jwPL6v3k7P7b/3Sf3vhH/xydX
/d0nny78u08uWPF3nzxhx999g5APf/cNHp36u09ucV7RZN+ObnAs2d2vcYoN
83yy6uqv0iDwjIlJslwXmL9/Y5PAxYazxgdbwg/TYfnIwdgd9R0gFTh8nxZM
rm8Y6+XMjzIga+NezQvc7ZD4/GX31s/kusIkNKH7HRPsSqTne31pgYLTntPH
4xjgyte1MoGcVyatyF5dV02BsYf3jVxVyXnylqOxzdd7IcIyk14gxoZtZbx7
isoIiGGxP/3ObwalwT7bll4aWMe8NLQIJaAucnr3osxOiJaY2iV4uhtKVC/1
Ftqy4WKo3Nvp0zTgqEQvaZlqAeuDZrufJDLAIUZ558z7z9sCe0Ou5TfA5++L
Sx+79oLPc+06/fIBuJGXbjf7Vz28oNxrrNOuhxjp48Pejf3gMUBfudinFy5w
KnZkTOZCXONS3dcKNKjZe9hQoosD8ck3vGt3k+PskKrY8pQPEKJ6l3rwdT8I
lpfl3ifn+UunE06FHG6Eyc3veZPEGXD5sq0fo4AAvZv73XzI58bqvcKXWZp9
YCF4+/LzATbQZF51njSlAO8RTuKvLR0Q66ctMWrBghA1zoP0EgYsbXLJGUtp
Bn3Tc5+2fqRDlrjRix33CEjdNGp28mwD5Pr27noe1g18b9vGiygDcCpTsVEv
ZAgu6i4yUKgqgy0FcfTUB8VQfLT35Oj2QXicPVk1cJkNa1gCbHvJBpD8pmmz
Q5wN0cslKnPJ319VLNRcPq8Z4mwCvri9pIM3oXvaLZUAv9tPs0v2dID022O0
9iNU8Bmujy8+SAD3QfdcebseUA1Pb71MjhvV0QYTmeS4cWOH8Eonctw4pPFg
Uf1CCnhlr5mIEiGv2+5N4wL7+mC10JFHDqupMGqWFrBan3zOhq4P9qzpAVl3
z87Wc1QY0Z73XO44Aa02g4VduuS6ia/78Mw+udt9ftmZ+z2t+PiXmX3yQ1KR
rTP75BfrqIYz97WMRFDszD65xOibwzP3++YEVu2MfxZMmDWTX/FerJl35r6w
rbD4s0++vv/62Zl98o6HxJ88nB/BnD95OEt7Nr6fuV8Uxh7/2Sf/+qb/Tx6O
XsTRizPud+7sn33yCz09f/bJX27R/7NPblR3/88+eaCV/p/7OikN/uyTK21X
/XteRrfuj8s63vqzTz5OyfvjXtf+7pOnc6v8GQc2q//dJy/I/LtP7vsx+8/9
e/zS331yU4+/++TLnv7dJy+T/7tPvu7c3/v9o/jfPJySsb/jwJlZf+cVg9l/
953u/VCwfeDbDd8dK+ysXdjQ7zm+cNdOGpivT9o4eb4LtJRXtSRJkfON9J2u
C6To4Hiep+3Byk7gMpe6zHrNgm1zBY2LxBjQJtE/5e3dDt/0dSumlrFA3v+T
Uiw5j/itf/JQ8I1WYM59JedBzjOMpmdpxAmwIfD2i9KPum1wNqPskJMzEwTV
XaoPk9d70h7+y9NlbFi5fM2jO28JUBzfIEUda4K4TfkrNCfpEPji6pe95Pr6
vxMPjJcWtcOQ7Ymv2l6NsPHLb8W3q6jwbtjVT8poAKrygmqvPaiHEcfzsyxN
mqEmfPpLgssAaBRdZq6xbgfKynJvzcP50NXQvXpLGbmufxdglEfO28F82yvZ
nB54c8uZLu1cBcuOVu2zWDEIK5RuGXoFsGHP92dx2qsb4NAhTSUNGgUk+bvs
bNcQsLnOTfKTWS+o+tmPl7zohGt3X0zLd5C/z2FfaZUMOuznv3Mthq8R1jnu
33FUlALJUpu0bFIH4DS/yc8k9yZwne/1XXRBGaxNUU4ydGVD7A/DCz89hmB4
NUuVhxxvNWS+vRRx+QixGUbe+hIEHDU/52v8lIAmxUxu6cwmOHRK62KkFQMW
Za6enU8+99e/2HvfW7AdxgVerlnUSAVJBv3HLFsCnO9Gfj5A/r2ZG4f5D/T2
wZ45q+3K+cl5uP19gdJ7fdB0+Erg45o+GBc2HKjlIecPplWczqQ+0Bh5HuA8
lwpcZoeFy7XJ9bXj3Ys+Mr3Q2s4seHuGCqELePeIHyNgTlH6aec9PTDk3//n
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
nva3W9C3LEA3F6D/H++NpQ8=
       "]], {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], 
       FormBox[
        SuperscriptBox[
         TemplateBox[{"\[Psi]"}, "Abs"], "2"], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotRange -> {All, All},
      PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"arg[\[Psi]] / 2\[Pi]\"", {FontFamily -> "Arial"}, 
                Background -> Automatic, StripOnInput -> False]}, {
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
/wEdeLt3
                  "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -56.25}, 
                    Offset[{2.5, 0.}, {7.5, -56.25}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 
                    11.250000000000014`}, 
                    Offset[{2.5, 0.}, {7.5, 11.250000000000014`}]}, {{7.5, 
                    33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 56.25}, 
                    Offset[{2.5, 0.}, {7.5, 56.25}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{"\"Rainbow\"", ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Psi]] / 2\[Pi]\""}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7071447250001755`*^9, {3.7071447781998186`*^9, 3.7071447869993515`*^9}, {
   3.707144996939329*^9, 3.707145009273079*^9}, {3.7071450396017685`*^9, 
   3.7071450612556973`*^9}, {3.7071451337225103`*^9, 3.70714516045936*^9}, {
   3.7071451921829896`*^9, 3.707145212475622*^9}, {3.7071452984506445`*^9, 
   3.707145333859006*^9}, 3.7071457437495785`*^9, 3.707149401186616*^9, 
   3.707149828721443*^9, 3.7071520958026733`*^9, 3.7071527683640833`*^9, 
   3.707152970087964*^9, 3.707153907517683*^9, 3.707155172937622*^9, {
   3.7071559583997035`*^9, 3.7071559783311553`*^9}, 3.7071560113957376`*^9, {
   3.707156067554202*^9, 3.707156094377016*^9}, {3.707161858978505*^9, 
   3.7071618928503995`*^9}, 3.7071650126952057`*^9, 3.707166356981123*^9, 
   3.7071711247215424`*^9, 3.7071756856913147`*^9, 3.7071762114852223`*^9, 
   3.7071813528285065`*^9, 3.70718139694624*^9, 3.7071819977250233`*^9, 
   3.707182236781083*^9, 3.707184287037513*^9, 3.7071854304310136`*^9, 
   3.7071856283545027`*^9, 3.7071858376534605`*^9, {3.7071866676370583`*^9, 
   3.707186700357425*^9}, 3.707186741627655*^9, 3.7071868085693145`*^9, 
   3.707186944306083*^9, 3.707217950915509*^9, 3.7072290373932304`*^9, 
   3.707232449857892*^9, 3.707232866870427*^9, 3.7072329063053885`*^9, 
   3.707233181162854*^9, 3.707233322526575*^9, 3.7072334070091057`*^9, 
   3.70723388495994*^9, 3.7072339387093925`*^9, 3.707234008304551*^9, 
   3.7072343778591146`*^9, 3.7072348447514114`*^9, 3.7072351632660885`*^9, 
   3.7072354141935396`*^9, 3.707236808647394*^9, 3.7072372131102257`*^9, 
   3.7072389592058525`*^9, 3.7072408299038754`*^9, 3.707250691549971*^9, 
   3.707250846949394*^9, 3.707327770700952*^9, 3.7073279059696856`*^9, 
   3.7073282333582444`*^9, {3.7073338793553095`*^9, 3.707333885661764*^9}, 
   3.7073340231788244`*^9, 3.7073340601114597`*^9, 3.7073343565534277`*^9, 
   3.7073345784938884`*^9, 3.7073346425160494`*^9, 3.707334717605772*^9, {
   3.707334835125144*^9, 3.7073348405406303`*^9}, 3.707336442795512*^9, {
   3.7073380042287736`*^9, 3.7073380172230263`*^9}, {3.7073380963372383`*^9, 
   3.7073381072767916`*^9}, 3.7073460511531134`*^9, {3.7073471236540833`*^9, 
   3.707347153508992*^9}, 3.707348764186059*^9, 3.7073489870913706`*^9, 
   3.707349130199708*^9, 3.707349479083107*^9, 3.707351186278803*^9, 
   3.707361038163591*^9, 3.7074011908529377`*^9, 3.7074012675962453`*^9, 
   3.7074013586423197`*^9},ExpressionUUID->"952d471e-a2b1-421c-bfe5-\
987fbf6e3e79"]
}, Open  ]],

Cell["\<\
The complex phase, together with the amplitude, governs the evolution of the \
wavefunction in time. A phase gradient indicates a probability current; that \
the probability density function (and the likelihood our particle will appear \
in a given region) will change in time.\
\>", "Text",
 CellChangeTimes->{{3.7071455067898684`*^9, 3.707145549748667*^9}, {
   3.7071550211017027`*^9, 3.707155040851237*^9}, {3.7071614440619755`*^9, 
   3.707161461348444*^9}, 3.707163007133092*^9, {3.707175781311696*^9, 
   3.707175781796465*^9}, {3.707185839450966*^9, 3.707185883172597*^9}, {
   3.7072508092386847`*^9, 
   3.707250835504994*^9}},ExpressionUUID->"a8c70ef1-0db7-4242-96c0-\
4ca96b7af2fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"example\[Psi]", "[", 
    RowBox[{"space_", ",", " ", "time_"}], "]"}], " ", "=", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"simulateWavefunction", "[", 
     RowBox[{
      RowBox[{"example\[Psi]", "[", "x", "]"}], ",", " ", "0", ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "2"}], ",", " ", "8"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "0.3"}], "}"}]}], "]"}], "[", 
    RowBox[{"space", ",", " ", "time"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707228373779501*^9, 3.7072284300771384`*^9}, {
  3.707228476317156*^9, 3.7072285121526337`*^9}, {3.707402477303687*^9, 
  3.707402497395838*^9}},ExpressionUUID->"6c136413-b6ef-4725-91c2-\
4b0854393173"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["Animate", "Code"], 
    StyleBox["[", "Code"], 
    StyleBox["\n", "Code"], 
    StyleBox["\t", "Code"], 
    RowBox[{
     RowBox[{
      StyleBox["Overlay", "Code"], 
      StyleBox["[", "Code"], 
      StyleBox["\n", "Code"], 
      StyleBox["\t\t", "Code"], 
      RowBox[{
       RowBox[{
        StyleBox["{", "Code"], 
        RowBox[{
         RowBox[{
          StyleBox["Show", "Code"], 
          StyleBox["[", "Code"], 
          StyleBox["\n", "Code"], 
          StyleBox["\t\t\t", "Code"], 
          RowBox[{
           StyleBox[
            RowBox[{"plotWavefunction", "[", 
             RowBox[{
              RowBox[{"example\[Psi]", "[", 
               RowBox[{"x", ",", " ", "t"}], "]"}], ",", " ", "domain", ",", 
              " ", "False"}], "]"}], "Code"], 
           StyleBox[",", "Code"], 
           StyleBox["\n", "Code"], 
           StyleBox["\t\t\t", "Code"], 
           StyleBox[
            RowBox[{"Plot", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                RowBox[{"example\[Psi]", "[", 
                 RowBox[{"x", ",", " ", "t"}], "]"}], "]"}], "2"], ",", "\n", 
              "\t\t\t\t", 
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "2", ",", " ", "3"}], "}"}], ",", " ", 
              RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}], ",", "\n", 
              "\t\t\t\t", 
              RowBox[{"PlotRange", " ", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "1.2"}], "}"}]}], ",", "\n", 
              "\t\t\t\t", 
              RowBox[{"PlotStyle", " ", "\[Rule]", " ", "Red"}]}], "]"}], 
            "Code"], 
           StyleBox[",", "Code"], 
           StyleBox["\n", "Code"], 
           StyleBox["\t\t\t", "Code"], 
           RowBox[{
            StyleBox["PlotRange", "Code"], 
            StyleBox[" ", "Code"], 
            StyleBox["\[Rule]", "Code"], " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "1.2"}], "}"}]}]}], 
          StyleBox["]", "Code"]}], 
         StyleBox[",", "Code"], 
         StyleBox["\n", "Code"], 
         StyleBox["\t\t ", "Code"], 
         RowBox[{
          StyleBox["Text", "Code"], 
          StyleBox["[", "Code"], 
          StyleBox["\n", "Code"], 
          StyleBox["\t\t\t", "Code"], 
          RowBox[{
           StyleBox["Style", "Code"], 
           StyleBox["[", "Code"], 
           StyleBox["\n", "Code"], 
           StyleBox["\t\t\t\t", "Code"], 
           RowBox[{
            RowBox[{
             StyleBox["\"\<Pr(2 < x < 3) \\n= \>\"", "Code"], 
             StyleBox[" ", "Code"], 
             StyleBox["<>", "Code"], 
             StyleBox["\n", "Code"], 
             StyleBox["\t\t\t\t", "Code"], 
             RowBox[{
              StyleBox["ToString", "Code"], 
              StyleBox["[", "Code"], 
              RowBox[{
               StyleBox["NIntegrate", "Code"], 
               StyleBox["[", "Code"], 
               StyleBox["\n", "Code"], 
               StyleBox[
                RowBox[{
                 StyleBox["\t\t\t\t", "Code"], "\t"}]], 
               RowBox[{
                StyleBox[
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   RowBox[{"example\[Psi]", "[", 
                    RowBox[{"x", ",", " ", "t"}], "]"}], "]"}], "2"], "Code"], 
                StyleBox[",", "Code"], 
                StyleBox[" ", "Code"], 
                StyleBox["\n", "Code"], 
                StyleBox["\t\t\t\t\t", "Code"], 
                StyleBox[
                 RowBox[{"{", 
                  RowBox[{"x", ",", " ", "2", ",", " ", "3"}], "}"}], "Code"], 
                StyleBox[",", "Code"], 
                StyleBox["\n", "Code"], 
                StyleBox["\t\t\t\t\t", "Code"], 
                RowBox[{
                 StyleBox["Method", "Code"], 
                 StyleBox[" ", "Code"], 
                 StyleBox["\[Rule]", "Code"], " ", 
                 RowBox[{"{", 
                  RowBox[{"Automatic", ",", " ", 
                   RowBox[{
                   "\"\<SymbolicProcessing\>\"", " ", "\[Rule]", " ", "0"}]}],
                   "}"}]}]}], 
               StyleBox["\n", "Code"], 
               StyleBox["\t\t\t\t", "Code"], "]"}], "]"}]}], ",", " ", "\n", 
            "\t\t\t\t", "Black"}], "]"}], "]"}]}], "}"}], ",", "\n", "\t\t", 
       StyleBox[
        RowBox[{"Alignment", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.8", ",", " ", "0"}], "}"}]}], "Code"]}], 
      StyleBox["]", "Code"]}], 
     StyleBox[",", "Code"], 
     StyleBox["\n", "Code"], 
     StyleBox["\t", "Code"], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "0.3"}], "}"}], "Code"], 
     StyleBox[",", "Code"], 
     StyleBox["\n", "Code"], 
     StyleBox["\t", "Code"], 
     RowBox[{
      StyleBox["SaveDefinitions", "Code"], 
      StyleBox["\[Rule]", "Code"], "True"}]}], 
    StyleBox["\n", "Code"], 
    StyleBox["]", "Code"]}], 
   StyleBox[" ", "Code"], 
   StyleBox["//", "Code"], 
   StyleBox[" ", "Code"], 
   StyleBox["\n", "Code"], "\t", 
   RowBox[{
    RowBox[{"Legended", "[", 
     RowBox[{"#", ",", " ", 
      RowBox[{"colorBar", "[", "]"}]}], "]"}], "&"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7071456078264985`*^9, 3.7071456503393946`*^9}, 
   3.7071520895669003`*^9, {3.7071528961866093`*^9, 3.707152921487929*^9}, 
   3.7071841788796315`*^9, 3.7071842205515933`*^9, {3.707184570338788*^9, 
   3.707184573847811*^9}, {3.707184610780097*^9, 3.707184611930045*^9}, {
   3.707185955592905*^9, 3.7071859833983316`*^9}, {3.707218399021167*^9, 
   3.7072183996356683`*^9}, {3.7072195511007247`*^9, 3.707219551507229*^9}, {
   3.707245669983631*^9, 3.7072456764630203`*^9}, {3.7072507728359737`*^9, 
   3.7072507759708853`*^9}, {3.7073353763744674`*^9, 
   3.7073353844863043`*^9}, {3.7073365827729826`*^9, 3.707336646660537*^9}, {
   3.707336678092108*^9, 3.7073366810376267`*^9}, {3.707341107215453*^9, 
   3.7073411150867977`*^9}, 
   3.707402236062383*^9},ExpressionUUID->"2050a5a1-5bd2-44ca-8f9e-\
a3d7315f2de5"],

Cell["\<\
This was an example of a free system, in no external potential. Its \
evolution, and the evolution of general trapped systems, is determined by the \
Schrodinger equation.\
\>", "Text",
 CellChangeTimes->{{3.7071620040047016`*^9, 3.7071620737628183`*^9}, {
  3.7071859308530197`*^9, 3.707185931945998*^9}, {3.7072200427578964`*^9, 
  3.7072200717030635`*^9}, {3.7073233066367607`*^9, 
  3.707323310860771*^9}},ExpressionUUID->"3d388c4e-23df-4a2e-b252-\
04bcc0f72a37"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Schrodinger Equation", "Section",
 CellChangeTimes->{{3.7071454714327006`*^9, 
  3.7071454760202475`*^9}},ExpressionUUID->"9999bc67-9945-48f0-8c1c-\
3e21349dac87"],

Cell[CellGroupData[{

Cell["Time dependent and independent forms", "Subsection",
 CellChangeTimes->{{3.707319662786274*^9, 
  3.707319685895834*^9}},ExpressionUUID->"b6343981-caca-4df3-ad66-\
847c8e4c6149"],

Cell[TextData[{
 "For a wavefunction \[Psi][r,t] with total energy encoded in a Hamiltonian \
operator ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["H", "^"], TraditionalForm]],ExpressionUUID->
  "69527e5b-019b-4acf-b885-790e4583c54e"],
 ", the time-dependent Schrodinger equation is"
}], "Text",
 CellChangeTimes->{{3.70718713785315*^9, 3.7071872026026764`*^9}, {
  3.7073147320787573`*^9, 3.707314736078554*^9}, {3.7073197090325003`*^9, 
  3.707319715862543*^9}},ExpressionUUID->"322847e0-8b6f-4e85-9969-\
a7fb7ed396b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"schrodEq", "[", "\[Psi]_", "]"}], " ", "=", " ", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{
      SuperscriptBox["\[Psi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"r", ",", "t"}], "]"}]}], "\[Equal]", 
    RowBox[{
     OverscriptBox["H", "^"], "[", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"r", ",", "t"}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707187206899508*^9, 3.707187254538334*^9}, {
  3.707317409765885*^9, 3.7073174107447767`*^9}, {3.707317591818646*^9, 
  3.70731759967482*^9}, {3.707317835712682*^9, 3.7073178895536275`*^9}, {
  3.707317969825589*^9, 3.707317995304257*^9}, {3.707318920799297*^9, 
  3.707318934895522*^9}},ExpressionUUID->"c2d9e666-d24c-4604-aa23-\
de46091c6f82"],

Cell["where r can represent one or more spatial dimensions.", "Text",
 CellChangeTimes->{{3.7073231539852314`*^9, 
  3.7073231768998375`*^9}},ExpressionUUID->"e21fcf9e-4a4b-4ca7-88a7-\
40f61618105a"],

Cell["\<\
We can often produce an infinite set of eigenfunctions \[Phi][r,t] (with \
eigenvalues \[CapitalEpsilon]) of the Hamiltonian, which each satisfy\
\>", "Text",
 CellChangeTimes->{{3.707317688600671*^9, 3.707317707795269*^9}, {
   3.707317749721675*^9, 3.70731778383503*^9}, {3.7073180084045277`*^9, 
   3.707318017485259*^9}, {3.7073181923752103`*^9, 3.707318204586427*^9}, 
   3.7073231756287503`*^9},ExpressionUUID->"5d6e91cd-f668-4b19-9b0d-\
d87ab7378260"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"schrodEq", "[", "\[Phi]", "]"}], " ", "/.", " ", 
  RowBox[{
   RowBox[{
    OverscriptBox["H", "^"], "[", 
    RowBox[{"\[Phi]", "[", 
     RowBox[{"r", ",", "t"}], "]"}], "]"}], " ", "\[Rule]", "  ", 
   RowBox[{"\[CapitalEpsilon]", " ", 
    RowBox[{"\[Phi]", "[", 
     RowBox[{"r", ",", "t"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7073178927738123`*^9, 3.707317988699069*^9}, {
  3.707318609669626*^9, 
  3.7073186196025205`*^9}},ExpressionUUID->"843ed6d6-ae17-4137-b65b-\
43848454a1f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox["\[Phi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "t"}], "]"}]}], "\[Equal]", 
  RowBox[{"\[CapitalEpsilon]", " ", 
   RowBox[{"\[Phi]", "[", 
    RowBox[{"r", ",", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.707317897415148*^9, {3.7073179523930235`*^9, 3.707317989505539*^9}, 
   3.7073181052253594`*^9, 3.707318160771224*^9, {3.707318282607974*^9, 
   3.7073183379820814`*^9}, 3.707318377500703*^9, 3.707318407511627*^9, {
   3.7073186057122726`*^9, 3.707318620720391*^9}, {3.7073186788002806`*^9, 
   3.7073187130621605`*^9}, 3.707318746364956*^9, {3.707318912752485*^9, 
   3.707318938196787*^9}, 3.7073190867684145`*^9, 3.707319124453767*^9, 
   3.7073192053722596`*^9, 3.707319243964088*^9, 3.7073205076242943`*^9, 
   3.707320945159124*^9, 3.7073211006352034`*^9, 3.707321151719928*^9, 
   3.707321324779066*^9, 3.707327772886029*^9, 3.7073279111397786`*^9, 
   3.7073282357397337`*^9, 3.7073338881043005`*^9, 3.7073348423437467`*^9, 
   3.7073381094714003`*^9, 3.7073460553969083`*^9, 3.7073471572355566`*^9, {
   3.70734874094643*^9, 3.7073487678137627`*^9}, 3.707348991056382*^9, 
   3.70734913390291*^9, 3.707349483210473*^9, 3.707351218165126*^9, 
   3.7073610389848757`*^9, 3.7074011923633127`*^9, 3.7074012683924694`*^9, 
   3.707401363716131*^9},ExpressionUUID->"fb13d7b7-e9c0-42fc-8039-\
aa4f3e1d3be9"]
}, Open  ]],

Cell["\<\
and which can be expressed in terms of a time-independent eigenfunction \
\[Phi][r] and an oscillator time component.\
\>", "Text",
 CellChangeTimes->{{3.7073181748942227`*^9, 3.707318226640203*^9}, {
  3.707318351493869*^9, 3.707318354163373*^9}, {3.7073187220400066`*^9, 
  3.7073187335628395`*^9}},ExpressionUUID->"49d17306-5c24-4bcb-94e4-\
c6fc516cdc7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"eigTimeForm", "[", "\[Phi]_", "]"}], " ", "=", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"r", ",", " ", "t"}], "]"}], " ", "\[Rule]", " ", 
     RowBox[{"DSolveValue", "[", 
      RowBox[{"%", ",", " ", 
       RowBox[{"\[Phi]", "[", 
        RowBox[{"r", ",", " ", "t"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"r", ",", " ", "t"}], "}"}]}], "]"}]}], "  ", "/.", " ", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], " ", "\[Rule]", " ", "\[Phi]", 
     "    "}]}]}]}]], "Input",
 CellChangeTimes->{{3.7073180793612413`*^9, 3.707318095470804*^9}, {
  3.7073181452296567`*^9, 3.7073181580016317`*^9}, {3.7073182794650574`*^9, 
  3.7073183356031246`*^9}, {3.707320963070878*^9, 3.707320985970559*^9}, {
  3.707321071556932*^9, 3.7073210735979424`*^9}, {3.707321144444715*^9, 
  3.7073211453037744`*^9}},ExpressionUUID->"07ad8dd8-d967-4dec-aabc-\
dd2cf3326ecb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"r", ",", "t"}], "]"}], "\[Rule]", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[CapitalEpsilon]"}]], 
   " ", 
   RowBox[{"\[Phi]", "[", "r", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7073183177207985`*^9, 3.7073183399926205`*^9}, 
   3.7073183783217916`*^9, 3.7073184085678835`*^9, 3.7073186246222095`*^9, {
   3.707318680016778*^9, 3.7073187472402*^9}, 3.707318940480586*^9, 
   3.707319087725277*^9, 3.707319131737053*^9, 3.707319206403962*^9, 
   3.7073192452320185`*^9, 3.707320507640831*^9, 3.7073209866284466`*^9, {
   3.7073210957472544`*^9, 3.70732110143044*^9}, {3.707321147222993*^9, 
   3.70732115173544*^9}, 3.707321324795065*^9, 3.7073277729025307`*^9, 
   3.7073279111562786`*^9, 3.7073282360137377`*^9, 3.7073338882999425`*^9, 
   3.707334842359744*^9, 3.7073381097198973`*^9, 3.707346055574912*^9, 
   3.707347157271064*^9, {3.7073487409904327`*^9, 3.707348767856263*^9}, 
   3.7073489912708826`*^9, 3.7073491339514112`*^9, 3.7073494833049746`*^9, 
   3.7073512363979893`*^9, 3.707361039363923*^9, 3.7074011929925137`*^9, 
   3.7074012684044676`*^9, 
   3.707401363762147*^9},ExpressionUUID->"0eaaa6e0-b45b-4ee6-b41a-\
9e947cb8c1d1"]
}, Open  ]],

Cell["Returning this form to the Schrodinger equation gives", "Text",
 CellChangeTimes->{{3.7073188176518273`*^9, 3.7073188236213427`*^9}, {
  3.7073189836616344`*^9, 
  3.7073189855146914`*^9}},ExpressionUUID->"73898a67-962d-448d-bf7c-\
43fb958d9195"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"schrodEq", "[", "\[Phi]", "]"}], " ", "/.", " ", 
  RowBox[{"{", 
   RowBox[{"%", ",", " ", 
    RowBox[{"D", "[", 
     RowBox[{"%", ",", "t"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7073183676209383`*^9, 3.707318404801031*^9}, {
   3.7073186417986293`*^9, 3.707318702365399*^9}, {3.707318751569778*^9, 
   3.707318760043728*^9}, 
   3.707319093774513*^9},ExpressionUUID->"edc82ec8-4d4c-48f4-9f84-\
6b07f0669ad5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[CapitalEpsilon]"}]], 
   " ", "\[CapitalEpsilon]", " ", 
   RowBox[{"\[Phi]", "[", "r", "]"}]}], "\[Equal]", 
  RowBox[{
   OverscriptBox["H", "^"], "[", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[CapitalEpsilon]"}]], 
    " ", 
    RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.7073183741218977`*^9, 3.707318388606801*^9}, {
   3.7073186710373106`*^9, 3.7073187027779393`*^9}, 3.707318760825594*^9, 
   3.707318944986657*^9, 3.7073190958404236`*^9, 3.7073191334368854`*^9, 
   3.707319207931863*^9, 3.707319246349456*^9, 3.7073205076568046`*^9, 
   3.7073209935491533`*^9, 3.7073211072992835`*^9, 3.7073211517524495`*^9, 
   3.707321324811067*^9, 3.70732777296553*^9, 3.707327911172779*^9, 
   3.707328236036237*^9, 3.707333888315951*^9, 3.7073348423742523`*^9, 
   3.7073381097351203`*^9, 3.7073460556569085`*^9, 3.707347157282558*^9, {
   3.707348741001931*^9, 3.707348767869269*^9}, 3.7073489912833815`*^9, 
   3.707349134048414*^9, 3.707349483322469*^9, 3.707351248614083*^9, 
   3.707361039755657*^9, 3.707401193004037*^9, 3.7074012684134665`*^9, 
   3.70740136384972*^9},ExpressionUUID->"00d5837f-ed35-4e4a-ac1b-\
f6324d60e308"]
}, Open  ]],

Cell["\<\
which for a linear and time-independent Hamiltonian, presents the \
time-independent Schrodinger equation of the energy eigenfunctions \[Phi][r]\
\>", "Text",
 CellChangeTimes->{{3.707318966116968*^9, 
  3.707319022402522*^9}},ExpressionUUID->"235916b9-182f-412d-86c4-\
cbb9bd8b1400"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eigfGeneralEq", "[", "\[Phi]", "]"}], " ", "=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"%", " ", "/.", " ", 
    RowBox[{
     RowBox[{
      OverscriptBox["H", "^"], "[", 
      RowBox[{"c__", " ", 
       RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", "\[Rule]", " ", 
     RowBox[{"c", " ", 
      RowBox[{
       OverscriptBox["H", "^"], "[", 
       RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}]}], " ", "//", " ", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", " ", 
      RowBox[{"Assumptions", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", ">", "0"}], ",", " ", 
         RowBox[{"\[CapitalEpsilon]", ">", "0"}]}], "}"}]}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.7073190256419954`*^9, 3.7073190847971325`*^9}, {
  3.707319135098423*^9, 3.7073191703765783`*^9}, {3.7073192025255585`*^9, 
  3.707319240149623*^9}, {3.7073193576744905`*^9, 3.707319403945736*^9}, {
  3.7073204940056176`*^9, 3.707320501244255*^9}, {3.7073213088264294`*^9, 
  3.707321309545864*^9}},ExpressionUUID->"52f65e66-ba8d-4e77-ac27-\
38721814104a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalEpsilon]", " ", 
   RowBox[{"\[Phi]", "[", "r", "]"}]}], "\[Equal]", 
  RowBox[{
   OverscriptBox["H", "^"], "[", 
   RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.7073190743476677`*^9, 3.7073190976202073`*^9}, 
   3.707319171614408*^9, 3.707319208965479*^9, 3.7073192477282743`*^9, {
   3.707320502062392*^9, 3.7073205076748047`*^9}, 3.707320995370002*^9, 
   3.707321110353335*^9, 3.7073211517674513`*^9, {3.7073213129430094`*^9, 
   3.707321324829071*^9}, 3.7073277729820285`*^9, 3.7073279114302764`*^9, 
   3.707328236054235*^9, 3.70733388833095*^9, 3.7073348423887596`*^9, 
   3.7073381097516203`*^9, 3.7073460557969093`*^9, 3.7073471572935605`*^9, {
   3.7073487410144324`*^9, 3.7073487679517617`*^9}, 3.7073489914023848`*^9, 
   3.707349134062915*^9, 3.7073494833369713`*^9, 3.7073512486625867`*^9, 
   3.7073610397958*^9, 3.7074011930465474`*^9, 3.7074012684235406`*^9, 
   3.707401363885726*^9},ExpressionUUID->"813905e7-ddd3-4333-aac0-\
5b98de6e4951"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operators and eigenfunctions", "Subsection",
 CellChangeTimes->{{3.7073197690121984`*^9, 3.707319770687677*^9}, {
  3.707320371416847*^9, 
  3.707320375662941*^9}},ExpressionUUID->"6fe4d653-0b9c-4a82-8ef4-\
ca19f38d7dd8"],

Cell[TextData[{
 "For a single particle in a scalar external potential ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "626aae26-6466-4406-a73d-d90a80df703c"],
 " described in a non-inertial, non-relativistic frame, the Hamiltonian takes \
the form"
}], "Text",
 CellChangeTimes->{{3.7073197735227547`*^9, 3.707319811574335*^9}, {
  3.707319844234581*^9, 3.7073198934169974`*^9}, {3.7073202639306774`*^9, 
  3.7073202670106*^9}, {3.7073207006485534`*^9, 
  3.707320700909803*^9}},ExpressionUUID->"5d9ce4ef-f7ca-46ef-bb75-\
d40a09bbbf0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hamiltonianSub", " ", "=", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{
    OverscriptBox["H", "^"], "[", "\[Psi]_", "]"}], " ", "\[RuleDelayed]", 
   " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], 
     RowBox[{"Laplacian", "[", 
      RowBox[{"\[Psi]", ",", " ", 
       RowBox[{"{", "r", "}"}]}], "]"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"V", " ", "[", "r", "]"}], "\[Psi]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.707319899253714*^9, 3.707319916141107*^9}, {
  3.7073199687907114`*^9, 3.707320000642387*^9}, {3.7073200702150707`*^9, 
  3.70732011215499*^9}, {3.7073201614701414`*^9, 3.707320163819599*^9}, {
  3.7073202462348824`*^9, 3.7073202598475714`*^9}, {3.7073204617349133`*^9, 
  3.7073204622777367`*^9}, {3.707320554165726*^9, 3.707320560201461*^9}, {
  3.7073206980979223`*^9, 3.7073207106125135`*^9}, {3.7073207803600006`*^9, 
  3.707320823482685*^9}},ExpressionUUID->"1ab279d2-52b7-49e3-8dbd-\
88488b1f5363"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   OverscriptBox["H", "^"], "[", "\[Psi]_", "]"}], "\[RuleDelayed]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     TemplateBox[{"\[Psi]",RowBox[{"{", "r", "}"}]},
      "Laplacian"], "2"]}], "+", 
   RowBox[{
    RowBox[{"V", "[", "r", "]"}], " ", "\[Psi]"}]}]}]], "Output",
 CellChangeTimes->{{3.7073200013871794`*^9, 3.7073200245990257`*^9}, {
   3.7073200931450653`*^9, 3.707320112857131*^9}, {3.7073201680678163`*^9, 
   3.707320177579537*^9}, {3.7073202482993097`*^9, 3.707320274971459*^9}, 
   3.7073204625746956`*^9, {3.7073205612531033`*^9, 3.707320567581925*^9}, {
   3.7073207026798687`*^9, 3.707320711056515*^9}, 3.707320828099593*^9, 
   3.70732777299903*^9, 3.7073279114477777`*^9, 3.7073282360787354`*^9, 
   3.7073338883469505`*^9, 3.707334842405759*^9, 3.7073381097716208`*^9, 
   3.7073460559304113`*^9, 3.7073471573075714`*^9, {3.7073487410264344`*^9, 
   3.7073487679632616`*^9}, 3.7073489915328827`*^9, 3.707349134078417*^9, 
   3.707349483348474*^9, 3.7073512547488785`*^9, 3.7073610398397985`*^9, 
   3.7074011933395653`*^9, 3.7074012684325433`*^9, 
   3.7074013638977194`*^9},ExpressionUUID->"a1449223-5f56-4ac6-925c-\
26e406dea98c"]
}, Open  ]],

Cell["\<\
where the Laplacian gives an analog of kinetic energy. The time-dependent \
Schrodinger equation becomes\
\>", "Text",
 CellChangeTimes->{{3.7073202090442724`*^9, 3.707320236025022*^9}, {
  3.707320430515175*^9, 
  3.7073204770117726`*^9}},ExpressionUUID->"54ea2302-bf3d-4963-90d5-\
5920fbb907ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"schrodEq", "[", "\[Psi]", "]"}], "  ", "/.", " ", 
  "hamiltonianSub"}]], "Input",
 CellChangeTimes->{{3.707320014573167*^9, 3.7073200264215565`*^9}, {
  3.7073201330425105`*^9, 3.707320133163226*^9}, {3.7073201794188347`*^9, 
  3.7073201812233086`*^9}, {3.7073208318523965`*^9, 
  3.707320833854968*^9}},ExpressionUUID->"cec64203-cbc4-4aeb-9735-\
fbf423897af1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox["\[Psi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "t"}], "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", "r", "]"}], " ", 
    RowBox[{"\[Psi]", "[", 
     RowBox[{"r", ",", "t"}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{
     SuperscriptBox["\[Psi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "t"}], "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.707320020761911*^9, 3.7073200266052055`*^9}, {
   3.7073201187793045`*^9, 3.7073201335680795`*^9}, {3.7073201720990887`*^9, 
   3.707320181751314*^9}, {3.7073202509803786`*^9, 3.707320279255124*^9}, 
   3.707320465439288*^9, {3.707320564679715*^9, 3.7073205687653165`*^9}, {
   3.707320704499175*^9, 3.7073207136848106`*^9}, 3.707320834204144*^9, 
   3.707327773016529*^9, 3.7073279114652796`*^9, 3.707328236107735*^9, 
   3.7073338883629503`*^9, 3.707334842422759*^9, 3.707338109785626*^9, 
   3.7073460559439077`*^9, 3.7073471573185573`*^9, {3.707348741039431*^9, 
   3.707348767976262*^9}, 3.7073489915468836`*^9, 3.707349134089411*^9, 
   3.707349483368471*^9, 3.7073512670293865`*^9, 3.707361043959963*^9, 
   3.707401193629689*^9, 3.7074012684435453`*^9, 
   3.707401363907719*^9},ExpressionUUID->"cac107f2-5626-45f8-ae8d-\
6793ce4c98f4"]
}, Open  ]],

Cell["\<\
and the time-independent Schrodinger equation of the eigenfunctions becomes\
\>", "Text",
 CellChangeTimes->{{3.7073204025021896`*^9, 3.7073204193006573`*^9}, {
  3.707320519123188*^9, 
  3.7073205306519375`*^9}},ExpressionUUID->"36691e56-7acc-4802-9af6-\
2ad825c40096"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eigfEq", "[", "\[Phi]_", "]"}], " ", "=", "\[IndentingNewLine]", 
  "\t", 
  RowBox[{
   RowBox[{"eigfGeneralEq", "[", "\[Phi]", "]"}], " ", "/.", " ", 
   "hamiltonianSub"}]}]], "Input",
 CellChangeTimes->{{3.7073205325932503`*^9, 3.7073205374410844`*^9}, {
  3.707320734894993*^9, 3.707320736386239*^9}, {3.707320839317745*^9, 
  3.7073208413237514`*^9}, {3.7073212847206173`*^9, 3.7073212897283*^9}, {
  3.707321365868603*^9, 
  3.707321414238538*^9}},ExpressionUUID->"c63030e1-5e2b-4462-87c6-\
249fd1d47342"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalEpsilon]", " ", 
   RowBox[{"\[Phi]", "[", "r", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", "r", "]"}], " ", 
    RowBox[{"\[Phi]", "[", "r", "]"}]}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{{3.7073213688510222`*^9, 3.707321386708829*^9}, 
   3.70732777303253*^9, 3.7073279114827785`*^9, 3.7073282361272345`*^9, 
   3.7073338883809505`*^9, 3.7073348426177835`*^9, 3.7073381098021207`*^9, 
   3.7073460560279083`*^9, 3.70734715732906*^9, {3.707348741050932*^9, 
   3.7073487679877634`*^9}, 3.707348991638382*^9, 3.7073491341029105`*^9, 
   3.70734948338197*^9, 3.7073512792046704`*^9, 3.707361044207994*^9, 
   3.7074011936402063`*^9, 3.7074012684555454`*^9, 
   3.707401363920719*^9},ExpressionUUID->"4fd33a23-d92c-4d8a-afa3-\
332829724cb3"]
}, Open  ]],

Cell[TextData[{
 "Every possible wavefunction instance of the system can be constructed from \
a linear superposition of the eigenfunctions ",
 Cell[BoxData[
  SubscriptBox["\[Phi]", "n"]],
  CellChangeTimes->{
   3.7073223123394923`*^9, {3.7073223844139256`*^9, 3.7073224085421534`*^9}, 
    3.707322480228262*^9},ExpressionUUID->
  "abe4e73d-a6b5-4b92-9ec0-d58b75a51d84"],
 ","
}], "Text",
 CellChangeTimes->{{3.707321425315091*^9, 3.7073214684782314`*^9}, {
  3.707322239395274*^9, 3.707322239611866*^9}, {3.7073223695384192`*^9, 
  3.7073223702030764`*^9}, {3.7073226903046236`*^9, 3.7073227254369574`*^9}, {
  3.7073228523798046`*^9, 
  3.707322853558221*^9}},ExpressionUUID->"1302c7dc-ec6e-4cb4-b220-\
c1062c47a207"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", "r", "]"}], " ", "\[Rule]", " ", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "n"], " ", 
     RowBox[{
      SubscriptBox["\[Phi]", "n"], "[", "r", "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n", ",", " ", "0", ",", " ", "\[Infinity]"}], "}"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.707321489749981*^9, 
  3.7073215961706047`*^9}},ExpressionUUID->"55556e38-cb45-48a5-9c86-\
7c395abe1f2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", "r", "]"}], "\[Rule]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "0"}], "\[Infinity]"], 
   RowBox[{
    SubscriptBox["c", "n"], " ", 
    RowBox[{
     SubscriptBox["\[Phi]", "n"], "[", "r", "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.7073214977918253`*^9, 3.7073215574968195`*^9}, 
   3.7073215964072733`*^9, 3.7073217019781413`*^9, 3.7073223093321624`*^9, 
   3.707322473747759*^9, 3.70732777304803*^9, 3.707327911500778*^9, 
   3.7073282361457343`*^9, 3.7073338883984604`*^9, 3.707334842633784*^9, 
   3.707338109819623*^9, 3.7073460568299074`*^9, 3.707347157339058*^9, {
   3.7073487410624313`*^9, 3.7073487679997635`*^9}, 3.707348992443556*^9, 
   3.707349134115912*^9, 3.7073494833979697`*^9, 3.7073513038268204`*^9, 
   3.707361044568636*^9, 3.7074011938957367`*^9, 3.707401268610561*^9, 
   3.707401364035242*^9},ExpressionUUID->"d0ed41a0-9f13-482f-850b-\
9c9360ccb019"]
}, Open  ]],

Cell[TextData[{
 "each of which merely evolve in time by a complex oscillation at a rate \
proportional to their energy eigenvalues ",
 Cell[BoxData[
  SubscriptBox["\[CapitalEpsilon]", "n"]],
  CellChangeTimes->{{3.707320924322996*^9, 3.7073209275711007`*^9}, {
   3.7073210052756395`*^9, 3.707321037146104*^9}, {3.7073211153399067`*^9, 
   3.707321131926406*^9}, {3.707321162860402*^9, 3.70732116410929*^9}, {
   3.7073216096192527`*^9, 3.707321610533577*^9}, {3.707321644958517*^9, 
   3.7073217108163652`*^9}, {3.7073220906372643`*^9, 3.7073221013493543`*^9}},
  ExpressionUUID->"020b4474-dc5d-4c9b-8602-42de2b5b7f5c"],
 "."
}], "Text",
 CellChangeTimes->{{3.707322043185197*^9, 3.70732208518964*^9}, 
   3.707322128190712*^9, {3.7073226863946996`*^9, 
   3.707322707287566*^9}},ExpressionUUID->"99e8acef-5b91-4fb9-85dd-\
d99d0ba08a0c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eigTimeForm", "[", 
   SubscriptBox["\[Phi]", "n"], "]"}], " ", "/.", " ", 
  RowBox[{"\[CapitalEpsilon]", " ", "\[Rule]", " ", 
   SubscriptBox["\[CapitalEpsilon]", "n"]}]}]], "Input",
 CellChangeTimes->{{3.707320924322996*^9, 3.7073209275711007`*^9}, {
  3.7073210052756395`*^9, 3.707321037146104*^9}, {3.7073211153399067`*^9, 
  3.707321131926406*^9}, {3.707321162860402*^9, 3.70732116410929*^9}, {
  3.7073216096192527`*^9, 3.707321610533577*^9}, {3.707321644958517*^9, 
  3.7073217108163652`*^9}, {3.7073220906372643`*^9, 
  3.7073221013493543`*^9}},ExpressionUUID->"0228ea9c-e896-4fdd-871e-\
c1f94949b18b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Phi]", "n"], "[", 
   RowBox[{"r", ",", "t"}], "]"}], "\[Rule]", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
     SubscriptBox["\[CapitalEpsilon]", "n"]}]], " ", 
   RowBox[{
    SubscriptBox["\[Phi]", "n"], "[", "r", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.707320927907052*^9, {3.707321002478088*^9, 3.7073210376166644`*^9}, {
   3.707321119561737*^9, 3.707321132287935*^9}, 3.7073211930391088`*^9, 
   3.707321611057225*^9, 3.707321653713292*^9, {3.7073216890590267`*^9, 
   3.7073217111007786`*^9}, 3.7073221017416444`*^9, 3.7073223106793966`*^9, 
   3.70732247916463*^9, 3.7073277730635304`*^9, 3.707327911518279*^9, 
   3.7073282361622343`*^9, 3.707333888415559*^9, 3.707334842647784*^9, 
   3.707338109836625*^9, 3.7073460571154084`*^9, 3.7073471573480573`*^9, {
   3.7073487410734305`*^9, 3.707348768010763*^9}, 3.707348992615057*^9, 
   3.7073491341289115`*^9, 3.7073494834114695`*^9, 3.7073513039233212`*^9, 
   3.707361044606636*^9, 3.707401193908736*^9, 3.7074012688309927`*^9, 
   3.707401364049247*^9},ExpressionUUID->"51611488-04d0-4a08-afeb-\
b91943991e50"]
}, Open  ]],

Cell["\<\
Since the Schrodinger equation is linear, the total wavefunction evolves like \
the sum of the simple eigenfunction dynamics,\
\>", "Text",
 CellChangeTimes->{{3.707322503061156*^9, 3.707322532225828*^9}, {
  3.7073228645864005`*^9, 
  3.707322917923467*^9}},ExpressionUUID->"6c3390ec-ed8a-48c9-873e-\
6e37fabfd4bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"r", ",", " ", "t"}], "]"}], " ", "\[Rule]", "  ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "0"}], "\[Infinity]"], 
    RowBox[{
     SubscriptBox["c", "n"], " ", 
     RowBox[{
      SubscriptBox["\[Phi]", "n"], "[", 
      RowBox[{"r", ",", " ", "t"}], "]"}]}]}]}], " ", "/.", " ", 
  "%"}]], "Input",
 CellChangeTimes->{{3.707322150448507*^9, 3.707322155800543*^9}, {
   3.7073221903716507`*^9, 3.707322192332011*^9}, {3.707322279784107*^9, 
   3.7073223050755386`*^9}, {3.707322376193919*^9, 3.707322407526409*^9}, 
   3.707322471244353*^9},ExpressionUUID->"bd6dfca2-63d3-47ed-99f8-\
9b0d52bb88e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"r", ",", "t"}], "]"}], "\[Rule]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "0"}], "\[Infinity]"], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
      SubscriptBox["\[CapitalEpsilon]", "n"]}]], " ", 
    SubscriptBox["c", "n"], " ", 
    RowBox[{
     SubscriptBox["\[Phi]", "n"], "[", "r", "]"}]}]}]}]], "Output",
 CellChangeTimes->{
  3.7073223123394923`*^9, {3.7073223844139256`*^9, 3.7073224085421534`*^9}, 
   3.707322480228262*^9, 3.7073277730780306`*^9, 3.707327911537279*^9, 
   3.7073282361797338`*^9, 3.707333888432559*^9, 3.707334842662784*^9, 
   3.7073381098551207`*^9, 3.707346057285381*^9, 3.707347157358058*^9, {
   3.7073487410844326`*^9, 3.7073487680227633`*^9}, 3.7073489928295565`*^9, 
   3.7073491341414127`*^9, 3.70734948342297*^9, 3.7073513040423236`*^9, 
   3.707361044697686*^9, 3.7074011940265875`*^9, 3.7074012688411846`*^9, 
   3.7074013642702827`*^9},ExpressionUUID->"69ede864-f8d7-4a18-8442-\
cb95aa0e32ba"]
}, Open  ]],

Cell[TextData[{
 "where (normalised) ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["c", "n"], " "}]],
  CellChangeTimes->{
   3.7073223123394923`*^9, {3.7073223844139256`*^9, 3.7073224085421534`*^9}, 
    3.707322480228262*^9},ExpressionUUID->
  "2ead33db-a375-404b-99da-f42de6d2d3d6"],
 "are trivially found by projecting the initial wavefunction \[Psi][r, 0] \
onto the ",
 StyleBox["orthonormal",
  FontSlant->"Italic"],
 " set {",
 Cell[BoxData[
  RowBox[{"n", ":", 
   SubscriptBox["\[Phi]", "n"]}]],
  CellChangeTimes->{
   3.7073223123394923`*^9, {3.7073223844139256`*^9, 3.7073224085421534`*^9}, 
    3.707322480228262*^9},ExpressionUUID->
  "be4af610-b956-4b94-9fb4-08ed0eb87459"],
 "}, having first calculated the spectrum of the particular Hamiltonian."
}], "Text",
 CellChangeTimes->{{3.707322631418338*^9, 3.707322654602172*^9}, {
  3.707322767387501*^9, 3.707322816842628*^9}, {3.7073229827254257`*^9, 
  3.707323015869383*^9}, {3.7073230656556664`*^9, 3.7073230693478336`*^9}, {
  3.7073248440482283`*^9, 3.707324845976152*^9}, {3.707326411600178*^9, 
  3.7073264130394173`*^9}},ExpressionUUID->"50346113-d6a0-44de-a20c-\
ac79324380d2"],

Cell[TextData[{
 "The quantum harmonic oscillator is an example of a simple Hamiltonian \
system with an interesting family of eigenfunctions, which can be used to \
propagate a wavefunction through time without numerically solving the ",
 StyleBox["time-dependent",
  FontSlant->"Italic"],
 " Schrodinger equation."
}], "Text",
 CellChangeTimes->{{3.707323071251892*^9, 3.7073230980857344`*^9}, {
  3.7073232154068947`*^9, 
  3.7073232743272123`*^9}},ExpressionUUID->"25a9b4c8-d5a5-45c0-a641-\
c5bb2655402f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Quantum Harmonic Oscillator", "Section",
 CellChangeTimes->{{3.7071871058069887`*^9, 
  3.7071871104476447`*^9}},ExpressionUUID->"7aec4aae-46d1-4b18-bcab-\
3d9424211da3"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"coherent", " ", "mode", " ", "by", " ", "translation"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7072204792185397`*^9, 
  3.7072204845486684`*^9}},ExpressionUUID->"7f176cb6-18b4-4d05-9742-\
0982c25ad50b"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"decomposing", " ", "coherent", " ", "onto", " ", "modes"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7072204855850754`*^9, 
  3.707220492302196*^9}},ExpressionUUID->"a1e1f6eb-b9be-4ffb-a9a6-\
29b6a545e74b"],

Cell[CellGroupData[{

Cell["Finding the eigenfunctions", "Subsection",
 CellChangeTimes->{{3.7073241603746758`*^9, 
  3.7073241687369375`*^9}},ExpressionUUID->"9d7a442d-3f0b-41d5-bbb9-\
e7b265c99c38"],

Cell["\<\
Consider a simple one-dimensional quadratic trapping potential.\
\>", "Text",
 CellChangeTimes->{{3.7073231324354725`*^9, 3.7073231397687516`*^9}, {
  3.7073232935402346`*^9, 3.7073232971393514`*^9}, {3.7073233388351693`*^9, 
  3.7073233441646957`*^9}, {3.7073236792888346`*^9, 3.7073236863083973`*^9}, {
  3.7073238099046764`*^9, 3.7073238196599755`*^9}, {3.7073238710858493`*^9, 
  3.707323871253942*^9}, {3.707323997212784*^9, 
  3.7073240053007107`*^9}},ExpressionUUID->"3af405dc-ee7d-4e86-a493-\
711d036032e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"harmonicV", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{
    FractionBox["1", "2"], 
    SuperscriptBox["x", "2"]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7073498398677998`*^9, 
  3.7073498581098394`*^9}},ExpressionUUID->"53447d7f-70a0-4128-8d01-\
da2ec1e46b82"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"harmonicV", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
   RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"V", "[", "x", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", " ", "Red"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7073472678162627`*^9, 3.707347383605362*^9}, {
  3.7073498935842915`*^9, 
  3.707349895630936*^9}},ExpressionUUID->"48824184-0c0d-410d-bb6e-\
59b37e0f42a9"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
C/9fHyRS/E//9cP//P8BNuxq4Q==
    "], {{{}, {
       {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwl1FXUVkUAhtHvp7u7QRrpRjqVbkRSGpGW7lQ6pbs7BKVTpUsBAekGaURB
yX3gYq9n5ty+s07aZh1rdggXCoXCSBD2ofHDPpzzOMfTsxpNl+gJwjn31Tkc
4H++oCvfs4snlKI6bRnFj9wmN7nISQ6y8zHZyEoWMpOJjGQgPR+RjrSkoSTV
aMNINnKL1JSgKq0ZwQZukoriVKEV3/EDN0hJfbowmZ08phiVacm3rOc6Kfic
zkxiB48oSk9m8Av/UokWDGcd10hOH2azn/+oRycmsp2HfEIPpvMz/1CReRzi
Fc0ZxlqukozFHA+2tVdvPUUk51m6jxfU5Q+i+L5AY+oRfUNHYrv/rhF0gkbX
bfqAIsR1P6NRdaHG0qP6lu7EcT+pEXWaxtC9+ozPOE1k3+bqQV7SjN8I7/tQ
XcMVkrKIY6HQ+4faS2byK8+pw3wO85oOjGcr9ylMN6ayh7/5lC8Zwmouk4Ta
tGccW7hHIb5hCrt5SgWaMphVXCIxtfiasWzmLwpSniYMYiUXSURN2jGGTdyl
AOVozEBWcIGE1OArRvMTd8hPWRoxgOWcJwH5KEND+rOMP4lPvGDHYKtg72DD
4B0EWwV7Ey3YN3gjwVZECvYM3kSwEcH/Iy+laUA/lnKOdyKVgjI=
           "]]}]}}, {}, {}}, {{}, {}, 
      TagBox[{
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwl1GWQVXUAh+FlwaWUbhRYukG6u7tBREolBHbp7la6u7tTQJAuQaVR6VA6
lBQlnzN8eO57/ufOnJk7vzM3vGVknYgoISEhCXwEPccy+vE5ZchLKFGJxgeE
EZ0YxCQWsfmQj4hDXOIRP3g+CTnPcvrThLLkIxEXWMEAvqAc+bnNFkbzDbVJ
zEVWMpCmlKcAd9jKGNpRhyRcYhWDaEYFCnKXbYylPXVJymVWM5jmVOQxe5hK
Vwpxjx8YRwfqkYwrrGEILajEE/YyjW4U5j7bGU8Er/mZBdTnXw4yi14EQx2T
xSTnKmsZGmzku5PakpccYV6wlftntTJP2Rds5d70YE89HWyl3fUtvwYbOi8K
9tXfgx21iD5gR7C384TgndBTwd4aqW/4JXgPnBdqDP1NG/CCQ8wmzP0z2jv4
Sa6P6xJScI11DONLXnGU+VThGfuZQQ+K8pAfmUhHGvIfh5lDH1JynfUM5yuq
8pwDzKQnxfibnUyiE434mD/ZwAi+phrF+YddTKYzn/EJf7GRkbSiOiVIxQ02
8S2tqUFJUnOTzXxHG2pSijSEk5Z0pCcDGclEZrKQlWxkJwc5yUVuPuUW3zOK
ttSiNI/YzRS60Jj/+Ym59CXUXid0KbFc/xHy/j8kj74DP0KCBQ==
          "]]}},
       Annotation[#, "Charting`Private`Tag$17430#1"]& ]}}], {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["x", HoldForm], TraditionalForm], 
    FormBox[
     RowBox[{"V", "(", 
       TagBox["x", HoldForm], ")"}], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->{{-3, 3}, {0., 4.499999632653069}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7073472996829395`*^9, 3.7073473107782316`*^9}, {
   3.707347341399378*^9, 3.707347384067045*^9}, 3.70734871239554*^9, 
   3.7073487681042633`*^9, 3.707348992990556*^9, {3.7073490948397894`*^9, 
   3.7073491342309165`*^9}, 3.707349483508971*^9, 3.707349898352193*^9, 
   3.7073513041393213`*^9, 3.7073610491807203`*^9, 3.7074011942457647`*^9, 
   3.7074012692477136`*^9, 
   3.7074013644373026`*^9},ExpressionUUID->"a0a4978f-a1c6-4c55-8a6b-\
a7cb4d7efdec"]
}, {2}]],

Cell["The corresponding time-independent Schrodinger equation is", "Text",
 CellChangeTimes->{
  3.7073238253615675`*^9, {3.707323873565697*^9, 3.7073239129279065`*^9}, {
   3.707324017551468*^9, 
   3.707324018919978*^9}},ExpressionUUID->"4c23512c-03cb-4b36-a069-\
0b12aac78fb6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eigfEq", "[", 
   SubscriptBox["\[Phi]", "n"], "]"}], " ", "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", " ", "\[Rule]", " ", "x"}], ",", " ", 
    RowBox[{"\[CapitalEpsilon]", " ", "->", " ", 
     SubscriptBox["\[CapitalEpsilon]", "n"]}], ",", " ", 
    RowBox[{
     RowBox[{"V", "[", "r", "]"}], " ", "\[Rule]", " ", 
     RowBox[{"harmonicV", "[", "x", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7073237688791265`*^9, 3.7073238034146476`*^9}, {
   3.7073239790902214`*^9, 3.707323980103424*^9}, {3.7073241234353075`*^9, 
   3.7073241272530565`*^9}, 3.7073489716441703`*^9, 3.707349117468174*^9, {
   3.7073498728552055`*^9, 3.707349883428949*^9}, 
   3.7073499232935343`*^9},ExpressionUUID->"c4554190-3b05-442f-bab6-\
4aec0fb66867"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalEpsilon]", "n"], " ", 
   RowBox[{
    SubscriptBox["\[Phi]", "n"], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["x", "2"], " ", 
    RowBox[{
     SubscriptBox["\[Phi]", "n"], "[", "x", "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Phi]", "n"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.7073237522702656`*^9, 3.707323793609208*^9}, 
   3.70732386556985*^9, {3.7073239754132166`*^9, 3.7073239839701853`*^9}, {
   3.7073240688308783`*^9, 3.707324130386172*^9}, 3.707324616274203*^9, 
   3.7073250403192997`*^9, 3.70732525617282*^9, 3.707325900831597*^9, 
   3.7073259479448195`*^9, 3.707325988805461*^9, 3.707326073763112*^9, 
   3.707326154682816*^9, 3.707326197272543*^9, {3.7073265589565625`*^9, 
   3.7073265895739584`*^9}, 3.707327175799568*^9, 3.7073277731665297`*^9, 
   3.7073279116342783`*^9, 3.707328236289735*^9, 3.707333888521827*^9, 
   3.7073348427467995`*^9, 3.7073355196575212`*^9, 3.7073381099336185`*^9, 
   3.7073460574253917`*^9, 3.7073471574045577`*^9, 3.7073487124505386`*^9, 
   3.707348768189764*^9, 3.7073489931070566`*^9, {3.707349105306917*^9, 
   3.707349134283411*^9}, 3.707349483560971*^9, {3.707349901603454*^9, 
   3.7073499242199626`*^9}, 3.707351304212823*^9, 3.707361049394767*^9, 
   3.7074011946078815`*^9, 3.7074012693147163`*^9, 
   3.7074013645673256`*^9},ExpressionUUID->"813d9f7b-34e6-4f6a-b2ff-\
d7fb8eb26912"]
}, Open  ]],

Cell[TextData[{
 "which is solved for the energy eigenfunctions ",
 Cell[BoxData[
  SubscriptBox["\[Phi]", "n"]],
  CellChangeTimes->{{3.7073237522702656`*^9, 3.707323793609208*^9}, 
    3.70732386556985*^9},ExpressionUUID->
  "2ffbd343-1c10-4f4c-af1e-c9c1ea29c60d"],
 " and eigenvalues ",
 Cell[BoxData[
  SubscriptBox["\[CapitalEpsilon]", "n"]],
  CellChangeTimes->{{3.7073237522702656`*^9, 3.707323793609208*^9}, 
    3.70732386556985*^9},ExpressionUUID->
  "3ed18141-8296-43ed-91be-cd7d8c067f47"],
 "."
}], "Text",
 CellChangeTimes->{{3.7073239164263887`*^9, 3.7073239359291015`*^9}, 
   3.7073245374014*^9},ExpressionUUID->"668c3a52-97dd-4f75-8658-864a90cecb3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolveValue", "[", 
   RowBox[{"%", " ", ",", " ", 
    RowBox[{
     SubscriptBox["\[Phi]", "n"], "[", "x", "]"}], ",", " ", "x"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.707324038823475*^9, 
  3.707324113938329*^9}},ExpressionUUID->"604d0fac-c5e1-4803-9c9a-\
312214228b87"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"C", "[", "2", "]"}], " ", 
   RowBox[{"ParabolicCylinderD", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[CapitalEpsilon]", "n"]}]}], ")"}]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox["2"], " ", "x"}]}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"C", "[", "1", "]"}], " ", 
   RowBox[{"ParabolicCylinderD", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[CapitalEpsilon]", "n"]}]}], ")"}]}], ",", 
     RowBox[{
      SqrtBox["2"], " ", "x"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7073240557028127`*^9, 3.707324101503847*^9, 3.707324133760033*^9, {
   3.7073246118779135`*^9, 3.707324617690323*^9}, 3.707325041306134*^9, 
   3.7073252561928205`*^9, 3.707325900850597*^9, 3.70732594796482*^9, 
   3.7073259888254547`*^9, 3.70732607378261*^9, 3.7073261547053175`*^9, 
   3.707326197293044*^9, {3.7073265589785657`*^9, 3.70732659050263*^9}, 
   3.7073271758215675`*^9, 3.70732777318303*^9, 3.7073279116572776`*^9, 
   3.7073282363112345`*^9, 3.707333888541828*^9, 3.7073348427627993`*^9, 
   3.7073355196755285`*^9, 3.7073381099531183`*^9, 3.7073460576308813`*^9, 
   3.707347157441057*^9, 3.7073487125205393`*^9, 3.7073487682217627`*^9, 
   3.707348993193557*^9, 3.7073491343319144`*^9, 3.7073494835914717`*^9, 
   3.70735130428382*^9, 3.707361049439766*^9, 3.7074011946608953`*^9, 
   3.707401269346726*^9, 
   3.707401364611328*^9},ExpressionUUID->"dcb04d0e-f7bb-4dc3-a5e7-\
34d22c0133ea"]
}, Open  ]],

Cell[TextData[{
 "Our problem is underspecified, with two arbitrary constants (",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "[", "1", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ff8028c7-354e-45c7-9299-55efc006d2be"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "[", "2", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ab8732cc-fcd4-4830-b93b-113680ceb9e6"],
 ") and one normalisation condition (",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Integral]", 
    RowBox[{"|", 
     SubscriptBox["\[Phi]", "n"], 
     SuperscriptBox["|", "2"], "dx"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "82329cc2-d66a-478d-8954-a8a7a84e6dd0"],
 " = 1). The representation of the energy eigenbasis is therefore not unique. \
We\[CloseCurlyQuote]ll arbitrarily pick one that\[CloseCurlyQuote]s entirely \
real."
}], "Text",
 CellChangeTimes->{{3.707324356688929*^9, 3.7073243589703484`*^9}, {
  3.7073244015092535`*^9, 3.7073244929078417`*^9}, {3.7073245534049797`*^9, 
  3.7073245890061483`*^9}, {3.7073247267660027`*^9, 
  3.7073247481234264`*^9}},ExpressionUUID->"45c51547-178f-4691-98e1-\
5242d3481ef8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"oscillator\[Phi]", "[", "n_", "]"}], " ", "=", 
  "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"%", " ", "/.", " ", 
    RowBox[{
     RowBox[{"C", "[", "2", "]"}], " ", "\[Rule]", " ", "0"}]}], " ", "//", 
   " ", "FunctionExpand"}]}]], "Input",
 CellChangeTimes->{{3.707324593587949*^9, 3.70732460806277*^9}, {
  3.7073259249874506`*^9, 3.7073259430833035`*^9}, {3.7073265412976017`*^9, 
  3.7073265421157007`*^9}},ExpressionUUID->"6a6bb49d-6174-46b4-8162-\
ae67edc15938"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       SubscriptBox["\[CapitalEpsilon]", "n"]}]}], ")"}]}]], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"]}]], " ", 
  RowBox[{"C", "[", "1", "]"}], " ", 
  RowBox[{"HermiteH", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["\[CapitalEpsilon]", "n"]}]}], ")"}]}], ",", "x"}], 
   "]"}]}]], "Output",
 CellChangeTimes->{{3.707324596419882*^9, 3.7073246196115503`*^9}, 
   3.7073250429834146`*^9, 3.707325256211823*^9, 3.7073259008695946`*^9, 
   3.707325947983822*^9, 3.7073259888464713`*^9, 3.7073260738006124`*^9, 
   3.7073261547248154`*^9, 3.7073261973125424`*^9, {3.707326558997078*^9, 
   3.707326591447912*^9}, 3.7073271758395677`*^9, 3.707327773200029*^9, 
   3.7073279116782784`*^9, 3.7073282363302355`*^9, 3.707333888559827*^9, 
   3.707334842779804*^9, 3.7073355196925325`*^9, 3.707338109977623*^9, 
   3.707346057800381*^9, 3.7073471574535575`*^9, 3.7073487125325403`*^9, 
   3.707348768233264*^9, 3.707348993245558*^9, 3.7073491343459854`*^9, 
   3.7073494836039705`*^9, 3.707351304325821*^9, 3.707361049477766*^9, 
   3.7074011946928988`*^9, 3.7074012693567257`*^9, 
   3.7074013646273365`*^9},ExpressionUUID->"50830c20-ce70-4cf3-9de3-\
dc65f81fdc76"]
}, Open  ]],

Cell["\<\
Since Hermite polynomials must have integer degree, we\[CloseCurlyQuote]ve \
found the discretized energy eigenvalues.\
\>", "Text",
 CellChangeTimes->{{3.7073247728428974`*^9, 3.7073247812919145`*^9}, {
  3.707324951819291*^9, 3.7073249546350565`*^9}, {3.7073252242729244`*^9, 
  3.70732524840666*^9}, {3.7073258344822097`*^9, 
  3.7073258397659197`*^9}},ExpressionUUID->"9c5c295d-bf75-47a5-af63-\
516fa7a12f6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "\[Equal]", " ", 
   RowBox[{
    RowBox[{"Cases", "[", 
     RowBox[{"%", ",", " ", 
      RowBox[{
       RowBox[{"HermiteH", "[", 
        RowBox[{"n_", ",", " ", "__"}], "]"}], " ", "\[Rule]", " ", "n"}]}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "  ", "//", "  ", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"#", ",", " ", 
     SubscriptBox["\[CapitalEpsilon]", "n"]}], "]"}], " ", "&"}]}]], "Input",
 CellChangeTimes->{{3.7073249798768935`*^9, 3.707324991131624*^9}, {
  3.7073250473172693`*^9, 3.707325063753502*^9}, {3.7073251335958176`*^9, 
  3.7073251934158583`*^9}, {3.707325250914392*^9, 3.7073252515513906`*^9}, {
  3.7073258699297724`*^9, 3.7073258963392663`*^9}, {3.7073261901619964`*^9, 
  3.7073261904107265`*^9}, {3.7073265459971104`*^9, 3.7073265526654015`*^9}, {
  3.707335512967019*^9, 3.707335516224392*^9}, {3.7073358052774534`*^9, 
  3.707335807583267*^9}},ExpressionUUID->"adfe9040-111b-46d2-b18a-\
160a3ed89893"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["\[CapitalEpsilon]", "n"], "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "n"}]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7073249914444427`*^9, 3.7073250640703936`*^9, 3.707325097805402*^9, {
   3.7073251479030185`*^9, 3.707325193944135*^9}, {3.7073252521299486`*^9, 
   3.707325256230827*^9}, {3.707325896939336*^9, 3.7073259008885994`*^9}, 
   3.707325947999827*^9, 3.707325988863978*^9, 3.707326073821613*^9, 
   3.7073261547423153`*^9, {3.707326191601271*^9, 3.7073261973320427`*^9}, {
   3.707326559013584*^9, 3.7073265933326817`*^9}, 3.707327175858575*^9, 
   3.7073277732170277`*^9, 3.707327911698779*^9, 3.707328236350234*^9, 
   3.707333888578828*^9, 3.7073348427978115`*^9, 3.7073355197105284`*^9, 
   3.707338110037119*^9, 3.707346057812881*^9, 3.707347157464557*^9, 
   3.7073487125985384`*^9, 3.7073487682657623`*^9, 3.707348993280058*^9, 
   3.707349134358492*^9, 3.70734948361547*^9, 3.7073513043373203`*^9, 
   3.7073610495364428`*^9, 3.7074011947278976`*^9, 3.7074012693897295`*^9, 
   3.7074013646403437`*^9},ExpressionUUID->"2f53bd62-cd82-401a-b6a6-\
fa37f6fbb1d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"oscillator\[Phi]", " ", "[", "n_", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"oscillator\[Phi]", "[", "n", "]"}], " ", "/.", " ", 
   RowBox[{"%", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",ExpressionUUID->"228c2637-\
281e-444b-8172-81cb81eff827"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", 
   RowBox[{
    RowBox[{"-", "n"}], "/", "2"}]], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"]}]], " ", 
  RowBox[{"C", "[", "1", "]"}], " ", 
  RowBox[{"HermiteH", "[", 
   RowBox[{"n", ",", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.7073249914444427`*^9, 3.7073250640703936`*^9, 3.707325097805402*^9, {
   3.7073251479030185`*^9, 3.707325193944135*^9}, {3.7073252521299486`*^9, 
   3.707325256230827*^9}, {3.707325896939336*^9, 3.7073259008885994`*^9}, 
   3.707325947999827*^9, 3.707325988863978*^9, 3.707326073821613*^9, 
   3.7073261547423153`*^9, {3.707326191601271*^9, 3.7073261973320427`*^9}, {
   3.707326559013584*^9, 3.7073265933326817`*^9}, 3.707327175858575*^9, 
   3.7073277732170277`*^9, 3.707327911698779*^9, 3.707328236350234*^9, 
   3.707333888578828*^9, 3.70733484280081*^9, 3.7073355197275305`*^9, 
   3.707338110052622*^9, 3.7073460578963814`*^9, 3.7073471574770575`*^9, 
   3.7073487127010393`*^9, 3.707348768363761*^9, 3.7073489934945555`*^9, 
   3.7073491343719854`*^9, 3.7073494836264696`*^9, 3.70735130434832*^9, 
   3.7073610496279583`*^9, 3.70740119484242*^9, 3.707401269464737*^9, 
   3.707401364653344*^9},ExpressionUUID->"4eacef7f-ad91-45bb-9e94-\
5a1ecb025764"]
}, Open  ]],

Cell[TextData[{
 "Finally, we solve for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "[", "1", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b4fec3a2-ae2b-4e33-8d1e-d74ec29ad4e0"],
 " by asserting normalisation. Analytic solution is expensive, even for \
particular n; we\[CloseCurlyQuote]ll instead employ numerical approximation."
}], "Text",
 CellChangeTimes->{{3.707326227204237*^9, 3.7073262366551433`*^9}, {
   3.707326276572589*^9, 3.707326291181761*^9}, 3.7073264604587097`*^9, {
   3.707326747519968*^9, 
   3.7073268415508003`*^9}},ExpressionUUID->"73ef2d14-56c8-4bb7-8a52-\
9c88b959368a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"oscillator\[Phi]", "[", "n_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"oscillator\[Phi]", "[", "n", "]"}], " ", "/.", " ", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], " ", "\[Rule]", " ", "1"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oscillator\[Phi]", "[", 
   RowBox[{"n_", ",", " ", "r_"}], "]"}], " ", ":=", "  ", 
  RowBox[{
   RowBox[{"quickNormalise", "[", 
    RowBox[{"oscillator\[Phi]", "[", "n", "]"}], "]"}], " ", "/.", " ", 
   RowBox[{"x", " ", "\[Rule]", " ", "r"}]}]}]}], "Input",
 CellChangeTimes->{{3.707326844440197*^9, 3.707326948093946*^9}, {
   3.7073269928882093`*^9, 3.7073270010725694`*^9}, {3.7073270651391754`*^9, 
   3.7073271639124517`*^9}, {3.707327457794071*^9, 3.7073274729644327`*^9}, 
   3.7073275934737544`*^9, {3.7073461410664344`*^9, 3.7073461476342793`*^9}, 
   3.7073486702476544`*^9, {3.7073494402224236`*^9, 3.7073494465708704`*^9}, {
   3.7073496076876774`*^9, 
   3.7073496170493946`*^9}},ExpressionUUID->"2e26f7b2-f6bf-4a0c-b493-\
cd356a2dae3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\[IndentingNewLine]", "Code"], 
  RowBox[{
   StyleBox[
    RowBox[{"Legended", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"plotWavefunction", "[", 
         RowBox[{
          RowBox[{"oscillator\[Phi]", "[", 
           RowBox[{"n", ",", " ", "x"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", 
            RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", "False", ",", 
          " ", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            SubscriptBox["\[Phi]", "n"], "]"}], "2"], ",", " ", 
          RowBox[{"\"\<\[Phi]\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "n", "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.6"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"n", ",", "0"}], "}"}], ",", " ", "0", ",", " ", "15", ",",
           " ", "1"}], "}"}]}], "\n", "\t", "]"}], ",", " ", "\n", "\t", 
      RowBox[{"colorBar", "[", "\"\<arg[\[Phi]n]\>\"", "]"}]}], "\n", "]"}], 
    "Code"], "\[IndentingNewLine]", 
   RowBox[{"AutoCollapse", "[", "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7073276040146265`*^9, 3.707327663788639*^9}, {
   3.7073277065250196`*^9, 3.707327710054347*^9}, {3.7073277938425255`*^9, 
   3.7073278249179*^9}, {3.7073279500712557`*^9, 3.707328015455283*^9}, {
   3.707328057086187*^9, 3.707328057394689*^9}, {3.707328156636509*^9, 
   3.7073281678074455`*^9}, {3.7073326423118134`*^9, 
   3.7073326423998127`*^9}, {3.7073326730015335`*^9, 
   3.7073326734653955`*^9}, {3.707333535399763*^9, 3.707333551050355*^9}, {
   3.7073336032455072`*^9, 3.7073336723936377`*^9}, {3.7073339183284116`*^9, 
   3.7073339295440474`*^9}, {3.707335011310569*^9, 3.7073350251486235`*^9}, {
   3.7073350761595325`*^9, 3.70733508785701*^9}, {3.7073351313288956`*^9, 
   3.7073352037466555`*^9}, {3.7073352733443007`*^9, 3.707335295019081*^9}, {
   3.7073353346400185`*^9, 3.7073353541226373`*^9}, {3.7073368739433117`*^9, 
   3.707336874126744*^9}, 
   3.7073400166383877`*^9},ExpressionUUID->"febf58de-4f5a-44ac-9137-\
e10f98be7e5a"],

Cell[BoxData[
 TemplateBox[{TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`n$$ = 0, Typeset`show$$ = True, 
       Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{{
           Hold[$CellContext`n$$], 0}, 0, 15, 1}}, 
       Typeset`size$$ = {360., {123., 129.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       True, $CellContext`n$17565$$ = 0}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`n$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`n$$, $CellContext`n$17565$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> $CellContext`plotWavefunction[
          $CellContext`oscillator\[Phi][$CellContext`n$$, $CellContext`x], \
{$CellContext`x, -5, 5}, False, Abs[
            Subscript[$CellContext`\[Phi], $CellContext`n$$]]^2, 
          StringJoin["\[Phi]", 
           ToString[$CellContext`n$$]], {0, 0.6}], 
        "Specifications" :> {{{$CellContext`n$$, 0}, 0, 15, 1}}, 
        "Options" :> {}, "DefaultOptions" :> {}], 
       ImageSizeCache -> {411., {169., 176.}}, SingleEvaluation -> True], 
      Deinitialization :> None, DynamicModuleValues :> {}, 
      SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> True,
      StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]],FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"arg[\[Phi]n]\"", {FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False]}, {
              GraphicsBox[{{}, {}, 
                RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
Kb1b18kctPSfCFU/SsILzbfat6Q78Tx4t6P+Nw6GSRkqn81JyDbQ5Tyo7oRP
1qFdfyVG8LR6UwBxnIRSiX7Zeq8ukLK+r+QuH0Fn2URabjQJlOTkIi1ZKnJC
Vv0SXTICuc+FtddbSGBtd3eIKqLigfM+8lqREWjSjH6uEiTjd/06gV8O3bhg
ePuN2Sxfh65EYUFlMsQdeWkn5tNgtSw7wOUnBxfaBZYPG5GxejzXsjydBo1x
2gl/HgcRFNf1TcfJ2BZyhadq1YOFzQu3JzA4yG6p3pF3nQxLed3Hod96MJyh
t7iExkFTo7p1dDQZDjl/tMee9KIm4AzRTeGAVxfqcCOf7x+TL12H9PrwyiGm
/FcdBxI13EsnW8gI6rznV9jbhyC96njZcg60qmz8d3HJiDu3e5XivX64Sk9e
1i7kwKY8N1JVlILsWdEqf7UBmIytsT6Yw4Fz1aT+PkMKdlgZ1atlDCD1JDVF
KZiDazX69OteFDAbP51xlxmEUOODae4JDsLq74Qlp1GgOd46oms/iNP6pgeK
tnKQ0FS1tZFKweXloxcXxQyiNuN3eshCDt6TRHsmxVtRtFPkR2/nINbL5fyz
HRxGbatNoJJxK+a5K/vkLhtCWJCrnXLhMHo6ojQtr7bCPNzg172jQ+CNL88a
ezCMb9SuNu83rXiQb+9rFz8EG+cWgRK3YQj2Kt563teK9i7Pf2tpQ8ghBR4N
NRjG8gFn1eqlbVCYDfWflqdjyU793MNSw9hAT28a290GF9W0BU0n6PDOHhNS
5RAwZnF9lvu24fXeLyEJL+holU87+aOMACt5vfy3wjbI1+vuFGmn4495ATci
gsCK5U4ll+fa8DFxiYbwfAaIzWrvp/YRsHkY4zhl3o6D1ziyQpsZ6JCP9nVa
SsBfsHme78N28KwrBQQdGagUXGDS0MbGB98Fqf862nFf5fno/AgG8sa8F26L
YWP4u/7ueys7oPLnSrfAZwYSqIPkl0fZUDjjRQi6d+AL2bp63jADEZX740QU
2Njflx76X3YHjmWo5c/JMnEz+8sp7z4WAm37NMUnOzB5e/bFrCkTZ2K01HsS
WSiol255ZNCJx3Zd//3zZsLO/8WYmQsLI9jrJR3YCU3NPJ+ZRCZMzokV5Kiy
oFTgLxXb0IlagVCnv81MbLbzvb2cYOLQhsIP8lJdcKE6W//5y8TKnRyzgDdM
eOSpFQte7IKtHGlkozwLdt+541fcmPDfFl0xVtsFMzvDUFc9FsJTxpLcVzER
92l+HXUNFduj3qjHHWah0u7HviM0BnINvVsqb1OxlixX0+TDwrTw5IzlUwZq
ygfas6lULFsc5CbwhIVNRVOZOw4w0Ge2rydGuxui1j/m6+SzcPr89NENYgxM
1JUM+T/sxnSoY/I5EgsJK2eElWroWGSjOXyO042R2kYkjrLQQZr9IHmPjjWU
+DE7Mxp6hPT728TYEA8QcBUwpEPfXvTnzkQamkzTb4lqsGG6TXDpxNQQDnRf
+7vuDw0l96QVjCzZ8GULlzHzh3DWgSUgbd+DnDL/Iu/TbOTFLbzYeWEIzqEi
0TZFPRigdzd9ucPGpXDS99frh7DToS+furYXh7hK9qqRbLz/cnTvyeFBKGx5
T3KN7kX1hGtfaCobv38MpUpmDOKXYOjomEAf9GZeu3/7yIaR2vl/le6DaKc6
ivl69iFLcGzUro4/F49OHr6mOoj87G3rhfr6oCShfe0zjY2Hy/462dYMIMJ/
kcXjvf14LHtjdtUoGyvuSMh8Nh2Ah92gm8KnfixQKg0JnmMjlbmqdnVFP3av
KwhI5+fItbXzJbl8f2tZbfW9v7Mfa2bCk7Y8GQBno0XsAVUCBflmWmPFfZgj
Np9ynDeIE7oRqwp0COxafmTQTr8PYxSFMRXdQbSAkqGwh0DDHY8nxQW96C0W
vs25OAhjS7nN904QsGP5ma/Z1gtniQC7rKxBNORkK0S4EUj1i17xX10P2I7/
NC9yBmEnayoSe5HA+NK3vNGTPTifd2PBJvUh9Pl1jydf4//3dXWZ7Q8avgtM
0r67DeE03bM/+y6BRzv7o4qCabhm6/nuXcoQvlkKNxT+R6C/fcp9lTwNf9NG
Qn0Gh3Az98XHykj+fc9L6gfndMN/yt1ZR4mO+XLayc3PCPgJrBPnmnRDyHJI
7zc/X8Jv1UdQU/n3it01cKCLirD4k0s+x9Mhyzh1g5HNz5GNx94VnKdCkttF
+HXRkbBnynXsI4GzX72DFedREW1oW2Yky4B6XsT+6S98PY+HHQ2I7sKKhy0x
c4f4eSGnYiBYR0DoR4rm8LouXM29zKuPZGCLWcNazSa+DsxM5vqmTmQmofwF
hc93egFSlxoJXNdJCbS404mBSPFoz6VMrNHaMZvXQODf/fg17ps7IRPYfcbk
IBPPlcc5E/UEArsfVwTQO2Dpk24gG8mEjFxmhw6/Lqr5n1NSdAduu1+RHCYz
EbHIpeIm/zwPb92dKzXvwLvDuxifl7AgNLfibUktAemWawk9v9tBWEgUPjjA
wu0JStxcDYH4VZeMpjPboahPC3N6zMIUERpkwq+v8nbvlXPg56lGhqM2mYVL
vcZewdUE0ipP+m2TbEeIgs9W4SVsEOTpE3VfCWjI2MkfqmhDsbixcPd+Nk5V
51uI8eu57lZFnlfa8P2fBC3rERvUIg/tfVUEtheaHH2g1oZzygb77BvYuBIu
dcSEr3/4PBXYTLSCYXa2claQwGKHYl+dDAL0PQvWSlS0wuHsU53XIPBmo1uC
RjwBvScM8eaHregKr8w86EvAdJ5EpVI4X4feqomIk604kPtN6e8Hvp8oH1lS
twkw1dJo1hqtaGhVfJL2jcDNVMeFIp4EDDyDKsR/U2A2tUdkn8YwZK6KaP11
IhD5ye11UzUFpSuu+/3iz71c87wD3w4RIAR2P4p4QoGuUdq3pMRh7F1+zIdh
RsDISu2atTOf75wornv5PMjiCMR18fsuOlrIQXwTn2uDZrsmZDjwL84sblxH
YKSPZdo0Q0Zahqb1y/0cyD+wHSiT5/eLeo1GRAMZvepnJcMDOdgvGLVBdwEB
WYr76uBkMtoFPyiX5nGgqHw6dQudjTM9X1UL75HRNDSn/a2PgxGjHfIbKtj4
xFJZz3Em4+sXK3NlsREUHl8cuTaJjUXfA7QUTMgofR571FZvBEHX6SLKd9k4
8Wdoi80aMj7eYJwLdh/BweiCOwqObLwVNNa5O5+Mt/abbhdGjUApP+ynrBEb
/1buuupSTUL6Vr9HnLIR8JodLyxRZCNp6+ztmmASEiRrkxVGR1A0spWx6C8L
ZhYlIRp8jozhSX2wkeciRETkuBCNBeKE76OHwnwerXesuWvBhZ1qD3nuEwth
Xnpx4zUtuJ+eSc334ULZONfiTywLWsFTSYfvt+Bu4NQII5mLMYfAL5PXWCDH
f3jz2YK/f338x+ufufhyMETokBELdWrWq3dKt+ARycBfrI2Lh7tDrXMXsFCR
z4ip6G9GzNX+vYlcLk7pRzwRb2CiyMhPYndmMxIU7slqC/KwSesRzeMxE/n1
UkF1V5uRXqEyWKPIw9zqKOXaw0y8sc/8Y2XcjJwzNZnHt/NAknl6VnUlEylD
xt4k8WYUSHhcHbPhIVE0Lvceg4FnF7uJQ9QmlL4X2xVwmgevmWdT/W8YiJr2
cuxMbUL1sZxFcnd52PX9pZGhFwNhwaIdxzyb0Dx3oONNLA9LmElB8ToMBC5N
surb0YSOVxOJRnk8DHalNk7N0OH3UrfSSbgJvVYx5yh1POQ1pkvZVdFxZT1J
j0lpRPFC5eiPHTysd679a3mLDlPy+Ke7sY3wGniiONLJg3mc0P0OdTqIyBQT
7SONWPtR+JUSlQdXkqmUS9sQwm0PNbHlGtETdlPLtpsHf+GAl2N3hrBJdv7h
Z50NiHTifbxP4yHBqHydn8YQ2jrzB2xiGmCuc2pnSQ8PxT6z70X4XHo9ztlD
4HADZsRaa7738kDNMkT0Pf7cPb504oNsA/KHzPar9fPwk+7bsFprEGUKFbfO
dtTjTGFh17EBHtS2Xc46nj8A1z4vYcWn9VB8oOH0cJDHf5+PVVwRHYBI4urH
JLt6tLq8HK4c4uHZkvPUiFP9yHIirwiUqcd9vSXev+g8tN8hxl4V9GH/Gv9U
nfY6GC0OnNZk8iA56ipUJtGHCcYmrZEndTj/irCcbONhuYGKySKDXpiFLyzd
ZVyHZ4bWcSVVPCiH0u/Yn+1B9FaGdexYLera8oig9zxodCUXJz2lgdVd0jv6
vBZT52R1bVJ50FZz/s2t7IbOvZgLZntqoTbfN0T2CQ+GV1Zv1/1Oxf11/3dG
DWzj+zv6AnjYXTHgHbCSii7SnogfqTW4t9lULf0yD/skE3Oa93Zh3XUVRcuD
NcitzfC55MLDEQdH7vIbnbip9C8rYbYa/Y7iX3UO8fXJWrnO7VUHGqo7DX5m
VUN8ykt6zpgHj+let9zWdshfzGu0OlaNHQ86XGq38HDZ4kXyHz53n5cJO5Ei
XA0P1R3vHinz4Pf0RP9urTaUFLtyf7//ikUbBF0ypHhY4Ey1zD3WChpnXaCv
+1copmlfXizEw+wbqSGdYAqqErrXqCt8xSZF14Crv7j4M25980seP19swyrb
yFUwiY6K6uVwwbu+WCXiEz8vRA1c/EOqYCdemWLaywVzYaDtc0l+/5dyBbQM
q3Am6Me7zBYuep//Csw83YSzl18kd/+ohO/M6qqlFVy0a134UFTagIPqNsYh
GZWI8DnQduM9F01lg8w6vg929P4b3OpQiUTeXcbAKy6qDtrLUs/XQiUyx39A
qhLv3HInzOO4KGbU7yYq+XqZn1odUVeB6t7+BTlhXLy/uvPa1Iqv+PlHslzv
TgW67BbLyN7mIlPkfbqQdyX6c8tPsbQrMNJkpHrLk4uUePUumbpy1Lp5z0Vy
yvE/DJC6qA==
                 "], {{
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}}], {Antialiasing -> False, 
                 AbsoluteThickness[0.1], 
                 Directive[
                  Opacity[0.3], 
                  GrayLevel[0]], 
                 LineBox[
                  NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                   7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                   112.5}, {7.5, -112.5}}]]}, {
                 CapForm[None], {}}, {Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.499999999999999, -56.27853081669613}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -56.27853081669613}]}, {{
                    7.499999999999999, 56.27853081669613}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    56.27853081669613}]}, {{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -56.27853081669613}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    56.27853081669613}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
               Scaled[0.02], PlotRange -> All, Frame -> True, 
               FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
               Opacity[0], FrameTicksStyle -> Opacity[0], 
               ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
     "BarLegend", DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"Rainbow\"", ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Phi]n]\""}], ",", 
          RowBox[{"\"Ticks\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"-", "3.14`"}], ",", 
                RowBox[{"-", 
                  FractionBox["\[Pi]", "2"]}], ",", "0", ",", 
                FractionBox["\[Pi]", "2"], ",", "3.14`"}], "}"}]}], ",", 
          RowBox[{"\"TickLabels\"", "\[Rule]", 
            RowBox[{"{", 
              
              RowBox[{"\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.707328159352488*^9, 3.7073281685225725`*^9}, 
   3.7073282364102345`*^9, 3.7073326431772532`*^9, 3.7073326738431206`*^9, {
   3.707333536673774*^9, 3.7073336731034737`*^9}, 3.7073338888602247`*^9, 
   3.7073339320147023`*^9, 3.707334649978128*^9, 3.7073347248274865`*^9, 
   3.7073348433217535`*^9, 3.7073350258378916`*^9, {3.707335084747475*^9, 
   3.70733508825305*^9}, 3.707335204732996*^9, {3.7073352767935495`*^9, 
   3.707335295534442*^9}, {3.707335336439607*^9, 3.707335354935237*^9}, 
   3.7073355198515463`*^9, 3.7073368750067286`*^9, 3.7073381101821203`*^9, 
   3.707343080284261*^9, 3.7073460581103134`*^9, 3.707346160071106*^9, 
   3.7073471575520563`*^9, 3.7073487128534555`*^9, 3.7073487684977627`*^9, 
   3.7073489937045574`*^9, 3.7073491344484863`*^9, 3.707349483692488*^9, 
   3.7073513044238205`*^9, 3.707361049765506*^9, 3.707401194957701*^9, 
   3.7074012695817556`*^9, 
   3.707401364729352*^9},ExpressionUUID->"95c9b7a7-fb7c-4dfc-a4d9-\
af0a9df8ecdb"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Superposing the eigenfunctions ", "Subsection",
 CellChangeTimes->{{3.707337194511058*^9, 3.7073371964417706`*^9}, {
  3.7073402303160067`*^9, 
  3.707340238745762*^9}},ExpressionUUID->"51c2dd53-1b6a-409a-bc26-\
61d6c5a88a76"],

Cell[TextData[{
 "We found earlier that energy eigenfunctions of any system merely oscillate \
in phase through time at a rate proportional to their energy (",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Proportional]", " ", "n"}], TraditionalForm]],ExpressionUUID->
  "a0ac1757-10d2-485d-b9eb-50b5e86a4155"],
 ") ; their probability density functions remain fixed. We can now \
demonstrate this for the quantum harmonic oscillator."
}], "Text",
 CellChangeTimes->{{3.707335665246724*^9, 3.7073356959682713`*^9}, 
   3.707335734098276*^9, {3.707338173272812*^9, 3.7073382077250967`*^9}, {
   3.707338786264388*^9, 3.7073388311852355`*^9}, {3.707338909508922*^9, 
   3.707338910704441*^9}, {3.7073390699907756`*^9, 
   3.7073390808031607`*^9}},ExpressionUUID->"f147c4de-8583-4729-96fd-\
a92f0ee77a4a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"oscillator\[Phi]", "[", 
   RowBox[{"n_", ",", " ", "x_", ",", " ", "t_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"oscillator\[Phi]", "[", 
     RowBox[{"n", ",", " ", "x"}], "]"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[CapitalEpsilon]"}]]}],
    " ", "/.", " ", 
   RowBox[{"\[CapitalEpsilon]", " ", "\[Rule]", " ", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "n"}]}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.707335740482608*^9, 3.707335785003357*^9}, {
  3.707335832941146*^9, 
  3.7073358553375063`*^9}},ExpressionUUID->"ac8ed901-7c94-4039-b1d8-\
418d3166f646"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{"Legended", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Manipulate", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Animate", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"plotWavefunction", "[", 
         RowBox[{
          RowBox[{"oscillator\[Phi]", "[", 
           RowBox[{"n", ",", " ", "x", ",", " ", "t"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", 
            RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", "False", 
          ",", " ", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            SubscriptBox["\[Phi]", "n"], "]"}], "2"]}], "]"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "0", ",", " ", 
          RowBox[{"4", "\[Pi]"}]}], "}"}]}], "\n", "\t\t", "]"}], ",", "\n", 
      "\t\t", 
      RowBox[{"{", 
       RowBox[{"n", ",", " ", "0", ",", " ", "15", ",", "1"}], "}"}]}], "\n", 
     "\t", "]"}], ",", "\n", "\t", 
    RowBox[{"colorBar", "[", 
     RowBox[{"Arg", "[", "\[Phi]n", "]"}], "]"}]}], "\n", "]"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"AutoCollapse", "[", "]"}], "Code"]}], "Input",
 CellChangeTimes->{{3.7073367196068616`*^9, 3.707336722336385*^9}, {
  3.707341146303569*^9, 3.7073411586620836`*^9}, {3.707341197603832*^9, 
  3.707341224608819*^9}},ExpressionUUID->"84c2e73c-8b18-4c4f-860f-\
1bfba994d9bc"],

Cell[BoxData[
 TemplateBox[{TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`n$$ = 0, Typeset`show$$ = True, 
       Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`n$$], 0, 15, 1}}, 
       Typeset`size$$ = {411., {156., 163.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       True, $CellContext`n$17825$$ = 0}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`n$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`n$$, $CellContext`n$17825$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Animate[
          $CellContext`plotWavefunction[
           $CellContext`oscillator\[Phi][$CellContext`n$$, $CellContext`x, \
$CellContext`t], {$CellContext`x, -5, 5}, False, Abs[
             
             Subscript[$CellContext`\[Phi], $CellContext`n$$]]^2], \
{$CellContext`t, 0, 4 Pi}], 
        "Specifications" :> {{$CellContext`n$$, 0, 15, 1}}, "Options" :> {}, 
        "DefaultOptions" :> {}], ImageSizeCache -> {462., {203., 210.}}, 
       SingleEvaluation -> True], Deinitialization :> None, 
      DynamicModuleValues :> {}, SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> True,
      StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]],FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               RowBox[{"arg", "(", "\[Phi]n", ")"}], {FontFamily -> "Arial"}, 
               Background -> Automatic, StripOnInput -> False]}, {
              GraphicsBox[{{}, {}, 
                RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
                 "], {{
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}}], {Antialiasing -> False, 
                 AbsoluteThickness[0.1], 
                 Directive[
                  Opacity[0.3], 
                  GrayLevel[0]], 
                 LineBox[
                  NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                   7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                   112.5}, {7.5, -112.5}}]]}, {
                 CapForm[None], {}}, {Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.499999999999999, -56.27853081669613}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -56.27853081669613}]}, {{
                    7.499999999999999, 56.27853081669613}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    56.27853081669613}]}, {{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -56.27853081669613}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    56.27853081669613}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
               Scaled[0.02], PlotRange -> All, Frame -> True, 
               FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
               Opacity[0], FrameTicksStyle -> Opacity[0], 
               ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
     "BarLegend", DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"Rainbow\"", ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", 
            RowBox[{"Arg", "[", "\[Phi]n", "]"}]}], ",", 
          RowBox[{"\"Ticks\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"-", "3.14`"}], ",", 
                RowBox[{"-", 
                  FractionBox["\[Pi]", "2"]}], ",", "0", ",", 
                FractionBox["\[Pi]", "2"], ",", "3.14`"}], "}"}]}], ",", 
          RowBox[{"\"TickLabels\"", "\[Rule]", 
            RowBox[{"{", 
              
              RowBox[{"\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.707336221993156*^9, 3.707336224171382*^9}, {
   3.707336368346671*^9, 3.707336397665494*^9}, 3.7073367286429424`*^9, 
   3.7073377454721465`*^9, 3.707338110450124*^9, {3.7073412166226196`*^9, 
   3.7073412268444953`*^9}, 3.7073460589218187`*^9, 3.707347158082452*^9, 
   3.7073487748562784`*^9, 3.7073490184463367`*^9, 3.7073491350178347`*^9, 
   3.707349484209857*^9, 3.7073513049457607`*^9, 3.7074011955199947`*^9, 
   3.707401270454201*^9, 
   3.7074013652136946`*^9},ExpressionUUID->"b64b78b3-8589-4290-af53-\
e87e06fe9d75"]
}, {2}]],

Cell[TextData[{
 "Mixing ",
 StyleBox["out-of-phase",
  FontSlant->"Italic"],
 " eigenfunctions will introduce phase gradients..."
}], "Text",
 CellChangeTimes->{{3.7073373748226175`*^9, 3.7073373752911434`*^9}, {
  3.707338225036033*^9, 3.707338227928937*^9}, {3.7073383201915007`*^9, 
  3.7073383234584026`*^9}, {3.7073384051757464`*^9, 3.707338405453246*^9}, {
  3.7073385333302894`*^9, 3.7073386011168604`*^9}, {3.7073392037883043`*^9, 
  3.7073392043567777`*^9}},ExpressionUUID->"a298f9e6-fd06-48ad-afca-\
f4231636c26a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"oscillator\[Phi]", "[", 
      RowBox[{"1", ",", " ", "x"}], "]"}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "\[Pi]"}], "4"], "\[ImaginaryI]"}]], " ", 
      RowBox[{"oscillator\[Phi]", "[", 
       RowBox[{"2", ",", " ", "x"}], "]"}]}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["\[Pi]", "3"], "\[ImaginaryI]"}]], 
      RowBox[{"oscillator\[Phi]", "[", 
       RowBox[{"9", ",", " ", "x"}], "]"}]}]}], "   ", "//", " ", 
    "quickNormalise"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"plotWavefunction", "[", 
  RowBox[{"%", " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7073382703004155`*^9, 3.707338298343778*^9}, {
   3.707338337956127*^9, 3.7073384564811983`*^9}, {3.7073392530418777`*^9, 
   3.7073392575732784`*^9}, {3.7073393295245323`*^9, 3.7073393691377983`*^9}, 
   3.707339778107953*^9, {3.7073398105282383`*^9, 3.7073398111484056`*^9}, {
   3.7073399190888023`*^9, 
   3.707339978266939*^9}},ExpressionUUID->"7b534b63-9148-4cda-8018-\
c5175368d779"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
lfBMuVe0XVec8T1r8p82/2sikS1ct3HOVIbxKNjnvyOWKKr8Sf37cyozfDis
Sa08jGRJOPx0fCfB7N7ZtOBbuDdZr1FdLBIgyZTYhGziTLMjZ7IeLLiXL8nK
vz7ZkLLqJBG3nic3b0yCFTu5eV5G2CUS+Lf48ZQlEmx4zBm/Iw+CiVrD1YAX
N8VZ2YUNJU3LE0jc5aIYTUcx9uPpozsnjaaQPLnv+62rp7A3ZVhl1z0pxPtO
Qd1nD2H2vMI79UYub/KhYaMkV5sgqzfMBO8StSDlg1MVJm2axCowUeenjt+f
+D7vf9vsKT/7cvy2wuLEaLL6ubH2Awk+tr9rAdcFuWBy9Fhgf4IVDytjsUFl
c/Zt0s0fXbxy/TjHgT8kY0PdBxKSWrT8zO8RDuu2LMzDOIfMVQmq/i9jiBPR
uuvPhukJZOvuRQbeVv2choPiz2zmeBBNxb3LjBV7OHMnWeiEXvIkLS++7g3w
6+RoP9jr/i8vjqSb29hc723ifJs5oGKbOfH5Z3bNulS8liNZqDAw6lRIru5o
G1lw+QnH49SzxYo70sm6u70Fvw+8J53/Oprncb0hrVtXVd7rLid6mTUffl3O
IjX8fzYMtzcQE7b6X7UgSxxr/r50Tm4j88uTV4YrZJLgvXf5qrV+k/1fXmrO
mv2ZuAS56S+r6iXPzC2jP34tI9c7W4xVFAbJpryif4kHKkjuV66ye7p/SOK+
vdWX+8vJaje7EOIxSm4XWE81HSsl56ymhRhe5mYGhMX8RHZP/PvKXMudrcjL
kKWD+osnnv8rTV8tqMrmY3y2+I4FDyeR+MaKNpHDAsyoyZRR744E8jIk9OMJ
AUGmdo398Aa7MJJrIXrRN0qIYeaqXzazMCEnmlekJI2JMD8OzijWeZlAjCS2
NBWETHxeB+txlSqkEna9U9DVBeLMwqN68kqXkoh6aUXzv+SpjPUU93S9lAiS
veai+iwfCcZ5m4Cs2hl/MkU207zEUJKJHiw7vbXVgVzbm+A820KStUswfO4d
Y0/ehgudWX5Tgv3lsu2kRYMfOff3w6j7YnG2NXPl3sOPkkj+h1FZg+eibMOq
2ICBF6lEIvXdswCuKWxy7Cr/lkuJJPXZ08hjaUJsmuk8B+3RQ6TFfIfzf3YC
bGrFnBc6Vx4Tiaezw9wb+dgboc7HlntFkojae0pfVXnZBdyHOCLnvMjVRy5X
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
Ou0KItXo+PhlOQ9T38Tfb5iQSN4udN6fsVWISdtgWKoQdpKMXTMwfiUgxkYr
Lxa6HJpK3KNfqi3UHOMcMilcYl6fRxzelyzo9ezjDGcXFm4YP0PsV/1evHVT
FWd/W9+i0feFpG7Wq67JYq7E42vzs78/Usgt7pSGA67fiHrQTX/WI4uIXDxz
u77sBxnIjyqsVMogWbIaPAuU+RmB6d9abLYlE0+pbv65EmKMZ73Xg7GJ7+dK
D2fo9N+beH7TlHrSHRRNNi5+tXwsqobTcWrfddugif+9W0YRjnoVZGze4rgV
flkk/662o6/GINHT/LVxfOK/ny0QFuG2kZdJODnHs00pkZSpaTfvL+FjlGyH
yr4IJZPINOtNG18JMfxS8wLq35uQpZZ6m44+FmVaTeJPTF2XSibH/56b9lCU
rb/V5yIXlzrx+dA6XhcvxIoKRhX12eqT4Jff7Q6s4GUN0qUaiuZ6kdHo8OM1
Z0Y5D4jo/eJbeeSafNaFx297OUKR1rGWD8+QgrelAU0n4snhsJgrMjdTiP9/
7N+5Ps1k/Gu0woumd2S6yf6rHHEh1jr3TsR8fkPyaEm/9rMifvaMfcPu6e3R
hN/wxQWhrDJSnHc0Me9gFin8/lRqXeMA2dGUzcmd+P40s19oUYgQL+Pa7bLy
uU4iWWnTp+HmLMTsa9yutoIxI8PiglX8p0UZ432tMul8qYRfZjFRLhVlOzW1
7UwSUkm6eYnTjqMTz8dzLLnj91wjGbJLdP7VjHLWbC6p+FqTR7iHPxYXLOjj
6K9v02w/ZEumrfNf0HKtgnPT5qqy5fFCIvA9dmpu54OJ792+6oJXU0jRl5ka
F142kZXVvnX7q96R1NAsccHj/Mzawpvz9GWTCSOrKrctcYwjXq53nbmbR377
V9nN/NnHOXZ0zmG21Z58k9NeGtH9jfN5mo3U5a+FJOWjUGZrWyWRfSCp8N/E
8/XcmfJzzU/zMsq2BdcHdiWSwoSCvvW8E99H1usf0lJNJlL8Lav/tgoxm9eP
R1ZOPU4MOJEP2WpRRvki38b7E8+/kpvejG88LcpGn73acvtyKjkwrf50trMQ
ayk1X8MmTZNopUj3ZqwWYE+d91I65B5Nzoz+Pnl0iIdVWNDlUGfkRfL5rMT6
bF6TM1lkc+JYCtnjePxlxrEW0iabHm5mkUHadxyfIyI5QPY+0Fu5YHMF2fna
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
      "], {{{
         EdgeForm[], 
         GrayLevel[0.5], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtm3ngTcX/h++95+77R8iayB5KCyGiIopsUVotSdoLRVJJklRalIQKbUgq
lUpa0K5CZIksKXuyhEJ+z+v7+v3x1HPmPe+ZM3Pm3DnnoGrvW7vcEgmFQt/F
QqEo/w/D9/gP8FdgfsSXwL1UVN2/8QOwh9gXHK/Af4Zr8c40shpfA+sjLluJ
r4o5pjaW4stgQNh1fsHXwvKwWYf/CjXDrvOTYjH3pbL1+AY4PWQ24pugKu0P
hV34n5Di/J4hvgPfGXPsAMfb8O0xxzSGg/ghuC/inN0aO/xHX51gH74/5rHP
5j+/43/Ay2H3+Ru+OeaYcvbge2POVZ0t+NaY+1Yf/+D/wkBix6B8PBSqAJ3x
vtQ5RizEcRfa/hI9qnOJOfYKdQrEinCQ4w20F+BRWEGsFiTwJJwRchthPBJ3
3WocZ/AsvBVxTgyPx52rshyej7sv9VGCl4Jn8arEh+MPQP+Qy47DS8M9UVMG
LwvpwByPl4t7rBrzYcZyJOaxacwViVUCqv6PyvgJsDcwVfAT4f6IqYpXg0Fh
cxJeHb4Kecwp9R33WFVWA68J1+FdKauD14WNtPUz+fXxBlAb/0Z18Evgevwk
6p+uuYS3qf8qdRrjZ8GhkMvOxBvFHVMbp+Cnwpkh12mCN4XxIdMMPzvu+011
GuKnxd2XyprjLWBfYM7BW8Jw+tLSuAhvD/uJNeK4HX5h3LF+cAHeNu6Yxngy
Xi/usSqnA36xriGxuyjrrLUW99jv5Pg8/Hz4OuQ+W+Hnxh1TTke8U9y5mtNa
mru451Zz1g3vrjmM/m8Zhwbwn4HwN32vJOcK/EqoE3adS/HLYBNtV+e4F94b
3uH4Nd0TunbwT8hlffBr446pjavwq6FxyHX66drBcyHTH78BhkVd5xq8Z9x9
qexG/CbIBOZm/BadOH0Npv0h+N3wLUUjNGf44LhjGtMgzU3cMY2hB3553GNV
zlDdG/ACfdWj/n1ay3HfS12oczt+R9xzpT5vRW6LO6acYfi9ceeOIT4rGQq9
CdfGfA+OIPYgdNNvEfFR+MOwKmxG44/onqR+G9qYrXsfRnFcl/hY/AlYSv41
xJ/Gx+n6RVz2JP5U3DG1MQZ/FF4OXOcZ/FloFzPjNfcaf+A6j+GPx92Xyibg
z+seCpmJ+CSoQV/jib+Gvw7T9BsOr+jeijv2Om1MU99xxzSGt7VWoFnEOdPx
GfAvbX9Am7PwN+Me+xzqvIi/pDUSc5+TdW3ijilnJv5G3LmqMwWfGnff6mMO
/i40J3YDxz/hy7XmOf4YPsQ/ggnaV+lzrtqKO/Y2fKO1pPuF9u6lj/n4J5Cl
7hDin+MLIBxxG/OUG3fdmtoH8S91DoFzPsU/iztXZV/p3o27L/XxHb4YtkS9
RkbiD8W9VlT2Pf4DDArMj/gSzXfMLMWXxT1Wjfk9/P24x6Yxr8B/hs2BWam1
B4mQWY2vgQOB+QVfqzUbMevwX3X+YbMe3wCHo2YjvglGB+Y39aX+abs+x9vw
7VBN15b6W/Ctccci2s84iTxcQts3kLOL2J+6XtTdTHwPvhdWh93GDnxn3HVP
1j2uc9ccRJ2zG/8r7lyVHcQPQc/A/KO1p/sxYg7jR6AJ7U2nvYBzicJhjt8l
HsYjCcdq0t6xuCdOMZ3TPo73x30uyokRi8PzIbd5lNh/ceeqLEEsCfdFTQpP
Qy4wGTyb8NxoDn8n94+4505zVCBWVBvEDlL/OLw0jIy4rAQvlXBMZWXwsnB3
2ByPl4PFIVMerwA3hkxFvBI0DZnK+AlQK2qq4CfCexFTFa8GM8LmJLw6HAl5
j2qtezvuvU9lNYjVhIl6FoA6eF04xPl+r/0WPw1e0vOi9mv81IRjD9FffbxB
wjG1UQuvnXBbyjkdP0N1Ard5Ml4v4VyVnYk3gpMipjF+FtwUMk00drg0aprh
Z8PvEdMcbwFrwuYcvKX60LMw9c/Dz4de9BVQvz9+g+aPe7GZngfwC3XO1H2f
eAf8YpgZdtlFePuEY2qjNd4GukdcpyPeSWsmZjrjXeC5wHUuwNsm3JfKuure
gqMh001twYf0NYnjXnhvuJ/jxdS/Bu+ZcKwF7V+FX51wrLp+87S24fSYc/rg
1+oeJn43Zf3w6xMe+wWU9cAv1xxG3Oel+GUJx5TTF78u4VzVuQK/MuG+NWc3
6tpovVH3Hu2X+CNaX/q91P6M3wFbo65zM34LvEPuc3AXPljrm7Yv1XsGfo+u
Z+CyIeo74ZjaGIAPhDsD1xmG3wtfx8x9mivNf8h1Bqluwn2pbDj+APwTmBH4
gzCKvl6gzlj8CfiBuo9o/8UfTzimMY3BH004pjHcit+W8FiV8yT+FEyh7il6
h8Kf1TlRt7f2XPzhhOdKfY7U2k84ppyn8XEJ5ypnvM494WurazpR1x4+J36X
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
+uygtVfimHKuwK8sca6+kffS2tOape7/AQpy+TA=
            "]]}]}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           GrayLevel[0], 
           LineBox[CompressedData["
1:eJwl2GWgldUWRuGDoCACBgoIBt3S3SUg3d1IiISgKEhKiYqEdHd3I92NKKKg
qIiiYmNRitxnXn/MO+cY71rHfc7e+1uLm6lDrwY9EyUkJJy8OyEh+tXECQmD
70pIeBEcws+q+kkSEi5yZ7nsqjCXiVvLLcLX8GQ1gLvX/n+5ekqc8BseYngJ
H8adVAPrvuQ+4nKoIlxmbh23GF/HU9RALrn9d7j6ypjwu/8Zal1ffAR3Vg2t
u8R9zOVURbks3HpuCb6Bpyoq4Q/7X+Nf5o/iLqqY8usn/CkbJntFdgx3VY1s
+oo7x+VSxbms3AZuKb6Jp6lB3H3xAvkG/D3Gv/Bw3A8fx3Osyctl4p7DjfHX
5vPyNF7AIllu8wd8W3Mj2TP8OXMJ67PxG7mu3DLr7tWnyhbqt+Tb5FXx67i0
dWX1E3inPl0+WJ4C94/3Wp5d34TX6w39vO/kffFU3E3eRL+Mk9p7TR/B9bfu
b+vewCf4ueanzJll3XATfNn8iXV51BncTt6YKynPjjeZl8fPwTPUEC6lNXfx
jfhk3HU8Er+KT+LnVSmVw9rN/Ar+HzxT3atuWD+KH8CfwvOsy8dl4brjpvgb
86fyvOpD3F7ehCstz4m3mFfKkvu9p8lu8+/y1cxlZOX4k+ZZ/FA+lflVLrEs
h74Zb9Ab+xlX5C/jafh5eVP9G3xUT27/zXif+A54YPwu1r/JzcHvyefj/PFZ
x1mtK6zvwz1kzWTfchfsS8sv5p8yn+U7mJvKyliXC281r5L9i2er+9Qta0bz
g/jTuKdqbu133GdcPlWWy81t41bjO3g7rm5vWW4Ofg3fj5PgnF7Hlvh7Wvs9
/4p5Otdd1kz/Fh/TU9j3t/kNviMebP1t69/i5uL35Qtwgfie4mzWFdH34y16
L3kL+RW+N/7c/nT6Enl+80eyjuZm8hr8eXM5e/Lw73Jr4iGnduBnIuPmUsPw
A/jueK/kKbl/8Jt4SHwn8QuqpXXfc19wBdTH+FnrmnPl5XnxdvNa2X3xvZMl
Mu/ka8TfnSsfa/VTeJc+z77h8gfxAHyPPJe+FW/Um9n/g7wfnoF7yJvr3+Hj
eir7b5vf4p/FQ+P9tn4Md0a20FzQnF1eVH7A3Jtvxf/AXbT+UX4pX9B8ju9k
biGrYN1TeId5XTzT1XxuBPdQPBvitXD3c//iMfi1+H7hPqqiymftTn59PMPV
Am4kl9r6ZHwL7gHuDn4bD4vPm/xtfJZfZC5kzhHnEm6NfzR/aV36eBbKCpnP
853N47iW8pr6J3i/Xsm+/PJd8ezFG6xPoc+QL9KT4F3ymvHZxBXid4/vIt6t
L7R/lPxhPBDfK8+tb8Mt7f1R1t/cM34f/or5wYT/Dp2x3PD4bMLFuLAsZ5yJ
uA3+yXwpzlVVmSvA7eY24rvVIu6h+Njy4/gR8bnDfVVb7mfuqzhHVRWuILeH
2xTnkNqNa/lvVozzVf46fgQnx63kP+FXcS+cOo4wPN48MtF/B+NY2TnjEr6I
OVecn7gd/sX8tXUZrFsuK2r+hO9iHs+1ktfSP8UH9KftKyTfG+dFPDPju6bP
lC/Wk+I98trx3Yv3zbqK+mm8J77n9o+Wp8GD8H3yPPq7uLW9P8sGmF/gW/Lf
mx+2JzE/gRtlTSJ+HH+eX8oXjXM3zn3cHv9qvmxdMVWVK8zt47bE2aT24jr2
VI47gPwNnBanwG3kj8Tbzr2DX4+/B+6nOnBXuW/iHqGqcUW4/dzWOM/VMi5N
/Nn5ifxo7lPcX3XkfuO+5Uqo6lxR7gC3Lc4ttQ/X9VqqxBkrfxOnwylxW/kv
eGB8/3Fa+T14kvmN+G77u4yXXeCX8cXMeWTF+INx1sV9kP+d6xPPH3se01fI
Vugl47XKu+IJuLV1tfUL+KD+TNy15Af55+M9sz6VPku+JN5LvF9eL55l8Vmx
rlKcCfHz7X1L9qg5FZ+X325uZ8+v/CBzHz6ddUnxZPObss/iXqpqqOL8IX57
fPfVSm4Ml97e+/n28RzkknFT8Fv4c7wcF7cmLzcQd8J/mK/IH/c6VspKmS/w
z5nbyOrwn5lrWl+CPxz3EG5HPCv12bKlekp8QF4/np24qnWV9Q/wXn2V/W/L
M+DB+AH5U/Fz8Ca9g/1X5YPxTPxifKf1H3D6uBvJpnJjrPsCr8Al4r4Q5z/u
jP80fy8vrWpxJbkj3M54f9RB3MCeanEXkI/Fj8XzLc5w+W94CH4JZ5Anx9PM
b8fz3muZILvIr+RLmodx+eTF9UN4a9wD4i4u/yue8fH67X0ifn/5Sr1MvJfy
bvgd3Na6unH+40N67bgfyo/yPfCuOFP0OfHemg/JGpqry6vwZ8xr7BnHP25+
KM7O+DzHHYmbjsfiL/EqXCruF3EXwF3xNfOP8if9rNVxJ4rPCv98fCZl9fgv
zHWsL80f43pyu617UJ8rWxbvJz4sbxRnX3xHrHta/xDv09faP17+BB6CU8vz
6TvxZr2T/b/Lh+JZuK+8tf4jftzeFLIZ3DjrkvDv8Jf41XxpcwHZUPwcvm7+
ybpy8VnB3eXt4+8sL4OPm/fE61fruCdUSn4mP577Ku6Eqht3g/uZK6/qcWW5
E9xe/JBaz03gnoznM985/pZcKm4WnoC/xmtwmbiXxL0g/h2Ab5p/kVdQF3EP
eQeuvrwcPmneF/+duFvJUpuP8I3NNWRV+bPmDda/w2c0P8Lnj8+NuYv1f/Cv
mWdzL8dzXf8Jn9Az2ne/fDbfKf6mcU7rE+Xz9MvytfKyeDguZF0J/TDepg+X
d5ffijsA/tX+jPoa+Sq9Ynzu5D1xx/i9uIvmBvaV509x+615WG3kJnKZ5Gn4
rlwm7gFuDp6Iv8HrcDlrCsf9AffAf5uvxvr4nMkqmS/xvczPyhpaVwG/Zz4Q
55o6ipvEcy3uF/JJODNOG/cq+Z94GH4FZ5Y/iOeaJ8m+xetxeXmRuF/Evz3w
P+bf4u6jGsWdkTvNHcRp1GYuS9yB+Hn8ZO67uI+pxqoS/z5/iE+rtnBZVWp+
Pj+Fu4I34ApxR4lzGffCt82/x70pPr/4BXknrom8Mv7AfFiWTh3DTeW14ryW
T8ZZcDpcIL7b5m7W/cUPN/eLM5f/2ZzN+of5BfFZ56bG3UyfJJsf9xT5RnlF
PAIXs66kfgS/q4+Of3/I/+X74j/sz6yvk6+OszK+L/LeeCLubF0D/Uvc1N4q
sjPckTjj1HHcTFY77g7yKTgrfjTOZnl27hFuIZ6Gf8CbcCVrinOl/OyjcVfm
e/N34k7I/WltFn19PF/jPMOX5X3wJNwlPlf6JXxYb2b/0/IP+V7xM61Prc+X
L9fT4xPy5ngsrmNdNf2j+LvYO1WWLc46viC/x9zdnmv8CHN/PkfcqfAi8/S4
q+PNuLK8RNwT4t8qSRL+/38w/RX3MtUcVuXOyo/F/VZt53KqtPxifkbcneNe
ol7kEtl/Le5lqgVXjfvIuuNxrqiTuIU1dbkd8mk4O86AC3nte809rLvOj4z7
Ft+O/8Wcy/p0/BKuS9yXrUuqT5YtiM+YfIu8Ch4ZdzHrSuvH8HZ9jPwl+V3x
3cTX7c+qb8Br49yJ54T8RTwZd7W/kf4VbmlvddnH3Il47vAL4nwxn+JbmuvF
fcG66TgHfizOO3lu7lFuKZ4V98+4z6hW6hn+HH8yznq1i8uj0vPL+Nlxt4v7
hurLJfZzb3A1VOu403HnrTsVZ4d6D7eypj63Wz4D54zXGZ8t+Q08Cg+I+6M8
A15uniNL5neaIrvKb+WfNo/iSsnL6Mfxjvh3g/xleZL4fuOb9mbTN+J1es14
zslfwlPwc/Y31r/GR/Q29teUf8K/gN+L56q+UJ7RfFrWOp718ur8x+Y99szk
c5mfiH3W3cSv44FxH5Q/hleY58Z9LO4M6hXubmtuxb1OteVqcZ9adzqe+2ov
l089zq/k58V9Is5m1U7V5i/w78fzRu3j8sfZz6/i58dZGeeo6sfd47/3N1db
tefqcJ9Z90E8F9R+roB6kl/NL4gzI84w1Z9Lav8/XB3VgavLfW7dmfi8qgPc
LC63dU/yvbmCXEZuDV4Yz984l9SrXDLrbnN1VUeuHveFdR/G+6bex22saRjn
jXw2zhPvBe4jv4VH40G4fZzVif/7/8oLWfs/Ryzf0g==
            "]]}}, Annotation[#, "Charting`Private`Tag$18004#1"]& ]}}, 
      VertexColors -> CompressedData["
1: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
WenEw7kLV46/NKcidWuj8/UJBq54tab9JtxziaLHJatTse6jSO1qTwbmTlpO
syM8ubZi1azZq8h8YN+42UIGjJy0Nq36Qc7t4M7ZswsoYFOCVn6Vq8cclcLE
fr3/f/+wcvc3wpM5Iiytt+dp2EKZv2yvTDmGPz0tCk3pw+aeTYXn/lZh5JZN
ZNCGUpReubnjF7MNK6+cdJU+WIDT2vbMzy3dSEoyHA1pZuC30FYzj4gCTNPj
yl7bzYKumkb//JB+JNHTpm9434IvY7Hhch2VKLiQ+zRttA9Bkdv2KOf0oPrL
rTapp19hO5paO7uFD+VkjWFHLZKbE3nZ45tpqLaIkQpN7sHmNZN7Br/wMDo7
o6/4YiPk1Js6KKUdUHFOy97fxIUle/eOcE4XzOe4ukXFtCB3+YwShwAOll8P
NV18lY3A9o85jYotWPzupPiANQfb0k/d6WxjozpOf97LDQxUZcXeHhUm/dK0
TUnYkoXYXcLnku060NZ+UCqwnIuyzvofkmpMsFZyZSTpXdj51sBMYxMPmr9c
Jp6c6cCNf1bZa2Xbsfe0+vwNIVy0m3a2ckeYeK2Sedp3bSN0RCqNskvY+LjR
RtnSkvC8MjRc8I6Gf3l6eX+dmFAVbrsXvU4AozpTxxv5VHzjHH4ZdL4D0TaP
njIrBNDfqb/LuIWKojxvioxsJy6V/uyaQbzFXnOZRvyNThzOUZGcPU74mSw8
YfqnE4IwrdIIRbKnA8nee47zkEYVtCh9o0E9WzS5Yg8fj+J7AoXseGgc0XHI
iqchlFF6/eBxPkKu7T+3bz8Pan9G1w9F0nDhQFin4Byf+GTkP2nCgTMui3Ks
7tDwsva+UybxjY1Kuatdyb6Pd8cFDZB9Vxi+etGa7PvhGqVZImSucu6x0y2y
71G5tkW/yP5WX1rrbE36jsPOJ1H2ZK83ioQueEPmrT0My4+GdNwWuE5+J3PF
Myt9gq9T4DWzr+rlMTrWuVvqeb8RYOS33KrFARToJ3tOnb9BR7nz6dpLKQLM
uqB5cs9F0o9+Rkjbd9ERolD1elqeAOXe0/xzD9Tjq/z967M3d+O+QYB9fCIf
cs62Y2dIT9kdyQv+v6dYddc4/yU9xWo795i6CgcPgwr2ulbx8FUgo7a4iY6x
LqEDunvbcTnwtcDwCRdz/7pPyFGYYMhJTrr50WDL0Hmvu4IJM62RTL99Akw2
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
+DDtEj7+YR0PEQHFu60Vqbj3oEfftbUf+Vf8g0/U8iBluU9XQr8Fqb9mi52a
3QPF661FnSwurEXEgxKjelH83P3Sgrx2PCti6mwI5SBSQfljoze5f8dzxjcp
tkOjURouVhxYfHxbm9XHxtjDRx5f5BioVpuYVT7BgZH/JdPgQyy4J3etYm7v
RlnDZv9V77hweH9L2NuAieWO6wxMP/ZC2fbhJek1PDQpXRugXOwGW1HW38e0
CwP5tpEm8VzI/MpXiWpmQupGh56ebQsuKk7pqfayCddmn+Qu5yKkeYnW3XIq
gi1cXwWcYWLTvJqxrSoCeNueHl1cToHUxqfbHEK6IcwVOjDvgwBbNlU/rm2m
IKx4or3vZzekK26ee10uwG//d9zVgi60yNGnal5wwT46pRLqz4TQ0L4gbRU+
3lxe58I8RjycpWujTqHCR3g0im7Ox6urPnp6djwo78rmX8mgYlpBYOfYUeIh
tXFzPAi/JpnMHMN7VHyer89s8OFjdbHKWiXCgcgmL3ePG1T0bNi+9QnxjXnm
vGknybz3yY7b/yXzLn72jt8eMu/86Qtyxcj6zX3mlBgy7wffz8wcJ/P7bk1c
hwHpO9REW237/+fa9n3gU7I+4O5UE7uD5PF3j2lDZH3Lw9pn8aSf9pyj3+06
QoeY7VsHqzTSR8Y07u641ITq04+MBFfpOKV+bWzTMwHeK6S8qwwgc/36RHYD
g4604cM07dfETz4EfqiopSLujdsKpStMLLq3NneDnABmk8VSf724GJmWKlJA
5pfm90/vmTkN6zinN2zX58Cje3BAk8ypGH5mMMvp8E73p3ss7MYNmeZ/UW+4
qHD90+F8gIn5UvochbtUhOZFzczWZ4K+Zcm2WghIHtU8mPKlQGybwxI6vRO/
pmWGr+kiPBff6mysR8HNBhWli0kMvJnXd1GI9HFGoZtPe1cTaqZ85YNY7dj6
y+fH8LQBfHdV9vftYmDaZ5clDndKcVcm/4X7bhZGLy88v3x4EPJrqjUitlMQ
MFLuzsyshgdjj7ZQMwOZKqrKGXdLoSC3uoe1l4Vz16Vc32zqwtz4MeFMo1Ls
P9pD7yjqw24lqSGd3kGo6Li8mX3yM3axC8/Y7a1G7sYMD8XOIYzNjdn9QKQP
U7pxDsNn63HjS7dTcPAAwmryYrpMydx1aHS29zXhc5uWRSCZB+r6OO3QJB42
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
gS1PCpe9ITHvNGpkEy/C/VhY8Lc3FSQ4fj3w4vyzHpB7MdPqUIG7D5dRh2Qc
CSJOu/+ufUKBhOPzdseacMf6LjHPZzRFBEeSwMD4XPqNGxTgEVyk1i3hcgfX
GIreJ8HKO3yRDm4UYPU0/ijdivulV5cGmoJJYL38ddN+NQqkhWq65bbj3qb3
vVv7Igm0DkqHuzO6YVfsWRfZbtyx3i7MbbyqEha9SMCpYSvR2toNsxxpoXIU
3P+0/JHr8SRByPiBH+wV3XCsKW1aqgf3lIJZxoIbCdK0w91ikruhLLXpys9e
3IM/2z1MPkaCZ9RJoVSXbuA6rlEoQcUd603GfE6I/be1AwlCfxkHvrLphkI7
pcttSzi0ZzlssyPBF3/+GAWjbhjYt737+iDuWI8D5h+3rx1YbUOChzKxirC/
G66I3d64dQh3kfGMFB4rEmxPplysVyLWyazrwyqXcKzfCvPJc6Su9RYkYASK
5DYR64mBJqfjDks4N10w/8BRElQsXPYzItbz7368pHxfwu385S99NSHBGj7/
iZiV3fCqbkXWPzruWI8k5rm0nQtyhNtvKKqyZif8xO+zV5fw896XTyYdJkHm
3jbnG/NkuOzTlT23hGP9CJh3blDg20y49Iyj4eqfZJA/pfbs3BLedkzsTKE+
CbjqJsTmRsjwMSXBs3cJx/p9MJ9MVxm0P0SC+ZOXHwOVDMK1YYb6SziWi4v5
C1ujcT7CzyaU5PWSyXD6/qDDmyUcy3XH3M7Pj71VlwT+LpSzLS1kuLa9tpFv
FHcsDxPz/a/KX6YcIM57nghd7CsZbi0O1ngs4VhvMub0nlrzEB0S3Gx5Zp9b
RYY9dd6eVUs4lhOO+WdF68dehLeUeG+OLyPDxItzw2JjuGP9KZivubSaw4Nw
jnOur6qKyBBT/cTqzBKO5etinvCTZ4MP4e/T95zUfE+Gdy7v+gqWcKxnDXNr
7keXbxOuVBvG+POGDE2Pzz1nYeKO5VRjnqFEfpuqSYICMdvWhQwyGCVnlOku
4Vi/A+Z6PBetmzRIUBM70qGZSobWM4G2t5dwLG8W89Zy0+VchMOL3dmfksmg
VK3/oHIJx/pAMe9YruakR/j9+g1iV56SoWjNwBWWcdyxfHXMHZ8nz0cSnrW5
Y9wngQyUzxEHVJdwrG8Fcyl/Qz+6GgkW7df+exlLfK90TVaPJXxfE/vFA4SH
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
u2J9lwxymn2oXRvy5KFbij3I/wd/RvaG
       "]], {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], 
       FormBox[
        SuperscriptBox[
         TemplateBox[{"\[Psi]"}, "Abs"], "2"], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotRange -> {All, All},
      PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"arg[\[Psi]] / 2\[Pi]\"", {FontFamily -> "Arial"}, 
                Background -> Automatic, StripOnInput -> False]}, {
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
/wEdeLt3
                  "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -56.25}, 
                    Offset[{2.5, 0.}, {7.5, -56.25}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 
                    11.250000000000014`}, 
                    Offset[{2.5, 0.}, {7.5, 11.250000000000014`}]}, {{7.5, 
                    33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 56.25}, 
                    Offset[{2.5, 0.}, {7.5, 56.25}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{"\"Rainbow\"", ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Psi]] / 2\[Pi]\""}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.707349087389226*^9, 3.7073491539759455`*^9, 
  3.7073495190103226`*^9, 3.707351324311307*^9, 3.70740119635675*^9, 
  3.707401271175685*^9, 
  3.7074013702070074`*^9},ExpressionUUID->"a405fca4-8d21-4ba3-97bc-\
6c2bae09d212"]
}, Open  ]],

Cell[TextData[{
 "which are otherwise induced in-time by mixing ",
 StyleBox["in-phase",
  FontSlant->"Italic"],
 " eigenfunctions, due to their different eigenvalues."
}], "Text",
 CellChangeTimes->{{3.7073385271584845`*^9, 3.707338528352411*^9}, {
  3.707338578188919*^9, 3.707338608999523*^9}, {3.7073387614423356`*^9, 
  3.707338774652499*^9}},ExpressionUUID->"8028c78a-1ad6-43f8-88ba-\
076d85e3117c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"oscillator\[Phi]", "[", 
     RowBox[{"2", ",", " ", "x", ",", " ", "t"}], "]"}], " ", "+", " ", 
    RowBox[{"oscillator\[Phi]", "[", 
     RowBox[{"3", ",", " ", "x", ",", " ", "t"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"plotWavefunction", "[", 
     RowBox[{"%", ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", "False", ",", 
      " ", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        SubscriptBox["\[Phi]", "n"], "]"}], "2"]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"4", "\[Pi]"}]}], "}"}]}], "]"}], " ", "//", " ", 
  RowBox[{
   RowBox[{"Legended", "[", 
    RowBox[{"#", ",", " ", 
     RowBox[{"colorBar", "[", "]"}]}], "]"}], "&"}]}]}], "Input",
 CellChangeTimes->{{3.7073358802975793`*^9, 3.707335933788829*^9}, {
  3.7073386899777393`*^9, 3.7073387101068554`*^9}, {3.7073388515056047`*^9, 
  3.7073388591104784`*^9}, {3.7073392792331104`*^9, 3.707339289204064*^9}, {
  3.7073401348530073`*^9, 
  3.707340172008966*^9}},ExpressionUUID->"676f4e73-9011-4238-a123-\
5a08451cefed"],

Cell[BoxData[
 TemplateBox[{TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`t$$ = 7.008909221083302, Typeset`show$$ = 
       True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 4 Pi}}, 
       Typeset`size$$ = {360., {118., 123.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       True, $CellContext`t$27904$$ = 0}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`t$$, $CellContext`t$27904$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> $CellContext`plotWavefunction[
         0.26556298300679854` E^(Complex[0, 
                Rational[-5, 2]] $CellContext`t$$ + 
             Rational[-1, 2] $CellContext`x^2) (-2 + 4 $CellContext`x^2) + 
          0.10841563382300935` E^(Complex[0, 
                Rational[-7, 2]] $CellContext`t$$ + 
             Rational[-1, 2] $CellContext`x^2) ((-12) $CellContext`x + 
            8 $CellContext`x^3), {$CellContext`x, -5, 5}, False, Abs[
            Subscript[$CellContext`\[Phi], $CellContext`n]]^2], 
        "Specifications" :> {{$CellContext`t$$, 0, 4 Pi, 
           AppearanceElements -> {
            "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
             "DirectionButton"}}}, 
        "Options" :> {
         ControlType -> Animator, AppearanceElements -> None, 
          DefaultBaseStyle -> "Animate", DefaultLabelStyle -> "AnimateLabel", 
          SynchronousUpdating -> True, ShrinkingDelay -> 10.}, 
        "DefaultOptions" :> {}], ImageSizeCache -> {411., {156., 163.}}, 
       SingleEvaluation -> True], Deinitialization :> None, 
      DynamicModuleValues :> {}, SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Animate", Deployed -> True, 
     StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]],FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"arg[\[Psi]]\"", {FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False]}, {
              GraphicsBox[{{}, {}, 
                RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
                 "], {{
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}}], {Antialiasing -> False, 
                 AbsoluteThickness[0.1], 
                 Directive[
                  Opacity[0.3], 
                  GrayLevel[0]], 
                 LineBox[
                  NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                   7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                   112.5}, {7.5, -112.5}}]]}, {
                 CapForm[None], {}}, {Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.499999999999999, -56.27853081669613}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -56.27853081669613}]}, {{
                    7.499999999999999, 56.27853081669613}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    56.27853081669613}]}, {{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -56.27853081669613}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    56.27853081669613}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
               Scaled[0.02], PlotRange -> All, Frame -> True, 
               FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
               Opacity[0], FrameTicksStyle -> Opacity[0], 
               ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
     "BarLegend", DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"Rainbow\"", ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Psi]]\""}], ",", 
          RowBox[{"\"Ticks\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"-", "3.14`"}], ",", 
                RowBox[{"-", 
                  FractionBox["\[Pi]", "2"]}], ",", "0", ",", 
                FractionBox["\[Pi]", "2"], ",", "3.14`"}], "}"}]}], ",", 
          RowBox[{"\"TickLabels\"", "\[Rule]", 
            RowBox[{"{", 
              
              RowBox[{"\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7073387105385523`*^9, 3.7073388602376013`*^9, 3.7073392902531815`*^9, 
   3.7073397350711017`*^9, {3.707340162641881*^9, 3.707340172609708*^9}, 
   3.707346060313413*^9, 3.707347183680358*^9, 3.707349154387945*^9, 
   3.7073495193893223`*^9, 3.7073513245990963`*^9, 3.707401197071016*^9, 
   3.7074012718976507`*^9, 
   3.707401370929321*^9},ExpressionUUID->"c9dee7c9-0b81-47e5-b931-\
6646a562a8a3"]
}, Open  ]],

Cell[TextData[{
 "These examples, since composed of a ",
 StyleBox["finite",
  FontSlant->"Italic"],
 " number of eigenfunctions, are periodic, at some multiple of \[Pi]. Even \
finite superpositions can lead to complicated (but periodic) evolution."
}], "Text",
 CellChangeTimes->{{3.7073402629745493`*^9, 3.7073403336011906`*^9}, {
  3.7073404551078477`*^9, 
  3.70734048106014*^9}},ExpressionUUID->"a272b213-e242-4c35-8794-\
36f4eaa6c4cb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"maxModes", " ", "=", " ", "15"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"manipulateCoeffs", "[", 
    RowBox[{
     RowBox[{"{", "coeffs__", "}"}], ",", " ", "exp_"}], "]"}], " ", ":=", 
   " ", "\n", "\t", 
   RowBox[{"Manipulate", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Animate", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"plotWavefunction", "[", 
        RowBox[{"exp", ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", "False", ",",
          " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "\[Psi]", "]"}], "2"], ",", " ", "\[Psi]", ",", 
         " ", "All", ",", " ", "None"}], "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", 
         RowBox[{"4", "\[Pi]"}]}], "}"}]}], "\n", "\t\t", "]"}], ",", "\n", 
     "\t\t", "coeffs"}], "\n", "\t", "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{"Manipulate", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"manipulateCoeffs", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Table", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"c", "[", "n", "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"n", "\[Equal]", "0"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "\[ImaginaryI]"}], "}"}]}], "}"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "0", ",", " ", 
         RowBox[{"numModes", "-", "1"}]}], "}"}]}], "\n", "\t\t", "]"}], ",", 
     "\n", "\t\t", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", "n", "]"}], " ", ".", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"oscillator\[Phi]", "[", 
           RowBox[{"n", ",", " ", "x", ",", " ", "t"}], "]"}], ",", " ", "\n",
           "\t\t\t\t    ", 
          RowBox[{"oscillator\[Phi]", "[", 
           RowBox[{"n", ",", " ", "x", ",", " ", "t"}], "]"}]}], "}"}]}], ",",
        "     ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"stupid", " ", "hack"}], ";", " ", 
         RowBox[{
          RowBox[{"can", "'"}], "t", " ", "unpack", " ", 
          RowBox[{"c", "[", "n", "]"}], " ", 
          RowBox[{"early", "!"}]}]}], " ", "*)"}], "\n", "\t\t\t", 
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "0", ",", " ", 
         RowBox[{"numModes", "-", "1"}]}], "}"}]}], "]"}]}], "\n", "\t\t", 
    "]"}], ",", "     ", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{"numModes", ",", " ", "1", ",", " ", "maxModes", ",", " ", "1"}], 
    "}"}]}], "\[IndentingNewLine]", "]"}]}], "Code",
 CellChangeTimes->{{3.707340505529663*^9, 3.7073405103278704`*^9}, {
   3.7073406686912003`*^9, 3.707340669669156*^9}, {3.7073408430594573`*^9, 
   3.7073408585226707`*^9}, {3.707340905417882*^9, 3.7073409419805875`*^9}, {
   3.7073414727607694`*^9, 3.707341529219087*^9}, {3.707341755284301*^9, 
   3.7073418421963496`*^9}, {3.707342064853196*^9, 3.7073420706946487`*^9}, {
   3.707342110181095*^9, 3.7073421379892445`*^9}, {3.7073421897301846`*^9, 
   3.707342190349392*^9}, {3.707342297858201*^9, 3.7073423270538588`*^9}, {
   3.707342485037288*^9, 3.7073425651636972`*^9}, {3.7073426216685114`*^9, 
   3.707342881247449*^9}, 3.707342911530921*^9, {3.7073439308394628`*^9, 
   3.707343979512959*^9}, {3.7073440145070453`*^9, 3.707344043034012*^9}, {
   3.707344103183259*^9, 3.7073441144957047`*^9}, {3.707344172571885*^9, 
   3.7073441803312273`*^9}, {3.7073442801259975`*^9, 3.707344292305052*^9}, {
   3.7073445713972845`*^9, 3.7073446097647023`*^9}, {3.7073446962125287`*^9, 
   3.707344821295449*^9}, {3.7073448889977107`*^9, 3.7073449269408836`*^9}, 
   3.707345217994382*^9, {3.707345368734745*^9, 3.7073453745818014`*^9}, {
   3.707346036014786*^9, 3.7073460452932005`*^9}, {3.7073461974982104`*^9, 
   3.707346220556543*^9}, {3.7073462510243034`*^9, 3.70734628653165*^9}, {
   3.7073463457782784`*^9, 3.7073464449510317`*^9}, {3.707346501182386*^9, 
   3.7073465208682795`*^9}, {3.707346553992277*^9, 3.7073465541557083`*^9}, {
   3.7073465977550907`*^9, 3.707346601455228*^9}, {3.70734724272606*^9, 
   3.707347243715557*^9}},ExpressionUUID->"71bce755-343c-4db6-8a6e-\
b219d7ae7938"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`numModes$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`numModes$$], 1, 15, 1}}, Typeset`size$$ = {
    462., {229., 236.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`numModes$27973$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`numModes$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`numModes$$, $CellContext`numModes$27973$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`manipulateCoeffs[
        Table[{{
           $CellContext`c[$CellContext`n], 
           If[$CellContext`n == 0, {1, 0}, {0, 0}]}, {-1, -I}, {
          1, I}}, {$CellContext`n, 0, $CellContext`numModes$$ - 1}], 
        Sum[
         Dot[
          $CellContext`c[$CellContext`n], {
           $CellContext`oscillator\[Phi][$CellContext`n, $CellContext`x, \
$CellContext`t], 
           $CellContext`oscillator\[Phi][$CellContext`n, $CellContext`x, \
$CellContext`t]}], {$CellContext`n, 0, $CellContext`numModes$$ - 1}]], 
      "Specifications" :> {{$CellContext`numModes$$, 1, 15, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{513., {276., 283.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7073465850325623`*^9, 3.7073466109212847`*^9}, 
   3.70734686748112*^9, 3.7073471837583537`*^9, 3.707348978124516*^9, 
   3.7073491545434456`*^9, 3.7073495194758234`*^9, 3.707350882090932*^9, 
   3.707351324782113*^9, 3.7073610135747266`*^9, 3.707400871775595*^9, 
   3.7074011972730403`*^9, 3.7074012721252213`*^9, 
   3.707401371071846*^9},ExpressionUUID->"e01f6514-c175-4333-96c6-\
b9552c65809b"]
}, Open  ]],

Cell[TextData[{
 "By forming a complete, orthonormal basis, the energy eigenfunctions can be \
linearly superposed to produce ",
 StyleBox["any",
  FontSlant->"Italic"],
 " possible wavefunction, though this generally requires non-zero \
coefficients of an infinite number of them (a rather hard computation)."
}], "Text",
 CellChangeTimes->{{3.707346954147647*^9, 
  3.7073470521038256`*^9}},ExpressionUUID->"acd30c66-3dee-4c34-b63b-\
b9ac3bc7b25d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coherent States", "Subsection",
 CellChangeTimes->{{3.707347059944252*^9, 
  3.7073470637927227`*^9}},ExpressionUUID->"95779c0e-aff7-4e65-bf09-\
be16f3d316ac"],

Cell[TextData[{
 "A ",
 StyleBox["coherent",
  FontSlant->"Italic"],
 " wavefunction is one which maintains its probability density profile in \
time while still translating in space."
}], "Text",
 CellChangeTimes->{{3.7073475238221107`*^9, 3.7073475773762884`*^9}, {
  3.7073483254717517`*^9, 
  3.707348326688601*^9}},ExpressionUUID->"e2fe281c-3dd6-4636-a65b-\
23d4c88c040b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"coherent\[Psi]", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"oscillator\[Phi]", "[", 
    RowBox[{"0", ",", " ", 
     RowBox[{"x", " ", "-", " ", "0"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7073484594310007`*^9, 3.7073485140208387`*^9}, 
   3.7073485566863165`*^9, {3.707348593802176*^9, 3.707348627447627*^9}, {
   3.7073496649543114`*^9, 3.7073496683748426`*^9}, 3.707349714063694*^9, {
   3.707350459788612*^9, 3.707350461745433*^9}, {3.7073505359365063`*^9, 
   3.707350539225807*^9}},ExpressionUUID->"1affdacd-f34a-4ffc-949f-\
81b606df8438"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"plotWavefunction", "[", 
    RowBox[{
     RowBox[{"coherent\[Psi]", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"harmonicV", "[", "x", "]"}], "/", "25"}], ",", " ", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}], ",", " ", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"AxesLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"V", "[", "x", "]"}]}], "}"}]}], ",", " ", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"PlotStyle", "\[Rule]", " ", "Red"}], ",", "\[IndentingNewLine]",
      "\t\t", 
     RowBox[{"PlotLegends", " ", "\[Rule]", " ", 
      RowBox[{"{", "\"\<V / 25\>\"", "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7073485152323656`*^9, 3.7073485264357758`*^9}, {
  3.7073501325404854`*^9, 
  3.7073503423844595`*^9}},ExpressionUUID->"26798a89-f725-4513-9f7b-\
94e57ad981e6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      GraphicsComplexBox[CompressedData["
1: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
9r163PjrvKbnHrIPyE7EM0GZnPh98g/lzb0pwD66ZK57lR13uyW9nVauAZIy
KYmrF9nwprKZep3mL2DfKMzlWsiC37rY+r3Zwwindpc2viMw4w0O+aOhYkJQ
9setvKEHjFiyZU2F/z+khhP0M+xG6TFrRenqjYPnoeLGycVUQIfNSg82rLvd
hEazXeuab2lw01J4EFObNxTPf3HMqXeLqm1x1F+hPAxmNaHf9C/XqSvP3miI
aiTBzcOkJcrbBuq7azuzDtLDMKsh7Jim+mtqoeXN3nC2ETg1dy/RS7caig3I
Oxf5DUOuYY60J5lrsCq4WoOBMRW69Zivhwxuwq4TPKl3NaNhTjlq5eOhQdz0
MsvvLvnD1BeFUxy5tOhPLv2gnN5daPZ51yd9U3qkrhoyL3XXBBrYmp3xm2VA
flU+YRphx6FQqEv/zSAmtHuk46OfmiQsIDrzxiuyoPuvS7jU73HDuqdd0c5t
rKjVxkozMH4OaLJZLDkEsKOoXuWQct4WkPd7JzVSghPVau2nfcOaDVJLGePM
arjQ5wg1+kX1ICDj6r6/SJWAqgP695ptWQNhI8s+SEtEDN5T9zoOaYLA24dJ
8Y1EdN00geK5tAecV9ncJ5xIQmwBNBcIrn8poZEcVvbOZNR/kO9p60dMsbkq
GyxoQMbplzxVrfRqKK+6ggSN3En41xHGcbpzS5QcVtcTxEwiXiiUCvfSEwRT
otifd5SAI16bt99iOAnk7zZeaecgYPJa9rGcdkeQPdEYKOXLhXcpviAm6YSD
Ddl4nbxmDmzsIWOzuvwFTL6eZdk5yI4pHztOf5z4CUyO+VoHv2DFKZEXuCb/
LYEa6c9ZwoPMOLDqmoXjHh647r/EX3mCCYs8i6DytsrBO7kbJZv5//V9jvXh
g6kn4Q4MDI5np8e1p7jvPJ6/Bi+oyT7WdaHF0QbhKWlUZ6g1N9C4+WyHCl2/
EVyKnsDjjUY6ZZ1UqsK+RJeJ6mFoJWZSpciXA3WsvGwalofhWgf1CM2vFvhT
S0Vg6/MQjLMcMNDop0GvAqdPSYrfhzbjqS/2vKBDXN/29A2ZWMOba5ff/TrE
gOaD9P1DZA2guKru0wOFjMgwXsq364QqbN6dpz5jxYzWfVcqwqL2wpynzHWf
N1mQyvtHfjOitPBl/jeH2x/ZkEb+umi22zAYoM5y2ZtxoC0B/Qx+BwziQ8bI
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
3P8LdTE/d71SeamnxZD0/uPir+1cLKUfHfWJzD9nqFLtzPTMMc4Whztj5vzy
Jccw5ae/gp9s+/F9sVOOYZylnHHVhHUbP6c6WjJe5s7zWNXKaDXd7U6IzY//
31L3Y2dvH2FM7nG+8IOJDpb3vtNevzqy1BjoMXbmwwt2lilnIpKvTo0zthrQ
acwM24SEnEYL2vW7+NhUx6PYo5C0WJPPkzVzzn14bJrf4ES+p7+dOXdehXkD
bS3GKwfbTg3MtTf/N25S9k+DI40+iWdSIrcVN+91Or5pVeHxxudtOkUHbXQ0
T61nNWlwfhdj+rIyC1MHOZnTvRdaPcurYQxvGzM2x+BsPtr8o1ObrwWNxgGD
g4rauJhntO9TO3DnbcPn8VbZAS9czJnP7o5c82yLYc6V3wq0y3KxXHRLfXLR
NdowfM3s8M+VXCwHthqCK3VINvSIPFBp6epDCfmL1xZ1evvYVGPh7hvRdVzM
FT9O9p7d5aphY6+2PS/Pd7H4TLRJ6DPmmMHj0qjbhY86W+pbV03btv+FIS7F
d/rsifNMleuETXb68fl65tXHMR6bXMwnKrf22rzskMHV9VQNu3gXy/5Cuzd2
6L7P0DL2a+w//zlbrjZ8EHn28AND+aigBuXbbE6Iu7P+l+wi6aYee86Z0oJc
zHUTg2Z7jjxleP/ked6C6c4Wq8CgTz4jsw3fwpd/fBq215RSrlJEz6+PTfuy
vpT0TXExB3hN+VSs1A5Dxn+DLJ4n9iR0zF3h0/Dbj++vv68Y8sQ5yuTXKsV/
+I/fP6jnlh1Tus5OuOhc57zhx39vy4I2SWNyXMyvj0xIu+4WZXhUan+mbfFJ
JreNVy5u+PHv/wytsrp84JaEUfmzOyYWSjcVTtvplPh6g8muZ49fetmkm0r+
2cXd/HRJQls362rD7dJNpmUxYWfGLTNllKt2ovoPP9rQeUuzHpEJlWMLnDz/
49ebS7UzfLaMTRi6+HTWoR+/f3DLBU0mfXUxl2w9t0rmzU3q47AU+H//6HkI
WfcaZOUjyPrzQdbzK7LyuGT9/Cbr/QJZ93xk9TeQ9f2ErPenZN0rk/Xnm6zn
b2Tl48j6+5us58tk3XOR1fdC1vMJsu4nyMorkPX3C1nPP8nKx5L1+YSs9ydk
3SuS1adA1vcZst63knXfTFYejqyfh2Q9ryfrPo6s/iyynt+SdV9GVp6LrJ9n
ZD1vJ6s/gKzvG2S9DyXr/pisvhmynqeQde9BVr6CrJ/HZL0vICvPS9bnTbLe
h5F1f0pWPxVZz1PJuvciK19F1uchst7XkJXnJ+v7FFnve8m6ryar/4Ws5y9k
3YeQlccg6/MdWe+fyMr/kvX5n6z3k2TdA5PVF0jW+yqy7mnJ/8uvgtV3Qtbz
EbLuN8jKS5DVj0XW81+y7tPIyoOR1R9A1vdbst6/k3XvTlYfHlnvb8i6LyUr
z0lW/wdZz1/Iug8hK49BVl8UWc9rybonIyu/RVben6zv+2TdI5B1/09WPyhZ
76fJup8nK69OVr8RWc9DybrXIisfRVYfHlnve8i6RyUr/0lWXwhZz7PIurch
K99CVv8lWe9rybonJyu/TVbfD1nPW8m6ByMrf0VWPxxZ72fIuh8lK69JVr8H
Wc/3yLo/IivvQ1YfMFn3KGTlZcjqpyCrz4ys9x9k3WeSlYckq/+SrPe7ZN2f
k5X3JqsfiKzn12Td15GVZyOr75as+wyy8iNk9TWQ1e9F1vsVsu4/ycpbktUH
Sdb7WLLuxcnKZ5PV50PW83yy7g3JyveR1f9N1v0ZWfk4svpoyOovJOt9J1n3
2GTln8nquyXrnoOsvAlZ/Q5k9YGR9b6KrHtasvKrZPVbk3WPRVZejKx+FrL6
/Mh6n0rWvTdZ+Wqy+l/Jur8gKx9CVh8DWf1dZL2/I+u+mKw8L1l9/2Tdm5KV
hyWrf4qsvlKy7hvIyl+Q1XdAVr81WfdbZOXLyOpzIav/j6z302Tdz5OVVyer
z56s+0uy8qFk9TGR1d9J1v0EWfkOsvoUyOp7Juveiqw8GFn9K2T19ZH1vp6s
PAFZ+X2y9j3Iui8nK/9OVt8cWf3EZN0zkZW3IqvfhKw+e7LuNcnKk5LV30RW
3ydZ9yhk5WXI/+unAGu/gqx7a/L/8uBg9a+R1ddL1r0UWXkusvpTyOp3J+u+
kqz8J1l9S2T1c5K1t0NW3oOsPgqy+h/J6gsn676QrPwjWX1DZO1LkHU/TVa+
m6w+NbL6d8naeyErn0BWfwJZfYVk9VuTdV9IVv6RrL4hsvYQyLpHJisvTVY/
GVl9tmTtU5GVjyKrv4WsvlSy+vXJusclKy9MVj8XWXssZOUNyOpDIKt/kKy+
arL2kcjK85DVN0JWvydZffBk3eOSlRcmq5+LrP0Qsu73yeoXIKvPj6z+Z7L2
3MjKE5LVd0RWvzBZexRk3a+Tla8nq8+OrP0isvI5ZPWHkNXXSVa/O1l7YmTl
38jq5yGrD5es/QSy7tfJyteT1WdH1t4OWXkXsvo4yOq/JKsvnaz9Q7Lyt2T1
g5HVx03WfgtZeQ+y+ijI6n8ka++LrDwbWX07ZPXbkrWHQNb+Hll5UbL6rMjq
jyZrb4SsvAdZfRRk9T+StU9FVj6MrP4asvpiydoXIGsvlKy8Oll9emT115O1
d0RWPoqs/hay+lLJ2scjK/9JVj8VWX3QZO2HkLVXSVa+mqz+N7L61sna5yFr
b42svCNZfUxk9R+TtZdB1v4tWf0L5P/1Q4K1x0DWfhdZe4xk5Y3J6kMjq3+c
rL0asvZRycrzk9U3SFa/P1l7UGTt+5GVryWr/4usvm2y9lnI2lsmq++DrD5S
svY/yNqLI2v/k6x8O1n9e2T13ZO1j0TWHi9Z/RFk9VuStSdB1v4YWXuSZOW5
yeqbI6vfnaw9ILL2vcnqlyGr/5asvRmy9gnJ2pslq0+BrL5HsvYVyNrjImv/
may+ErL6VMnaLyFr746s/VKy9tzJ6hMiq++YrH0hsvYoydoXJqs/g6x+T7L2
NMjaXyNr75usfhqy+nPJ2qsha9+QrL1acrXx3vnDo3PR6o8iq9+arD0psvZH
ydqTJmtfnaw+ILL6isnaByJrT5KsfWDypod/npnQLAetvi6y+sTJ2u8ia++V
rP1usvbsyepfIqsfmqw9JrL2O8naYya/mFaiaWs3tvrRyOpvJ2svjax9XbL2
0sl+z7vufTggC31sRZWWGd3fouu8TPlQe/1ztPrgyOqrJ2sfjqw9YbL24cnH
kntN/fnvJ2j1fZHVR07W/hdZe7Fk7X+TWxy7b/Otexpa/Xtk7QOQtcdH1n4z
+dS0HDtz64for4u8CoelpaDVr0ZW/ztZe2tk7fOStbdOHrljb66Tyw20+g7J
2mMga/+QrL1scvar6m0aXL6KVl8YWX3mZO2HkbU3Sy48I3djq5ALaPXpkdX3
T9a+Hll7zGT185DVH0zWXg/ZzeNsrq/babT6ucjqDydrr4usfVey+mXI6r8l
a2+G3D2wwqbrk46i1Q9K1n4JWXuhZPXPkNWPS9Y+PVl9W2T1gZO1v0VW3wxZ
fbjkMl4+NTY77USrP5CsfQOy+mvI2hskq5+HrP5gsvpvyNq/Jqs/iqx+a7L6
ecjamyKrL4isPmOy+n7IWavX+L9b44dWfylZ+ypk9RmRtXdKVr8TWf3TZPUh
kUcFDnl5ZvlKtPrYyOqLJ6uviaz9NrL6o8jqtyYXKHAof2D8NrT6HsnaoyBr
/5Gsviyy+rzJ2hsnq++MrD52svbPyOcup8zz+vMIWn3VZO1pkbVfTb5cNTVk
rGsCWv2NZO1LkLXnSA76PWT3/Ven0OqTJWvvhqx9WfKrd2M2TWqbiB66cdyK
0rsuoNW3TNYeFFn7y+TMDn/Pjbe7gj4yJT5+b8NraPWrkrX/QtbeKjnvVsJv
BV6wvWuejO206gZa/etk7cORtcdOdgkYfiOh2i30mwiPD7Xib6M32IU2sH+W
grYKLfHAv1QaWn3yZO3dkbUvTz51/t/F1h/YMzz8W0YnPUZbn4zd82TGE3QR
u07T/DKfo2ek3f49JOotWv35ZO37kbNa7nw5r0gmul/M5PCoIWzv0Ir3b3r9
h84r1Pioh18WWv3pZO27kbWnTg4cYte/fiL75rVU6/bV3qH3rQvrNOU9W3sF
ZO0pkn+ZNHPXmSrsOX2mF7Xtz/6r9BTLqktsxw1j6+yPzkarr56sPT2y9uvJ
Gf1HZRicPqAt5YZtvDiZPWKzv+PT7jlo7UOQtV9JzvzeqNmiueyhvW1DfvuX
Hewae2NB+Y/owLD8lQ3esLUPQNZ+IflZ+vVzqWXY/qatuXM7s/1y2/V6FMfu
F7y29OxpuWjtcZC1F0pOrtIjte4BdosXJTY9eMqu6r+kYj2fPLT68cna7yNH
eHZ8/mAC2+Gx3fbZMewPfedUf+jwGa09CLL2KsmBv7R6O9vMTrn30956Iex4
36n15txiz+0c2tgr4gta+ytk7cOS9xl8rN2us+9Wdb/6tchXdBWreP/E0Wzt
IZC110julBleO2YHe9y9AZ/DU9mJsYUW92z7Da39D7L2ScmZkXd6Gaexf56/
o1KFw+yAge2Pv/H8jrZ2XfF86me29nbI2gMmGyc1DTtfgz3h6ZNKTv3ZmQfr
BWw+zdb+BVn7nOSqpe9Zv85hx54yXy/lWsBMflMtY5RfK7b2XsjaoyUXSz1+
Mqw/+9dl4U4x49l+Xxruz97J1l4EWXuW5Kl7ixV0O8OOGPioU9OH7DuXZmXN
LF4QrX0nsvanyUkrn7RIrMZOHNBsTZFW7LhPX5vNm8TW3gpZe7DkPad6rby0
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
vJLbv3dgr7t85Ix7F3bz0Z+/denBDrdMHnnan52+rMzC1EHshoMSdnwJZj+w
L/jEaxS7Wu+Z3aIns3uOinO2nsaeMzvj6sCZ7GcH2v1RYT57o10J0+bV7CTP
1l8LRrC//Tbh6IAN7F4BD73Kb2WXiN9SZeMBdoubd57lx7FDXtlE9T/Gvvbz
8NJlT7LnjWjoHJnEPjor6Oq3ZHbGurUL+t5itzz/vXDpB+wC5c99WfeSXbtR
3pEvb9j92lcP7Z3FPj4hPMv9Ezv0uu+zNdbO6OiMuZvzirBvfD/ev6ctu071
cvfcnNmvZ2QkrSrLdl/rvuCTJ9tnX7s2vpXZWx/sO/1zTfZfDSYcWeHNDm8b
MzbHwI4f8LBet2Zsj0XNdrv6sG8/t9m8rBs7sevciKM92HGniq5K7c1eGVlk
QXU/drfuhUJPD2e3ODNz5MtR7Pr1rIcUH8t2dfjpr94T2TfPFvgjezb7jNc/
LUrNZx/clG80LWIvn/zda/5y9p8NvpausIndPGqiW5todj2nL84jtrGd3+YV
Ob6bfT3607sux9innMe9GX+CHfvPx+eRFvbSPjn3XyWyO7tmn51+g22eHmLZ
fptdJ+vdsaQUtuPlrL3uaexrMzLXxL5hW94NW373P/a+/m8XfX/PXtzkzYw/
8tgds18OSy/kgjYOGBxU1IZd62qGXy07tkPMC9+/ndlJfs+aOZdlP7belrvC
k/1ha9DeUpXZpV6//qV8TXaNhbtvRNdhG2uPmFelPtt/9PtPtZuwx5U4uOeA
kT3v8NiARs3Ze7/kXje2YX+ekb+7vS/bvvJJ/+Re7HLnp3t068duaVd4bp8A
do8950xpQezgTnM/DhzKXrzczn/IaHZUwyT3/0LZcXfDk0P+Zt//xcX09zR2
5S2l3OeGsxu3vn/Nbhm73cuI2YtXskfVLJezaj175tXHMR6b2CtHRfltiGb/
e6jyta0x7Ku+GWHV9rLT83YY9sSyixhrxhw6yu6S6BV25hw7ICinqc8l9vhi
h7MvJbHXd/AecOMWe1/Wl5K+KexTS08k3XvAzrhtbpr+hP15vFV2wAu2vceZ
HS9fsev1b13y3Tt2y4I2SWNy2D2iLs7MzWUHt1zQZNJX9uQX7d/n5/9//x9H
WXCf
       "], {{{
          EdgeForm[], 
          GrayLevel[0.5], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1: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
kWPv/Q==
             "]]}]}}, {{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], {
            GrayLevel[0], 
            LineBox[CompressedData["
1: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
+FX8Vn25OO+wKdivsRZxF8a8GJMPK4LN0F/iT/FXYz2prv5R7EmsSOxLvmes
i+6InE6fDMuIDZA386v5bfry9Cw2Nc7AWBc5Q8yRMfmxothM/WX+NH8t1jbu
Bn0NrD5WNPYu3yvWSHdUTq9PjmXCBspb+DX8dn0FqqQvhVXBWuun8eNivXQZ
Y+70BbBi2F/6K/wZ/nqsOdXTPxbnM1Ys9jr/fqyd7picQZ8Cy4wNkrfya/kd
cYdQZX1prCrWRv87Pz7WUZcpzm19Qaw49rf+Kn+WvxF7Ic50/eNYQ6y4/hP+
g1hT3XE5oz4llgUbLG/j1/E749vpEX0ZrBrWVv8HPyHWV5c5zkZ9IawENkt/
jT/H34w9EnetvibWCCuh/5T/MNZXd0LOpE+FZcWGyNv59fyu+Haqoi+LVY/7
V/8nPzHWWpclzlZ9YawkNlt/nT/P34r9Qg30tbDGWEn9Z3zvWGvdSTmzPjV2
HzZU3sFv4HfHt1NVfTns0biD9dP5SbHWuqxxNsf9jJXC5uhv8Bf427rWcV/q
a2NNsFL6/vxHsdZxluiejN8inoVPw2fTDZN38hv5PfEduqdiD/LV+PJ8jfgz
hfdm8JNj7WO/6xrFt8QZzz/Al9bN9d5N/iJ/R9dW97TcJu4Mvg7fVNeeb5X4
//+PprQx/wMbMx4T
             "]]}}, Annotation[#, "Charting`Private`Tag$28196#1"]& ]}}, 
       VertexColors -> CompressedData["
1:eJztyCEKg2AYANCPDWyr9nkCg3HwszKWxWYTjOIBhsFz7SoGyxBvoX1XeOnB
u3dj3V8i4nGLuJ4u32zahzU933k5t1tqfp9XUS3Je++9995777333nvvvffe
e++9995777333nvvvffee++9995777333nvvvffee++9995777333nvvvffe
e++9995777333nvvvffee++9995777333nvvvffee++9995777333nvvvffe
e++9995777333nvvvffee++9995777333nvvvffee++9995777333nvvvffe
e++9995777333nvvvffee++9995777333nvvvffee++9995777333nvvvffe
e///B5MC4N4=
        "]], {}, {}}, {
      GraphicsComplexBox[CompressedData["
1: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
unXyf32QSPU//dcP//P/B43cf10=
       "], {{{}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1FXUVkUAhtHvp7u7QRrpRjqVbkRSGpGW7lQ6pbs7BKVTpUsBAekGaURB
yX3gYq9n5ty+s07aZh1rdggXCoXCSBD2ofHDPpzzOMfTsxpNl+gJwjn31Tkc
4H++oCvfs4snlKI6bRnFj9wmN7nISQ6y8zHZyEoWMpOJjGQgPR+RjrSkoSTV
aMNINnKL1JSgKq0ZwQZukoriVKEV3/EDN0hJfbowmZ08phiVacm3rOc6Kfic
zkxiB48oSk9m8Av/UokWDGcd10hOH2azn/+oRycmsp2HfEIPpvMz/1CReRzi
Fc0ZxlqukozFHA+2tVdvPUUk51m6jxfU5Q+i+L5AY+oRfUNHYrv/rhF0gkbX
bfqAIsR1P6NRdaHG0qP6lu7EcT+pEXWaxtC9+ozPOE1k3+bqQV7SjN8I7/tQ
XcMVkrKIY6HQ+4faS2byK8+pw3wO85oOjGcr9ylMN6ayh7/5lC8Zwmouk4Ta
tGccW7hHIb5hCrt5SgWaMphVXCIxtfiasWzmLwpSniYMYiUXSURN2jGGTdyl
AOVozEBWcIGE1OArRvMTd8hPWRoxgOWcJwH5KEND+rOMP4lPvGDHYKtg72DD
4B0EWwV7Ey3YN3gjwVZECvYM3kSwEcH/Iy+laUA/lnKOdyKVgjI=
             "]]}]}, {}, {}}, {{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           LineBox[CompressedData["
1:eJwl1GWQVXUAh+FlwaWUbhRYukG6u7tBREolBHbp7la6u7tTQJAuQaVR6VA6
lBQlnzN8eO57/ufOnJk7vzM3vGVknYgoISEhCXwEPccy+vE5ZchLKFGJxgeE
EZ0YxCQWsfmQj4hDXOIRP3g+CTnPcvrThLLkIxEXWMEAvqAc+bnNFkbzDbVJ
zEVWMpCmlKcAd9jKGNpRhyRcYhWDaEYFCnKXbYylPXVJymVWM5jmVOQxe5hK
Vwpxjx8YRwfqkYwrrGEILajEE/YyjW4U5j7bGU8Er/mZBdTnXw4yi14EQx2T
xSTnKmsZGmzku5PakpccYV6wlftntTJP2Rds5d70YE89HWyl3fUtvwYbOi8K
9tXfgx21iD5gR7C384TgndBTwd4aqW/4JXgPnBdqDP1NG/CCQ8wmzP0z2jv4
Sa6P6xJScI11DONLXnGU+VThGfuZQQ+K8pAfmUhHGvIfh5lDH1JynfUM5yuq
8pwDzKQnxfibnUyiE434mD/ZwAi+phrF+YddTKYzn/EJf7GRkbSiOiVIxQ02
8S2tqUFJUnOTzXxHG2pSijSEk5Z0pCcDGclEZrKQlWxkJwc5yUVuPuUW3zOK
ttSiNI/YzRS60Jj/+Ym59CXUXid0KbFc/xHy/j8kj74DP0KCBQ==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$29988#1"]& ]}}], {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], 
       FormBox[
        SuperscriptBox[
         TemplateBox[{"\[Psi]"}, "Abs"], "2"], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotRange -> {All, All},
      PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                    FormBox["\"arg[\[Psi]] / 2\[Pi]\"", TraditionalForm], 
                    TraditionalForm, Editable -> True], {
                   FontFamily -> "Arial"}, Background -> Automatic, 
                   StripOnInput -> False]}, {
                  GraphicsBox[{{}, {}, 
                    RasterBox[CompressedData["
1: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
/wEdeLt3
                    "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                    AbsoluteThickness[0.1], 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                    LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                    CapForm[None], {}}, {Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -56.25}, 
                    Offset[{2.5, 0.}, {7.5, -56.25}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 
                    11.250000000000014`}, 
                    Offset[{2.5, 0.}, {7.5, 11.250000000000014`}]}, {{7.5, 
                    33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 56.25}, 
                    Offset[{2.5, 0.}, {7.5, 56.25}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                   Scaled[0.02], PlotRange -> All, Frame -> True, 
                   FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                   Opacity[0], FrameTicksStyle -> Opacity[0], 
                   ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]}, "BarLegend", DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{"\"Rainbow\"", ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Psi]] / 2\[Pi]\""}],
                ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
             "]"}]& )], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"V / 25\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7073485466734304`*^9, 3.707348572836429*^9}, 
   3.707349161501952*^9, 3.7073495329299445`*^9, 3.7073496709963865`*^9, 
   3.707349717813573*^9, {3.7073501675274954`*^9, 3.7073502153438745`*^9}, {
   3.7073503144444723`*^9, 3.7073503434455843`*^9}, 3.707350466594777*^9, 
   3.7073506295404625`*^9, 3.707351355807206*^9, 3.707401197904128*^9, 
   3.7074013728820543`*^9},ExpressionUUID->"daa1ec81-7681-468f-87aa-\
e9232d69b7a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"coherent\[Psi]", 
    StyleBox["[", "Code"], 
    StyleBox[
     RowBox[{"space_", ",", " ", "time_"}], "Code"], 
    StyleBox["]", "Code"]}], 
   StyleBox[" ", "Code"], 
   StyleBox["=", "Code"], "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"simulateWavefunction", "[", 
     RowBox[{
      RowBox[{"coherent\[Psi]", "[", "x", "]"}], ",", " ", 
      RowBox[{"harmonicV", "[", "x", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "6"}], ",", " ", "6"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "0.5"}], "}"}]}], "]"}], "[", 
    RowBox[{"space", ",", " ", "time"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707349780206916*^9, 3.707349813905442*^9}, {
  3.707350010539609*^9, 3.7073500158217*^9}, {3.7073504790820274`*^9, 
  3.7073505323230495`*^9}, {3.7073506136371393`*^9, 
  3.707350614048109*^9}},ExpressionUUID->"60471bf8-04bc-483e-8ad1-\
a608c0927ac0"],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","bcart",
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"",2,63,829,32565493566245946097,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.707351355998685*^9, 3.7074011979351273`*^9, 
  3.707401374057873*^9},ExpressionUUID->"5c238b4d-8b22-4ec6-9b7f-\
110115fdf5c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"Animate", "[", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"plotWavefunction", "[", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{"coherent\[Psi]", "[", 
           RowBox[{"x", ",", " ", "t"}], "]"}], ",", " ", 
          "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", 
            RowBox[{"-", "6"}], ",", " ", "6"}], "}"}], ",", " ", 
          "\[IndentingNewLine]", "\t\t\t", "False"}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{"harmonicV", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", 
            RowBox[{"-", "6"}], ",", " ", "6"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", " ", "Red"}], "}"}]}]}], 
         "\[IndentingNewLine]", "\t\t", "]"}], ",", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{"PlotRange", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "1.2"}], "}"}]}]}], "\[IndentingNewLine]", 
       "\t", "]"}], ",", "\[IndentingNewLine]", "\t", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", 
        RowBox[{"4", "\[Pi]"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], " ", 
    "//", " ", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{"#", ",", " ", 
       RowBox[{"colorBar", "[", "]"}]}], "]"}], "&"}]}], "Code"], 
  "\n"}]], "Code",
 CellChangeTimes->{{3.707350041214207*^9, 3.7073500571643496`*^9}, {
  3.7073503897280273`*^9, 
  3.70735044379712*^9}},ExpressionUUID->"4d09cece-4240-4b3b-aefd-\
be8e7bc26124"],

Cell[BoxData[
 TemplateBox[{TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`t$$ = 11.089822067171971`, Typeset`show$$ = 
       True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 4 Pi}}, 
       Typeset`size$$ = {360., {118., 123.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       True, $CellContext`t$31731$$ = 0}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`t$$, $CellContext`t$31731$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[
          $CellContext`plotWavefunction[
           $CellContext`coherent\[Psi][$CellContext`x, $CellContext`t$$], \
{$CellContext`x, -6, 6}, False], 
          Plot[
           $CellContext`harmonicV[$CellContext`x], {$CellContext`x, -6, 6}, 
           PlotStyle -> {Thick, Red}], PlotRange -> {0, 1.2}], 
        "Specifications" :> {{$CellContext`t$$, 0, 4 Pi, 
           AppearanceElements -> {
            "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
             "DirectionButton"}}}, 
        "Options" :> {
         ControlType -> Animator, AppearanceElements -> None, 
          DefaultBaseStyle -> "Animate", DefaultLabelStyle -> "AnimateLabel", 
          SynchronousUpdating -> True, ShrinkingDelay -> 10.}, 
        "DefaultOptions" :> {}], ImageSizeCache -> {411., {156., 163.}}, 
       SingleEvaluation -> True], Deinitialization :> None, 
      DynamicModuleValues :> {}, SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Animate", Deployed -> True, 
     StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]],FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"arg[\[Psi]]\"", {FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False]}, {
              GraphicsBox[{{}, {}, 
                RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
                 "], {{
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}}], {Antialiasing -> False, 
                 AbsoluteThickness[0.1], 
                 Directive[
                  Opacity[0.3], 
                  GrayLevel[0]], 
                 LineBox[
                  NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                   7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                   112.5}, {7.5, -112.5}}]]}, {
                 CapForm[None], {}}, {Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.499999999999999, -56.27853081669613}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -56.27853081669613}]}, {{
                    7.499999999999999, 56.27853081669613}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    56.27853081669613}]}, {{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -56.27853081669613}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    56.27853081669613}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
               Scaled[0.02], PlotRange -> All, Frame -> True, 
               FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
               Opacity[0], FrameTicksStyle -> Opacity[0], 
               ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
     "BarLegend", DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"Rainbow\"", ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Psi]]\""}], ",", 
          RowBox[{"\"Ticks\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"-", "3.14`"}], ",", 
                RowBox[{"-", 
                  FractionBox["\[Pi]", "2"]}], ",", "0", ",", 
                FractionBox["\[Pi]", "2"], ",", "3.14`"}], "}"}]}], ",", 
          RowBox[{"\"TickLabels\"", "\[Rule]", 
            RowBox[{"{", 
              
              RowBox[{"\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7073504457386227`*^9, {3.707350487889899*^9, 3.7073505125581045`*^9}, 
   3.707350547898693*^9, 3.7073508825379343`*^9, 3.707351356227869*^9, 
   3.707361014587282*^9, 3.7074008721349316`*^9, 3.7074011980201445`*^9, 
   3.7074013742128897`*^9},ExpressionUUID->"0be03eb2-2446-42ff-81c7-\
59ba0ddd3720"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantum Tunneling", "Section",
 CellChangeTimes->{{3.7071870962896404`*^9, 3.7071870987427683`*^9}, 
   3.7073469133494034`*^9},ExpressionUUID->"8b8836d5-f4a9-42fb-8399-\
8566ab0cf67e"],

Cell[TextData[{
 "The Schrodinger evolution of the wavefunction enables particles to be \
appear in classically forbidden regions. Consider some corresponding waveform \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Proportional]", " ", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"-", "2"}], 
      SuperscriptBox["x", "2"]}]]}], TraditionalForm]],ExpressionUUID->
  "e1a7cff2-c700-43a3-bc5c-5025f010d58b"],
 ", ",
 StyleBox["kicked",
  FontSlant->"Italic"],
 " by a phase gradient ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], TraditionalForm]],
  ExpressionUUID->"1549ee2d-2c74-43a0-b82b-01a91a4c1ac7"],
 ", approaching a potential barrier."
}], "Text",
 CellChangeTimes->{{3.7072295289351444`*^9, 3.707229634249956*^9}, {
   3.7072297853892765`*^9, 3.7072297877005143`*^9}, {3.707229834608117*^9, 
   3.707229834608117*^9}, {3.707229865725167*^9, 3.7072298745102634`*^9}, 
   3.707231552844376*^9, {3.707249370770306*^9, 
   3.7072493724654837`*^9}},ExpressionUUID->"0c5dab27-9be2-4573-b28c-\
7385535db53f"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"incident\[Psi]", "[", "x_", "]"}], " ", "=", " ", 
     RowBox[{
      FractionBox[
       SqrtBox["2"], 
       SuperscriptBox["\[Pi]", 
        RowBox[{"1", "/", "4"}]]], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", " ", "2"}], " ", 
        SuperscriptBox["x", "2"]}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", " ", "\[ImaginaryI]"}], " ", "x"}], "]"}]}]}], ";"}], 
   " "}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"stepHeight", " ", "=", " ", "30"}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"stepV", "[", "x_", "]"}], " ", "=", " ", 
     RowBox[{"stepHeight", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"UnitStep", "[", 
         RowBox[{"x", "-", "3"}], "]"}], " ", "-", " ", 
        RowBox[{"UnitStep", "[", 
         RowBox[{"x", "-", "4"}], "]"}]}], ")"}]}]}], ";"}], "\n"}], 
  "Code"], "\n", 
 StyleBox[
  RowBox[{"Show", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"plotWavefunction", "[", " ", 
     RowBox[{
      RowBox[{"incident\[Psi]", "[", "x", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "2"}], ",", " ", "5"}], "}"}]}], " ", "]"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"stepV", "[", "x", "]"}], "/", "stepHeight"}], ",", " ", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"{", 
       RowBox[{"x", ",", "2.99", ",", " ", "4.01"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"Exclusions", "\[Rule]", "None"}], ",", " ", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", " ", "Red"}], "}"}]}], ",", "\n", "\t\t", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<V / \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "stepHeight", "]"}]}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], "Code"], "\n", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7072208193966928`*^9, 3.7072208443426614`*^9}, {
   3.7072218611471043`*^9, 3.7072218618625717`*^9}, {3.707221897271208*^9, 
   3.7072219627642355`*^9}, {3.7072220132849197`*^9, 
   3.7072220819072676`*^9}, {3.7072221874305553`*^9, 
   3.7072221987897453`*^9}, {3.707222272976853*^9, 3.707222274795181*^9}, {
   3.7072225782990527`*^9, 3.707222597145813*^9}, {3.707222668450097*^9, 
   3.7072227007182455`*^9}, 3.7072227400069094`*^9, {3.7072227793203354`*^9, 
   3.7072229285580754`*^9}, 3.707228798756957*^9, {3.7072297292601433`*^9, 
   3.707229746870408*^9}, {3.707229792006381*^9, 3.707229795221923*^9}, {
   3.707230422678875*^9, 3.7072304390966687`*^9}, {3.707230488704966*^9, 
   3.707230491089522*^9}, {3.707231738196059*^9, 3.707231754384697*^9}, {
   3.707250885127314*^9, 
   3.707250888215081*^9}},ExpressionUUID->"509dd8a0-41c0-40b8-9315-\
1c8acf5bb5a6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      GraphicsComplexBox[CompressedData["
1:eJx03Hk0Vd8bOH7jRYYMUUlFpJKQFPV2znOQIUmmiFSmpEJIoigVIjJEhlBI
GZMhQ6YtFJkyRSFT5vmaZ9++a/3up+/6rXX9Y73+ueuue569z372fp4tZHZT
5wodDQ1NAysNzf/9HzTx7tfGxgYSJyvwbWV9iPPcSNyQqV1DkmGtSz9rMnCn
jyGGPDdW0DO7iZ8Hi3px2cAyc5PDSyjgi/J6hCQ7PCrcqt5Gt4AepKsWXuqU
hrRsfYu1+FnkIQXPY7IMQE7hp0TAzWm0W4e7rKLJCeIjTh6q2jSFHj49zP0y
LwSOeKZutjAbRZc38ra0d6bBrxW9vVw0g2iL128xJfVSUGRriuOEXmQTEHik
LaUJ6h6l0rZHt6Ms9OHr/r09AJJqEmojjag84TNzy+1hsNm169zH6VLES1OQ
s+AzBelbmFY7TnqiAVfX5Z+s01DdrML3vfwzkPY0PJrPmYJT1UHPFBUbgclb
mp6GZwSye+fqzGjaoVTzHPYstwc0zQ0EJ7FeYOHplyB9aALP9DTn78kD8J51
6EWHVRksm0tdu+g0CsFio3K/LqTBoYKs+kreKRi/baPgpBoCGxl+8rOq0/B0
WO6K2LQzTLXfdXRKmoU4n+OPQm8awONboqs+vfNwp1pJhz5RBvzyUxPsOJfA
aixiY1aEE7Jk1Han2axAV/3xMq/gXtxNIHbANW4N3KV+QkblRzwzkgnTpqch
mL+0m12LdMd7aFLDayVpCY/NggbaSqp4j4BkFLcaHXHdYDTs+E1O3K6xkJHe
mZ4435BRMjX1HavHD2wtDGYgGNTepYsMBGBjdI/zO5MYiZOH4p0/rGpgYSaD
ZamtJGKMdHVTnBMtxnNb7LYSmYnwXIvxWLbKkd8l7OznuYeFoPn//pafxJ8O
hE3/c9DJ4igGA9b/Ofdlr66IF9v//CGhP5Mtlv1/PqY5cyemieN/lhe9M6hJ
w/k/f6XpG8jw++dt+/UjRkS4/ufG5NzXTFn/fP3X5puGOPf//E3Phuz+45+D
DuZX+Jnx/M/xBdfmNzb+uTE1wfrlwDq6WBg3zsIfgZcHvBIXiVpFIcWe929b
VeH6e1I7j2suI/Hizh3fWxdw43fj+jv5F9Fla3vZrEFB2HZctnW0aQ7d/n7b
wzNaGW7dCzul8nQGxZcV5R7Lvgq2Nhxp4hgZ1T0zd0rDvADv4D+6WjCOuDf9
d0VQJQ68Stxfnjg8jPQSK1PVjuUBB8OWvsDXfag7lv2snXU1NL9r5togdaNc
boH/hlzawAlvPR9nXoPq8kvNohPHIS+gU4RO9SN6KbvD/XQkGdzNvVQe2qVD
WQjmfqKUDGlHs7cli1TDexaBgPkDE7DRopSmE9sCdufEBPv7+yFRr/GJYHEX
vA1Ii55cb4MRlscalx37wG02rpH/UA0QTyftQjmH4aEB+ZNFUx6IjZ/2XKgf
B/XMzUMV47EQeizGq1OCDBE9MnmWo16w+PXx+WznGXjszxV2K88K8hO05Gi+
zgEH7zWmC7YqwBw2rO22tABftkcnu77cAzF37ppvhmX4uU3kHRfzEh6eOPuI
13sVJHvmi87o1OBTB86nBzSvwxkFASeOzpe4et2v6wERNMS1rZdv4LwWeI+/
Df9UAS0R7KUlmysujicuzNVv6qYj8o7EnaoMmMJimG/5dzEyEJO33t4gn0zH
OgVbrGp3MRKKdzmiry7ZYqWHj6IvBIn40+ysi62LYj9GvAWcLZgI/Mh2pZpH
HfLbNBrc+3yY/xcvfuc4xjZl/BsPL2e4Lqtk/IunzDP7hM/c2kCVCypKhebP
cGs34dBUmTX0oPDM100/inHLG4JR7zqWkR2R1JfGMoGrR57/Xfx2EV070UV0
avFB7d0ETvMb8yga2S+E5cpD4LaFltits+hrldzJx60moGtwa+JiCxkdx64I
vmN0hzKmRtXKoQlUpO7jwpISCR1xfOe+nxpBYm4ecNw6C2YffGRo+N6PvsrG
3d3q+RV8f+m2MQn3IPLs04g7Ey2ADRq+Z/OvR7eML0/zx47CKctnV4/yFaHx
bTEy8nvJ0EzLqlkdEAlGJyrD79BMgzzj/bBCx6/wMDtUYHxsEkQaRqKr7JvB
sHmHXRHtEKTtsEhRuPwbSE/E5hW3d0HUMZtj+wz/QG64wznngnow2/l9NvP3
IPBt5g+blkXwfD9+J/nNGNgLETkTjgnQu5iUohs3BWm/NHcxxvmDq7x3lV73
NNyYVeeTSbSHH5+v6BfIzsGT2hheV3UtUGFkTqC3XQCNQ6OSbG0HgS8imLEk
YQkyPZ4GOB5jgHe2uxp6llfAdUtuagdrK37sjetpr//WwXIRC9cvS8DXP07p
2mnSEM2NOkI3jR3wngq/X523aYkXD0dOp+cdx08+fZ7DEUJHzLTJZlWF0uDe
41vVycX0xMJE1BUT6RKs9cMGOvmLgTAWX27bGvIAM+DvkNeZYyS6Cnk5N88d
x3L2ytlx72IidtaOfE7+OCkf2r22HIz9i6dz8kryldf+xVPoZsvgYZ9/8TTN
uj9n0HAd1VXXt43Lv8V3xm0vi6RfRRGbH6CHl1pwlV+yQrVoCTGcof1yoZgO
bmY8qr/nv4BSJg6RtpscAPOFr9GO8nMoi0fqI9qqBfqdsoUjq9NobN5cTv6J
Hfg8TrJZeTOFCBZjx6wn/pCXbr5HKmAMae87+FmuJwGkOke63m4bQvpvyt3u
DxTBfu9bZVo3/yCDIXe7xMf14JC2rH8wpQIJJ5CrttyfBE2Hy+XRk++QSMy+
uj9DZPAlPf20ee0T1LBd6ZbUJYOg5VhEWPN3KOG1amGWHoMGFcHMBxw9sPGF
zyDjUCvI/Q43Cwvoh1Uxd/8bDypg58LmcRelEeigcbd96pkFpRmGwSfXJ8B7
6q53kUAkqDuGml4rIMOIBrtjy6o7OGo/GODlmoUukyYXhZ2m8OrZf/zKevPw
OtCDMz8Uh6r91avzHovAn94zaP16G4jpm36+1LIMzx6lcL9KmsCf9lbJnOJd
g0mwp/0q/xlPTj/CG2GzAQHlK4/+2+SPhw6WPkzroyHm6UW8pArO4T3nNC/Q
0tERQx9krWmDd+FsVwxHSeL0xB/rDU0bo24sT7iusVaDgfjZ8tP4jWQM1h+U
yqVvwUjUe3a0qfJfwsRP+Ssc9yMRd36iA2V7t2CzH35V/k5mIkjbo5jDr3yT
j8yNJx1t+Rcvr1uLxN78/Bcfe3Zdvf/u0wZSdP+zdNzKCydm+6um3NfQiEvR
55e3c/GJgLblDuEVlB1SvjRbMoiX8PrHBIwuom8eri6CXNyQGHn5/a7ceaTO
WMWpeFYWdg++iz57aRadKgrzXDhlDCo1b/3n90wjevfuk3a898Ar+pC2xINJ
JKbsIjW+FAbMIaaZ21tGUEvaSZOicxkwUMTAS746gOwfS7Pl6pTDgEMwzpbR
g8aluP2zlX4AztpgI1bYgApvKH1gCRiBb1YOHoPFJci16+Bruo4pcL3DVG88
7g42xhysIWzTwGDT2/JFoBwEWSRtZC9MwTHN4hckoyZI1j+jYMo2DNIb4lij
ZAf8kYvf0/2qG+Y0zA76VveCemfdMeeDjTA7UHxM4eQg6L/9UX3E9jOoqMhO
0bOPweYUD8aSvGRgbpPAOYynQEfM0JT9bRDgd54+FgmZBidOi3A5htvQq2nX
Hz41Cz0vHPftD9QFC/mwBpX9C6DVl7MwvCwFDQdi9LcZL8HhTFv9iRAWSNU+
sqj6cQVUDh7a3Xz6N97WxRFBO7kGElMTG+wuH/Dz+10ru/fTEOGplTqO+c64
qYXA8RYdWoL7ZDXLAW0F/HmTSRKnLR3xkWOpbLMZE756eWTf3Uh64uUpgdLS
L18xvTshN9xzGIgim92Heu54YXH+H+6Ff2ckaOfNTx+0VsJEyza/7FomESy0
Satz/gvyzWJb8m5s/Rc/+R8u9omq/JtvQnYGHvrP6V88mXVc5VKIWUc72SXb
Pc/H4FPbOha6zq4is0eZbJ+PNuB1a+QH9EzLqC/z5d6qiTV84GBesEbzAgod
/hJqWCgC+LYHJ6S859CXWIfJJ9fUoS918FG40gz6OH9mRIzJGlwX29lDpqaQ
7vu88EPbnsI9FXQwdO84Eq1m7JsfiYcL349iU/FDqHZ3y+HtU/mw42tZkx1T
H7KaEFeQEK4Dx/mhVkumKsQ9Fdvk8nICutQ4mBqKP6DLTRoHtCrIQDrK7F55
LBtqB6+0RQeSYbBW61eMay2MeirsLD8yDs/zGFYqnLrhEe1suxvbLwiaeWaw
QtsPGEns21LpN0gr2ZBgTh4G5iPM9nGsOeD0XYft1dUJoHeVOP5T7vXfddOO
WeHbZFj/lkGr+/kxHPN7+Lq/fAaC93Et9IVbQCq/StIe9nk48+7WfgtfRRi+
bLTvBCzCplssAj5ndkH/gA137tNlUHto860zegYP+tJ14UPdKjgd3hbMuvsr
fmb8i9kWoQ0ovLv1RuvOEHzKSHN+F6IhPN+pqN19cRE3nf6dv9hJS7Cu1h4S
qhDBjdL2dTKT6Amt2Fwtbc1BTDw0Jl3/AANxd3V4C9/yO8zMUKEoSIGR8Otu
y+6IvoLdKTJ1f2BJIhLfD9j+vrsLsziTMZ38hIk4cy/pzDe2Jvk22oIytvR/
8RLVP1g+W/4vPhTdBitmxDfQLW+O6+4ngvFwkqmp1dAqOutM4rkjU453qlhi
di+WUfkBmT6F6Wm8SVCYf+LyIhIcbwVW9x0wbTh5K2H3PNqnOtJ/MF4B6NRV
OWfrZ9DRJblrj2ktwKSX0PziQ0ZhFtkbmoOPgMbBCTfTmUCykodXklpfQ0ZG
9YJH0TDakIh4TMrJBlpFi9l02X5EU6N4K7G3EmhWjn6NTMtDWZW5+SJXyDAn
zMLvqJcAlwS57kQPkkFJ0FmhbOAP8IZk7TlXXAcNul2ZIneGYPuleI/27gLo
3KS8rnViHB4ocb5Z946Hwq17t0cMTcEFoei640+eQj6tF5en+Axw7Ou4phNq
A5UyFyp+358DwYc22ju4TsO+OmfXkqwFUIi92EdTJQoXmJ98vDqzBIxCioPR
bRv4a1+W5HsKqxDdk35Shq8RD7YcWdvkvQ44GzuNVl8sHq9wpWvjFg2xS7xI
6f7hG7jpwTWXwXBaQqzgpMwXjiP4PFFexpZPR4Sx2ycdclnAttxTtrbq/fu+
URQNZlrNwYyGrm9hWWUgrK7IWfYJO2Fs75jXWXeQCF+TzsULGocxFW8TFWUF
JqK54dmnabV+eYPQQazQ/N/zfvTfkJE/zzrSWOxe8HySgqsfNPA3yF1Bn/am
LAWvd+DFH91KQ52XUIws5vrrOhMsHjvDnqK2gFgE+q1FVyTAu4WD9tPULMKK
n0k+89eFis3ec/I502inR+ovN4dbEMpxp9bMYAphvr8tDL8HwTw/8/aqxVHk
ESk6wS6VAnaWbC2Tml8Q341Uv579U3BX1pT+BxGF+Jhv9H/bIAPnT9YZ/bJi
iI68/NFuExn8DgmmjHaMQIE1hwEdlgEcISb8oyGTMGT1Vrn1bhiIBHN9T6Od
hk3MiTtf7XWDTD63QyoXZ8EIjy5NNDaGQJrDvlcj56HF4XcLEjsOKeT/GrOq
FmGrxaQawzwP2H7RsyPtWYGHBcvEtoFB3GMjm/3PhTV4OqkWVVSTjzM5xlbs
zN8AiQ8uZr0XvXB5R1l2fBMtMc2dEsTeehY3/VS8wrKXjvDZ1HtV0p4PL97h
u8igQ09sj3N/39vbgp3MWJk9acdAJO7W9l5FoZhV1VZL/ieMhM0mCZ+rw3pY
b3M+3UwGiVjIkFsSC9yEeXDTveasYyJujWbLxv8pkY/7FhyoPfZvfBqRmMSb
OjZQZMYAL+73GE+WVO3nTlhDh0LvnxC0/4hLx8mKOauuIKZbgrTp/P34auN+
OmeOJXRg04v4WYwTeFML7q12zCP4NDL3ZlkGLOvW3d89nEUGrGt8DQOGgEio
U/HUNOoIbC4O6HKGq1bt50yrJtEO2caf66dD4RUbUw8uMIo8JaP2lRqnQ3eH
+E7ajwNo16mVyXOnyiAEsuw4FnvQwmr/PbPbzYBHs2ke121Ere12hrL0IxCp
VDlW+/MzWlynq+X4OAX1jusfaC5pI42F/vUG9mkYiglxqpoqBW91ziTFp1NQ
wpYYJFLXCFtFjhSpBg7DrB2XF394OySI91XcFeuBPT879hZ59MI3kJBvGGmE
wuocA++FAXB4eHv0smUpCP7ISk3/PAqHArgERt1S4aW6/ZNRuSmQ8znXNDv6
HF6FsJqw2U6Dws+TYWmDTnDtxVwqU+0sqGNKu/bfOAezrZ2WVowL4Fffpt9Q
IA0SDqIPTh5bgs9puucYSthAqqyIdSVwBY6yWTzf696Ni6+3AqpcA2NhlQ7j
rZk4Y+9nuu18NETSR7knwimueKx035C2Ai1xa4thUhrPSfzEYkUc1wU64vfa
2WcvCljxYxFNocU+9MSJuOue5stVGHf7JYVdbxmI+hneOLeKp1iF2vbIgkJG
4uHbHXMGhapYZ9CKhMowiSigtYm9n7EqP3v2dagBAzOxfN5J/fZYhrz18HU5
fZl/64HnIm+Xza3/xdPLciZkU7aOzNUn8+ISonAjPYybzmkVmZ7X9mnaX4dz
c5798EpsGSGByDC+T8u40LDOnMzCAspw/iB0NX8PpOxvZ+ZIm0NMf2TKugdU
QTwELCctZ5CExoetTN+uwZz03MVuPjI6QtIutdjuDcZcNlLf7MaR29Qm5jr/
NzCl2n6Dd3QIfaqylqjz/QRb+kfb3XX70Ez71r8BVgO3+U3CPY5Wo7BPwyZy
whOwpU1a7yhPJsL1HR3CMv/O9xqqf+KbMmG6rdtuPJkMVbT0Lm+1amDt+diJ
6+njcIvstHtMrBu2KWg+OUffBsX3mXUOFfQBHkJ/QGKmCu68XTh79uIw5M9N
72K/mgtal75XqgtMwAldWZtThTFA//UiRqtDhvFb5PxxNU8IS6JzrX01A+0n
Ft5EPbeEI6bVdkHDc5AozY7XWp4E55XYwgsCi2A/3mwkVy0IipKzJ/5YLMPD
WOHHeWLz+BbZ6zfNUlbhePK45CuWb/gr1gCWxuV18KMPfPlaIQyP3hIiZZBK
Q+xh+6Nfi5nisSVvrzvW0hJp3jWBVUf247RN/q0sM3RE8f03ffLVo5jld5/d
kVsZCJE+hpA+wxRMsIg1WFKKkUh4fmp5d+81LOpO9es4XRLhdsjCpfLTHkxA
IPoJlxMT0f2svfPP2Vb5JVGVuMWof++HyLHVoJ0F/+Lj7pUntwW1NhDHOacT
7vWBOJ1i6b2nHGtoY5p9a0rCZ3yPYZk166dlFLlH1jajawrn6Cy61/JoEf2q
Ep5IrdgGJtdPK3oqz6NL62Ren1aAU4dfz6jPziD+PmLEzdgM2gSMXnGlk9Fl
joTGaquH0CsvovQiegK1feNRFs2IBhUxe9Fk+hGUKnXW6PHTj7Bs4rda8rgf
tW+vIl9Nq4D49J5Qq958BPsZ6c1UyGCn86Rb3D8OaPe9CXw999cp0//Nvf4D
cQ+jbrZtqoeXcq1NN8SG4GSmf9/coyLIi/icvzYxBhWhXK9tZ9/CWe+rZk5f
poDN9upKz2M/2LGbacKaNAOvBC7oDYvZgea9bn+NC3NQtm1BJ+bjGci5VsLV
G7gAESsOJOsjByBPi/13cO0SLDHzBtVN08KeteAiiV2rYMir6CVu3Yz3eWTF
V5qugzirXqRdTDyuvZK8Xc6Uhki3D9npEnUTj10qP2D+hJbIX0g5ELT3GB59
5WARewIdkdORoP5uZAXT/CjRnlpPT1w9Ea9ofboA26ZxdOTdCAPRjzMcXHG4
i0mbOOyUZCYRgcPfuu5KH8XW9TXaUySZCHfPgrO6q8PyTgUOAola/0++IOzN
XHBsHQlrLRb9kUzEP1rmJbr8XkFvf4ja9bj8wukq2siHo5ZQB9u5mPlZBpCZ
HbQNvrGAQGvRYZJVHOYHrn8P5ZtDzxTElnYgbeBY6PoZ/Gsa7SlUEmObtAfO
U4E7P7hNoeZXt9297gdCa3/2zjWlMbTscWNkh1sS2D99HMru9hXZXe23pR+Z
BBITszCDdxxqOUkb9uHv89OcVNc/YlIIQjomfoelyKDHva1GOnAEhr/pn20x
zIShPb9bwk5NgrD9mqwSFgG59Hrb/DrJ0Nq+89X5uw+AR2adRUJ2FoYuBVnw
HLwMW1VzdFruzMOE6aYhjs//wYlnj6/+SFgE2Ujzt7yH+KCGvT1cenUZ0CvI
MdwyijPZE0KhcmvgfsKj8sPVYvz88+u27cEbQDKO7Noy4YMPH3JTdVqgIQIP
Nuw7FqmDxz7xSvHkoSM4BPbKlhzhx68Q02RGoCeeXD1wzfRSO3Z/pM/c5xID
gSQqLpjtjcREJXr/y7vNSHS/wLb/3GaIMQWI7OF7TSIGZZ1adl3kxOR7xo/c
KWQi2HbJOj3MLZePqU+8eLf33/gcOVpR7xK6gV4UtddbpvjgLXke6XVGa2jt
Pd39c4P5eLKbW7UCzQp6vm91DMsbwT3Pz+AJlX/HJ6ukfw3vFjjhS99FBM2j
641+Aq97jsPPDc38xROzyNbAJraw+xLUBPnhyatkFJfd6qTr7AbxjQ80Vo5M
oq7Pyp1VZREwseO4HJ06Qop5wgOfacnw7RJTuzz9c/B0+VK5m3kabl8bm5V6
MAVtb6QOFtgHwm9DlgT5/Gm4POc8IqN8C4yZR3eKbZmD/anC2/3ateFHzFn5
vacXwI4mL9atTAIce7ZLjD1cgjeMKd0EIsGB7sS+kNYVuC7zs/PP2i/c+7Py
tBLvOtSci822uZCCp9ge80/8j4ZY+XiBvkDrNi4UqudjZEFLPLBIesbajuGj
aUsfNj+kI543dTPmZtHjpaK0n46+pyc4ey4cYThWhoXyVL3orWAgnKYsT4i2
PsJcm5WNb/cyEhaeB8zLygCznRVmdGFjIhoFmdKR3oy82GyF+Ra3dRRhGsks
8yYO9/p993fRgVWUNInlvY1pwp+OhmhZ/VlCUexPOWk+00Cy7U5pi4wFZJTr
yLpMFoV6JmFrHbM5JFzwveu52BmI/hLwWkFwBsUmx9C9dLAFuuLSItWqKcR0
5tfYYXk/CP2dc0XWIAXVbXE5Z/2LDJU7vwmMReTCm8TIAMNbZIgiWs6SMyfg
Qbkveyl/NPzu+5msEk4Gf3zH0nbdR/DDlqZsbWQGaNmUdXdUmsHe5pKeLKl5
CLLqlEv4SYBROffzbWaL4LGtmK1eZwd4vxocfpq+DBZGOwK3GZJxDr1zaqvk
VXjObOR827sMX61bLdBX3YB4w9GiO+ZBuFIsc+FAAw2R/PWs4b6LhriQCB+r
2xQtsdE+drulSQjP8inpY9pOT7C/vR/p8uQPNm2cq8D9HwNhr0fLa6X+Bouf
cxqc0WEksi58SFndZIbp0C+aGLuQCCCVFXBXbcNS73+5eDKCiUDfSCsxO7/L
b3qhyl/BsoH2sXwqGlp6gUtUb6iolK6iEJs9NA47KvCXMiwcP+yXEZdH8IVM
xTk83Nw7jxFbROsn9wtru+8Cz1PBb78tzaF87jPsxd5KYKz8dK7ubg7qkfte
4vSQDHfnnuoW8KcC1tVW7NxChnDpw4OvWhZg91hwSnS4CKwjGr//ti+DgKJX
AgGruAD/g9BKi1XgfBI6JEVXjyuqCRmcSVuH+/ZHZ+8xvMYXnux+W+H1d74w
DDb3M7mKC108WnUjmZb4yvHiYYO5FH5W4GIVay0dUbC3O0P50wzWpmC8JjxL
T7TR/7wwaJCFRXnE4DfYGYkuXSWswtMBGxx91Tl0iEScXt6dX3JMHPP/5JjR
qcNEmJ1t6Xtl3SOvrqv23nRqDX21k/yQpPUB756cu3U0aAXFZU4nDLp243fj
BINX9JaQndTSxhvRTVDkkplSuncBrSft+jy5/TDs+Jop3V41i3i3REQ+8DkH
wyaZJbH2wchGrU9Egulv3pWfUrZYPA9vGnVbE+qOgYD+rPzz8UXYm2DEMD7L
BZxudaptqivAWZs/UM3Tj9P4H1yWfLAGocr0Q28ic/Gccz8FTbo3YMxjhTNc
9THun09uZNxJS0jlyzwLOH4aFxqdP+1/jI4Imgxz7zzKg29dEN6gv0JP4H6F
l2d3N2GbnLm9aB4xEJG59wyG2YOxZMszga7hjESdBR/ivq6NFfJr//leTiLq
xq13hvoyYjVKfJuSu5iIXVeZDe54Fsi/Kb1ftn/+33zqtNzy6NrEBvIUnRon
KTzCL9XemRbOX0PFVl+9c3mycL2DA5+VDVeQJH9arfafP/jLw/PSY7uXkH8V
6DJXc4DGx2Gz0cm/8+l0nkxl/xHYVJo8rR08i9w6H+o6VJyH1TfVpGvG06h+
SqDsRfMd+HlG+ufy5CQqqUzfz/XgBQxVGjprwygS2IX76nz7AMZjhBBL2wC6
ETyT71lZCqN7y3wCdvQiz1tqWxg4/+ZXlmLFJa8a0QD7jpWPhcPAcHhG8POV
UuSz/+szlddToP6HxB1tdwd1qYqdk/+bX7Xl23ytMSoFrgCpvqGYKWAYiwo4
4t0IP09tdq1pGIbmpMfJuEY7vIoVNG2164G8nfzC+qa9sFx14YeWRhMIFksP
HWwYAJFDRxi1B0rhmcD0JqaoURjTNwnMv/Ye+h5xixvtm4IFdvs3XGHBoCms
oUlzYRquL/7m7xm8A6lyeZxQMAsF17bVrF/Vh8K3jw4vzczD6l7p08qpR+Bi
6LVgI+ElIKvz3HFz5oDplUcv9B6sgI/Blf1nHvXges/keV5lr4F/UojrI4ss
vKO4b3c2Gw1xIMNHCDru45+3V5YEyNES5hW7ZvqilHH/p/d2P9emI4aE+N5+
OcyBNx1Vq+t2pydyf0U8tb5Qi5HZTorbRDEQgZ9KrueceIa17a0TO5PFSGR8
zXnu9Z86dsLF3sWlm0QIsim1VCduyHv09nnWLjMRn3LtTwuyfpRX9rLvtTn4
L7/iTpQ0db76L55y8lp5GX6so1E2WDvd+BLfPG2zm8dnFXEO+x3VO16Dy0Ss
qVjLL6OhD9XStvgSXqwqKJrEvIjMblfkWVULQa8Uy9RqyRyKvH1Sz6BABeqf
jLa+dJ5B3SutanT5ViBdT+tFEiOjVwlX+9X2PYHa+bJMs9BxtDvK2Jt3KA7+
Y5Cg388xjDSj9b7LdeVB0OxGl7dLH8p5YT/by1sDTqmRzsE11WhPQGy4zsA4
DHz0LtxxKAudmnYklBLI0Ns6sIUnLgMuSltuncshQ+GOjsqE/GpoQvkcYePj
0MeefnidoRvsQXTMz70N9MqVz34N6wNXzjibMf9q6Ai71T19bBg0HLhP8OzI
g6K37Pti58fBN/eMSYVOLGisr/fcJMiAO92izeHzAjU5peuffWeAwe4G1/fX
V8GJwb+5snUONuyyb/6wUAbim/KTsU2LUCf/PUvhvRDY68qeXdJeBh8Tjsdf
/BfwlpuSSwURqzBePCniGVuFV7yc6UgfXId9Rj58+RvhuCM558xMHA3x3Lu0
iyPKDP+c4KOYWU5L0H8gz9juFMP1rijqPR2mI174PBIWPz+B0Vuv6xdxMBCk
F5I57368xzYmptzu72MkHnPt4eLQtsY+6LlLyqiTiItmxm9vlYhg3p98g2yD
/62v+e2eLB7O+RcPoYYGNTmmG2jshL9/ul0Ants17R0ptIZUL7I2owcl+Mle
e4ZfVcvofE25l17rJJ4q75uqHrKI+O2t6255bIVQB5cDjufnUfJmmnsDGA5j
IqevzDPOIsz48SXhUFPgy7f8KltGRsfHBjiHs9xBZ8+9LxJlE0gs8VODcHIU
BA2UFRWKjqBB10jHoqUsuGMXQ/MtqR91zmxUm2+rACdf2Q3N1QIUsJcUyX+M
DO+vfVViORgDas+sMPsVMpDIksf9Xf9AzxGrOF+zelgX07XYzDAEctlq9zgv
FMPeno1tet/GYOSqr8Z6xjsIL2Fm6s+agnPo3dUE/2dQ8161w2RmGqLJ7LYF
/XbwfNeb6cen5iBVKvFVn8BZuC9r0eHwYAF4Zhatiu+LwaCjFjkpfwnEDHJn
7Njooe+ooao32ypMM49uOZX5A2ffss05QXMdKvB4dkmRd/j+n7XHmg1oCJo5
1HCLxR7/3J1IG3uflpi6mKx3p1MWn1roPO4fTUe4ebRUFNxcx0a13nB/r6An
InxsyPmFRdiiG/+PuR4Gwvn2pa/rA67YSWzf+5L1v+8Tk6sPHW7LYkZ46d4u
USbii5v84LuPY/IkzTzWXar/nnfL1vOXtdXW0TF2Pcnnye9wK4bh7KdTKyhB
XmV/TVcrLqLl47Pxfglp/kjeI9JID4062a+Z3BbQQ46R23PvxUB8MjzH88Ac
ouH39Xs9oAWZI77qMDqNhHiUompk7UFjIEr5R+AUUipKC1gvDAC1araY0Gtj
qD64FwxSE8FBADkJbKlAR2S0av0/TkJyYdZMfUE88jGz93s9SYaxuyNPYiUK
YGiG+fAmRTLkMYQYt1wbAe06LoGa8Uw4d33H0QnhSbgVeX6n6oGXQCM/V7hc
QwaNYkYjJSN3KC/FF4VEZoHMyntB/JwJGI0457BbzgOv/fPUOGEM6C7sk7YM
XQS2S3PCDy5thZXDu96rDS9D/MBi9KWGMbwyiTFlUnQNhOPSL9tJleAPhb4r
5LtvwKXUDDO7YV+8ZFOMBfcEDSH9yKt7p4Ae/tn2+uOyTXTEr1u3QU9TAM9r
fGvrdZSeKKsWbu0Y/Y3teGIYmXKOgairHxd0eRuNkUwqRJlsGAm/3zzX51wv
YPzWvzISXvx9/6/t4E/dz40J6h0p9//9bzySxML2cSZuoOvu6fS8q09wX/3s
oi6bNcRg/3Pb5O5PeA1J3Hwz9wraluIjN3Z4GN+TW3JzR9siynPdmbvMxgP2
wYe/SsbPI2/iRO3FQDlwnVk+GK8xi3ISzc8l+V8EFskIy/rN08jk52kdLgVX
4M1rqQsxnETFs2mnVNvDweSeqtbs4RLUnijUfWByCp7wsyqNujwFNTNyWMmm
aSiOfRbx2mYKrl19EEDLEgT+Q6deSCVMg6rgsKKWoCO8Tnn/0JRuDro/JavJ
Z+hAlO0MKef4AmidMGEKPiAFcYwXFeluLoHQ50/0i7uZYWSbre3ElxVgY3wc
WhDejmdoJX/ZQ7cOXuUn9RzOv8cfnTZMOSlNQ8jvOOzXNeeEK7jJmYZfoCW2
5n5n1thC4LjCe/HAO3REpPmGmvQdRvxy2e0pg3h6Qomf69ToSDl2W/mD+2HE
QOz2PZ3kFOyBBWQsj5J+/c1vMxJVYgMVsKr2iLOp9ExEyPmKbC+DOXmVobD8
ZP91xHRTce65Yyz+372UkTr5VbSvxsLb3rQRT3VUGjo6t4Qe3BQJ40/dwNVq
R8x+li4gTZkIi2v1e4GJU1tX4fYc6ok+6jP6+TQQn/7jGj88gzRyXrczydoA
XPjeb/N7Ct2IuVJrsdcXTgSbHWPwfY8c94BRZj0ZriZZaRpZ5UDCbb3Lho/I
wOK9JU312QS0Bc8wZO59BaI7757N9iJDU4zLDSGmx+C1RmSQW2fgzOxNh+AU
c7C681h5dNc84NqXDu99rwB7nucYJ2ktwmSg15fWrwKQUyq2HhO9DCsKO24s
OEzj9X78jee6V6Fr5IPCz2/luMgl04CjMhtgFPxc9MLH5zj//YO/HlXSEOKd
xn+ErlzAFViXe/MH/85fJxKdLUAYJwk4mnpvpie05Q5Z0uv3YwFLB11kpBmI
E57aOAvHW+zxPuNGRXVGoujwHg7hEnPMojt1avwmibj5yeLrHbcdmKjPVvuL
OzaQr2dSVJt/CP7HSkrP4McqsjHWs1qK/IIXFuW+jXu8jLK22pw/xz2LHys9
N+yiuYiyT/kqfp0XgELtz355bPOoLqmvMz1QESQEuy9mh+Siy9t83kT9zT/z
2KpywnKToGYr16BtFxlMaH5kSH5ZAPkfu1ajkveCeJ9SjDZpGd4gAblPG2t4
p85JwT26q9BA80XEiqEBv97qKSYeuQ7yDE+HSxJj8DoLxVJzNxriiFea8g7Z
a7jCye1xSbG0hIYcS//n1MN4XBqnql8ZHXHqDZNys8ccdqezXkZllJ7oX4hq
PMWXjd37O5vmM/zf/VCO6iDCEVuu1LW9K0Ii5nvjf1fjkthIzMgKlzoTYd53
t9Be8Y+8peo2hkXadVQn2a3GevE9/uKZ6EOV+BXENqLLf3+sE486+F3sm+US
KlZr9w9CzGD080HHMdkFdGiPyI85FSnQqeveXvV7Fm3psl4x9tID6RoWs/9+
haH2QT6GJvppOHPRdp/U+3lIGHpoXjAnC33C4UzCHYugKHIpimWSGyCWy3hK
ZgWGs+PytjkM4KVfpx772KzBruGvUXn7PuGdffKzeO0GBAeeivEp98CvhG2Z
iuWhJSZZSgya7M/gCo1twjWH6Iiozc1HfpZtwa/7tN7zuED/N98hv1Aba8YS
tjwp2uPCQNBvHeaybAzBfMKl71UHMBIK9+3MXvPqYt8XGG+ZFpAI9eDZybox
Jmz/QT+93y1MBM7wpGXBrVh+jwqLGEb+N3/i3LI/5Ks3kO3cts8iEx74XBDf
T9qQNfSCpbc8YCAbL9fe7Hj8sQ0U+WX+ifibf9DfvGXd3b4GqSVtlg1d6bgE
4+t+1900RGb+aGBhzF384Wkari3qf9dj8R02uW8V8YErW0SDLOiIA00D/e/u
sOARq5cuRz2nJ0gWH799/laJHUly0f/+noGwTnvtPvXEG/t4w4JV7CsjcVhB
/w+nizL2KNmzj3uaRHy88jegaZbl79fLWrVmrCO9HD/DgchX+NscNkay2Soq
uz/UelPgb76+0TGquZSO/sTwNqgUkUFnPb6fuWgVMg5zdBz3qcCdXMWOzbBv
wJ45wvJd7Av8q6w9T0E2DcH0tpIkR76MP/z1+fmxFlpiW25DwkEbUTyNaDfy
WaUjnjFW8nA6DmPfpHmHnAUZCFM+j/yt3EmYgq9oYrccIyGXGnugLeEq9vQl
HyfXRRJxiUGRgbFfELtkn7vrKb6BeH2/77u3EoSfiQ+ydVlZRcoXeOTu/SnF
pf9Tc9Mix8NUQMN5+r/v98I5zYZhx3X44hKSbnzsDX53l/dq5HUaYm+w6wsD
HRv8IXeP9t5AWiKtinlrjq8Mrt50h3iWTkcQm5tVf0YsYRlb8988/UVPqDCx
/OfB9gk7zq+1YTDDQLgtdDCZHnHGdj8uehbNRSJc95/ReSB6BIu72RLoLMdE
FJre3L/Vc1D+lWRehsjedZRv863eqC4J36h8EmlVtYJE4tablSXacTNtYx1Z
vRgkoC2A8/xdT0YPh3kIbF6BKL+yIE77YVxF7l6YvPoaTGlMnTjiV4hL0ZMi
V99tQOMP6WOpvN44t7aRWBsNLbEhtPHT4Jg2/jAmrklVgI7oa7shdprYhnOn
4bc91eiJfF+i1JfpF9Zzxk786lUGokFawUy3LRxTXV3VunafkQgr3ZAQGtbH
ZjNuPvdIJBHXOKdO5rqyY5pSPls8voXCUZfzCxkMf/PWhcCaP6OMxG1uJw/f
XHmMmz0tX5mXiajZM/vn+0Oy/PQ+1hfXhZOQmoLQbrceMpSXBa3GX2Ak2idb
z5HumWAgqtRQ9YhEuLNWH4kz5MOKdAp0BfgYiQdRaT8OTdlhzRwjmgayJOKK
Yghzv/MBTLpx3TLlAhORIC3DQPbsklcYzcY5t/gj6ydqA20s01BuYffosS09
4Vxwt+b63QasWsbq7aFYRkJmSHro49ezWDIWpYvXkQjPY+nvd1nSYyIwa7xl
5d949ZjF02QWNtBKJH/JvTcPcTkBTpfUsr/5x+mJ3mc2mXj/zaJn4mYraMhb
JEpU8w8+1G18+t3+JZTZcndv1jI7XM1zbzFbmkdCfHc33zQ5Ah0F7in7omZR
kuznhF3y5+HldAP/6pVp9NqlqWxC5w6odafVmNNOoY+pDq4sO14Axz768jat
UdSVBbymuh+Af1ZdmH18APll9/zNi0uBb/tpPq1DvUh55phz5e8mKFY/7uRR
3og2LYvEaUUMQ14Cc8GJ1FJ0rXWu/kPIFIgpeZa+uO+ORLa/vhDPNg2NqkYT
tZtLwUTLcZoudQreXQjj+O9KI+wI8f1sNz0MJ78WFmqJtoPfUtytfSE98Lgk
LzbubC/YMHB3e7g1gU6uXfpa0QD4kKZ3KO0rg5ME1wlpn1G4VF2wZb3nPTDv
Nr8ftGsKjuwtbw+fCIZ3162V72pPw6UIZvuiG86g+TSi1ChzFr5M9mzcGNGH
GL/mUIXRedj/XFMva78MOO73je7fvgT7mna50lzaDDrhV4weOq1A5Q+jl8vM
vfhQ84Qre+oaXHEsGIjh+YirHnKSoGemIWSqDad46dxxbfb8VAkZWsKx9HmE
rrUKnqf742KjBh3xY8/pl4wPN+N7POhG7F3pibHls4VGr+uw7rc5sVvCGYi4
mPZb/D7+mHlI4vSLNEaiIDj8o2PwaWzIOnUXTweJCPP9WX87hgarSXnixjzP
ROxU5NDPO5wtn9nsmLsk+m9/o3HYMYTuyr94Ks8Ehe+/11HC00v18dMR+AhB
ehf5fBVN89+3kzhTjX/53cytq7yM0to6e997L+LsC164OdciyrJ3WBI/LwRr
MjHmjlVz6Muv7vYSMRWIe/g50O7hDBLy+TJudMwK6ncxv4w4QkbXPsi/upnh
BV7XJm9JJo0jbm8+3CM0DkzMWjUzdg+jIf/5XxpP80BrlaXXz68Pcbmfefy9
pBqcbn8a4t9Wg04InbsXVDEOZ+Oypjjys5Dsdq6iC7FkyIjOOaTOkgHS5qMH
0wvJkJ1YOZV4sxocL5QNdLNOgJxcxG2Ovi5Qzag8EoHaYPfVvlpurz5Is3a/
n/27GjiCMhLLhYfh/QlxvwynPHD8Jq5f82ccCAfdxOzXsWD/8qxMgiwZDo3t
lpZw94KYB+am/z2aAZEGayxVzAq26d/06qubg5L/PDYLDSmDSHrYmAzdIsit
l/+y27MHvPvPG3qoLcNswYfhdLVFXJaNu3gocBUW3g08y3Gqxo1736oIdq4D
60GyUP5IBN51Wc1Y4RUNcQ3LzDtwzhzXjrwnoV1CS3Cl1bZKCx7E70tEPa/q
oyMCLhS+IT5OYjr5eQ6amxgIjY8pbtf2f8AmnpjP7BVmJBgYOrcXRdtgcmVG
C67KJCK1pWCzwM+9WP0jCZ8k/3/5bltGzcHCrP+n/0IXLTy8voESfUaxiSv+
+HMJ380iB9eQRKIdf3E/wn+InqpHTcsovpOlSn18Al8ZJZczRC8iB/R4f8kQ
H2Q6cUaPms6jA8P8NmbOGBTvEtpVwzGLPrNUW3UfNYWPzDZtVTVk1Li8QL9w
wR02vXjntfJjAqXP62ZGHYiCnJM2LCpyI+inhu14cGYWHHNOpqst7Effc49N
WtZ9hW5nsyOKPoWIIU5brPgQGcJGqkcmpqNhsC66m32dDA3Bdblt1/9Aw9za
szb/epASCRLvmRqEhqio1MHKYuhg2K32IGcMzlu1vqzkToAiY0NDgZQpcLkl
HwRb/UFk7mpT2/A0DJlnvFhXtgcZO4/418QcCDSc9B5pOQtmu3IUCpwWoH36
20sjsYOwTnJYkclYgovo95Pzr+lBufE/tmz6VdBxu5P03LgFj7tQ1cOnvA57
MuOT5abe4cEql5X36NIQV4a66Do/2OPazS/H4S4tkc4tf0WpQg7n/yznXBdO
R0yrx8SerNjATry+KGFSRk+IaBVav2JB2BDfM/Xo3wwEr1r/0PZj97G6FNrb
LMuMxIDIGJfGezlMc+sFekPFf8+3j6vkqYD2OjpA4mfrmXqLK+o+lOdZXkFa
p9kY9gq04tkhJucGcpbQ4d3fUq+r0IMgnUDeZ88FtN1UqY6DUQzUZiTF1qTn
kGqhmzndfS3w6DOl552dRtdYm+kzO+1gROaNodXLKSR5x8WVUSgAaHA5U3PX
MaQnEM/Jq5IIDv0dA28uV6AvJjxcDhGT4BrGYpz74y3ay860zWDs73qHyI/5
+SIfbK3v+mapk2FkrUEkUX8EbMqLxA8fzwI2/xMW27kmQciFjoUr7iXs/am8
WbqcDH4a56vakt1BYNPlyUj+Wfh6/oqBcJ4JrP5nZHXg4jycP+1Yzt2OwYCC
S1jas0WQ533+Z2l1K3CXQ25T1zJ4DURprH8axw+oDN0U2LUGHnw7OkM+luB8
1x6mHLizAdjgYZ/1WT/8oMvhWybDNMTx27NHiwf1cG0z45tmJDpi55m/ee2N
nXhv5EbqVyl6QrRT1TdCrQu7/oMnV16bgdAqSTnctvwKm188HpVmxUgo6Rf9
Fi03xt60ZblMBZKIvCa92GxBHqz7hfPCtvZ/42+LyIZOe/oGmhgX1muWeIJb
vj1z0urOGop3Fe8A1Tz84ml6yXn+FfRFQ8Wu1WkIt7fc5/2jdxGxxCmbOD/j
Br+wyuMJ7+eR8dKW/pZxWdAcr+9zOTeLDky9pU0dMYZEt9d3zbdPo2oRnm+N
SfegTowu0NR6EkkXW07mXguHLdPGIzbOJejwZjZSYv8U0J3yYYnP8gSePj/a
ctZp+IN1jrZYTEHXon6jtX4QDEhe90uOnoZ9t+dH9gY5ArHmf8RtaRbOcfxm
89ytC+7nlK3XpRZgLt/pGVOQFOSH3dd4dmUJjmR+F2prZYbT2VpHdhStwHdj
USuxmx24Srix5PPFNdC7Usiy3yINH/808un5IRrCTDElalvzHbzBTuyMrAEt
cZPFJq3zA4FbbWK6Ue9ARzC8Ze9yv0rC07ik2IZf0xNim1I5rjZ9wSw6heZ/
5jMQL5Vjkb27J7ZN8EfW2WZG4uPMmoeXsyKm17vRfztsHZ38E953ui8G56tS
sjdQWUVV8oce/PetAcc+8X8UWF9CqmfOhd6qWsfDXLXvPa9eQMeabObyT+6F
PVuGvubdn0OBud8OF/KcBu4srqrSEzPoPwf99cRoa+hM+rFEMziFBnwn515G
PwU227xXI/FpSLeVQY6vhgzHbspdDfqeDSsz/XuDfchQknLkt8PdCZA2MJH6
L+0VnP5UFTvmRgZ+vdqtDuaPofOkaeKNuhlw/TbAuCJoAZu+WSyQ+Obh+XtX
HtIORSC5MJeSVRfhfdvXe7VPdkKdngazeMgyPL8tVXGCNINLHVgLfdS6Cs2F
OcH99l/wvLc8S/FiG9AauFt+9Eow7jlWOFhfRkN8u5m+j8fZGG9YH60z/ENL
5MEpcuSGMC7VX/u6ctPf37c/oz1PYwDrVB0I+XKIgYh6QX+5ev0t5lBSpzqi
zEjwdirofUyywCY0n+Qdu0EiroN6tsO0ACbz+EHUfpENdG0/cWu8Jxgvzq1s
6+pcRd/g+YxWfzl+hi7A3sdvGdWxm4yddZ/BPewLaWUMFhFzy+IDgeMC0Hru
PI0U3zxSD7x+hXG7IoSxsz5PFMpD5ttPnnW0JoN++LUhRq9EgD5emdd/yHBy
UHSrc+ECfAhirAiXE4WTTleSO1aXQLn5EmPF8DqOT4r2a6qvgvFQwLMzvg34
+i65kMigdXD5fPNKvVIsfrypqT7DmYZoHrWSTpK8jjfIsvqrRdMSqYFJpzyM
pPGaO9c9a4rpCMU5i9F0l3nsq7ivVusAPaFw/ncWM0MOdv3s4itTGkYigtG1
hix+G3ssK3GsbDeJsEh66/fQTgpzVHCXLNu0jraX3meMs03F7TqKmb6/X0Ga
EfQOn8i/8UN27+Y/3FxCYkd+JS5yM0PSk4HZKVhA/MxcN6RKJcGm8c4zhcFZ
5Eu6wsbNogctD7Olmdlfopi5V4f6aKdhIu3sr9Px83C3PG/itr8cVG4asb7R
tAibpnNse+x4QP/IEct7B1eANo9FQvPAIC5s3qSWY7EGJgeN/BkXPuEO4pMX
08o2oKoz5YzPM0+8nvHd+iQHLTGjXcIc9UoTb/hSs/nGATrCetgj2yGUFw/R
OZxfrk9PnCkTP8Hd+wObN1P4leXIQEivrrn9KHuBOR9+O+Xgy0j8Ki96rris
i5237D6RnEMivmYvTVcfZcFadlUsOTUyEZoDWnO0bCXyvU80L1ZM/JsfNdhe
0zA3b6Bobd+tJ0944PXdaZeeRq+hVJt7tsX7s3HjrZwCx5v14IXo1uTv7NMQ
nrO35WzjGlzu1h1fcs7AX96Smq3ipyHc/b07lWLv4VwwvZqpTEvs7+84fc1Q
CeeUtLVouExHoN07PEKDN+FD6tvvHfKnJ7JjbRuUOr5hexTHqp2SGAij9+2+
XrE+GN6GNzl8ZiQI0ixNcLAKJvWqxCd1nEQESafdCtRakfereh0cl7+OJJZy
zlZGR+PujG99XaxX0QOj87sTxb/jKWNMgopeGShprfY7fR4Zsl4+ST76cRWu
zawNBKpU4pvKO16bMWxA3ZVHrBs2obj0O7o9LBk0BL2QvbxkuAnOVZt1/0cD
LRH6JtNDUWMf/pPlaMS3BTpCxONmyNGIEWzbw+/0mwQYiHb+sgPlksmYlEjE
Tm8ZRqLWtV4xvdgK42EhtxqeJxEVAr+POX8Twqxv7FY/p7qBzH/d0Ag0D8L3
zxyYo2VcQ074zud0SqV4w9fBtGL0Bry3JOddnyaDFkb7n+GNdTAK99uvMfQG
H/DbzjpyhYaIfJqiwOlgi3ORmrByX1ripOKIeL/eUdwxquF+bQod0awv+nK5
YBmjsXREO37QE3NF4yzje/Ox/VmljhsTDIRr3dvGQQ0XLJEcdm6AjUQI2dLV
Tu+VwVIPCP6ePLSOPk3vk+1dScTbtgruITetID6VtFfpWm24jHhm/k7bWBQR
IEt7Z5EMH+998k9gXIGbW0vqQmAEf9d80fiawhpMHO000ncqwsvV8xisozdA
zBIZJ6554/fRqNz+VRqCV0vH1rJfG+cKCUEDW+mI6lAr47NHt+Pyd8KzvijR
E0wzeqk3xNswqSgxtUUzBuIpnQvjw6UI7NiLm1857zISpot2GXnLBth9QXWj
2jckgjnRK6uFczPmp1p5x8QyBOR/Jro8Ik3DzJUbIeKDjERU65uolSM4Vk5n
uqaFJaNb8Q8nfX7//f7GDA4aBoxEwsj6L3/cFKsM2RnBc59EpB9K/d3vsxVL
HT30rYyLkbjF+ovjSY49dsmtnC9GmkRkuwoV0HwXw5RTSFPNWBDSL2/Rf8n8
dz44VFVSdo2eGO0K4PNVa8Tya9v4f0QxEpnx4y/PxmlhR1Kddjz5RiLWZMq3
ldozYH3uxwNfLf4bf/fdSfjOyhtIgou1N+bv+OLoFOWONI6FrTtsv8T+/b1/
9lz0HYl9g/plYniK/sYH25ifqzQRAO1BfS0+LNPgz3cpyPbtC2TkWGkUyjgN
46dZDx3UdIaK1sfvpf5+Htd29YwE8QhIvamjnUY3DYsPLkU7pfog+/FdVZOb
psFiLe3A07V/34dyf8L/f3+Emin1IdRMqc+nZsr8Q82U/VRqpvQDUjNl/UfN
lPMuaqbUE1Izpf+Zmin5HzVTzr+pmVJvTM2U+YWaKful1Ezpb6JmyvqCminn
J9RMqUejZsp9BNRM2U+hZko9CTVT6vmpmfI+oWbK/jg1U/oHqZmyHqZmynkf
NVPqKamZ0i9NzZR8lZop5/PUTKmHpmbK+4OaKfvf1Ezpv6JmynqOminnU9RM
qfejZsr9MNRM2Q+mZko9HDVT+pGombLeombK+RE1U/qfqZmS71Iz5Xyfmin1
09RMue+Bmin7XdRMqfehZkp/BTVT1lPUTDkfomZKPyc1U/IpaqacF1Mzpf6W
min3r1AzZf+Ymin1c9RM6V+iZsr6mZop54HUTOmXpmZK/k/NlPoGaqbUj1Mz
5X4Iaqbsz1EzpR6Jmin9H9RMWS9TM+W8j5op/abUTMlfqZlyHk/NlPpmaqbc
h0XNlPMvaqbU/1Izpf+Smin3NVAzZX+Omin1SNRM6fegZsr9NNRM2Z+nZkp9
IjVT+sGomdI/Ts2U/RtqptSnUDOl3p+aKfc9UTPlvIqaKfW61Ezpl6Rmyv0K
1EzZL6RmSj0UNVP6TaiZcp/M/6nrXv9Drvs4jmPGHGNO0SLJHEs5xUVYjili
RDmUZTxcTrkuxzldchpybU6JEBONWbSLSzWGHJrH5DTigRpbCtvluoY5z1x3
vLr3uvn8F36/7+f9MvM938z7RTP3Ymbuy818rzLz/sbMPYOZ/Tsz/7vNvPc3
c29tZp/FzPd4M+8Pzdx3mdmjMvM/zsx7ZDP3n2b2Isx8rzXzHs3MfY+ZfTcz
/6fNvM83cx9tZk/FzP8BM+8fzdyXmdmPMvP/zsx7ZTP3oWb2JMx8nzbz3s7M
/ZKZvUsz71vM3PeY2Vcws8dk5v+bmffGZu45zezPmfn/bub+wMy9t5l9GDP/
Z8y8PzVzz2dmz9HMexQz9zhm9hDM7CeZ+R9o5r2zmXtSM3txZv7Xm/+8TxBz
D25mP8bM/ygz72vN3Cua2bc1857NzD2fmT0VM/trZv63m7kvMHO/bWZv0sx7
GzP3Rmb2HczsQZnZVzXzPszMfZyZfRIze2Zm/s+buT8wc99tZr/RzPsZM/dC
ZvYZzOw5mdmDNvP+08z9q5n9ITN7hWbep5i5xzGzd2Bmn9XM+zQz93lm9lDM
7KeZ2SM2857SzD2pmT0fM/t/Zt6zmLnXMbOHYGbv1Mx7MzP3dWb2TMzsn5nZ
TzfzXtrMvbiZvS4z+55m3nOZuV8zsw9iZs/YzHtOM/esZvaDzOwNmtnvNvP+
2Mz9tZn9KzN7mWb2e828nzRzL2pmn8fMnp+ZHoCZ9/9m9g/M7M+Z2as1s59t
5v2wmftpM3tVZvYtzezFm3nvbube38zempl9VjN70Wb6D2buPczsXZjZGzSz
T2xmL93Me3Ez9/Jm9snMf+6ZiukDmLlvMLPvYGZfz8wer5l9cDO9DzP3PWb2
TczsS5rZozazj2+mx2CmX2KmZ2LmnsnMnov6yZ6m+sn+tpkegJn+hPrJPY36
yZ6ImT1HM/vPZvbo1U/uBdRP9hHM7NGZ2a81068xc79mZr/HzH6qmb11M+/z
zewRmNl7M9OXMHN/Y2Z/xMzeo5l9aDPvvc3cs5vZBzPTazFzf2Zmf8fM/qmZ
98Bm7pvN7K2buT8ws69gZr/OzPtVM/e2ZvoUZu6HzOylmHmfama/0sz7YjP3
0Wb2ss283zezR2Dmfa2Z/Tcz74XN3DObea9rpgdm5h7YzB6amffJZvaqzdwP
mNlDMPOe2Uw/w8y9lZl9GTPvrc3se5p5n27mvt7M+20zvSIz95xm9qzMvEc3
sy9s5r7BzF6DmZ6BmfskM/srZvYszfTFzNxLm9mLM7PXbabvYebezcyej5m9
VDM9IzP3pmb2tczsGZvpH5jpH5rZPzCz/2hmf99Mr8dMP8xMr87M/b2Z/UEz
++9mejFm+lVmepNm9ibM7G2a6R2Y6SOZ6bWZ6QOa6Wea2c8wsx9qpt9gpvdk
pj9npndoZs/BzJ6lmZ6Amf6QmR6amV6pmb0SM3utZnoZZvpaZnp/ZvYTzOxH
mtnrN9P3MdO3NLPfYWa/1Ew/wkxvykz/zkyf1sw+jZl9XjN9FDM9NTN9RzN7
GWb2Qs30Gcz0nMz0TM3stZjZqzXTCzHTFzPTOzSzX2Fmr9NMH8FMT8lMD9nM
HpKZPWgzPR4z/T4zPVEz+yxm9mnN9EDM9MPM9HPN7AOZ2Uc206cx07Mzsw9h
Zv/STF/ATL/TzB6Lmf1ZM70PM30wM31vM/teZvbNzfSlzPQozeyjmNmDNdPb
MNPfNbNnZGbP2Uw/x0xvz0xv2syelpk9cTM9JzP9RzN7Kmb2Ys30OMz0bs3s
F5nZazbTxzHT0zM/TlrYOq+zmz08Mz0AMz02M/1WM3tCZvaTzfRpzPSqzex/
mdk/N9ObMtOnNNNnN7M/Z2Z/30z/zEwv1cz+kJl9ZTP9GjN9aDN7X2b2zc30
pMz0J825FyaPm7DZzX6kmX6GmX6hmd6xmf0tM3vjZnpOZvruZvbyzPQCzPTZ
zPRczcnxPVoU+tHNXqOZXoWZXqCZvrCZvS4ze+Rmek9meupm9vHM9ADM9NfM
9FrN7FGZ2dc20ysyzxobmj8/y82eq5mejZmeqJn+uJk9PDP7/2b6auZOgUHx
AaPd7Fea6XeY6SWa6Sub2WMzszdvpt9lDvrsWs9p993ss5rp05jpg5rpiZvZ
5zPTHzDTdzOn1T2Sf2e2mz1MM/0PM71FM31mM/tzZvb0zfTJzAuTE+PHlLuv
Zr/ZTL/KTD/YfLLeuj5PD3Czf2mm92Gmp2iuvHJp4L54N3u1Zno9ZvqoZnrq
ZvYXzfQlzPT6zOsmTh78VFs3e8xmelRmesDm3/8YFfztAjd7nGZ6I2Z6jub6
fSJ+eP+Mm/1bM70fM31VM3t7ZnoBZnruZvYqzfQ3zPQMzdubdqmxdZSbvXcz
vTszvXFzYs8m9zrvcLOXa6YPZKa/av5qdPWTmQ/c7Fub6XuZ6Smb135SImFK
mJu9VjM9GjN9T/OKTXkzK81zs99upl9nph9uZv/TTM/EvPjQxf7bjrnZ/zXT
NzLTjzUvyEpr+kalR2r2ts30xcz0nM3se5rpk5hnP/53md/6u9nHNdP7MdNP
NU8Liftj6no3fQkzfU1zw4KzbfcedrOXa6b/Yz5/sezKwv9zs+9tpmdmphdt
bv7l1DfntnKzx2+mR2im/25mD9dM38e8dGj2o5Lz3OxTm+lvmekZm3PrvftN
7Gk3vQozvU7zF6ViS6Q/cLN3bKbfZO52/dCHFWu62Ts303Mz08s2J3zTpNLK
UW76AmZ6imb69Wb2jM30mMzFx8WlPpvsZg/cTN/MTC/a/K9VxV/rGVConZme
jpmesDkw64ciVSu72Qc30zszv1t36uFLdd30DMz0G81bRjeP2dTKXbAjt9eY
7m76I+Y/+6ving8TqraIcLP/baZnZt4QNuTi47Fu9vjN9AbN9NvNXY+dGx67
0k2fx0yf2Lym4rKX+ya62Xc306sz5/brfqf6Xjd9BzP9SnP7uKDdf5x0L7+y
/+Otl930VMz0Y83XXpzWecJdN/vtZvpz5tbjXi3TpqSb/oGZnqM5JvlGeuCz
7sxCiSuONnLTDzPTTzfHNb58tWeYmx6Cmb6jOSIypOWZcDf9FjO9WnPN5b3n
94t0Z6YuPJcx3k1vyUxv2hx3/2C9wdFuegdm+o3miAaPoq6scNMfMdNXNdcc
2CxtRII7M2ZUtdxdbnpkZnrs5rh9G4ePO+qmZ2Gmz2mOuPlr8r0MNz0bM71e
c80XKpealuvOfKd7/8JFiqjpR5npZZvjoudumVPBTa/CTG/THPH9noclarvp
vZjp15pr5tx5M6a5OzOk0ergLm56ieaYBVNqLOnp/su91PXl+7vpv5jp2ZqX
nBq0udxoN70qM31uc87W+9ue+tjdYcGSnWWXuenLmXPvZrSMWeNeM6RBSpl4
N30XM71a8512Bw+UTnbTWzLTkza/HTIwrdRR96a7t0+UvOSmv2juPeT13guu
uQufijlb4pabfo+ZHrG539Y6GUHFAtT0u8z0yc3b5++7XLyqu/SQ93KKNXTT
yzN/l75x9Nxm7iHtbt4IbOumz2OmL2ze88wn94qGu+lbmel1m6vcrfU4YIib
Po+ZfrB5TPruwIBJbvqy5lPNuhy7NMPdfOWp5Xvmu+llmel/m/M/yK4zeZWb
vp/5gwPjc/tucO8PLfx9s6/d865X6Xpjj5sepzmnx5fBx1Pd3Xe8dCHxhJse
lpm+t7nilI4jh2W56dOZJ2acaNopx30+bMCjWnnudUFjYy4GFlXTqzUHjCzo
k1LWPfT4/BqrqrjpnZnpt5sbLl/3TZ96bnqH5tj7DaKaNnbfHPBtWHAr93e1
jqUffctNX9T8TPR7q7a8456efXnw/Pfd9MzM9NjNHZIe5nUY46YHaI6vGJ3y
fJS75KTguYVmuk+0qVdl91I3PW3zjdIdGo5a7Q6+8H5Y9Y1u+oDmJpuj+hz/
2t174rIRM3a66Zmax3fcNuOVve7lFdI+zUp1n932eG+Hc276w+Z706r9fDvT
/fRbzbK/ynbT/zO3rNbjcd9b7n5Xh1cske+mx2mesnNOveSi7tWz17UZUcZN
j8+cEr6rV0hld8ZzZ4Ydre6m721+/N/cadPruJ9LKbW00ctu+pDmsE9CN11q
4f7wvbCUxWFu+rDmWXUGpL/e1b3h9oQrt8Ld9BLNBw8szt/Q3/374sTyfSLd
9JzNxQalhhYf5Q59KavVd+Pd9CPNnfPze/x1untYWpWh1aLd9FfN81c0nnIk
1p0wtNuiqSvc9CTNR5oO2/hinPs/RWYlZ2x2D1626eanW93nax+r3227O7VL
1VW7drvpuZp3jIgsVf9H9/qYbVNWHHfTnzbHJj3IKXbOPfV0xwHjs9z0RM3D
7y766bccd99qv7QOv+2mN2/u8Fqdr/cVuBsP+vuzjYKKqem9mmvMSvnnmvLu
0l8FFZR6xk1/2fzgcK/Rk19wX8n5IuPqi276q+bTZbO7933Vvf+VZnsPtXO3
ONDv7tSO7m29ZzRq2tW9euKRtet7uekBmxd8Xrlc+YHuiSkRM/4x1E0P3Bx5
KTH3+kfu8IB7gwZEuenjmtuGtj+ZNtPd8I2YsJYL3V+e3x6Vu8hdbeS5pPhP
3cVjX3i+8lo3vWBzXtJHS2ZvcmedTi5yK8lNb9t8/G7g2Ihd7t3Vev52/KCb
frA54bXVvdocc3826MqBxLPuqyMTq1f4xf2XqL9FRV1yZyx++FKna2763eaZ
CXMuB990hx546vOLD9xpF1a+nRhQXD06r1ZgVGl3cJmtyR0ruXfWbjEmuLq7
X5v9tS+Gugv6vHVhSyP3+o/OLJrUwt1p3qBOHcPc2euyH5bv6o75flxSRri7
cXrB0C393T9nzwuZFOkOCVkTXX6CO7Jb0s2EaHfi9EMDO6x05207d/jXBHfr
zOtNJu52zw4usrbcMfeZ6qn3J6S76zZY2PvXM+6f2lcumXDRXWF8/fHtb7h/
2hI9LeiOe3bW5TlHH7jz3l67vG/RIPX/AUiGZAE=
       "], {{{
          EdgeForm[], 
          GrayLevel[0.5], 
          GraphicsGroupBox[{
            PolygonBox[{{322, 3025, 193}}], 
            PolygonBox[CompressedData["
1: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
4z+APr61Rl/j36Qcq5wv8C9TXkut8VB8WMpnSTk/aq11/WhrT8wh/E9oRrkQ
7b9q70LPwNfkHe2tlNdWOT/jv6Qcq5y/1FfKZ1k5v+N/pNy33slDXWvoE/tM
H8P/1X4m9wnap/IsfwHuom0NYxTBz4THaFtOXYhHME/vSrQn8RRcorH0/p/y
i65iVZfGM3BhbLJ4DipHJo+fAm3o632tMX46TI89Rown0h5LdQXxQjApcs6p
+Glp56quMH5G2nPXnIvixaB/bIrjJeDmyJTES8HY0JTGy6hPPKFvJPxsOD80
lfFzYCF9F6K/iniltGOVUxYvp9+gvavnMX4RPB44pwpeFW7Bz9H3MX4BXEtu
E+rO01jKiZ1TB68LBQPnVMPPTTtWObXw2mmPpZzqeI20+9YcyuMV0p6r+qiH
14fClAtT7op3gyKUm+r5iLeDOupL90hdW3hFz3poil8Gl+JJxmiIN0o7VnWX
41dovMA0w6/UNYlNc/wq7Rlya+idCb8GFgUeo4n6Tnss1bXCW8NtgXNa4Fen
nau6Nlq7tOeuObfHO0CVyFyHXw9tQ9MR7wS7AtMZvwFGa6/qnqm9ATVD01PX
ChYHXqPueI+0Y5XTBb8x7bW8DO7G79E1i51zq+YOvdSmZzbeT+/MlDvobwT4
nVqjyNekAX5x2murnF747WnHKqe/zmbaYymnN94n7b51pmPOXyLld3Gd6eP4
iZTPZjs9/4m9Hz6gfAjG4xPgcnwMDMaH6HrhZ9LfQ/jDOsORcx7AH0w7VnXD
8Ue0h0MzAn8UXg3MSHyUfoPexehvtHKheeQxhuLD0h5LdU/gT2oNQ+c8prOT
dq7qxuLj0p675jwRfwrqxWYS/jRUi8xk/BloH5pn8edgt969aJ+Oz1CfoZmJ
vwQFQt8Dp+Evph2rnCn482nfK+/Qb8Rf0x6LnTMLn63zpPc9Pc91dhSje5He
F/B5kI2cswRfqjMROWcOPjftWOUs0t5LeyzlzMcXpN239tgA/F6oGrmPZfhy
GEB7bX3f4p/CEt0/9H2Nvw/jabuCulX4m1Bf73d6vuCrtd9o/5P2lfgbaceq
bg2+FvYEZh2+XmsYmw34u7oG9LVWz3t8i65p4DHewt9OeyzVbcXf0/6NnbMR
35R2ruq24dvTnrvmvFNnF04PzQe6lto/gdmDfwjFYvMR/jHkyB+jvz/gn8PQ
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

             "]]}]}}, {{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], {
            GrayLevel[0], 
            LineBox[CompressedData["
1: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

             "]]}}, Annotation[#, "Charting`Private`Tag$31855#1"]& ]}}, 
       VertexColors -> CompressedData["
1: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
1gf1QaZv/r3TdsR9u13cNE7M8yVOoyn94gAOWZ8VfyvsADXieP3TeCb8cvnh
WUEcWK0KWb02l4YwC77OLBIDZY3kiP0E31hVNn6Xfk9FcMPbqKCMETQrOCWc
tOfh0vyx2EXtFDz9dfxjURgdPfQVtn+J782cSLHsnSKjUd1yyfKaITwf2PM0
tYAPBbX7Jmc8yNhY6/1ioq4fU+eXHZ0Z4EPc+kwnhZgHcb8Eiy+CHly62My8
KS6AQ/LPdSOnSdhikOH6oLYTB7aGKsQReZh4bf+6S7kkKPuSBzIfULFq4cpj
XtZ8uOS+brP5Q8IfbYs6vx/tCD5fcO19Cw/f1NVmGcymYFbF+bBLp5rgQJN9
GEt4j82o+zu2IxXJeZafZwfXQj52qPV3LAdjT7Ymmn4iuPflh6lN9hWo3OXj
5nuJDa9trmOL9LuRvP3ypjiHMtwonOqN62CiwGMwZ/VbIYzDM/Kn5jKxKjx7
h/nCVkQxZX7k7xJi9qeQ3xOLWMjpviETJkb4oE3zxO5mgodJZSXH5NnYbnvJ
O/prG4Jl1PkPVUdRdkL5uizBVf2xtQ1m39uRttPp5U07ARq+xOx1uMBBfVvm
ZkdpMno9HH6KRvLRHJ/7VeIPB98z/u19lEDGyTMlqbYhPFx+27570yEuOiZ3
PKT6EJ5vVrTLbpiO+dNiPxWI+UnJYj0McOtHvLzhqedvhsFju7/Dei5eu19r
FUkehGlezqaER8S5G9/1nCfOgl7s2P7b39n49OEwvCw7YLFMhL96OxPkpUM8
nXlcPNPpWyixkQbfmqSxHj0GxIYXRpJ+cxEbarKhUJ8Kxo9TkRuWjUDfjxbq
VcQDa3fAq7/2FIydO/zfuelhfK1KOWjmSuQyd385N58MU8Wx/f76g3ix73Rz
aCMfd2RPvf25mYxb1WLBmg59kHoYqO/3hY9T65qKzhwlYfdv/2WjTt3Y9a9J
MWm5ACNhHLWYMBIe3hhZVarcAaeLVp61z/hwi52N010kqD1mHaLMoyDW3LDA
W5aPPzIb606Yk+HI/cudL2xBQcfyh/uceJjRGsxLLKDA4IDiKbPxelwv7Qq2
2kjkty7PgipFg3BRs7HW2mqMB/g4FczigByyesLToRNmpqZW7xvKUPHM3vFq
GgvndOev/lcnxHq7d7yvTQzE/1j0SdDdgnOKFxd0HhXi9fMW7dR2JmYi17dZ
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
i6C96wx+rhTAZM8Hp3mhHEQvHKP58XcGkhh66uZ9LUib4VoqdYOLyY0ljdv3
CHEvYlGVR38t1H8su2uSwcS8I2e7UncXgrlmD1dRuhV4sZtp4VaGdzP8Vpx/
9wl7NjYXPxWvCzI+numd6leBLNvK2faBGXB4+euAhFYLzJd+U7ggnoe/RG5t
T34gwPghu4yPYMK1wXXmnZNcxDuWjfV2EKLgkCjZX6cO84ytOgoXcDHLuJb9
xFwImXpjV/XsOozN3jJv/QfxuOH+5nnwQSE6JMeXFCfXIvqExTBLKy5sH29/
fUu8X35jVGFx60QdJMwOe3uGi/eZA385YXuFqB+7b3n6t1rYjtw46pYjF8fK
7sbI2glxXRS9smSjeB6r3tynuIoLYzeNXM1N4n9/RWH3tnt1OCVzaur1AC6u
Zke1TdgtxLZJsicXyNfh2Kmbx0Jl25DyQ7ox47EA9l83y98zY4Lqd6C+r6Gc
ui9DOZW3Qzk1f1FOfe9POZULSjm1/6WcOmdIOXXvmHIqf5ty6vNPyqnz55RT
ORWUU/MR5dT3+JRTeXqUU/sRysnzXYRT9zopp3oNKKe+96GcundDOZXbQzm1
7qKcOq9COZUvSjn1uQTl1DlPyql735RTOd6UU58DU06dt6ecyuWgnFpfUU6d
P6Gcyg+knNq3Uk6d96OcuudLOdWXRDl1LoJy6l4q5VSuHeXUPpFy6nwd5VT+
NuXU58yUU+f5KafyPSinei4op75npJy650U5lQdFObXvo5w6L0c5lVtLOfW5
H+XUOWrKqfwEyqn+IMqp8xWUU/dbKafy8SinPt+gnDoXSjmV40059fk/5dR9
CsqpfBXKqb4MyqnvWymn7rVRTuVfUU59jkE5ec6TcCqnl3Lq82HKqXP1lFN5
GpRTvYRkXyFx/pByKv+Bcio/lnKqh4Jy6vtWyql7bZRTOVeUU31PlFPnbSin
7jtTTuUiUk7lq1NOfT9FOXXfh3Iq54dyqueOcuocIOVUDgPlVI4r5VQfBOXU
98iUU/fyKKdyuiinepcop87tUE7dj6acylGknMpjp5z6HpBy6v4U5VRuEuVU
/yzl1DlzyqmcH8qpnHDKqb4hyqlzNZRT95cpp/IMKad6/SinzlVSTuVaUE7l
31JO9WhQTp1DoJy610k5ledGOdVnSjl13ptyKm+Hciqvm3Kq94dy6rwQ5dT9
a8qpPEbKqX49yqnzmZRTORiUU3m5lFO9G5RT5z0op+7JUk7l41FO9YxTTt0n
opzKc6Oc6oOgnOqVo5w6P0k5lVNBOZVbSznV30o5dX6eciq/iHIq55xyqi+J
cuq8GeXU/X3KqdxOyqneasqpez2UU7lqlFO9DJRT/W6UU+dCKadyNiincncp
p3pUKafO4VNO5R1RTuWiU071K1FOneujnMpDoJzKQaX8/PxnqduU2jD2xItJ
jAcCVHsXsqtBO3VvlHIqt5NyqveHcqo/lHLqnDzlVB4R5VQ+OeVUTzfl1D0p
yqmcOsqpPgvKqV48ykO2/XkvHy+CxPLFnTsEAnydtnxm2iXaqfuSlFN5lZRT
fTeUU72ZlFPn7Smn8osop/LMKaf6qSmn7jdRTuXIUU71TVBO9dZRfqaxiv90
uQgWhnpD6yYLsURPLuZrDe3U/XfKqfxhyqn+MsqpHmTKqfs+lFO5apRTPQuU
r4zhv2Z1t+KAxpZqKX0hDt3UWnNfjXbqviflVN4m5VQvD+VUvyflEod++f5N
bsW5fx6v042FCP9jJjq2lXbq3jflVO4u5VRvF+VU/y/l1L0hyqkcNsqpXgbK
82YNWc50bkUo9/61k1uEyLd3vGpynXbqniblVB4m5VRvDuVU/yblAR0Kkyxn
tiIhN+fQnH1C9GT5zhtbSDuV40E5laNOOdXDSDnV5045dW+RciofknKqL4by
/buSezO54v+/9cd5d92FmHT8fgBjGJt06t465VRuMOVUvxjlVE8x5cal1mVz
7wuxQfC2R+qiEOZTUuuDQTuVX0E5lR9OOdU/SDnVY072m6/se/nQVoh7nklZ
LuKf78pkLVrjRTt1v5tyKkeXcqpvi3Kqt5fyvy8fXFYSr7dEcs8Dq2KECPNp
vyL5lnYq/4dyqn+Bcqq/lfJbY0esH/tbAEutrck+8UIsVvnYfYBJu5a3h4JG
mQDvVv2t0nktRNmTK3sLv9FO5UtQTuV7U071AFJO9YlTvnWt5fWZtwXwP79p
1pkcIUYVzTK8PY12MmeGcCrnn3KqJ5TyiRpnNjw/LsBW/cejX4i9dOAsa/8G
2m1sq7IaNon3z3lXp4/OE0Jpcc3l6lO057HCnq2TE2BT+17zRrHfenKnJ6eQ
dirninKqZ4RyqqeYctWO8Xk3mvnQnqCvYCn27N1Prxf30r5/RGRj+Uc+JDcO
lmaKvUs9bWaFFod0KkeFcirHnnKq75LyN1oT/2qG81HrXRwy94t4HuQUf2y0
pn3Yqii1fW58vI2/Z/NQ7DbXG61EfrRTeUqUU30WlFN9uJRv3T11wbMNfNyo
ddJQyhfi8tpfbb+SaY/xjtnUMZMPJwXDhnNi/yAl4zfQQLvJm6f+XjUtmOBc
dmBngfh96DkredSyctKpPDfKqT4dyqk+bsoP6q63N01twYEP5z9+FvuO6wmz
Rxyk/fLD9nkj7oh/ruwslblfhYh8Mvf5sFu0My7Pr43YJP65sT6fBsWuzlnw
uE9Au8PO9PkfPvFwoH6OZnSREGrzl93hhVSQnrpkZqzgVTOquq00bieL1yGy
nrI1qCKdys2jnOotopzqPafcdWTrQNz1ZkQNy91uJp5nwyef3S11gXad5hfb
Dh1pxsExCyL+iOd9lqFv6qxM2sOv6Mu2Tm1G1xzl8XbidcsGpyuHvJdXk07l
nlFO9c5QTvVWU2655/fuZ/+akLbsgq18mPg59bmZFeNNu9zid++dqpvgu64j
LO2mEDl3Q8cVp9FO5QhRTvU1UE71ulKeJX9mtO7bJqy13VnhLF5XDyXfc+3q
o92zYdkR0c0mjDpQrDoxQIjlX6PyJyytIZ3Kh6Sc6ueivD3KXFnCpwltusf1
YsT7mjdss6HbNrTv22v1Ts21CZ87VEx0fYXQqxMZKJykncrboZzqNaCc6jml
3LLliJTZpiacPb3j6OKzQoz/sTCuL5F2Kj+Ncqq/hnKq55pyo0N+Fm564tdB
KibcxFMIOanzqq0i2qmcE8qp3HjKqb5Iyme2Rdx7KN8E0ZW2nE3uQvSMLfCv
mEE7ld9IOdWfRfm9+CfGb3u5yNt8varMVbzPneTycZMp7VQuBOVUnjblyi4p
giIhF9GqCzq2u4jf59pjuvJ2007lF1FO9UFQTvXDUk7lA1BO5SRT/vdHwYK+
z1zYRJ1RP+gkRIWRg+Pre7RT+XKUUz0+lFP3/Smn+sEpp/IoKKfyuikXuHPP
a8WK/+662WbujuLnelMc+1E57VQ+D+VUrwHlVB4C5VT/KeVUjgTlVG425VQO
A+Vlf3oKrfy4yH0ld/z8LiFe7ek0ualMO5ULTTnVy0k5lXdB+SZf045BVy5i
HmZvYOwQgjlWWO6jTzuVL0Q51ctAOZWbQbko7upVn91c6MgGab+wEaJyRaLp
eRvaqZxAyqk+JsqpnBDKqT53yqm8F8qpPHzKqXwSyr1O3PIYWCkeJ2NHmGdu
EEKLO95xeCztVG4t5VRvIOVUrgvl2dW3ndPmctFyoshm7RohLOdbnCgspJ3K
U6Kc6qGgfIRx2J7Tk7goNb16kG0shIffxYvXf9JO5d1RTvUHUU71hlO+UN0g
tPVvI6K5IwMEi8XzzoyOGDXQTuV4U071qFKewze6sL+2EcFJpaHH9YX4fmr6
m5oDtG99hcPctEacOH/jSf8sIdTy7fIeXqWdypmknOrtorz5vJmVw71GOGza
/NZ/pnhfOf46Z99r2t03rFtRdaYRayaM/qw0RbwvOJzbolVDO5XTSznVh0i5
9HgLbevtjZj3jcW5qyHE1bTerjaJBtJDWraOZi5pxPi0kJZpquJxUmGuTJI2
7a/OOfDzexrwzXbsMMMRQgxLvDvT8BTtVP8C5VT/NeUuybLD6yoboKhRE1Mz
TIij4+wzVkfSrs17pdWZ2oC5dVGrzg8JwPHR3GadTfv9tfJO4083wG2P3sXP
XQI8sXro7zaykfRAlXdtTr316HYylbJuFMCsL4YX/4R2Kj+fcqq/mHKTNXsV
zlXVY7ye3OOeagFe7jvgnVZE+8Bpxdm33tdj6fcSk0iOAKrFWipff9Lu1rDP
5cPpepx12+7b/FWAEwzrqb/F4yblDs9Hdcr31UHS67iE2xsBVj2u3KzsTDvV
00E51ZNOuX/j/nyz2jrcXP5qgluSAM+nLrZmnKX9pWrawwsZdZg09HuJ2wsB
lB+F2F6/Tvug7/5Nf3zrsMzf080tWoD6qE27FF/RHm3/4QV3hHj9e/18s9tV
ATwf5DrL9dGufaNvmNzcWpj7afec3i5A1/7l288HN5FO9ZtQTvXLU/5pRGnJ
MhXxfiv159tbmwXoyyqeW/2QdruAx2GuvTWw/p5+8oW5AIMaO4ctek178LkN
OpU5Ndhjt/lX7WIB5FjnkkS1tHc4P9gQZ1uDM3PPfF85Rvw+WZEls21OM+lU
bwXlVG845QFCt7E1y2sw5LgqwVZegKl3LWuTTGif7LimfuS0GlyKGOl8XEIA
7d+NySNsaN9i/+PYqfZqhAx73Pqogw/95xIOn87T/natSYiZbzXiawp5w4r4
MFM1faXHpJ3qwaFcfpbiYM7Jarz9e06//gsfBfknA+OraXdQqDxs4lSNrAnz
z73N4WOj11MHPR7tw0qPmqy0rEbZrnC1g2l8WDcqyup1025tdbfTcGI1Bpod
1+U/52P/88odsybwSKf6HSin+rUpH1CdW7BoWDWUZxY2ez7i46jSiuGz5tEe
W5UbNf9bFWYe0j+rE8HHiROPk3VNaf+984eF3ocqbPo2kBh0mQ//FS4yuk60
U/0slK9FWtrzhCrYKib/3evPh2xnVM0zN9rvT7mkpRNdhb1zHNca+fBx5TE7
ScebdjOexuCMwCp4uH5tavPk47bsEnud67TfdlrzctK2Kjz8HTp24yE+YlhS
SdpvaF904oHCmJ+V+PF3rpfSGj5yDty105JoIZ3qe6I8q+CUwJ9XiVXb1zdd
MxG/bvJLj7iNoH39JIvsnvJKhL87sHbkCj6+vqz2/jiW9j1fBz3q0yqx0u2+
muIiPlh/NKK26tJ+dfKe5mf+lbgmkH8tP40P7qUH/PNbaad6TCineuQpf1So
fPf64UosfmTsK6cufi5KGuRUD9Geeip700mLStTt8LSUVeajU3XK7Hhv2nlF
0z5gfCX0WC3fhg22YOjJY/fKWNqpHiLKvy4x1jdXrMS8yuwho94WvK0bmRGQ
SPsqrX+bH0pW4uP2oobdP1sAP0HRm1Tal0h6hmxsr0DFrob7z3kt2FISLlIu
pH1a6hHV59kVGHF4mPqKghZ4OPbP+NpBO9UPQjnVw075uJAWG9uECsw4Nq4y
IK0FlxPjTWdK8klXdNl1Vya8AitPzAplJrTgXp/DHl8V2runbdXcd7QCbuc2
j95/qwWfbmRFLl1CO9XLRrmPfeC3tr0VuDxzGv9ZcAu+/CvhLjehfUTIx/QT
thV4WPL7/feLLShyrptpvJ72SZLaDpdMK1A4MXyPp0cLqsz7ktY40G7e+Pf+
s/Hi1y2zPil4Rwt+DC3Is/KhneobopylNt9lvlIFlh1MusiwbsEfFxN52yDa
d1gcXJEmXYEtSr62Yy1a8LfW0sI+hHbXDGZ9UUc5zu2aMfTAuAWy749W7Yml
/W7kk0k/8spROXjEImVmCyYdj2t3KaCd6gujfFpZTYdnWjm+xy2f1j2pBTMa
3sx3Y9EeP0I5SyK5HNKWSt1G41ugtzHX42QN7Z/OeO0eE1kO/aiUB3ni8d1A
hyvh3U471ZdBOdU/TjmntWVoekA5dv6wXm3xjwfTYf+CfQdpb7W1jF7sVo4g
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
st4j/1k1VGPevV3aT3tB2Z99liPF75PRt7uMQqoRtnpnrNtf2ruOb3bdJ8OE
dcqMn1MPVCMi+IVv0z/aDZRrEpdLM3Hos2O+yK4a5oFeV4IHafdMcuxQk2TC
s/rxg5SN1ei+uD504RDtv2u/14T1MXBPcup6k0XVsDrX9uySRBvpHhqS9hv+
MBCvumeKvE41JL3SXs2VpL3Pbmz1UCcDGbpR3UzNaiR7BH+s/A8fLDeqdGpl
gLtlYswe6WqMPD6LqStNu+9YC5uJLQz8POBwRqenCulH+6vZ/+HDrPaWsxoZ
GOYVadnZVoUjhwt53sNoH8EMLDOqZED3sfrABXYV8vcd6SmRoV21kMNQ/MKA
6y/VbVGPquCz7cUkdzna78q1WmRnM+A7fJveodAqzNvqpaMpT7um+d+SUxkM
3NG4IzkvqAr1FusX5P2HT82bWtzwhoFU0zGJmcerYLS2bbWaAu0xUos33E5m
IN9mi3/A/iqIzNIss/7DtUzWFponMFBz5Ka9hV0Vwk2Ctzsp0j4781hBcgwD
/0KUZBtQhS6jWS5pI2lPGvA1PxDFgPLTTfVPFlYhxrDfw1GJ9vnLQr+oRzIw
Jf3qaxftKmxZVOijOIp2w/fpeX4hDKzijdjzT6kKiXOO3NmlTLvpK7lsa18G
ghbKfpjQUAmnKS/SpVRo/9ypaSx/joH75mtutLAqoTbR63P8f/jaefOyMk4z
kLjj0oGEz5X4rL6eYT2W9k0J2zK0jjPAvig9ZvnLSkxTaWuOU6Wd2ea0vNaZ
geZw01bpR5Vgjkprt1Sj3Ur3bPqNQwz8iffNLLpTiQuKwd29/+F2cY8/9O5i
YDxn6MiOs5Wok5k1YsN42mtb3i55ac/ArNaVJtOPVyJYql+l6z981/SvqXtt
GFg2cG7cN8dKLB36OvGBOu2O0T/eFm5iYNeMgVyvDZUI6z08/4cG7cc8GmJc
VzIwaLpo0WqNSpg/vLDswQTa/S4Xm6SDgQIjvVK5kZV4OKK120qD9rB7aY3D
TRgIWTDNqXioAl0em1+NGE97VmaY5sNVDGhNU75vxa/AI8upuqdVaOcw/T+I
zBjoUJc1GFdVgZ70oJa5o2lvbXa3XbyGgfejBxk1hRWw0PkVxVeifbSs5e3i
tQxskGyX3pdcgX6JXDWrEbTPVF8xf/x6BtT6mh/MjKnAFhc9trwc7Uv19BiO
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
ZLiUlD2RRfsBHxXSjWQiJPKGF2N+dUFo7hurYCm0r+w4ZcGXTYQX6fP3dnR0
galIUs6V/Wh36j2V/D2PCOJ2efZHKrtA1TrKwEQQ7cQUNVpDEREKDl4+Y5zV
BaLPgub+40N7sZSGtXs1EYrz27iTfbpghtNN/QA72oXnNdK1sUSQdwv8Xe3Q
BcSzjt92MqM9slpzULCZCBXHlD59NuqC6lCryI3NKaQ7GmhdbukjAvbDyzwJ
sS4IX9chf15Ce8xq/SlVKhGWXc9h3u3qgl6ZX+Vi82gvK1Db+26QCEoH1siK
652w1+ZVkssM2rdznCQ9GSfCmwjLbacpnVBQ/dds6Rvaj9ZWlDDNEGFYjUmw
vbETFiYLFdS+oP3CTYU433ki7JsrPWZS3Anqey/xBPejPadTVv/yOhHirLgu
20V0QrfPBwJnH9q77xdK9m0RoY2z1nvMuxP2vLlWataJ9kUZaSZtFkZ/a3SO
drvSCfYUniepLWg/81gcK8VDAh/ppo/+qp0wp+hhIl6P9nEjYeXFwySwW/Xn
SZnuAN75w71qBWjf9TeV54Ysow8US0nvp3eAjSi1ODgX7SeK+Of6FUhAdqT+
l9vUAbnnQ+Nas9AeycVTiNUggW6nvHt5RgecKB4+dyEF7SX18ZEK2iR4GDQU
ciq6AwI/x8mmJaKd7s51PZfRx+oUY9MbfToY89bgGopFu1QP68GYCySQezHZ
2nu+A6xvpnW5hqLdNDB8468VCW6YJH+xVO+A7HS9dyVBaPeTY/rkaUeCHCad
pc9SHTDdvhTz2x/tHXGbyZYuJOB3f3loZqsdAqTMDB95of3m+d+ch4JIsKFh
+YC1oh1ejrF3pNmhPWnT+/vTUBKcXNj+ND6rHSb5qt8OWaO99v18K0s0Ce68
KS3gj20HeZ0bURIWaOfk/vHox1MSjO/kootfbwdcNv5sqSHalRpcr1xJJ8EB
fM1soVk7cBC9pP7oot3Wc1KD9JIEtr7OzIr/tYP51gFWjdNoL+obWa4qIEHP
EF4B9rbDmH1Aa5sK2ikPHagyJSRgeeql38bUDnLxR/J2KqH97/Gh8sxKEmif
PXDl/Hwb+GLo4ebH0G78ZOBWaAMJPpT4x17uaANWEWXdYQm0/zQljJ6nkiAj
WH7yXkAbyAz8aPrDg3aBbedxuEESUJWHNv45t8Edthc5GjvR/l9Z10vlryTg
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
mh5o/x8trHDi
        "]], {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJxNzA0slAEcBvA3DneXfHRHaUuptXF1w0hlOLaXJmUptLsyXZg7GppqdShC
dhm6uLKTLhb5WtJsNTmnmtbkIyqlwpo0R3Iqncs51Wb3vP/t2bPf9uzvciL1
UIIZQRAn/uV/k1dzXfKnrQKJlZvvYm5z+wbXLspceylmJN52d/gO9/mr/Gu0
cHY6GRQ6B3vWvyRnKC5jfwjb+RPmT//md83DTJcLMeLfcHu0hXCNDnZ+yhJF
LcCvdIpkPcU53C2plXr4S7nH2Yk/sLzv4XnpIhxC42VxDfDCnufZAxTXpx7I
O7MEC2reFDgZYeuPRwtVFKvsxouFy3BKSNI1C4K+Yi3vUtVIdzATvmE4aH6Z
DVsL676pOZR91/JbfSCcoimSZiTBRSxD745SmFSEmUeoYUOGxCl3Et7fdmWz
qwPD5H6j5JEhEI68tc9zTAynKRYV3tfh4rnCiRtqeCzc0MmZhF/Qw4s82EyT
H2y86Ev6w94lsvfdYlhjmWeVI4eVw1HrgjvgGTpjfeYU7Fdaoe9krTZ5q8S2
51wgHJAY5378JCxovp4eJYdtIhvrVE/gZ4eVHV7TcCM/PWGYZW3y9nbXpTke
3HRedWa9GO4q9RprkcP2rdJhyRM41l3dGjEFk1ZD2RWOa/Dft4f7kwcHp1cn
S0Swji5QnC6DG/Ta+kwVPB8ibtBp4KDZzsJslo3JnZULS7v94Hd19sJ4ETxr
w6yplMHKgfHh0A44V1Gp3DYFizp8QmxZtiZPBLSMJPPguA2ro4dEMNtAxqbJ
4Bjf4/wsFWxWMPKcOQjffS3wLv8KN/mOj9r9gB9UJUulS/AWVzY7yAiX3mu/
tUAxbWeC2/1luG3E8oMXYbdigvix+aiyhGJOfHP8NMWKqSOz1avgQW5Tq5Fi
5ilCIjCDM3R1tLXm8DHaH6ccGly2N3zsE8U9V6rv7LaA/ezD3LUUb3S+ScZa
wdFCLeMxxcV3yH5HOmzkzPD7KPZJCdrEYcApLfIv+RTX/tLUf6Z4dFdAqj8T
/guzdIiJ
           "]]}, 
         Annotation[#, "Charting`Private`Tag$33549#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], 
       FormBox[
        SuperscriptBox[
         TemplateBox[{"\[Psi]"}, "Abs"], "2"], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotRange -> {All, All},
      PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                    FormBox["\"arg[\[Psi]] / 2\[Pi]\"", TraditionalForm], 
                    TraditionalForm, Editable -> True], {
                   FontFamily -> "Arial"}, Background -> Automatic, 
                   StripOnInput -> False]}, {
                  GraphicsBox[{{}, {}, 
                    RasterBox[CompressedData["
1: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
/wEdeLt3
                    "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                    AbsoluteThickness[0.1], 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                    LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                    CapForm[None], {}}, {Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -56.25}, 
                    Offset[{2.5, 0.}, {7.5, -56.25}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 
                    11.250000000000014`}, 
                    Offset[{2.5, 0.}, {7.5, 11.250000000000014`}]}, {{7.5, 
                    33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 56.25}, 
                    Offset[{2.5, 0.}, {7.5, 56.25}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                   Scaled[0.02], PlotRange -> All, Frame -> True, 
                   FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                   Opacity[0], FrameTicksStyle -> Opacity[0], 
                   ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
                GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]}, "BarLegend", DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{"\"Rainbow\"", ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Psi]] / 2\[Pi]\""}],
                ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
             "]"}]& )], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"V / 30\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7072208255172853`*^9, 3.7072208658913603`*^9}, 
   3.70722110994376*^9, 3.707221747216798*^9, {3.7072218238180623`*^9, 
   3.707221862464179*^9}, 3.7072218999046793`*^9, {3.7072219331133537`*^9, 
   3.70722196474708*^9}, {3.707222016522861*^9, 3.7072220836647186`*^9}, 
   3.7072222005121264`*^9, 3.7072222760969806`*^9, {3.7072225791787887`*^9, 
   3.7072225851784534`*^9}, {3.707222686451517*^9, 3.707222702519748*^9}, 
   3.707222741292367*^9, {3.7072227913392005`*^9, 3.707222831579302*^9}, {
   3.707222866342121*^9, 3.7072228966802416`*^9}, 3.707222929275025*^9, 
   3.7072288013753505`*^9, 3.707229038812192*^9, 3.7072297485143356`*^9, 
   3.7072304396508365`*^9, {3.7072304963407497`*^9, 3.707230507555953*^9}, {
   3.7072317509284797`*^9, 3.707231755285839*^9}, 3.707232452417859*^9, 
   3.7072328688905263`*^9, 3.7072329080236473`*^9, 3.7072331858222833`*^9, 
   3.70723332436641*^9, 3.7072334083661733`*^9, 3.707233886805851*^9, 
   3.707233942855747*^9, 3.707234011082341*^9, 3.707234280768014*^9, 
   3.707234379667125*^9, 3.7072348461603394`*^9, 3.7072351651898212`*^9, {
   3.7072354157780457`*^9, 3.7072354446450086`*^9}, 3.7072368101189747`*^9, 
   3.7072372157681403`*^9, 3.707238960786087*^9, 3.707240831673005*^9, 
   3.707250851129777*^9, 3.707250889451386*^9, 3.707327774898899*^9, 
   3.7073279140746956`*^9, 3.7073282408702497`*^9, 3.7073338921785016`*^9, 
   3.7073348449386644`*^9, 3.7073377598780875`*^9, 3.707338111792198*^9, 
   3.7073460610634127`*^9, 3.7073471998714094`*^9, 3.707349168476763*^9, 
   3.7073495353337235`*^9, 3.7073505793029385`*^9, 3.7073513811746473`*^9, 
   3.7074011982843256`*^9, 
   3.707401377597315*^9},ExpressionUUID->"bc535709-735a-40c2-8e40-\
278ab8293d8a"]
}, {2}]],

Cell["\<\
This wavefunction has an expectation energy much smaller than the height of \
the potential.\
\>", "Text",
 CellChangeTimes->{{3.707230510075077*^9, 3.707230516278926*^9}, {
  3.707230580349909*^9, 3.70723061673106*^9}, {3.707313998258337*^9, 
  3.707313999409343*^9}},ExpressionUUID->"2b2a203b-7411-41f8-9552-\
1da05e24a5c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expectedEnergy", "[", 
  RowBox[{
   RowBox[{"incident\[Psi]", "[", "x", "]"}], ",", " ", "0", ",", " ", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7072315053175554`*^9, 3.707231536025422*^9}, {
  3.707231578722234*^9, 
  3.70723167206594*^9}},ExpressionUUID->"926ec0d6-3a02-4850-8c53-\
c4882bb4716d"],

Cell[BoxData[
 FractionBox["3", "2"]], "Output",
 CellChangeTimes->{{3.7072316629956512`*^9, 3.707231672585054*^9}, 
   3.7072324527718134`*^9, 3.707232869244742*^9, 3.707232908303835*^9, 
   3.707233187936161*^9, 3.7072333246645803`*^9, 3.70723340865136*^9, 
   3.7072338871406307`*^9, 3.7072339443591247`*^9, 3.7072340114219246`*^9, 
   3.7072342843502207`*^9, 3.7072343799675283`*^9, 3.7072348463393574`*^9, 
   3.7072351656357293`*^9, 3.7072354161311293`*^9, 3.707236810410051*^9, 
   3.7072372159723625`*^9, 3.7072389610895844`*^9, 3.7072408320738215`*^9, 
   3.707250851523658*^9, 3.7073277757352495`*^9, 3.707327915318914*^9, 
   3.7073282426847486`*^9, 3.707333893751992*^9, 3.707334845551276*^9, 
   3.7073381124821987`*^9, 3.707346062085416*^9, 3.707347200917924*^9, 
   3.7073491696991863`*^9, 3.7073495367582245`*^9, 3.7073513821834574`*^9, 
   3.707401198944931*^9, 
   3.7074013787130632`*^9},ExpressionUUID->"ef882271-8026-4354-895c-\
5287955b70c4"]
}, Open  ]],

Cell["\<\
In a classical analog, this would mean the particle cannot be found beyond \
the potential barrier. However, when we evolve the wavefunction through \
time...\
\>", "Text",
 CellChangeTimes->{{3.7072317709096327`*^9, 3.7072318285455694`*^9}, {
  3.7072318786205573`*^9, 
  3.7072319052950816`*^9}},ExpressionUUID->"1bc3d323-e15f-48fe-b62f-\
636595a674d1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"endTime", " ", "=", " ", "1.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"incident\[Psi]", 
    StyleBox["[", "Code"], 
    StyleBox[
     RowBox[{"space_", ",", " ", "time_"}], "Code"], 
    StyleBox["]", "Code"]}], 
   StyleBox[" ", "Code"], 
   StyleBox["=", "Code"], "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"simulateWavefunction", "[", 
     RowBox[{
      RowBox[{"incident\[Psi]", "[", "x", "]"}], ",", " ", 
      RowBox[{"stepV", "[", "x", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "6"}], ",", " ", "12"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "endTime"}], "}"}]}], "]"}], "[", 
    RowBox[{"space", ",", " ", "time"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.707220924182947*^9, 3.7072209608529263`*^9}, 
   3.7072210952548065`*^9, {3.7072211648462725`*^9, 3.7072212395794797`*^9}, {
   3.7072213420288153`*^9, 3.7072213451881485`*^9}, {3.7072214312192965`*^9, 
   3.7072214330190473`*^9}, {3.707221675647952*^9, 3.7072216762170925`*^9}, {
   3.7072222393145776`*^9, 3.7072222396055794`*^9}, 3.707222308159439*^9, {
   3.707222374324005*^9, 3.7072223774461856`*^9}, {3.7072224081729765`*^9, 
   3.7072224091736536`*^9}, {3.707228884487322*^9, 3.7072289160670023`*^9}, {
   3.7072321181462116`*^9, 3.7072321339027257`*^9}, 3.7072398253539953`*^9, 
   3.707240845087672*^9},ExpressionUUID->"155f738c-e5d8-4b98-98fe-\
c4d89ce1cedb"],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","bcart",
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"",2,72,847,32565493566245946097,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7073513826094847`*^9, 3.707401198960436*^9, 
  3.707401378957575*^9},ExpressionUUID->"1fada896-db42-498e-a382-\
0ffa89524544"],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","eerr",
   "\"Warning: scaled local spatial error estimate of \
\\!\\(\\*RowBox[{\\\"86.32440886847674`\\\"}]\\) at \\!\\(\\*RowBox[{\\\"\
\[Tau]\\\"}]\\) = \\!\\(\\*RowBox[{\\\"1.8`\\\"}]\\) in the direction of \
independent variable \\!\\(\\*RowBox[{\\\"x\\\"}]\\) is much greater than the \
prescribed error tolerance. Grid spacing with \
\\!\\(\\*RowBox[{\\\"179\\\"}]\\) points may be too large to achieve the \
desired accuracy or precision. A singularity may have formed or a smaller \
grid spacing can be specified using the MaxStepSize or MinPoints method \
options.\"",2,72,882,32565493566245946097,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7073513826094847`*^9, 3.707401198960436*^9, 
  3.7074013803963194`*^9},ExpressionUUID->"dfbf2aee-dc7a-4867-8572-\
e8e8c639072e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Animate", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"plotWavefunction", "[", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{"incident\[Psi]", "[", 
          RowBox[{"x", ",", " ", "t"}], "]"}], ",", " ", 
         "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"-", "3"}], ",", " ", "8"}], "}"}], ",", " ", 
         "\[IndentingNewLine]", "\t\t\t", "False"}], "]"}], ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"stepV", "[", "x", "]"}], "/", "stepHeight"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "2.99", ",", " ", "4.01"}], "}"}], ",", " ", 
         RowBox[{"Exclusions", "\[Rule]", "None"}], ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", " ", "Red"}], "}"}]}]}], 
        "\[IndentingNewLine]", "\t\t", "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{"PlotRange", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1.2"}], "}"}]}]}], "\[IndentingNewLine]", 
      "\t", "]"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", "endTime"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], " ", "//", " ", 
   RowBox[{
    RowBox[{"Legended", "[", 
     RowBox[{"#", ",", " ", 
      RowBox[{"colorBar", "[", "]"}]}], "]"}], "&"}]}], "Code"], "\n", 
 StyleBox[
  RowBox[{"AutoCollapse", "[", "]"}], "Code"]}], "Input",
 CellChangeTimes->{{3.707220965737072*^9, 3.707221063443224*^9}, {
   3.7072211213597865`*^9, 3.707221121845224*^9}, {3.707221351442078*^9, 
   3.7072213523107243`*^9}, {3.7072221260694847`*^9, 3.7072221475285807`*^9}, 
   3.707222333864207*^9, {3.707222547361051*^9, 3.7072225706584835`*^9}, {
   3.7072226070030746`*^9, 3.7072226226727138`*^9}, 3.70722268371769*^9, 
   3.7072321402205257`*^9, {3.7072509401106415`*^9, 3.707250946731022*^9}, {
   3.7072509901448755`*^9, 3.707251053574712*^9}, {3.707337063126523*^9, 
   3.7073370950857973`*^9}, {3.7073371373678374`*^9, 
   3.707337138925153*^9}},ExpressionUUID->"da076eff-1ac4-4048-815e-\
2ebdec351689"],

Cell[BoxData[
 TemplateBox[{TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`t$$ = 1.2153649520874024`, Typeset`show$$ = 
       True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`t$$], 0, 1.8}}, 
       Typeset`size$$ = {360., {118., 123.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       True, $CellContext`t$40274$$ = 0}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`t$$, $CellContext`t$40274$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[
          $CellContext`plotWavefunction[
           $CellContext`incident\[Psi][$CellContext`x, $CellContext`t$$], \
{$CellContext`x, -3, 8}, False], 
          
          Plot[$CellContext`stepV[$CellContext`x]/$CellContext`stepHeight, \
{$CellContext`x, 2.99, 4.01}, Exclusions -> None, PlotStyle -> {Thick, Red}], 
          PlotRange -> {0, 1.2}], 
        "Specifications" :> {{$CellContext`t$$, 0, 1.8, 
           AppearanceElements -> {
            "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
             "DirectionButton"}}}, 
        "Options" :> {
         ControlType -> Animator, AppearanceElements -> None, 
          DefaultBaseStyle -> "Animate", DefaultLabelStyle -> "AnimateLabel", 
          SynchronousUpdating -> True, ShrinkingDelay -> 10.}, 
        "DefaultOptions" :> {}], ImageSizeCache -> {411., {156., 163.}}, 
       SingleEvaluation -> True], Deinitialization :> None, 
      DynamicModuleValues :> {}, SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Animate", Deployed -> True, 
     StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]],FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"arg[\[Psi]]\"", {FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False]}, {
              GraphicsBox[{{}, {}, 
                RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
Kb1b18kctPSfCFU/SsILzbfat6Q78Tx4t6P+Nw6GSRkqn81JyDbQ5Tyo7oRP
1qFdfyVG8LR6UwBxnIRSiX7Zeq8ukLK+r+QuH0Fn2URabjQJlOTkIi1ZKnJC
Vv0SXTICuc+FtddbSGBtd3eIKqLigfM+8lqREWjSjH6uEiTjd/06gV8O3bhg
ePuN2Sxfh65EYUFlMsQdeWkn5tNgtSw7wOUnBxfaBZYPG5GxejzXsjydBo1x
2gl/HgcRFNf1TcfJ2BZyhadq1YOFzQu3JzA4yG6p3pF3nQxLed3Hod96MJyh
t7iExkFTo7p1dDQZDjl/tMee9KIm4AzRTeGAVxfqcCOf7x+TL12H9PrwyiGm
/FcdBxI13EsnW8gI6rznV9jbhyC96njZcg60qmz8d3HJiDu3e5XivX64Sk9e
1i7kwKY8N1JVlILsWdEqf7UBmIytsT6Yw4Fz1aT+PkMKdlgZ1atlDCD1JDVF
KZiDazX69OteFDAbP51xlxmEUOODae4JDsLq74Qlp1GgOd46oms/iNP6pgeK
tnKQ0FS1tZFKweXloxcXxQyiNuN3eshCDt6TRHsmxVtRtFPkR2/nINbL5fyz
HRxGbatNoJJxK+a5K/vkLhtCWJCrnXLhMHo6ojQtr7bCPNzg172jQ+CNL88a
ezCMb9SuNu83rXiQb+9rFz8EG+cWgRK3YQj2Kt563teK9i7Pf2tpQ8ghBR4N
NRjG8gFn1eqlbVCYDfWflqdjyU793MNSw9hAT28a290GF9W0BU0n6PDOHhNS
5RAwZnF9lvu24fXeLyEJL+holU87+aOMACt5vfy3wjbI1+vuFGmn4495ATci
gsCK5U4ll+fa8DFxiYbwfAaIzWrvp/YRsHkY4zhl3o6D1ziyQpsZ6JCP9nVa
SsBfsHme78N28KwrBQQdGagUXGDS0MbGB98Fqf862nFf5fno/AgG8sa8F26L
YWP4u/7ueys7oPLnSrfAZwYSqIPkl0fZUDjjRQi6d+AL2bp63jADEZX740QU
2Njflx76X3YHjmWo5c/JMnEz+8sp7z4WAm37NMUnOzB5e/bFrCkTZ2K01HsS
WSiol255ZNCJx3Zd//3zZsLO/8WYmQsLI9jrJR3YCU3NPJ+ZRCZMzokV5Kiy
oFTgLxXb0IlagVCnv81MbLbzvb2cYOLQhsIP8lJdcKE6W//5y8TKnRyzgDdM
eOSpFQte7IKtHGlkozwLdt+541fcmPDfFl0xVtsFMzvDUFc9FsJTxpLcVzER
92l+HXUNFduj3qjHHWah0u7HviM0BnINvVsqb1OxlixX0+TDwrTw5IzlUwZq
ygfas6lULFsc5CbwhIVNRVOZOw4w0Ge2rydGuxui1j/m6+SzcPr89NENYgxM
1JUM+T/sxnSoY/I5EgsJK2eElWroWGSjOXyO042R2kYkjrLQQZr9IHmPjjWU
+DE7Mxp6hPT728TYEA8QcBUwpEPfXvTnzkQamkzTb4lqsGG6TXDpxNQQDnRf
+7vuDw0l96QVjCzZ8GULlzHzh3DWgSUgbd+DnDL/Iu/TbOTFLbzYeWEIzqEi
0TZFPRigdzd9ucPGpXDS99frh7DToS+furYXh7hK9qqRbLz/cnTvyeFBKGx5
T3KN7kX1hGtfaCobv38MpUpmDOKXYOjomEAf9GZeu3/7yIaR2vl/le6DaKc6
ivl69iFLcGzUro4/F49OHr6mOoj87G3rhfr6oCShfe0zjY2Hy/462dYMIMJ/
kcXjvf14LHtjdtUoGyvuSMh8Nh2Ah92gm8KnfixQKg0JnmMjlbmqdnVFP3av
KwhI5+fItbXzJbl8f2tZbfW9v7Mfa2bCk7Y8GQBno0XsAVUCBflmWmPFfZgj
Np9ynDeIE7oRqwp0COxafmTQTr8PYxSFMRXdQbSAkqGwh0DDHY8nxQW96C0W
vs25OAhjS7nN904QsGP5ma/Z1gtniQC7rKxBNORkK0S4EUj1i17xX10P2I7/
NC9yBmEnayoSe5HA+NK3vNGTPTifd2PBJvUh9Pl1jydf4//3dXWZ7Q8avgtM
0r67DeE03bM/+y6BRzv7o4qCabhm6/nuXcoQvlkKNxT+R6C/fcp9lTwNf9NG
Qn0Gh3Az98XHykj+fc9L6gfndMN/yt1ZR4mO+XLayc3PCPgJrBPnmnRDyHJI
7zc/X8Jv1UdQU/n3it01cKCLirD4k0s+x9Mhyzh1g5HNz5GNx94VnKdCkttF
+HXRkbBnynXsI4GzX72DFedREW1oW2Yky4B6XsT+6S98PY+HHQ2I7sKKhy0x
c4f4eSGnYiBYR0DoR4rm8LouXM29zKuPZGCLWcNazSa+DsxM5vqmTmQmofwF
hc93egFSlxoJXNdJCbS404mBSPFoz6VMrNHaMZvXQODf/fg17ps7IRPYfcbk
IBPPlcc5E/UEArsfVwTQO2Dpk24gG8mEjFxmhw6/Lqr5n1NSdAduu1+RHCYz
EbHIpeIm/zwPb92dKzXvwLvDuxifl7AgNLfibUktAemWawk9v9tBWEgUPjjA
wu0JStxcDYH4VZeMpjPboahPC3N6zMIUERpkwq+v8nbvlXPg56lGhqM2mYVL
vcZewdUE0ipP+m2TbEeIgs9W4SVsEOTpE3VfCWjI2MkfqmhDsbixcPd+Nk5V
51uI8eu57lZFnlfa8P2fBC3rERvUIg/tfVUEtheaHH2g1oZzygb77BvYuBIu
dcSEr3/4PBXYTLSCYXa2claQwGKHYl+dDAL0PQvWSlS0wuHsU53XIPBmo1uC
RjwBvScM8eaHregKr8w86EvAdJ5EpVI4X4feqomIk604kPtN6e8Hvp8oH1lS
twkw1dJo1hqtaGhVfJL2jcDNVMeFIp4EDDyDKsR/U2A2tUdkn8YwZK6KaP11
IhD5ye11UzUFpSuu+/3iz71c87wD3w4RIAR2P4p4QoGuUdq3pMRh7F1+zIdh
RsDISu2atTOf75wornv5PMjiCMR18fsuOlrIQXwTn2uDZrsmZDjwL84sblxH
YKSPZdo0Q0Zahqb1y/0cyD+wHSiT5/eLeo1GRAMZvepnJcMDOdgvGLVBdwEB
WYr76uBkMtoFPyiX5nGgqHw6dQudjTM9X1UL75HRNDSn/a2PgxGjHfIbKtj4
xFJZz3Em4+sXK3NlsREUHl8cuTaJjUXfA7QUTMgofR571FZvBEHX6SLKd9k4
8Wdoi80aMj7eYJwLdh/BweiCOwqObLwVNNa5O5+Mt/abbhdGjUApP+ynrBEb
/1buuupSTUL6Vr9HnLIR8JodLyxRZCNp6+ztmmASEiRrkxVGR1A0spWx6C8L
ZhYlIRp8jozhSX2wkeciRETkuBCNBeKE76OHwnwerXesuWvBhZ1qD3nuEwth
Xnpx4zUtuJ+eSc334ULZONfiTywLWsFTSYfvt+Bu4NQII5mLMYfAL5PXWCDH
f3jz2YK/f338x+ufufhyMETokBELdWrWq3dKt+ARycBfrI2Lh7tDrXMXsFCR
z4ip6G9GzNX+vYlcLk7pRzwRb2CiyMhPYndmMxIU7slqC/KwSesRzeMxE/n1
UkF1V5uRXqEyWKPIw9zqKOXaw0y8sc/8Y2XcjJwzNZnHt/NAknl6VnUlEylD
xt4k8WYUSHhcHbPhIVE0Lvceg4FnF7uJQ9QmlL4X2xVwmgevmWdT/W8YiJr2
cuxMbUL1sZxFcnd52PX9pZGhFwNhwaIdxzyb0Dx3oONNLA9LmElB8ToMBC5N
surb0YSOVxOJRnk8DHalNk7N0OH3UrfSSbgJvVYx5yh1POQ1pkvZVdFxZT1J
j0lpRPFC5eiPHTysd679a3mLDlPy+Ke7sY3wGniiONLJg3mc0P0OdTqIyBQT
7SONWPtR+JUSlQdXkqmUS9sQwm0PNbHlGtETdlPLtpsHf+GAl2N3hrBJdv7h
Z50NiHTifbxP4yHBqHydn8YQ2jrzB2xiGmCuc2pnSQ8PxT6z70X4XHo9ztlD
4HADZsRaa7738kDNMkT0Pf7cPb504oNsA/KHzPar9fPwk+7bsFprEGUKFbfO
dtTjTGFh17EBHtS2Xc46nj8A1z4vYcWn9VB8oOH0cJDHf5+PVVwRHYBI4urH
JLt6tLq8HK4c4uHZkvPUiFP9yHIirwiUqcd9vSXev+g8tN8hxl4V9GH/Gv9U
nfY6GC0OnNZk8iA56ipUJtGHCcYmrZEndTj/irCcbONhuYGKySKDXpiFLyzd
ZVyHZ4bWcSVVPCiH0u/Yn+1B9FaGdexYLera8oig9zxodCUXJz2lgdVd0jv6
vBZT52R1bVJ50FZz/s2t7IbOvZgLZntqoTbfN0T2CQ+GV1Zv1/1Oxf11/3dG
DWzj+zv6AnjYXTHgHbCSii7SnogfqTW4t9lULf0yD/skE3Oa93Zh3XUVRcuD
NcitzfC55MLDEQdH7vIbnbip9C8rYbYa/Y7iX3UO8fXJWrnO7VUHGqo7DX5m
VUN8ykt6zpgHj+let9zWdshfzGu0OlaNHQ86XGq38HDZ4kXyHz53n5cJO5Ei
XA0P1R3vHinz4Pf0RP9urTaUFLtyf7//ikUbBF0ypHhY4Ey1zD3WChpnXaCv
+1copmlfXizEw+wbqSGdYAqqErrXqCt8xSZF14Crv7j4M25980seP19swyrb
yFUwiY6K6uVwwbu+WCXiEz8vRA1c/EOqYCdemWLaywVzYaDtc0l+/5dyBbQM
q3Am6Me7zBYuep//Csw83YSzl18kd/+ohO/M6qqlFVy0a134UFTagIPqNsYh
GZWI8DnQduM9F01lg8w6vg929P4b3OpQiUTeXcbAKy6qDtrLUs/XQiUyx39A
qhLv3HInzOO4KGbU7yYq+XqZn1odUVeB6t7+BTlhXLy/uvPa1Iqv+PlHslzv
TgW67BbLyN7mIlPkfbqQdyX6c8tPsbQrMNJkpHrLk4uUePUumbpy1Lp5z0Vy
yvE/DJC6qA==
                 "], {{
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}}], {Antialiasing -> False, 
                 AbsoluteThickness[0.1], 
                 Directive[
                  Opacity[0.3], 
                  GrayLevel[0]], 
                 LineBox[
                  NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                   7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                   112.5}, {7.5, -112.5}}]]}, {
                 CapForm[None], {}}, {Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.499999999999999, -56.27853081669613}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -56.27853081669613}]}, {{
                    7.499999999999999, 56.27853081669613}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    56.27853081669613}]}, {{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -56.27853081669613}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    56.27853081669613}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
               Scaled[0.02], PlotRange -> All, Frame -> True, 
               FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
               Opacity[0], FrameTicksStyle -> Opacity[0], 
               ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
     "BarLegend", DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"Rainbow\"", ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Psi]]\""}], ",", 
          RowBox[{"\"Ticks\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"-", "3.14`"}], ",", 
                RowBox[{"-", 
                  FractionBox["\[Pi]", "2"]}], ",", "0", ",", 
                FractionBox["\[Pi]", "2"], ",", "3.14`"}], "}"}]}], ",", 
          RowBox[{"\"TickLabels\"", "\[Rule]", 
            RowBox[{"{", 
              
              RowBox[{"\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7072209723589387`*^9, {3.707221068773715*^9, 3.707221122300147*^9}, {
   3.707221229856222*^9, 3.7072212554785423`*^9}, 3.7072213531110754`*^9, {
   3.707221681519698*^9, 3.707221704824314*^9}, 3.7072217799760265`*^9, 
   3.7072218774016504`*^9, 3.7072221481518617`*^9, 3.7072222168985004`*^9, 
   3.7072222814584074`*^9, {3.707222320554716*^9, 3.707222335248086*^9}, 
   3.707222388949748*^9, 3.7072224933653984`*^9, 3.7072225494310656`*^9, {
   3.7072226103141537`*^9, 3.7072226231262093`*^9}, {3.707222689688222*^9, 
   3.707222706053258*^9}, 3.7072290396518154`*^9, 3.707229764433989*^9, {
   3.7072321428779325`*^9, 3.707232156221769*^9}, 3.7072324553489065`*^9, 
   3.707232871704936*^9, 3.7072329112023153`*^9, 3.707233191844102*^9, 
   3.70723332603508*^9, 3.7072334099512787`*^9, 3.7072334800302315`*^9, 
   3.707233891065343*^9, 3.7072339474037533`*^9, 3.707234015404217*^9, 
   3.707234297260554*^9, 3.7072343835314755`*^9, 3.7072348471139374`*^9, 
   3.7072351689574823`*^9, 3.707235416921497*^9, 3.707236811126484*^9, 
   3.707237218457451*^9, 3.7072389645193872`*^9, 3.7072408338045588`*^9, 
   3.707250855028741*^9, 3.7072509475465117`*^9, {3.7072510297542353`*^9, 
   3.707251061110136*^9}, 3.7072517886644073`*^9, 3.707327778779251*^9, 
   3.707327921165629*^9, 3.7073282461315584`*^9, 3.707333896322548*^9, 
   3.7073348509331045`*^9, {3.7073370795263867`*^9, 3.7073370960655518`*^9}, 
   3.70733714030637*^9, 3.7073381179241247`*^9, 3.7073460653399143`*^9, 
   3.707347205013425*^9, 3.7073491721608906`*^9, 3.7073495389712253`*^9, 
   3.7073505844218144`*^9, 3.70735138449792*^9, 3.707401199162468*^9, 
   3.707401380728363*^9},ExpressionUUID->"d432d21d-94e5-4f62-a21b-\
8a122208d06a"]
}, {2}]],

Cell["\<\
we find a non-negligible wavefunction amplitude can emerge beyond the \
barrier. The wavefunction has partially reflected off of, and partially \
transmitted through, the barrier.\
\>", "Text",
 CellChangeTimes->{{3.7072319169956512`*^9, 3.7072320005900283`*^9}, {
  3.7072454310340595`*^9, 3.7072454326698384`*^9}, {3.7072491533714833`*^9, 
  3.7072491571061463`*^9}, {3.707249228496072*^9, 
  3.7072493037354307`*^9}},ExpressionUUID->"aa5b74ba-7f18-4e31-b01d-\
34053f31817d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"transmitted\[Psi]", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"incident\[Psi]", "[", 
    RowBox[{"x", ",", " ", "endTime"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transmittedGrid", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "3"}], ",", " ", "8", ",", " ", "0.01"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transmittedProbs", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"transmitted\[Psi]", "[", "#1", "]"}], "]"}], "2"], " ", 
      "&"}], ")"}], " ", "@", " ", "transmittedGrid"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transmittedSamples", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"EmpiricalDistribution", "[", " ", 
      RowBox[{"transmittedProbs", " ", "\[Rule]", " ", "transmittedGrid"}], 
      "]"}], ",", " ", 
     SuperscriptBox["10", "3"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7072487191670904`*^9, 3.7072487876154385`*^9}, {
  3.7072510719976454`*^9, 3.7072510827079678`*^9}, {3.7073140286279526`*^9, 
  3.7073140293150253`*^9}},ExpressionUUID->"f1fda9e9-a48c-4e22-bab1-\
a8aabcdf3e7c"],

Cell["\<\
This implies a possibility of measuring the particle beyond the classically \
insurmountable barrier.\
\>", "Text",
 CellChangeTimes->{{3.7072491741457796`*^9, 3.7072492318893843`*^9}, {
   3.707249313368738*^9, 3.7072493356020246`*^9}, {3.707249389556947*^9, 
   3.707249409056898*^9}, 
   3.707249450200861*^9},ExpressionUUID->"702e363b-ff42-4ed5-b4fa-\
e294bd031fa4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox["Animate", "Code"], 
  StyleBox["[", "Code"], 
  StyleBox["\n", "Code"], 
  StyleBox["\t", "Code"], 
  RowBox[{
   RowBox[{
    StyleBox["Overlay", "Code"], 
    StyleBox["[", "Code"], 
    RowBox[{
     RowBox[{
      StyleBox["{", "Code"], 
      StyleBox["\[IndentingNewLine]", "Code"], 
      StyleBox["\t", "Code"], 
      RowBox[{
       RowBox[{
        StyleBox["Show", "Code"], 
        StyleBox["[", "Code"], 
        StyleBox["\[IndentingNewLine]", "Code"], 
        StyleBox["\t\t", "Code"], 
        RowBox[{
         StyleBox[
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t\t\t", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                RowBox[{
                 StyleBox[
                  RowBox[{
                   StyleBox["transmitted", "Code"], "\[Psi]"}]], "[", "x", 
                 "]"}], "]"}], "2"], ",", " ", "\n", "\t\t\t\t\t", 
              RowBox[{"ConditionalExpression", "[", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   StyleBox["transmitted\[Psi]", "Code"], "[", "x", "]"}], 
                  "]"}], "2"], ",", " ", 
                RowBox[{"x", " ", ">", " ", "4"}]}], "]"}]}], "}"}], ",", 
            "\n", "\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", 
              RowBox[{"-", "3"}], ",", " ", "8"}], "}"}], ",", " ", 
            RowBox[{"Filling", "\[Rule]", " ", "Axis"}], ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Default", ",", " ", "Red"}], "}"}]}], ",", " ", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.5"}], "}"}]}]}], "\n", "\t\t\t", "]"}], 
          "Code"], 
         StyleBox[",", "Code"], 
         StyleBox["\n", "Code"], 
         StyleBox["\t\t\t", "Code"], 
         StyleBox[
          RowBox[{"Histogram", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"transmittedSamples", "[", 
             RowBox[{"[", 
              RowBox[{";;", "n"}], "]"}], "]"}], ",", " ", 
            RowBox[{"{", "0.2", "}"}], ",", " ", "\n", "\t\t\t\t", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"bins", ",", " ", "counts"}], "}"}], ",", " ", 
              RowBox[{
               RowBox[{"counts", "/", "0.2"}], "/", 
               RowBox[{"Length", "[", "transmittedSamples", "]"}]}]}], 
             "]"}]}], "\n", "\t\t\t", "]"}], "Code"], 
         StyleBox[",", "Code"], 
         StyleBox["\n", "Code"], 
         StyleBox["\t\t\t", "Code"], 
         StyleBox[
          RowBox[{"Histogram", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"transmittedSamples", "[", 
               RowBox[{"[", 
                RowBox[{";;", "n"}], "]"}], "]"}], ",", " ", 
              RowBox[{
               RowBox[{"#", " ", ">", " ", "4"}], " ", "&"}]}], "]"}], ",", 
            " ", 
            RowBox[{"{", "0.2", "}"}], ",", " ", "\n", "\t\t\t\t", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"bins", ",", " ", "counts"}], "}"}], ",", " ", 
              RowBox[{
               RowBox[{"counts", "/", "0.2"}], "/", 
               RowBox[{"Length", "[", "transmittedSamples", "]"}]}]}], "]"}], 
            ",", "\n", "\t\t\t\t", 
            RowBox[{"ChartStyle", "\[Rule]", " ", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"1", ",", " ", "0.3", ",", " ", "0.3"}], "]"}]}]}], 
           "\n", "\t\t\t", "]"}], "Code"], 
         StyleBox[",", "Code"], 
         StyleBox["\n", "Code"], 
         StyleBox["\t\t\t", "Code"], 
         StyleBox[
          RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"stepV", "[", "x", "]"}], " ", 
             RowBox[{"0.5", " ", "/", " ", "stepHeight"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "2.99", ",", " ", "4.01"}], "}"}], ",", " ", 
            RowBox[{"Exclusions", "\[Rule]", "None"}], ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", " ", "Red"}], "}"}]}]}], 
           "\[IndentingNewLine]", "\t\t", "]"}], "Code"], 
         StyleBox[",", "Code"], 
         StyleBox["\[IndentingNewLine]", "Code"], 
         StyleBox["\t\t\t", "Code"], 
         RowBox[{
          StyleBox["AxesLabel", "Code"], 
          StyleBox[" ", "Code"], 
          StyleBox["\[Rule]", "Code"], 
          StyleBox[" ", "Code"], 
          RowBox[{
           StyleBox["{", "Code"], 
           RowBox[{
            StyleBox["\"\<x\>\"", "Code"], 
            StyleBox[",", "Code"], 
            StyleBox[" ", "Code"], 
            RowBox[{
             StyleBox[
              SuperscriptBox[
               RowBox[{"Abs", "[", "\[Psi]", "]"}], "2"], "Code"], 
             StyleBox["[", "Code"], 
             SubscriptBox[
              StyleBox["t", "Code"], "final"], 
             StyleBox["]", "Code"]}]}], 
           StyleBox["}", "Code"]}]}], 
         StyleBox[",", "Code"], 
         StyleBox[" ", "Code"], 
         StyleBox[
          RowBox[{"PlotRange", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "Code"]}], 
        StyleBox["\[IndentingNewLine]", "Code"], 
        StyleBox["\t", "Code"], 
        StyleBox["]", "Code"]}], 
       StyleBox[",", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t\t", "Code"], 
       StyleBox[
        RowBox[{"Text", "[", "\n", "\t\t\t", 
         RowBox[{"\"\<# measurements > 4 \\n=\>\"", " ", "<>", "\n", "\t\t\t", 
          RowBox[{"StringTake", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"ToString", "[", "\n", "\t\t\t\t\t", 
             RowBox[{"100", " ", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"Count", "[", 
                 RowBox[{
                  RowBox[{"transmittedSamples", "[", 
                   RowBox[{"[", 
                    RowBox[{";;", "n"}], "]"}], "]"}], ",", " ", 
                  RowBox[{"u_", " ", "/;", " ", 
                   RowBox[{"(", 
                    RowBox[{"u", " ", ">", " ", "4"}], ")"}]}]}], "]"}], " ", 
                "/", " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"n", " ", ">", " ", "0"}], ",", " ", "n", ",", " ", 
                  "1"}], "]"}]}], "]"}]}], "\n", "\t\t\t\t", "]"}], ",", " ", 
            RowBox[{"UpTo", "[", "4", "]"}]}], "]"}], " ", "<>", " ", 
          "\"\<%\>\""}], "\n", "\t\t", "]"}], "Code"]}], 
      StyleBox["}", "Code"]}], 
     StyleBox[",", "Code"], 
     StyleBox["\n", "Code"], 
     StyleBox["\t\t", "Code"], 
     StyleBox[
      RowBox[{"Alignment", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0"}], "}"}]}], "Code"]}], 
    StyleBox["]", "Code"]}], 
   StyleBox[",", "Code"], 
   StyleBox["\[IndentingNewLine]", "Code"], 
   StyleBox["\t", "Code"], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", " ", "0", ",", " ", "\"\<# measurements\>\""}], 
       "}"}], ",", " ", "0", ",", " ", 
      RowBox[{"Length", "[", "transmittedSamples", "]"}], ",", " ", "1"}], 
     "}"}], "Code"]}], 
  StyleBox["\[IndentingNewLine]", "Code"], 
  StyleBox["]", "Code"]}], "\n", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.707248817450094*^9, 3.7072489338600044`*^9}, {
   3.707248965425183*^9, 3.7072490256012897`*^9}, 3.7072498154052486`*^9, {
   3.7072511278164783`*^9, 3.7072511304739923`*^9}, {3.707251678778043*^9, 
   3.7072516832612963`*^9}, {3.7072517442985945`*^9, 
   3.7072517477091575`*^9}, {3.7073148639526577`*^9, 
   3.7073148669903407`*^9}},ExpressionUUID->"378d9657-0695-48c0-a264-\
ffeaefba4a75"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 628, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 0, "# measurements"}, 0, 1000, 1}}, 
    Typeset`size$$ = {360., {123., 130.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$41051$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$41051$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Overlay[{
         Show[
          Plot[{Abs[
              $CellContext`transmitted\[Psi][$CellContext`x]]^2, 
            ConditionalExpression[Abs[
               $CellContext`transmitted\[Psi][$CellContext`x]]^2, \
$CellContext`x > 4]}, {$CellContext`x, -3, 8}, Filling -> Axis, 
           PlotStyle -> {Default, Red}, PlotRange -> {0, 0.5}], 
          Histogram[
           Part[$CellContext`transmittedSamples, 
            Span[1, $CellContext`n$$]], {0.2}, 
           
           Function[{$CellContext`bins, $CellContext`counts}, \
($CellContext`counts/0.2)/Length[$CellContext`transmittedSamples]]], 
          Histogram[
           Select[
            Part[$CellContext`transmittedSamples, 
             Span[1, $CellContext`n$$]], # > 4& ], {0.2}, 
           
           Function[{$CellContext`bins, $CellContext`counts}, \
($CellContext`counts/0.2)/Length[$CellContext`transmittedSamples]], 
           ChartStyle -> RGBColor[1, 0.3, 0.3]], 
          
          Plot[$CellContext`stepV[$CellContext`x] (
            0.5/$CellContext`stepHeight), {$CellContext`x, 2.99, 4.01}, 
           Exclusions -> None, PlotStyle -> {Thick, Red}], AxesLabel -> {"x", 
            (Abs[$CellContext`\[Psi]]^2)[
             Subscript[$CellContext`t, $CellContext`final]]}, 
          PlotRange -> {0, 0.5}], 
         Text[
          StringJoin["# measurements > 4 \n=", 
           StringTake[
            ToString[100 N[Count[
                 Part[$CellContext`transmittedSamples, 
                  Span[1, $CellContext`n$$]], 
                 Condition[
                  Pattern[$CellContext`u, 
                   Blank[]], $CellContext`u > 4]]/
               If[$CellContext`n$$ > 0, $CellContext`n$$, 1]]], 
            UpTo[4]], "%"]]}, Alignment -> {1, 0}], 
      "Specifications" :> {{{$CellContext`n$$, 0, "# measurements"}, 0, 1000, 
         1, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{415., {162., 169.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7072488078851447`*^9, 3.707248894877884*^9, {3.7072489251256003`*^9, 
   3.707248993311486*^9}, 3.707249027811527*^9, 3.707249816919526*^9, 
   3.7072508555131617`*^9, 3.707251131162092*^9, 3.707251685658326*^9, 
   3.7072517496650295`*^9, 3.707254189171913*^9, 3.707314867673588*^9, 
   3.707327780056693*^9, 3.707327922139632*^9, 3.7073282470445604`*^9, 
   3.7073338974669576`*^9, 3.7073348520054674`*^9, 3.7073381190812283`*^9, 
   3.7073460664482265`*^9, 3.707347206250954*^9, 3.707349174248891*^9, 
   3.707349539930909*^9, 3.7073513856860895`*^9, 3.7074011997028255`*^9, 
   3.7074013831991234`*^9},ExpressionUUID->"9535bd72-fe9a-4b44-b33a-\
615c9cb637f5"]
}, {2}]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
CellContext->Notebook,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 162, 3, 101, "Title", "ExpressionUUID" -> \
"06642691-0715-4a26-a4d0-fcad207eb3ef"],
Cell[745, 27, 325, 7, 91, "Subtitle", "ExpressionUUID" -> \
"388c0da2-de93-42ff-8686-57560a826f60"],
Cell[1073, 36, 567, 14, 30, "Text", "ExpressionUUID" -> \
"3824f30e-ad1a-41ca-9fa3-aed3beb25b9a"],
Cell[CellGroupData[{
Cell[1665, 54, 197, 3, 58, "Section", "ExpressionUUID" -> \
"96d49411-808c-402e-8587-4cf6bb752dd9"],
Cell[1865, 59, 177, 4, 50, "Code", "ExpressionUUID" -> \
"296086aa-794a-4cba-b7b1-255315d8e092"],
Cell[2045, 65, 736, 18, 105, "Code", "ExpressionUUID" -> \
"fc943dda-f9e1-44bd-ac88-beefc4d79be3"],
Cell[2784, 85, 5055, 110, 550, "Code", "ExpressionUUID" -> \
"3d89aed4-19ef-40b6-8c4c-d3824f5ba1bd"],
Cell[7842, 197, 3202, 94, 239, "Code", "ExpressionUUID" -> \
"b6090fb9-af65-416e-b856-941d8a8ea276"],
Cell[11047, 293, 536, 16, 86, "Code", "ExpressionUUID" -> \
"d2e5fc00-f07c-4d4b-b4df-b97e8b0d82fa"],
Cell[11586, 311, 980, 25, 141, "Code", "ExpressionUUID" -> \
"a6fff3bf-5687-4f43-a944-128f7d9fb5c1"],
Cell[12569, 338, 1142, 28, 129, "Code", "ExpressionUUID" -> \
"ccd7b523-7507-41b2-a3fe-e8c9c3660a6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13748, 371, 163, 3, 70, "Section", "ExpressionUUID" -> \
"1844c1eb-1d4c-4ff3-b53f-0042200be0f1"],
Cell[13914, 376, 717, 12, 49, "Text", "ExpressionUUID" -> \
"3b9f712f-2542-4755-bb68-17dcab6fc296"],
Cell[14634, 390, 1859, 41, 63, "Input", "ExpressionUUID" -> \
"c9b5977e-cb19-4d88-95aa-e330fcd293e0"],
Cell[CellGroupData[{
Cell[16518, 435, 1785, 40, 202, "Input", "ExpressionUUID" -> \
"23031046-d31e-4ed6-a398-382162bc6970"],
Cell[18306, 477, 61419, 1056, 232, "Output", "ExpressionUUID" -> \
"d2e50f9c-566b-40f9-bfb6-957f93b81477"]
}, {2}]],
Cell[79737, 1536, 564, 10, 30, "Text", "ExpressionUUID" -> \
"4b33c49f-81b0-49a7-a53c-a2b27503857a"],
Cell[CellGroupData[{
Cell[80326, 1550, 1782, 39, 174, "Input", "ExpressionUUID" -> \
"d49bac33-9b0d-4e59-b736-06fb5882f647"],
Cell[82111, 1591, 64258, 1116, 232, "Output", "ExpressionUUID" -> \
"5e4aa087-d647-438f-9de2-17347cf25e27"]
}, {2}]],
Cell[146381, 2710, 685, 12, 68, "Text", "ExpressionUUID" -> \
"a795a433-08db-4a40-826c-cd6fd3899a7e"],
Cell[CellGroupData[{
Cell[147091, 2726, 4359, 93, 402, "Input", "ExpressionUUID" -> \
"ed5b14e9-0015-47ed-a289-ace2f925fe9b"],
Cell[151453, 2821, 34358, 585, 258, "Output", "ExpressionUUID" -> \
"8f12b72f-ad68-4b7a-86d8-9ffefc71854c"]
}, {2}]],
Cell[185823, 3409, 446, 8, 49, "Text", "ExpressionUUID" -> \
"add7be55-20fe-45fb-a2ce-6a687dc1a26a"],
Cell[186272, 3419, 1110, 25, 33, "Input", "ExpressionUUID" -> \
"fcb9b5cf-42ec-4b62-a533-ed35217f3e3f"],
Cell[CellGroupData[{
Cell[187407, 3448, 7602, 160, 779, "Input", "ExpressionUUID" -> \
"f0865b95-a499-46ce-a592-44456980c53e"],
Cell[195012, 3610, 6178, 113, 348, "Output", "ExpressionUUID" -> \
"d049d6b8-122e-4052-a739-9570dcce66e9"]
}, {2}]],
Cell[201202, 3726, 571, 10, 49, "Text", "ExpressionUUID" -> \
"b3672dc8-f9b2-4c50-bdbe-10dd462f375e"],
Cell[CellGroupData[{
Cell[201798, 3740, 325, 8, 30, "Input", "ExpressionUUID" -> \
"d2b73624-d87e-4077-8691-dfd3713438df"],
Cell[202126, 3750, 112978, 1913, 270, "Output", "ExpressionUUID" -> \
"952d471e-a2b1-421c-bfe5-987fbf6e3e79"]
}, Open  ]],
Cell[315119, 5666, 704, 12, 68, "Text", "ExpressionUUID" -> \
"a8c70ef1-0db7-4242-96c0-4ca96b7af2fa"],
Cell[315826, 5680, 806, 19, 50, "Input", "ExpressionUUID" -> \
"6c136413-b6ef-4725-91c2-4b0854393173"],
Cell[316635, 5701, 6238, 160, 520, "Input", "ExpressionUUID" -> \
"2050a5a1-5bd2-44ca-8f9e-a3d7315f2de5"],
Cell[322876, 5863, 477, 9, 49, "Text", "ExpressionUUID" -> \
"3d388c4e-23df-4a2e-b252-04bcc0f72a37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323390, 5877, 173, 3, 70, "Section", "ExpressionUUID" -> \
"9999bc67-9945-48f0-8c1c-3e21349dac87"],
Cell[CellGroupData[{
Cell[323588, 5884, 184, 3, 49, "Subsection", "ExpressionUUID" -> \
"b6343981-caca-4df3-ad66-847c8e4c6149"],
Cell[323775, 5889, 523, 12, 34, "Text", "ExpressionUUID" -> \
"322847e0-8b6f-4e85-9969-a7fb7ed396b9"],
Cell[324301, 5903, 925, 24, 51, "Input", "ExpressionUUID" -> \
"c2d9e666-d24c-4604-aa23-de46091c6f82"],
Cell[325229, 5929, 199, 3, 30, "Text", "ExpressionUUID" -> \
"e21fcf9e-4a4b-4ca7-88a7-40f61618105a"],
Cell[325431, 5934, 468, 8, 30, "Text", "ExpressionUUID" -> \
"5d6e91cd-f668-4b19-9b0d-d87ab7378260"],
Cell[CellGroupData[{
Cell[325924, 5946, 535, 14, 32, "Input", "ExpressionUUID" -> \
"843ed6d6-ae17-4137-b65b-43848454a1f4"],
Cell[326462, 5962, 1526, 30, 30, "Output", "ExpressionUUID" -> \
"fb13d7b7-e9c0-42fc-8039-aa4f3e1d3be9"]
}, Open  ]],
Cell[328003, 5995, 368, 7, 30, "Text", "ExpressionUUID" -> \
"49d17306-5c24-4bcb-94e4-c6fc516cdc7d"],
Cell[CellGroupData[{
Cell[328396, 6006, 987, 23, 50, "Input", "ExpressionUUID" -> \
"07ad8dd8-d967-4dec-aabc-dd2cf3326ecb"],
Cell[329386, 6031, 1286, 24, 30, "Output", "ExpressionUUID" -> \
"0eaaa6e0-b45b-4ee6-b41a-9e947cb8c1d1"]
}, Open  ]],
Cell[330687, 6058, 252, 4, 30, "Text", "ExpressionUUID" -> \
"73898a67-962d-448d-bf7c-43fb958d9195"],
Cell[CellGroupData[{
Cell[330964, 6066, 461, 11, 30, "Input", "ExpressionUUID" -> \
"edc82ec8-4d4c-48f4-9f84-6b07f0669ad5"],
Cell[331428, 6079, 1388, 28, 35, "Output", "ExpressionUUID" -> \
"00d5837f-ed35-4e4a-ac1b-f6324d60e308"]
}, Open  ]],
Cell[332831, 6110, 294, 6, 49, "Text", "ExpressionUUID" -> \
"235916b9-182f-412d-86c4-cbb9bd8b1400"],
Cell[CellGroupData[{
Cell[333150, 6120, 1174, 30, 70, "Input", "ExpressionUUID" -> \
"52f65e66-ba8d-4e77-ac27-38721814104a"],
Cell[334327, 6152, 1036, 18, 32, "Output", "ExpressionUUID" -> \
"813905e7-ddd3-4333-aac0-5b98de6e4951"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[335412, 6176, 227, 4, 49, "Subsection", "ExpressionUUID" -> \
"6fe4d653-0b9c-4a82-8ef4-ca19f38d7dd8"],
Cell[335642, 6182, 592, 13, 30, "Text", "ExpressionUUID" -> \
"5d9ce4ef-f7ca-46ef-bb75-d40a09bbbf0d"],
Cell[CellGroupData[{
Cell[336259, 6199, 999, 22, 67, "Input", "ExpressionUUID" -> \
"1ab279d2-52b7-49e3-8dbd-88488b1f5363"],
Cell[337261, 6223, 1196, 23, 51, "Output", "ExpressionUUID" -> \
"a1449223-5f56-4ac6-925c-26e406dea98c"]
}, Open  ]],
Cell[338472, 6249, 307, 7, 30, "Text", "ExpressionUUID" -> \
"54ea2302-bf3d-4963-90d5-5920fbb907ad"],
Cell[CellGroupData[{
Cell[338804, 6260, 397, 8, 30, "Input", "ExpressionUUID" -> \
"cec64203-cbc4-4aeb-9735-fbf423897af1"],
Cell[339204, 6270, 1556, 38, 46, "Output", "ExpressionUUID" -> \
"cac107f2-5626-45f8-ae8d-6793ce4c98f4"]
}, Open  ]],
Cell[340775, 6311, 280, 6, 30, "Text", "ExpressionUUID" -> \
"36691e56-7acc-4802-9af6-2ad825c40096"],
Cell[CellGroupData[{
Cell[341080, 6321, 547, 12, 50, "Input", "ExpressionUUID" -> \
"c63030e1-5e2b-4462-87c6-249fd1d47342"],
Cell[341630, 6335, 942, 20, 46, "Output", "ExpressionUUID" -> \
"4fd33a23-d92c-4d8a-afa3-332829724cb3"]
}, Open  ]],
Cell[342587, 6358, 722, 16, 31, "Text", "ExpressionUUID" -> \
"1302c7dc-ec6e-4cb4-b220-c1062c47a207"],
Cell[CellGroupData[{
Cell[343334, 6378, 486, 14, 30, "Input", "ExpressionUUID" -> \
"55556e38-cb45-48a5-9c86-7c395abe1f2b"],
Cell[343823, 6394, 955, 19, 55, "Output", "ExpressionUUID" -> \
"d0ed41a0-9f13-482f-850b-9c9360ccb019"]
}, Open  ]],
Cell[344793, 6416, 840, 16, 31, "Text", "ExpressionUUID" -> \
"99e8acef-5b91-4fb9-85dd-d99d0ba08a0c"],
Cell[CellGroupData[{
Cell[345658, 6436, 647, 12, 30, "Input", "ExpressionUUID" -> \
"0228ea9c-e896-4fdd-871e-c1f94949b18b"],
Cell[346308, 6450, 1204, 24, 30, "Output", "ExpressionUUID" -> \
"51611488-04d0-4a08-afeb-b91943991e50"]
}, Open  ]],
Cell[347527, 6477, 326, 7, 30, "Text", "ExpressionUUID" -> \
"6c3390ec-ed8a-48c9-873e-6e37fabfd4bc"],
Cell[CellGroupData[{
Cell[347878, 6488, 705, 18, 56, "Input", "ExpressionUUID" -> \
"bd6dfca2-63d3-47ed-99f8-9b0d52bb88e2"],
Cell[348586, 6508, 1098, 24, 55, "Output", "ExpressionUUID" -> \
"69ede864-f8d7-4a18-8442-cb95aa0e32ba"]
}, Open  ]],
Cell[349699, 6535, 1150, 28, 50, "Text", "ExpressionUUID" -> \
"50346113-d6a0-44de-a20c-ac79324380d2"],
Cell[350852, 6565, 509, 11, 49, "Text", "ExpressionUUID" -> \
"25a9b4c8-d5a5-45c0-a641-c5bb2655402f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[351410, 6582, 180, 3, 70, "Section", "ExpressionUUID" -> \
"7aec4aae-46d1-4b18-bcab-3d9424211da3"],
Cell[351593, 6587, 258, 6, 30, "Input", "ExpressionUUID" -> \
"7f176cb6-18b4-4d05-9742-0982c25ad50b"],
Cell[351854, 6595, 259, 6, 30, "Input", "ExpressionUUID" -> \
"a1e1f6eb-b9be-4ffb-a9a6-29b6a545e74b"],
Cell[CellGroupData[{
Cell[352138, 6605, 178, 3, 49, "Subsection", "ExpressionUUID" -> \
"9d7a442d-3f0b-41d5-bbb9-e7b265c99c38"],
Cell[352319, 6610, 525, 9, 30, "Text", "ExpressionUUID" -> \
"3af405dc-ee7d-4e86-a493-711d036032e5"],
Cell[352847, 6621, 313, 9, 46, "Input", "ExpressionUUID" -> \
"53447d7f-70a0-4128-8d01-da2ec1e46b82"],
Cell[CellGroupData[{
Cell[353185, 6634, 727, 18, 50, "Input", "ExpressionUUID" -> \
"48824184-0c0d-410d-bb6e-59b37e0f42a9"],
Cell[353915, 6654, 9374, 175, 253, "Output", "ExpressionUUID" -> \
"a0a4978f-a1c6-4c55-8a6b-a7cb4d7efdec"]
}, {2}]],
Cell[363301, 6832, 280, 5, 30, "Text", "ExpressionUUID" -> \
"4c23512c-03cb-4b36-a069-0b12aac78fb6"],
Cell[CellGroupData[{
Cell[363606, 6841, 792, 17, 30, "Input", "ExpressionUUID" -> \
"c4554190-3b05-442f-bab6-4aec0fb66867"],
Cell[364401, 6860, 1611, 33, 46, "Output", "ExpressionUUID" -> \
"813d9f7b-34e6-4f6a-b2ff-d7fb8eb26912"]
}, Open  ]],
Cell[366027, 6896, 667, 16, 31, "Text", "ExpressionUUID" -> \
"668c3a52-97dd-4f75-8658-864a90cecb3d"],
Cell[CellGroupData[{
Cell[366719, 6916, 320, 9, 30, "Input", "ExpressionUUID" -> \
"604d0fac-c5e1-4803-9c9a-312214228b87"],
Cell[367042, 6927, 1743, 42, 46, "Output", "ExpressionUUID" -> \
"dcb04d0e-f7bb-4dc3-a5e7-34d22c0133ea"]
}, Open  ]],
Cell[368800, 6972, 1191, 30, 55, "Text", "ExpressionUUID" -> \
"45c51547-178f-4691-98e1-5242d3481ef8"],
Cell[CellGroupData[{
Cell[370016, 7006, 516, 12, 50, "Input", "ExpressionUUID" -> \
"6a6bb49d-6174-46b4-8162-ae67edc15938"],
Cell[370535, 7020, 1522, 36, 51, "Output", "ExpressionUUID" -> \
"50830c20-ce70-4cf3-9de3-dc65f81fdc76"]
}, Open  ]],
Cell[372072, 7059, 423, 8, 30, "Text", "ExpressionUUID" -> \
"9c5c295d-bf75-47a5-af63-516fa7a12f6e"],
Cell[CellGroupData[{
Cell[372520, 7071, 1006, 22, 30, "Input", "ExpressionUUID" -> \
"adfe9040-111b-46d2-b18a-160a3ed89893"],
Cell[373529, 7095, 1260, 24, 46, "Output", "ExpressionUUID" -> \
"2f53bd62-cd82-401a-b6a6-fa37f6fbb1d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374826, 7124, 297, 7, 30, "Input", "ExpressionUUID" -> \
"228c2637-281e-444b-8172-81cb81eff827"],
Cell[375126, 7133, 1315, 26, 42, "Output", "ExpressionUUID" -> \
"4eacef7f-ad91-45bb-9e94-5a1ecb025764"]
}, Open  ]],
Cell[376456, 7162, 631, 14, 49, "Text", "ExpressionUUID" -> \
"73ef2d14-56c8-4bb7-8a52-9c88b959368a"],
Cell[377090, 7178, 1069, 23, 50, "Input", "ExpressionUUID" -> \
"2e26f7b2-f6bf-4a0c-b493-cd356a2dae3c"],
Cell[CellGroupData[{
Cell[378184, 7205, 2281, 47, 214, "Input", "ExpressionUUID" -> \
"febf58de-4f5a-44ac-9137-e10f98be7e5a"],
Cell[380468, 7254, 15877, 305, 362, "Output", "ExpressionUUID" -> \
"95c9b7a7-fb7c-4dfc-a4d9-af0a9df8ecdb"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[396391, 7565, 232, 4, 49, "Subsection", "ExpressionUUID" -> \
"51c2dd53-1b6a-409a-bc26-61d6c5a88a76"],
Cell[396626, 7571, 796, 15, 49, "Text", "ExpressionUUID" -> \
"f147c4de-8583-4729-96fd-a92f0ee77a4a"],
Cell[397425, 7588, 777, 21, 46, "Input", "ExpressionUUID" -> \
"ac8ed901-7c94-4039-b1d8-418d3166f646"],
Cell[CellGroupData[{
Cell[398227, 7613, 1409, 35, 238, "Input", "ExpressionUUID" -> \
"84c2e73c-8b18-4c4f-860f-1bfba994d9bc"],
Cell[399639, 7650, 15453, 299, 430, "Output", "ExpressionUUID" -> \
"b64b78b3-8589-4290-af53-e87e06fe9d75"]
}, {2}]],
Cell[415104, 7952, 525, 11, 30, "Text", "ExpressionUUID" -> \
"a298f9e6-fd06-48ad-afca-f4231636c26a"],
Cell[CellGroupData[{
Cell[415654, 7967, 1324, 32, 76, "Input", "ExpressionUUID" -> \
"7b534b63-9148-4cda-8018-c5175368d779"],
Cell[416981, 8001, 163063, 2740, 270, "Output", "ExpressionUUID" -> \
"a405fca4-8d21-4ba3-97bc-6c2bae09d212"]
}, Open  ]],
Cell[580059, 10744, 405, 9, 30, "Text", "ExpressionUUID" -> \
"8028c78a-1ad6-43f8-88ba-076d85e3117c"],
Cell[CellGroupData[{
Cell[580489, 10757, 1284, 33, 71, "Input", "ExpressionUUID" -> \
"676f4e73-9011-4238-a123-5a08451cefed"],
Cell[581776, 10792, 15866, 307, 336, "Output", "ExpressionUUID" -> \
"c9dee7c9-0b81-47e5-b931-6646a562a8a3"]
}, Open  ]],
Cell[597657, 11102, 442, 10, 49, "Text", "ExpressionUUID" -> \
"a272b213-e242-4c35-8794-36f4eaa6c4cb"],
Cell[CellGroupData[{
Cell[598124, 11116, 4672, 103, 477, "Code", "ExpressionUUID" -> \
"71bce755-343c-4db6-8a6e-b219d7ae7938"],
Cell[602799, 11221, 2499, 49, 576, "Output", "ExpressionUUID" -> \
"e01f6514-c175-4333-96c6-b9552c65809b"]
}, Open  ]],
Cell[605313, 11273, 450, 10, 49, "Text", "ExpressionUUID" -> \
"acd30c66-3dee-4c34-b63b-b9ac3bc7b25d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[605800, 11288, 165, 3, 49, "Subsection", "ExpressionUUID" -> \
"95779c0e-aff7-4e65-bf09-be16f3d316ac"],
Cell[605968, 11293, 377, 10, 30, "Text", "ExpressionUUID" -> \
"e2fe281c-3dd6-4636-a65b-23d4c88c040b"],
Cell[606348, 11305, 609, 12, 30, "Input", "ExpressionUUID" -> \
"1affdacd-f34a-4ffc-949f-81b606df8438"],
Cell[CellGroupData[{
Cell[606982, 11321, 1359, 34, 183, "Input", "ExpressionUUID" -> \
"26798a89-f725-4513-9f7b-94e57ad981e6"],
Cell[608344, 11357, 77458, 1364, 302, "Output", "ExpressionUUID" -> \
"daa1ec81-7681-468f-87aa-e9232d69b7a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[685839, 12726, 1007, 25, 50, "Input", "ExpressionUUID" -> \
"60471bf8-04bc-483e-8ad1-a608c0927ac0"],
Cell[686849, 12753, 508, 10, 39, "Message", "ExpressionUUID" -> \
"5c238b4d-8b22-4ec6-9b7f-110115fdf5c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[687394, 12768, 1852, 45, 285, "Code", "ExpressionUUID" -> \
"4d09cece-4240-4b3b-aefd-be8e7bc26124"],
Cell[689249, 12815, 15564, 302, 336, "Output", "ExpressionUUID" -> \
"0be03eb2-2446-42ff-81c7-59ba0ddd3720"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[704874, 13124, 191, 3, 70, "Section", "ExpressionUUID" -> \
"8b8836d5-f4a9-42fb-8399-8566ab0cf67e"],
Cell[705068, 13129, 1088, 29, 55, "Text", "ExpressionUUID" -> \
"0c5dab27-9be2-4573-b28c-7385535db53f"],
Cell[CellGroupData[{
Cell[706181, 13162, 3102, 78, 303, "Input", "ExpressionUUID" -> \
"509dd8a0-41c0-40b8-9315-1c8acf5bb5a6"],
Cell[709286, 13242, 119447, 2046, 302, "Output", "ExpressionUUID" -> \
"bc535709-735a-40c2-8e40-278ab8293d8a"]
}, {2}]],
Cell[828745, 15291, 336, 7, 30, "Text", "ExpressionUUID" -> \
"2b2a203b-7411-41f8-9552-1da05e24a5c8"],
Cell[CellGroupData[{
Cell[829106, 15302, 331, 8, 30, "Input", "ExpressionUUID" -> \
"926ec0d6-3a02-4850-8c53-c4882bb4716d"],
Cell[829440, 15312, 964, 15, 46, "Output", "ExpressionUUID" -> \
"ef882271-8026-4354-895c-5287955b70c4"]
}, Open  ]],
Cell[830419, 15330, 365, 8, 49, "Text", "ExpressionUUID" -> \
"1bc3d323-e15f-48fe-b62f-636595a674d1"],
Cell[CellGroupData[{
Cell[830809, 15342, 1515, 32, 69, "Input", "ExpressionUUID" -> \
"155f738c-e5d8-4b98-98fe-c4d89ce1cedb"],
Cell[832327, 15376, 508, 10, 39, "Message", "ExpressionUUID" -> \
"1fada896-db42-498e-a382-0ffa89524544"],
Cell[832838, 15388, 855, 15, 56, "Message", "ExpressionUUID" -> \
"dfbf2aee-dc7a-4867-8572-e8e8c639072e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[833730, 15408, 2388, 51, 278, "Input", "ExpressionUUID" -> \
"da076eff-1ac4-4048-815e-2ebdec351689"],
Cell[836121, 15461, 17010, 322, 336, "Output", "ExpressionUUID" -> \
"d432d21d-94e5-4f62-a21b-8a122208d06a"]
}, {2}]],
Cell[853143, 15786, 487, 9, 49, "Text", "ExpressionUUID" -> \
"aa5b74ba-7f18-4e31-b01d-34053f31817d"],
Cell[853633, 15797, 1278, 33, 93, "Input", "ExpressionUUID" -> \
"f1fda9e9-a48c-4e22-bab1-a8aabcdf3e7c"],
Cell[854914, 15832, 380, 8, 30, "Text", "ExpressionUUID" -> \
"702e363b-ff42-4ed5-b4fa-e294bd031fa4"],
Cell[CellGroupData[{
Cell[855319, 15844, 8110, 203, 666, "Input", "ExpressionUUID" -> \
"378d9657-0695-48c0-a264-ffeaefba4a75"],
Cell[863432, 16049, 4343, 88, 348, "Output", "ExpressionUUID" -> \
"9535bd72-fe9a-4b44-b33a-615c9cb637f5"]
}, {2}]]
}, Open  ]]
}, Open  ]]
}
]
*)

