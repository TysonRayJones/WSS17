(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1826864,      35597]
NotebookOptionsPosition[   1695725,      32729]
NotebookOutlinePosition[   1789593,      34742]
CellTagsIndexPosition[   1785976,      34635]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f6ffeff0-126b-4ca8-8f01-f3cdae38cea0"],

Cell["Probability and Statistics", "Title",
 CellChangeTimes->{
  3.70179540949671*^9, {3.7021385227942705`*^9, 3.7021385250182705`*^9}, {
   3.7021436439422703`*^9, 
   3.7021436440052705`*^9}},ExpressionUUID->"67f47d53-3d6f-4cee-a212-\
3ad46d9f08eb"],

Cell[TextData[{
 "Wolfram Research\n",
 StyleBox["training@wolfram.com",
  FontSlant->"Italic"]
}], "Subtitle",ExpressionUUID->"cb02f574-7880-4ac3-8531-bc2feedd2545"],

Cell["\[Copyright] Wolfram Research, Inc.", "Subsubtitle",ExpressionUUID->"33bb0238-52c9-4981-aa0c-862f6bbd905c"],

Cell["", "Text",ExpressionUUID->"78305ca3-ad64-4412-843c-d7618f129b2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f0580f1d-28a4-49d7-b263-6ef9faaa30e4"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"Learning Objectives\"\>", "Section",
         StripOnInput->False],
        BaselinePosition->Center,
        FrameMargins->0,
        FrameStyle->None,
        StripOnInput->False],
       StripOnInput->False], 
      ItemBox[
       DynamicModuleBox[{$CellContext`parentBox$$ = BoxObject[
        32769], $CellContext`attachedCell$$ = CellObject[
        33457], $CellContext`attachTo3$$}, 
        TagBox[
         PaneSelectorBox[{False->
          FrameBox[
           StyleBox["\<\"Prerequisites\"\>",
            StripOnInput->False,
            FontFamily->"Cambria",
            FontSize->Dynamic[
              If[CurrentValue[
                 EvaluationNotebook[], ScreenStyleEnvironment] === 
               "SlideShow", 20, 12]],
            FontWeight->Bold,
            FontColor->GrayLevel[0.5]],
           Alignment->Center,
           Background->RGBColor[0.87, 0.94, 1],
           FrameMargins->5,
           FrameStyle->RGBColor[0.5800000000000001, 0.6266666666666667, 
             Rational[2, 3]],
           ImageSize->Dynamic[
             If[CurrentValue[
                EvaluationNotebook[], ScreenStyleEnvironment] === 
              "SlideShow", {160, 42}, {110, 35}]],
           RoundingRadius->5,
           StripOnInput->False], True->
          FrameBox[
           StyleBox["\<\"Prerequisites\"\>",
            StripOnInput->False,
            FontFamily->"Cambria",
            FontSize->Dynamic[
              If[CurrentValue[
                 EvaluationNotebook[], ScreenStyleEnvironment] === 
               "SlideShow", 20, 12]],
            FontWeight->Bold,
            FontColor->GrayLevel[0.5]],
           Alignment->Center,
           Background->RGBColor[0.88, 1, 0.88],
           FrameMargins->5,
           FrameStyle->RGBColor[0.5866666666666667, 
             Rational[2, 3], 0.5866666666666667],
           ImageSize->Dynamic[
             If[CurrentValue[
                EvaluationNotebook[], ScreenStyleEnvironment] === 
              "SlideShow", {160, 42}, {110, 35}]],
           RoundingRadius->5,
           StripOnInput->False]}, Dynamic[
           CurrentValue["MouseOver"]],
          FrameMargins->0,
          ImageSize->Automatic],
         EventHandlerTag[{
          "MouseEntered" :> ($CellContext`attachedCell$$ = \
$CellContext`attachTo3$$[$CellContext`parentBox$$]; Null), "MouseExited" :> 
           NotebookDelete[$CellContext`attachedCell$$], Method -> 
           "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
        DynamicModuleValues:>{{
          DownValues[$CellContext`attachTo3$$] = {HoldPattern[
               $CellContext`attachTo3$$[
                Pattern[$CellContext`parentbox$, 
                 Blank[]]]] :> MathLink`CallFrontEnd[
               FrontEnd`AttachCell[$CellContext`parentbox$, 
                ToBoxes[
                 ExpressionCell[
                  Style[
                   Grid[
                    Map[{
                    StringJoin["\[FilledSmallCircle] ", #]}& , {
                    "The core modules"}], Alignment -> Left, 
                    Spacings -> {1, 1}], FontSize -> 16, FontFamily -> 
                   "Arial"], StripOnInput -> True, Background -> White, 
                  CellFrameColor -> LightBlue, CellFrameMargins -> 20, 
                  CellFrame -> 2]], {Automatic, {Right, Bottom}}, {
                Right, Top}, "ClosingActions" -> {}]]}}},
        Initialization:>($CellContext`parentBox$$ = 
          EvaluationBox[]; $CellContext`attachTo3$$[
            Pattern[$CellContext`parentbox$, 
             Blank[]]] := MathLink`CallFrontEnd[
            FrontEnd`AttachCell[$CellContext`parentbox$, 
             ToBoxes[
              ExpressionCell[
               Style[
                Grid[
                 Map[{
                   StringJoin["\[FilledSmallCircle] ", #]}& , {
                  "The core modules"}], Alignment -> Left, 
                 Spacings -> {1, 1}], FontSize -> 16, FontFamily -> "Arial"], 
               StripOnInput -> True, Background -> White, CellFrameColor -> 
               LightBlue, CellFrameMargins -> 20, CellFrame -> 2]], {
             Automatic, {Right, Bottom}}, {Right, Top}, 
             "ClosingActions" -> {}]])],
       Alignment->Right,
       StripOnInput->False]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {Left, Right}},
    GridBoxItemSize->{"Columns" -> {{"Fit"}}, "Rows" -> {{"Fit"}}}],
   "Grid"],
  ImageSize->Full]],
 CellFrame->{{0, 0}, {0.2, 0}},
 CellMargins->{{60, 50}, {7, 25}},
 GeneratedCell->False,
 CellAutoOverwrite->True,
 CellFrameMargins->0,
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{
  3.701795632948829*^9},ExpressionUUID->"a8f69a95-1d2c-45fa-9487-\
afda58d6d061"],

Cell[CellGroupData[{

Cell["Statistical Distributions and Properties", "Subsection",
 CellChangeTimes->{{3.692632836328558*^9, 3.6926328485446014`*^9}, {
  3.69377504459628*^9, 3.693775081196045*^9}, {3.6984102710444937`*^9, 
  3.698410278770835*^9}, {3.701112723902215*^9, 
  3.7011127377568007`*^9}},ExpressionUUID->"87d250b1-8319-4c95-aeaf-\
0528ab8babe7"],

Cell["\<\
In this section we will overview the functions in the Wolfram Language for\
\>", "Text",
 CellChangeTimes->{{3.6926329421204023`*^9, 3.692633016629648*^9}, {
   3.692633110138451*^9, 3.69263314299903*^9}, {3.6926332154511023`*^9, 
   3.6926332994578257`*^9}, {3.6926333609576383`*^9, 
   3.6926334530836577`*^9}, {3.693775088874196*^9, 3.6937750916227784`*^9}, {
   3.698410283506276*^9, 3.69841032073713*^9}, {3.7011127407968206`*^9, 
   3.7011128298599806`*^9}, 3.701780061741167*^9, {3.7021385744232707`*^9, 
   3.7021385836932707`*^9}},ExpressionUUID->"c904a56e-bef5-4cc5-a656-\
ca8881fd3d5a"],

Cell[CellGroupData[{

Cell["Distributions: types, properties, simulation", "Item",
 CellChangeTimes->{{3.688381240743415*^9, 3.688381241570215*^9}, {
  3.693775104763894*^9, 3.6937751067334814`*^9}, {3.701112860714531*^9, 
  3.701112923234913*^9}, {3.7017800408833933`*^9, 
  3.7017800460988674`*^9}},ExpressionUUID->"a510ecd3-faed-4701-9004-\
90b1cb8d8903"],

Cell["Descriptive statistics (including robust estimators)", "Item",
 CellChangeTimes->{{3.688333112095577*^9, 3.6883331336209764`*^9}, {
   3.688380653155815*^9, 3.688380656353815*^9}, {3.688470486798664*^9, 
   3.6884704915044017`*^9}, {3.6937750715941067`*^9, 3.693775097351942*^9}, {
   3.7011128328438306`*^9, 3.7011128718027563`*^9}, 
   3.7017800492505913`*^9},ExpressionUUID->"09ffc371-5c9e-4749-8584-\
ef94ebba42c7"],

Cell["Data fitting to distributions and hypothesis testing", "Item",
 CellChangeTimes->{{3.6883811932318153`*^9, 3.688381193983615*^9}, {
  3.688381502148015*^9, 3.688381515209215*^9}, {3.688472200291486*^9, 
  3.6884722122575326`*^9}, {3.6937750992707295`*^9, 3.69377510229711*^9}, {
  3.7011128539386187`*^9, 3.701112857514968*^9}, {3.7011129357380037`*^9, 
  3.701112974561736*^9}, {3.7017800533399086`*^9, 
  3.7017800554437346`*^9}},ExpressionUUID->"d6c73fa2-b936-4f35-9cf5-\
a72344ee530f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regression Models", "Subsection",
 CellChangeTimes->{{3.6926328595298605`*^9, 3.6926328612980385`*^9}, {
   3.693775328392662*^9, 3.693775331015445*^9}, {3.7008459900765705`*^9, 
   3.7008459987904773`*^9}, 
   3.7011903872231417`*^9},ExpressionUUID->"1d128d9c-d539-4d8e-9cdb-\
65f057dd0f4c"],

Cell["\<\
We will briefly describe the various regression models in the Wolfram Language\
\>", "Text",
 CellChangeTimes->{{3.6926330290082893`*^9, 3.6926330592519026`*^9}, {
   3.6926331674539165`*^9, 3.6926332116447506`*^9}, {3.692633482454481*^9, 
   3.69263350519979*^9}, 3.693775351169916*^9, {3.701112978320898*^9, 
   3.7011130101048117`*^9}, {3.7021385842222705`*^9, 
   3.7021386112532706`*^9}},ExpressionUUID->"8bbb29bd-ff15-4094-879a-\
6ececba3fc3c"],

Cell[CellGroupData[{

Cell["Linear Regression", "Item",
 CellChangeTimes->{
  3.688381454341015*^9, {3.6883815657430153`*^9, 3.688381638481015*^9}, 
   3.6884085610410833`*^9, 3.6937753414773784`*^9, {3.7011130129044256`*^9, 
   3.7011130146729336`*^9}, {3.701113050512274*^9, 
   3.7011130517846713`*^9}},ExpressionUUID->"04cf2fbf-34cf-475f-9f1a-\
3dfdcfc32c72"],

Cell["Nonlinear Regression", "Item",
 CellChangeTimes->{{3.692640528320154*^9, 3.6926405321959047`*^9}, 
   3.693775342647371*^9, {3.701113017936597*^9, 
   3.7011130558885403`*^9}},ExpressionUUID->"3b050c19-cec5-47a9-aeb9-\
d272aa4545ac"],

Cell["Poisson Regression", "Item",
 CellChangeTimes->{{3.692640528320154*^9, 3.6926405321959047`*^9}, 
   3.693775342647371*^9, {3.701113017936597*^9, 
   3.7011130480487843`*^9}},ExpressionUUID->"f8c7838f-807e-44cd-a661-\
2b81bf596e68"],

Cell["Logistic Regression", "Item",
 CellChangeTimes->{{3.692640528320154*^9, 3.6926405321959047`*^9}, 
   3.693775342647371*^9, {3.701113017936597*^9, 
   3.7011130642878933`*^9}},ExpressionUUID->"b3eb8497-a631-4d45-8a51-\
8ca3504abcd7"],

Cell["Link functions", "Item",
 CellChangeTimes->{{3.692640528320154*^9, 3.6926405321959047`*^9}, 
   3.693775342647371*^9, {3.701113017936597*^9, 3.7011130300641546`*^9}, {
   3.701113070927517*^9, 
   3.70111307533698*^9}},ExpressionUUID->"2d570863-e6d2-4bc0-b3e0-\
c011a2eff4b2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Time Series Models", "Subsection",
 CellChangeTimes->{{3.6926328595298605`*^9, 3.6926328612980385`*^9}, {
  3.693775328392662*^9, 3.693775331015445*^9}, {3.7008459900765705`*^9, 
  3.7008459987904773`*^9}, {3.7011130920642824`*^9, 
  3.701113100055436*^9}},ExpressionUUID->"9397dac0-b039-4f0e-84bc-\
34e5151b9a4d"],

Cell["\<\
Next we will briefly describe the various time series models and use it to \
make forecasts using the following data\
\>", "Text",
 CellChangeTimes->{{3.6926405710422077`*^9, 3.6926406031615973`*^9}, 
   3.6937753536201005`*^9, {3.7011130777844915`*^9, 3.7011131037201395`*^9}, {
   3.701113289117835*^9, 3.701113309429593*^9}, {3.7011133474442916`*^9, 
   3.701113369555894*^9}, {3.701780069173744*^9, 
   3.7017800764549026`*^9}},ExpressionUUID->"2ea5ac10-f26e-4a27-b2c3-\
185eba51a1e9"],

Cell[CellGroupData[{

Cell["Airline passenger data", "Item",
 CellChangeTimes->{
  3.6883812447058153`*^9, {3.688381289377015*^9, 3.688381332666415*^9}, 
   3.6937753437393637`*^9, {3.701113312380582*^9, 3.7011133271574926`*^9}, {
   3.7017800188333764`*^9, 
   3.701780021871786*^9}},ExpressionUUID->"e8bcbc10-1e57-4a1c-88a8-\
af717aaed157"],

Cell["Temperature data at your current location ", "Item",
 CellChangeTimes->{
  3.6883812447058153`*^9, {3.688381289377015*^9, 3.688381332666415*^9}, 
   3.6937753437393637`*^9, {3.701113312380582*^9, 3.7011133801407185`*^9}, {
   3.701780026193751*^9, 
   3.701780026640964*^9}},ExpressionUUID->"1b1ac549-0dd5-4644-bacb-\
802cf250ef86"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"3f67613b-43ff-4a91-8cc7-440f146c392f"],

Cell[CellGroupData[{

Cell["Introduction to Statistical Functions", "Section",
 CellChangeTimes->{{3.7008478228075123`*^9, 3.700847838734667*^9}, {
  3.7008479646365323`*^9, 3.700847971813517*^9}, {3.700910497896631*^9, 
  3.70091051216129*^9}},ExpressionUUID->"fd7c281c-0ac6-41e7-8038-\
85540bc078aa"],

Cell[CellGroupData[{

Cell["Descriptive Statistics and Robust Estimators", "Subsection",
 CellChangeTimes->{
  3.702143393356271*^9},ExpressionUUID->"bcf16611-48d3-463b-8455-\
795d16f6af90"],

Cell[TextData[{
 "The Wolfram Language\[CloseCurlyQuote]s descriptive statistics functions \
(shown in smaller fonts) operate both on explicit data and on symbolic \
representations of statistical distributions. When operating on explicit \
data, the functions routinely handle huge datasets, which can contain not \
only numbers but also symbolic elements representing, for example, \
parametrized or unknown data. ",
 StyleBox["The Wolfram Language provides a variety of robust estimators (less \
affected by outliers, shown here in larger fonts) for different applications, \
including location, dispersion and shape characterization. They are useful in \
outlier detection and parametric estimation",
  CellDingbat->Cell["hkao      ", "TentativeID"]],
 ". "
}], "Text",
 CellChangeTimes->{{3.7009102399902983`*^9, 
  3.7009103471964903`*^9}},ExpressionUUID->"3c0e49ad-e311-42d8-87f3-\
ee1807b13dbb"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[InsetBox[
      StyleBox["\<\"BiweightMidvariance\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[1, 0.75, 0]], {0, 0}, Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 51]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"FindDistributionParameters\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[0.915, 0.3325, 0.2125]], {0., 58.5}, Center, 
      Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 54]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BiweightLocation\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {2., -58.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 43]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"EstimatedDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[0.571589, 0.586483, 0.]], {0., 116.5}, Center, 
      Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 53]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"InterquartileRange\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02959135744480977],
       FontColor->RGBColor[
        0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {0., -115.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 47]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"QuartileSkewness\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-393., -167.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 52]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"QnDispersion\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-478., -43.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 49]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SnDispersion\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {480., -58.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 50]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"TakeLargest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[
        0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {454., -116.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 64]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"WinsorizedMean\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-524., -101.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 40]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MedianDeviation\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {518., 161.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 46]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"WinsorizedVariance\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02959135744480977],
       FontColor->RGBColor[
        0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {211., -170.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 45]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SpatialMedian\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02959135744480977],
       FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-533., 114.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 41]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"QuartileDeviation\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02959135744480977],
       FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {569., 0.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 48]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"TrimmedMean\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {631., 101.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 39]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"TrimmedVariance\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02959135744480977],
       FontColor->RGBColor[
        0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-322., 171.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 44]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"CentralFeature\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02959135744480977],
       FontColor->RGBColor[
        0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-544., 12.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 42]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Ordering\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {793., -116.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 59]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"TakeSmallest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02959135744480977],
       FontColor->RGBColor[
        0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-767., 168.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 65]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"RankedMin\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[
        0.28026441037696703`, 0.715, 0.4292089322474965]], {734., -176.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 60]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Commonest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02959135744480977],
       FontColor->RGBColor[
        0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-848., -200.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 38]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"RankedMax\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02959135744480977],
       FontColor->RGBColor[
        0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {860., -52.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 61]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"GoodmanKruskalGamma\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.01972757162987318],
       FontColor->RGBColor[
        0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {31., 209.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 17]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"CharacteristicFunction\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.01972757162987318],
       FontColor->RGBColor[
        0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {0., -215.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 6]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Quartiles\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02959135744480977],
       FontColor->RGBColor[
        0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-824., -29.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 63]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Quantile\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02959135744480977],
       FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-818., 66.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 62]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Median\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {-817., -152.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 37]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"StandardDeviation\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.01972757162987318],
       FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-387., 216.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 31]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MinMax\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02959135744480977],
       FontColor->RGBColor[
        0.47401116530937026`, 0.47809330081437784`, 0.85]], {814., 203.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 57]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"HoeffdingD\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.01972757162987318],
       FontColor->RGBColor[
        0.37977756485605163`, 0.715, 0.3025558265468435]], {110., 164.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 19]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ContraharmonicMean\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-379., -212.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 7]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"HarmonicMean\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.01972757162987318],
       FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {357., -215.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 18]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MeanDeviation\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.01972757162987318],
       FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {416., 209.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 24]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"WeightedData\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-539., 60.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 35]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SpearmanRho\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {542., 47.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 30]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"AbsoluteCorrelation\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {656., -221.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 1]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BlomqvistBeta\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-682., 213.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 3]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"TemporalData\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {759., 49.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 32]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"FactorialMoment\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-868., 109.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 15]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Sort\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[
        0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-860., -89.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 58]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Covariance\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.01972757162987318],
       FontColor->RGBColor[
        0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-869., 16.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 9]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Max\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.03287928604978863],
       FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {847., 146.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 56]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"GeometricMean\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-918., 211.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 16]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Expectation\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {905., 0.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 14]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Correlation\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.01972757162987318],
       FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {914., -222.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 8]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"CentralMoment\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {0., 243.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 5]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Entropy\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.01972757162987318],
       FontColor->RGBColor[
        0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-537., -241.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 11]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Probability\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {257., 243.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 28]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"EventSeries\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.7513196300394465, 0.358, 0.48066210763162087`]], {0., -250.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 13]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"InverseCDF\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-190., -250.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 20]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Kurtosis\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.01972757162987318],
       FontColor->RGBColor[
        0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-364., -247.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 22]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"TimeSeries\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {186., -250.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 33]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"KendallTau\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-209., 250.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 21]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Min\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.02959135744480977],
       FontColor->RGBColor[
        0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {613., 216.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 55]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"EventData\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {359., -250.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 12]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BinCounts\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-380., 250.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 2]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Skewness\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {424., 243.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 29]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PillaiTrace\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.47929071933511125`, 0.715, 0.1759027208462221]], {-545., 250.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 27]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Cumulant\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-690., -243.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 10]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Variance\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {697., 249.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 34]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Moment\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-694., 244.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 25]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"WilksW\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-825., 244.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 36]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"Mean\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {488., -250.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 23]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"CDF\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[
        0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {373., 90.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 4]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PDF\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016439643024894316`],
       FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-807., -243.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
             CentralMoment, CharacteristicFunction, ContraharmonicMean, 
             Correlation, Covariance, Cumulant, Entropy, EventData, 
             EventSeries, Expectation, FactorialMoment, GeometricMean, 
             GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
             KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
             PillaiTrace, Probability, Skewness, SpearmanRho, 
             StandardDeviation, TemporalData, TimeSeries, Variance, 
             WeightedData, WilksW, Median, Commonest, TrimmedMean, 
             WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
             TrimmedVariance, WinsorizedVariance, MedianDeviation, 
             InterquartileRange, QuartileDeviation, QnDispersion, 
             SnDispersion, BiweightMidvariance, QuartileSkewness, 
             EstimatedDistribution, FindDistributionParameters, Min, Max, 
             MinMax, Sort, Ordering, RankedMin, RankedMax, Quantile, 
             Quartiles, TakeLargest, TakeSmallest}, 26]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]]}},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  ImageSize->Full,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-1064.5, 1064.5}, {-269., 269.}}]], "Output",
 GeneratedCell->False,
 CellChangeTimes->{
  3.700909548388214*^9},ExpressionUUID->"60e94397-03a8-47ad-8c08-\
5861de9949a9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Hypothesis Testing", "Subsection",
 CellChangeTimes->{{3.7009103536264734`*^9, 
  3.7009103581945667`*^9}},ExpressionUUID->"7ec0b272-f438-4a4a-b524-\
fc11f269df9e"],

Cell["\<\
Hypothesis tests give quantitative answers to common questions, such as how \
good the fit is between data and a particular distribution, whether these \
distributions have the same mean or median, and whether these datasets have \
the same variability. The Wolfram Language provides high-level functions for \
these types of questions and will automatically select the tests applicable \
for the data and distributions given. \
\>", "Text",
 CellChangeTimes->{
  3.700910450513461*^9},ExpressionUUID->"e0e5d937-5c02-489e-9a1d-\
1d01509bdc81"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[InsetBox[
      StyleBox["\<\"VarianceEquivalenceTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.032603632976245925`],
       FontColor->RGBColor[1, 0.75, 0]], {0, 0}, Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 25]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PearsonChiSquareTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.032603632976245925`],
       FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., 58.}, Center, 
      Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 12]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"AlternativeHypothesis\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.032603632976245925`],
       FontColor->RGBColor[0.915, 0.3325, 0.2125]], {0., -58.}, Center, 
      Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 45]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"KolmogorovSmirnovTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.028528178854215186`],
       FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {0., 114.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 7]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MannWhitneyTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.032603632976245925`],
       FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {0., -117.}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 17]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"GoodmanKruskalGammaTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.028528178854215186`],
       FontColor->RGBColor[
        0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {0., 165.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 37]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SiegelTukeyTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.032603632976245925`],
       FontColor->RGBColor[0.571589, 0.586483, 0.]], {-550., -114.}, Center, 
      Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 30]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"CramerVonMisesTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.032603632976245925`],
       FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {629., -117.}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 5]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"WatsonUSquareTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.028528178854215186`],
       FontColor->RGBColor[
        0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {642., 109.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 14]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MardiaCombinedTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.032603632976245925`],
       FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-222., -175.}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 9]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"LocationEquivalenceTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.024452724732184444`],
       FontColor->RGBColor[
        0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {432., -173.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 16]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"LogRankTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.032603632976245925`],
       FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {-579., 58.}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 2]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"AndersonDarlingTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.024452724732184444`],
       FontColor->RGBColor[
        0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-594., -51.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 3]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"HoeffdingDTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.028528178854215186`],
       FontColor->RGBColor[
        0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {565., -55.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 36]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BrownForsytheTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.024452724732184444`],
       FontColor->RGBColor[
        0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-588., 112.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 27]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"IndependenceTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.024452724732184444`],
       FontColor->RGBColor[
        0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {588., 50.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 31]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SignificanceLevel\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.024452724732184444`],
       FontColor->RGBColor[
        0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-614., 158.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 44]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ConoverTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.032603632976245925`],
       FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {612., 164.}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 26]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"VerifyTestAssumptions\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.020377270610153705`],
       FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-630., 0.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 46]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MardiaSkewnessTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.024452724732184444`],
       FontColor->RGBColor[
        0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {657., 0.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 11]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SignTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.032603632976245925`],
       FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-761., -173.}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 20]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"FisherRatioTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.028528178854215186`],
       FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-626., 208.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 28]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"KendallTauTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.028528178854215186`],
       FontColor->RGBColor[
        0.28026441037696703`, 0.715, 0.4292089322474965]], {-5., 216.}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 35]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PillaiTraceTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.028528178854215186`],
       FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {463., 219.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 40]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SpearmanRankTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.020377270610153705`],
       FontColor->RGBColor[
        0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {602., -216.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 34]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"KuiperTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.024452724732184444`],
       FontColor->RGBColor[
        0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {860., -169.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 8]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MardiaKurtosisTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.020377270610153705`],
       FontColor->RGBColor[
        0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {0., -224.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 10]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BaringhausHenzeTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016301816488122962`],
       FontColor->RGBColor[
        0.37977756485605163`, 0.715, 0.3025558265468435]], {-364., -220.}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 4]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"DistributionFitTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.020377270610153705`],
       FontColor->RGBColor[
        0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {851., 212.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 1]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"JarqueBeraALMTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016301816488122962`],
       FontColor->RGBColor[
        0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-698., -230.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 6]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"HypothesisTestData\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016301816488122962`],
       FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-333., -253.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 43]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PairedTTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.024452724732184444`],
       FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {340., -259.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 18]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"WilksWTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.024452724732184444`],
       FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-369., 255.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 39]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"LeveneTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.024452724732184444`],
       FontColor->RGBColor[
        0.47401116530937026`, 0.47809330081437784`, 0.85]], {629., -259.}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 29]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BlomqvistBetaTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016301816488122962`],
       FontColor->RGBColor[
        0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-3., 257.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 38]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PearsonCorrelationTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016301816488122962`],
       FontColor->RGBColor[
        0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {7., -260.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 33]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SignedRankTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016301816488122962`],
       FontColor->RGBColor[
        0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {275., 263.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 21]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ShapiroWilkTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016301816488122962`],
       FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {536., 260.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 13]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"TTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.032603632976245925`],
       FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {871., -52.}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 22]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"VarianceTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.020377270610153705`],
       FontColor->RGBColor[
        0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-649., 252.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 24]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PairedZTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.020377270610153705`],
       FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {788., 251.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 19]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"AutocorrelationTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016301816488122962`],
       FontColor->RGBColor[
        0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-672., -265.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 42]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"CorrelationTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016301816488122962`],
       FontColor->RGBColor[
        0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-910., 35.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 32]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"UnitRootTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016301816488122962`],
       FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-894., 66.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 41]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"LocationTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.016301816488122962`],
       FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {873., -252.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 15]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ZTest\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.020377270610153705`],
       FontColor->RGBColor[
        0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {254., -216.},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
             BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
             KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
             MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
             ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
             LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
             PairedZTest, SignTest, SignedRankTest, TTest, ZTest, 
             VarianceTest, VarianceEquivalenceTest, ConoverTest, 
             BrownForsytheTest, FisherRatioTest, LeveneTest, SiegelTukeyTest, 
             IndependenceTest, CorrelationTest, PearsonCorrelationTest, 
             SpearmanRankTest, KendallTauTest, HoeffdingDTest, 
             GoodmanKruskalGammaTest, BlomqvistBetaTest, WilksWTest, 
             PillaiTraceTest, UnitRootTest, AutocorrelationTest, 
             HypothesisTestData, SignificanceLevel, AlternativeHypothesis, 
             VerifyTestAssumptions}, 23]]]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]]}},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  ImageSize->Full,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-1073.5, 1073.5}, {-286.5, 286.5}}]], "Output",
 GeneratedCell->False,
 CellChangeTimes->{
  3.7009089823498373`*^9},ExpressionUUID->"b77de0d2-89cc-40c6-9fe8-\
6cc4d69f0ad8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9425fdc3-a227-4596-955c-59e1bd0105f5"],

Cell[CellGroupData[{

Cell["Introduction to Distributions", "Section",
 CellChangeTimes->{{3.7009110587352543`*^9, 3.7009110628059874`*^9}, {
  3.7009125686198883`*^9, 
  3.700912570898864*^9}},ExpressionUUID->"dfb86b11-fb0a-4f8f-806d-\
83887d6b8019"],

Cell[TextData[{
 "The collection of ",
 StyleBox[ButtonBox["parametric distributions",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/ParametricStatisticalDistributions"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " in the Wolfram Language has been selected in order to provide complete \
modeling frameworks for a variety of areas.  The result is the most extensive \
collection of parametric distributions ever assembled, including various \
univariate and multivariate continuous and discrete distributions.  Similarly \
the Wolfram Language has ",
 StyleBox[ButtonBox["Nonparametric Distributions",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/guide/\
NonparametricStatisticalDistributions.html"], None},
  ButtonNote->
   "https://reference.wolfram.com/language/guide/\
NonparametricStatisticalDistributions.html"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 ", that can be directly constructed from data, ",
 StyleBox[ButtonBox["Derived Distributions",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/guide/DerivedDistributions.\
html"], None},
  ButtonNote->
   "http://reference.wolfram.com/language/guide/DerivedDistributions.html"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " (distributions that can be constructed from other distributions) and ",
 StyleBox[ButtonBox["Formula Distributions",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ProbabilityDistribution"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " "
}], "Text",
 CellChangeTimes->{{3.700912717615545*^9, 3.7009128250135517`*^9}, {
   3.7009129080844746`*^9, 3.7009130238575907`*^9}, {3.700913337245345*^9, 
   3.700913357772579*^9}, {3.700913405623987*^9, 3.7009134056249895`*^9}, {
   3.700913528562766*^9, 3.700913528563769*^9}, 3.702138593887271*^9, {
   3.7021387101692705`*^9, 
   3.702138711073271*^9}},ExpressionUUID->"693966f0-9bce-4be8-bbc8-\
66c9a7c5de98"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[{{
    TagBox[InsetBox[
      StyleBox["\<\"CircularOrthogonalMatrixDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {0, 0}, Center, 
      Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 23]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"CircularSymplecticMatrixDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[1, 0.75, 0]], {2.5, 63.5}, Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 26]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"NegativeMultinomialDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {7.5, -67.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 104]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"TsallisQExponentialDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.37977756485605163`, 0.715, 0.3025558265468435]], {-5.5, 122.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 146]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"WignerSemicircleDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-32.5, -126.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 160]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ExponentialPowerDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-16.5, 181.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 42]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"InverseChiSquareDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-0.5, -185.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 68]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ShiftedGompertzDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {11.5, 239.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 128]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"GraphPropertyDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-0.5, -243.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 57]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MatrixPropertyDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-0.5, 298.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 89]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BernoulliGraphDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-19.5, -314.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 10]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BetaNegativeBinomialDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {850.5, -121.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 13]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"InverseWishartMatrixDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {908.5, -243.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 71]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PolyaAeppliDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-768.5, -229.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 118]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"NoncentralChiSquareDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {813.5, -297.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 106]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BirnbaumSaundersDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {879.5, 283.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 17]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ExpGammaDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {802.5, 166.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 40]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BarabasiAlbertGraphDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-818.5, 293.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 2]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MultivariatePoissonDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {937.5, -176.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 100]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"HyperbolicDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-826.5, -46.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 64]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"TriangularDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-765.5, -301.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 144]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"TsallisQGaussianDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-924.5, -166.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 147]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"NakagamiDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-809.5, 179.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 102]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"NoncentralBetaDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {918.5, -57.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 105]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SmoothKernelDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-946.5, 118.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 133]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"DagumDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.571589, 0.586483, 0.]], {-849.5, 51.5}, Center, 
      Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 31]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"LindleyDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-775.5, -104.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 79]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"CopulaDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {833.5, 105.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 29]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"TukeyLambdaDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-769.5, 234.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 148]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SkewNormalDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {939.5, 28.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 131]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"GaussianOrthogonalMatrixDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.5788038738141875, 0.715, 0.049249615145579635`]], {722.5, 337.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 52]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"UniformSumDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {1256.5, 223.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 151]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BetaBinomialDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-1447.5, -105.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 11]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"WalleniusHypergeometricDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {-1003.5, 339.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 156]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"TracyWidomDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {1420.5, 108.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 142]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"WaringYuleDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {-1383.5, -300.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 157]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MultinomialDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.47401116530937026`, 0.47809330081437784`, 0.85]], {-1454.5, 236.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 97]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"HoytDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-1385.5, 10.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 63]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"CircularRealMatrixDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-60.5, 352.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 25]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"FisherHypergeometricDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {791.5, -348.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 47]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ZipfDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-1365.5, -224.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 162]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"WattsStrogatzGraphDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-1364.5, -349.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 158]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"InverseGaussianDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {1484.5, 337.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 70]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MarchenkoPasturDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-0.5, -371.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 86]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"NoncentralFRatioDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {692.5, 383.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 107]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BinormalDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-691.5, -360.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 16]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"GumbelDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.28026441037696703`, 0.715, 0.4292089322474965]], {1465.5, 161.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 58]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BenfordDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {1441.5, -352.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 5]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"RayleighDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-1402.5, 173.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 124]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"InverseGammaDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.7513196300394465, 0.358, 0.48066210763162087`]], {-1511.5, -47.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 69]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MarginalDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-1491.5, 290.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 87]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MaxwellDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-1570.5, 68.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 92]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PoissonConsulDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-784.5, 384.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 116]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"QuantityDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {1537.5, -111.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 123]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"LaplaceDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {1562.5, 0.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 77]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MatrixTDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-1415.5, 388.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 90]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"HypoexponentialDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.15725938678540247`, 0.715, 0.5857607804549424]], {732.5, -390.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 67]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PascalDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {1345.5, 390.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 113]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ExtremeValueDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-6.5, 401.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 43]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"HypergeometricDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {-1240.5, -400.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 66]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BeniniDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-570.5, -418.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 6]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"DavisDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[0.915, 0.3325, 0.2125]], {1289.5, -410.5}, Center, 
      Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 33]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BorelTannerDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {9.5, -422.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           Part[{
            "ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 18]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"UniformGraphDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {1503.5, -292.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 150]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"LevyDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.596786740995709, 0.404791067752503, 0.7955331475107271]], {658.5, 223.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 78]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ExponentialDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {1554.5, 59.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 41]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PriceGraphDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-1600.5, -162.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 120]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SkellamDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {1608.5, 277.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 130]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BenktanderWeibullDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.31827505306025683`, 0.715, 0.3808317506505822]], {636.5, 428.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 8]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ProbabilityDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {1564.5, -48.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 121]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"HistogramDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {1643.5, -166.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 60]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PearsonDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.47929071933511125`, 0.715, 0.1759027208462221]], {1668.5, -229.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 114]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"UniformDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-582.5, 433.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 149]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ReliabilityDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {-1609.5, 335.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 125]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ProductDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {576.5, -436.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 122]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ArcSinDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-1062.5, 442.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 1]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"FisherZDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-1542.5, 442.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 48]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"EmpiricalDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {1167.5, 440.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 37]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"WakebyDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {1608.5, 440.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 155]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"KDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.017596782302664656`],
       FontColor->RGBColor[
        0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-1691.5, -438.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 73]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"StandbyDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {-1677.5, 119.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 137]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"OrderDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-0.5, 450.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 110]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PERTDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-1070.5, -446.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 115]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SplicedDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {1751.5, -402.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 135]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SechDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[
        0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-398.5, -472.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 127]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SliceDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.014663985252220546`],
       FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {1032.5, -464.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 132]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"GeometricDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {43.5, -468.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 55]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"HalfNormalDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {455.5, 469.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 59]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"CensoredDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.845266573755366, 0.437100139366951, 0.03816643438841502]], {1465.5, -460.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 20]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"JohnsonDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-441.5, 478.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 72]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"DirichletDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {475.5, -482.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 35]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"PoissonDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-855.5, 487.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 117]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"MeixnerDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {894.5, 481.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 93]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"CoxianDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {1291.5, 481.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 30]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"SuzukiDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-1467.5, 487.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 141]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"NormalDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], 
      {-1437.5, -487.5}, Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 109]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"FRatioDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {1673.5, 481.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 49]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"RiceDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.011731188201776438`],
       FontColor->RGBColor[
        0.4177882075393331, 0.715, 0.25417864494993975`]], {-1767.5, -212.5}, 
      Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 126]]]], 
       Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
       True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"BetaPrimeDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.008798391151332328],
       FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-0.5, 490.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 14]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[InsetBox[
      StyleBox["\<\"ChiDistribution\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.008798391151332328],
       FontColor->RGBColor[
        0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-680.5, 0.5},
       Center, Automatic],
     EventHandlerTag[{"MouseClicked" :> SystemOpen[
         StringExpression["paclet:ref/", 
          ToString[
           
           Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
             "BatesDistribution", "BeckmannDistribution", 
             "BenfordDistribution", "BeniniDistribution", 
             "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
             "BernoulliDistribution", "BernoulliGraphDistribution", 
             "BetaBinomialDistribution", "BetaDistribution", 
             "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
             "BinomialDistribution", "BinormalDistribution", 
             "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
             "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
             "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
             "CircularQuaternionMatrixDistribution", 
             "CircularRealMatrixDistribution", 
             "CircularSymplecticMatrixDistribution", 
             "CircularUnitaryMatrixDistribution", 
             "CompoundPoissonDistribution", "CopulaDistribution", 
             "CoxianDistribution", "DagumDistribution", "DataDistribution", 
             "DavisDistribution", "DegreeGraphDistribution", 
             "DirichletDistribution", "DiscreteUniformDistribution", 
             "EmpiricalDistribution", "ErlangDistribution", 
             "EstimatedDistribution", "ExpGammaDistribution", 
             "ExponentialDistribution", "ExponentialPowerDistribution", 
             "ExtremeValueDistribution", "FailureDistribution", 
             "FindDistribution", "FirstPassageTimeDistribution", 
             "FisherHypergeometricDistribution", "FisherZDistribution", 
             "FRatioDistribution", "FrechetDistribution", "GammaDistribution",
              "GaussianOrthogonalMatrixDistribution", 
             "GaussianSymplecticMatrixDistribution", 
             "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
             "GompertzMakehamDistribution", "GraphPropertyDistribution", 
             "GumbelDistribution", "HalfNormalDistribution", 
             "HistogramDistribution", "HjorthDistribution", 
             "HotellingTSquareDistribution", "HoytDistribution", 
             "HyperbolicDistribution", "HyperexponentialDistribution", 
             "HypergeometricDistribution", "HypoexponentialDistribution", 
             "InverseChiSquareDistribution", "InverseGammaDistribution", 
             "InverseGaussianDistribution", 
             "InverseWishartMatrixDistribution", "JohnsonDistribution", 
             "KDistribution", "KernelMixtureDistribution", 
             "KumaraswamyDistribution", "LandauDistribution", 
             "LaplaceDistribution", "LevyDistribution", "LindleyDistribution",
              "LogGammaDistribution", "LogisticDistribution", 
             "LogLogisticDistribution", "LogMultinormalDistribution", 
             "LogNormalDistribution", "LogSeriesDistribution", 
             "MarchenkoPasturDistribution", "MarginalDistribution", 
             "MatrixNormalDistribution", "MatrixPropertyDistribution", 
             "MatrixTDistribution", "MaxStableDistribution", 
             "MaxwellDistribution", "MeixnerDistribution", 
             "MinStableDistribution", "MixtureDistribution", 
             "MoyalDistribution", "MultinomialDistribution", 
             "MultinormalDistribution", 
             "MultivariateHypergeometricDistribution", 
             "MultivariatePoissonDistribution", "MultivariateTDistribution", 
             "NakagamiDistribution", "NegativeBinomialDistribution", 
             "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
             "NoncentralChiSquareDistribution", 
             "NoncentralFRatioDistribution", "NoncentralStudentTDistribution",
              "NormalDistribution", "OrderDistribution", 
             "ParameterMixtureDistribution", "ParetoDistribution", 
             "PascalDistribution", "PearsonDistribution", "PERTDistribution", 
             "PoissonConsulDistribution", "PoissonDistribution", 
             "PolyaAeppliDistribution", "PowerDistribution", 
             "PriceGraphDistribution", "ProbabilityDistribution", 
             "ProductDistribution", "QuantityDistribution", 
             "RayleighDistribution", "ReliabilityDistribution", 
             "RiceDistribution", "SechDistribution", 
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
             "SkellamDistribution", "SkewNormalDistribution", 
             "SliceDistribution", "SmoothKernelDistribution", 
             "SpatialGraphDistribution", "SplicedDistribution", 
             "StableDistribution", "StandbyDistribution", 
             "StationaryDistribution", "StudentTDistribution", 
             "SurvivalDistribution", "SuzukiDistribution", 
             "TracyWidomDistribution", "TransformedDistribution", 
             "TriangularDistribution", "TruncatedDistribution", 
             "TsallisQExponentialDistribution", 
             "TsallisQGaussianDistribution", "TukeyLambdaDistribution", 
             "UniformDistribution", "UniformGraphDistribution", 
             "UniformSumDistribution", "VarianceGammaDistribution", 
             "VoigtDistribution", "VonMisesDistribution", 
             "WakebyDistribution", "WalleniusHypergeometricDistribution", 
             "WaringYuleDistribution", "WattsStrogatzGraphDistribution", 
             "WeibullDistribution", "WignerSemicircleDistribution", 
             "WishartMatrixDistribution", "ZipfDistribution"}, 21]]]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]]}},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  ImageSize->Full,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-1989., 1989.}, {-510., 510.}}]], "Output",
 GeneratedCell->False,
 CellChangeTimes->{
  3.7009085805654535`*^9},ExpressionUUID->"9c632cd7-e7dd-4044-95e7-\
f87d709a9ddd"]], "Text",
 CellChangeTimes->{3.7009126237942686`*^9, 
  3.7009135733531303`*^9},ExpressionUUID->"c45d4499-f7eb-4869-a539-\
85344616547c"],

Cell[TextData[StyleBox["Once you have defined your distribution, you can \
extract different properties from it. Let\[CloseCurlyQuote]s try and evaluate \
a few of them",
 FontFamily->"Arial",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.7009141219956613`*^9, 3.7009141645639915`*^9}, {
  3.70091754284169*^9, 3.7009175619912663`*^9}, {3.7009178945137177`*^9, 
  3.7009178958403916`*^9}},
 FontSize->14,ExpressionUUID->"aecce6bf-e629-4e71-839a-aaa77cded470"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[ButtonBox["Probability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Probability"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["Expectation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Expectation"],
  FontFamily->"Arial",
  FontWeight->"Bold"]
}], "Subsection",
 CellChangeTimes->{{3.7009194333580647`*^9, 3.7009194391894536`*^9}, {
  3.701780111169987*^9, 
  3.7017801395054364`*^9}},ExpressionUUID->"f77e5897-8fb5-4cfb-b988-\
cc03de6b1aa6"],

Cell["Discrete univariate probabilities", "Text",
 CellChangeTimes->{{3.70091956341164*^9, 
  3.700919573683778*^9}},ExpressionUUID->"3e5695a3-5b0d-4c0c-967f-\
6e7460764655"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"x", "\[GreaterEqual]", "1"}], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"n", ",", "p"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.464438230084673*^9, 3.4644382499356575`*^9}, {
  3.4644492945610094`*^9, 3.4644493235449076`*^9}, {3.464636742349842*^9, 
  3.4646367510287104`*^9}, {3.4816427187453485`*^9, 3.4816427200304766`*^9}, {
  3.5007597456065845`*^9, 3.5007597469277163`*^9}},
 CellTags->{
  "Probability", 
   "BinomialDistribution"},ExpressionUUID->"30c1aef0-91f2-4a3c-9e0e-\
eaeb54c8090f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "p"}], ")"}], "n"]}], 
        RowBox[{"0", "<", "n"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.706620243395997*^9},
 CellTags->{
  "Probability", 
   "BinomialDistribution"},ExpressionUUID->"9fb82e53-1c29-403a-89c2-\
2b8d4efd499a"]
}, Open  ]],

Cell["Nonlinear conditions", "Text",
 CellChangeTimes->{{3.7009196364254904`*^9, 
  3.700919659137491*^9}},ExpressionUUID->"866657a5-be46-4a85-b0c1-\
3fbb1cd7ea41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "3"}], ")"}], "2"], "\[GreaterEqual]", "x"}], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"ZipfDistribution", "[", "\[Rho]", "]"}]}]}], "]"}]], "Input",
 CellTags->
  "ZipfDistribution",ExpressionUUID->"1209afc9-7cd7-49ea-b2e5-92923b99062b"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", "2"}], "-", 
     RowBox[{"2", " ", "\[Rho]"}]}]], " ", 
   SuperscriptBox["15", 
    RowBox[{
     RowBox[{"-", "1"}], "-", "\[Rho]"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["2", 
        RowBox[{"2", "+", 
         RowBox[{"2", " ", "\[Rho]"}]}]]}], " ", 
      SuperscriptBox["3", 
       RowBox[{"1", "+", "\[Rho]"}]]}], "-", 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", "\[Rho]"}]}]], " ", 
      SuperscriptBox["5", 
       RowBox[{"1", "+", "\[Rho]"}]]}], "-", 
     SuperscriptBox["15", 
      RowBox[{"1", "+", "\[Rho]"}]], "-", 
     SuperscriptBox["30", 
      RowBox[{"1", "+", "\[Rho]"}]], "+", 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", "\[Rho]"}]}]], " ", 
      SuperscriptBox["15", 
       RowBox[{"1", "+", "\[Rho]"}]], " ", 
      RowBox[{"Zeta", "[", 
       RowBox[{"1", "+", "\[Rho]"}], "]"}]}]}], ")"}]}], 
  RowBox[{"Zeta", "[", 
   RowBox[{"1", "+", "\[Rho]"}], "]"}]]], "Output",
 CellChangeTimes->{3.706620248716851*^9},
 CellTags->
  "ZipfDistribution",ExpressionUUID->"a7b78227-a94f-4a7f-a9dc-38a37bdd52f2"]
}, Open  ]],

Cell["Logical combinations", "Text",
 CellChangeTimes->{{3.700919662802209*^9, 
  3.7009196640655394`*^9}},ExpressionUUID->"2f488a81-77bf-4667-a21e-\
0a4eae3b81e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"k", "^", "2"}], ">", "10"}], "||", 
    RowBox[{"k", "<", "2"}]}], ",", 
   RowBox[{"k", "\[Distributed]", 
    RowBox[{"PoissonDistribution", "[", "\[Lambda]", "]"}]}]}], 
  "]"}]], "Input",
 CellTags->
  "PoissonDistribution",ExpressionUUID->"76e70c28-94a2-455d-b711-\
d08cd28083da"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "\[Lambda]"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"6", " ", 
     SuperscriptBox["\[ExponentialE]", "\[Lambda]"]}], "-", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    SuperscriptBox["\[Lambda]", "3"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7066202544839563`*^9},
 CellTags->
  "PoissonDistribution",ExpressionUUID->"444d3466-e852-4170-9f81-\
07681bd7f4e2"]
}, Open  ]],

Cell["Multivariate probabilities", "Text",
 CellChangeTimes->{{3.7009196772754455`*^9, 
  3.700919678065497*^9}},ExpressionUUID->"311cdf8f-b621-4ca5-bda8-\
bae1f8e5e7fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "\[LessEqual]", 
     RowBox[{"1", "/", "2"}]}], "&&", 
    RowBox[{"Y", "\[LessEqual]", "1"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y"}], "}"}], "\[Distributed]", 
    RowBox[{"DirichletDistribution", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}]}], "]"}]], "Input",
 CellTags->
  "DirichletDistribution",ExpressionUUID->"a30f7f0f-2c2b-417e-b4db-\
db51cd91be94"],

Cell[BoxData[
 FractionBox["31", "32"]], "Output",
 CellChangeTimes->{3.706620256064491*^9},
 CellTags->
  "DirichletDistribution",ExpressionUUID->"adfe4456-9548-4ebc-a1ac-\
160a5225136b"]
}, Open  ]],

Cell["Conditional probabilities", "Text",
 CellChangeTimes->{{3.7009196898175783`*^9, 
  3.700919690065233*^9}},ExpressionUUID->"a4dce36d-1478-4115-ac5a-\
21ba09051351"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], ">", "1"}], "\[Conditioned]", 
    RowBox[{"x", ">", 
     RowBox[{"1", "/", "2"}]}]}], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"LaplaceDistribution", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "/", "2"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.700919813785037*^9},
 CellTags->
  "LaplaceDistribution",ExpressionUUID->"55b83b20-2606-451f-906a-\
222f59abd93b"],

Cell[BoxData[
 FractionBox["1", "\[ExponentialE]"]], "Output",
 CellChangeTimes->{3.7066202579159207`*^9},
 CellTags->
  "LaplaceDistribution",ExpressionUUID->"0ae20d34-d6c6-4bf0-959f-\
f835eed196b0"]
}, Open  ]],

Cell["Polynomial expectation", "Text",
 CellChangeTimes->{{3.7009197590073633`*^9, 
  3.7009197671759434`*^9}},ExpressionUUID->"4cbf08f6-c62f-4258-893a-\
91dda5f7ba92"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", 
     RowBox[{"x", "^", "4"}]}], "+", "3"}], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"NormalDistribution", "[", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.700919847920245*^9, 3.700919862806574*^9}},
 CellTags->
  "NormalDistribution",ExpressionUUID->"5a502ce7-2cde-4b57-a18f-ce6309b0aa61"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.706620286979576*^9},
 CellTags->
  "NormalDistribution",ExpressionUUID->"c4f668fc-bddf-4d3b-8372-59f3a022f4f7"]
}, Open  ]],

Cell["Expectation of an arbitrary expression", "Text",
 CellChangeTimes->{{3.700919879869646*^9, 
  3.700919910400275*^9}},ExpressionUUID->"33cd7635-5930-45ec-be9e-\
80d67803b874"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{"-", "x"}], ")"}]}], "+", 
    RowBox[{"3", "x"}]}], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"ChiSquareDistribution", "[", "\[Nu]", "]"}]}]}], "]"}]], "Input",
 CellTags->"ChiSquareDistribution",
 CellID->117362026,ExpressionUUID->"c82760d6-7454-45bd-8312-bf8fdbd08a44"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["3", 
   RowBox[{
    RowBox[{"-", "\[Nu]"}], "/", "2"}]], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{
     SuperscriptBox["3", 
      RowBox[{"1", "+", 
       FractionBox["\[Nu]", "2"]}]], " ", "\[Nu]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7066202909540253`*^9},
 CellTags->
  "ChiSquareDistribution",ExpressionUUID->"e05100df-5f70-4ae1-ba52-\
51a1ff3ffbf1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8d279e95-a63c-47a7-9bf6-7f32bac6c618"],

Cell[CellGroupData[{

Cell["Distribution Properties", "Section",
 CellChangeTimes->{{3.7009200037390428`*^9, 
  3.7009200292913857`*^9}},ExpressionUUID->"a654f3e2-1a47-4484-bc73-\
3d7c4125f413"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Distribution functions: Probability Density Function (", 
  "Subsection"],
 StyleBox[ButtonBox["PDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PDF"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 StyleBox["), Cumulative Density Function (", "Subsection"],
 StyleBox[ButtonBox["CDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/CDF"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 StyleBox["), ", "Subsection"],
 StyleBox[ButtonBox["Survival Function",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SurvivalFunction"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 StyleBox[" and ", "Subsection"],
 StyleBox[ButtonBox["Hazard Function",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/HazardFunction"],
  FontFamily->"Arial",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{{3.70091790296106*^9, 3.7009179445118327`*^9}, {
   3.7009200882960863`*^9, 3.70092010580622*^9}, 3.7011106755291386`*^9, {
   3.7016053836551085`*^9, 3.7016054322010965`*^9}, {3.70160569892819*^9, 
   3.701605708880863*^9}, {3.7017804565310035`*^9, 3.7017804862059345`*^9}, {
   3.701780526763813*^9, 
   3.7017805267658477`*^9}},ExpressionUUID->"533ff64a-25cf-463e-b10c-\
b8b48f0e6b8a"],

Cell["Univariate continuous", "Text",
 CellChangeTimes->{{3.700919338294924*^9, 
  3.7009193431357093`*^9}},ExpressionUUID->"a35fab62-a8cb-4bb5-a183-\
dcc348a4b204"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"func", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"0", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Sigma]", ",", 
          RowBox[{"{", 
           RowBox[{".75", ",", "1", ",", "2"}], "}"}]}], "}"}]}], "]"}], "//",
       "Evaluate"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"func", ",", "PDF", ",", "\"\<ProbabilityFunction\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "PDF", ",", "CDF", ",", "SurvivalFunction", ",", "HazardFunction"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701023388160427*^9, 3.7010233944970603`*^9}, {
  3.701023474221032*^9, 3.701023529152525*^9}, {3.7010235617927885`*^9, 
  3.701023671848793*^9}},
 CellTags->{
  "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", 
   "SurvivalFunction", "HazardFunction"},
 CellID->2002640062,ExpressionUUID->"f63f7724-daf6-474b-81d7-c753466d47b9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`func$$ = PDF, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`func$$], PDF, "ProbabilityFunction"}, {
      PDF, CDF, SurvivalFunction, HazardFunction}}}, Typeset`size$$ = {
    450., {140., 148.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`func$801191$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`func$$ = PDF}, 
      "ControllerVariables" :> {
        Hold[$CellContext`func$$, $CellContext`func$801191$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Evaluate[
         Table[
          $CellContext`func$$[
           NormalDistribution[
           0, $CellContext`\[Sigma]], $CellContext`x], \
{$CellContext`\[Sigma], {0.75, 1, 2}}]], {$CellContext`x, -6, 6}, Filling -> 
        Axis], "Specifications" :> {{{$CellContext`func$$, PDF, 
          "ProbabilityFunction"}, {
         PDF, CDF, SurvivalFunction, HazardFunction}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{589., {204., 213.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.706620311758975*^9},
 CellTags->{
  "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", 
   "SurvivalFunction", 
   "HazardFunction"},ExpressionUUID->"bb22c2cc-dd00-4c90-9f3b-c7703f72f87a"]
}, Open  ]],

Cell["Univariate discrete", "Text",
 CellChangeTimes->{{3.7009201642970667`*^9, 
  3.7009201690592794`*^9}},ExpressionUUID->"d107e0f1-2e57-49e7-a341-\
3be8a8a5e2c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"func", "[", 
         RowBox[{
          RowBox[{"GeometricDistribution", "[", "p", "]"}], ",", "k"}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", 
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.2", ",", "0.5"}], "}"}]}], "}"}]}], "]"}], "//",
       "Evaluate"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "14"}], "}"}], ",", 
     RowBox[{"ExtentSize", "\[Rule]", "Right"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"func", ",", "PDF", ",", "\"\<ProbabilityFunction\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "PDF", ",", "CDF", ",", "SurvivalFunction", ",", "HazardFunction"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.700920225156905*^9, {3.701023716954303*^9, 3.701023736212229*^9}},
 CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"},
 CellID->1700090275,ExpressionUUID->"9b5bce40-4545-4894-819f-3b18afc4056b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`func$$ = HazardFunction, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`func$$], PDF, "ProbabilityFunction"}, {
      PDF, CDF, SurvivalFunction, HazardFunction}}}, Typeset`size$$ = {
    450., {141., 149.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`func$802095$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`func$$ = PDF}, 
      "ControllerVariables" :> {
        Hold[$CellContext`func$$, $CellContext`func$802095$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DiscretePlot[
        Evaluate[
         Table[
          $CellContext`func$$[
           
           GeometricDistribution[$CellContext`p], $CellContext`k], \
{$CellContext`p, {0.1, 0.2, 0.5}}]], {$CellContext`k, 0, 14}, ExtentSize -> 
        Right], "Specifications" :> {{{$CellContext`func$$, PDF, 
          "ProbabilityFunction"}, {
         PDF, CDF, SurvivalFunction, HazardFunction}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{589., {205., 214.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.706620373742098*^9},
 CellTags->{
  "DiscretePlot", "GeometricDistribution", 
   "ExtentSize"},ExpressionUUID->"90a9699c-5e1f-4bc9-8941-3cce8354a6e3"]
}, Open  ]],

Cell["Multivariate continuous", "Text",
 CellChangeTimes->{{3.7009205069311213`*^9, 
  3.7009205117878256`*^9}},ExpressionUUID->"2989fe66-1865-440e-bf0d-\
cbfe834f1c91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"func", "[", 
      RowBox[{
       RowBox[{"BinormalDistribution", "[", 
        RowBox[{"1", "/", "2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"MaxRecursion", "\[Rule]", "0"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"func", ",", "PDF", ",", "\"\<ProbabilityFunction\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "PDF", ",", "CDF", ",", "SurvivalFunction", ",", "HazardFunction"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7010237681374207`*^9, 3.701023781387746*^9}},
 CellTags->{
  "BinormalDistribution", "Plot3D", "PlotRange", 
   "MaxRecursion"},ExpressionUUID->"f6fa0507-6ecc-4623-8b10-4d58f7eda994"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`func$$ = PDF, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`func$$], PDF, "ProbabilityFunction"}, {
      PDF, CDF, SurvivalFunction, HazardFunction}}}, Typeset`size$$ = {
    464., {191., 199.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`func$802179$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`func$$ = PDF}, 
      "ControllerVariables" :> {
        Hold[$CellContext`func$$, $CellContext`func$802179$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        $CellContext`func$$[
         BinormalDistribution[
         1/2], {$CellContext`x, $CellContext`y}], {$CellContext`x, -1, 
         3}, {$CellContext`y, -1, 3}, PlotRange -> All, MaxRecursion -> 0], 
      "Specifications" :> {{{$CellContext`func$$, PDF, 
          "ProbabilityFunction"}, {
         PDF, CDF, SurvivalFunction, HazardFunction}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{589., {255., 264.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.706620383825898*^9},
 CellTags->{
  "BinormalDistribution", "Plot3D", "PlotRange", 
   "MaxRecursion"},ExpressionUUID->"b6a6843a-5d06-4c98-b4bb-a3a8e6095fcf"]
}, Open  ]],

Cell["Multivariate discrete", "Text",
 CellChangeTimes->{{3.700919347990507*^9, 
  3.700919353062909*^9}},ExpressionUUID->"57713ac1-a45b-44c0-b92d-\
9eadd2e29f28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"DiscretePlot3D", "[", 
    RowBox[{
     RowBox[{"func", "[", 
      RowBox[{
       RowBox[{"MultinomialDistribution", "[", 
        RowBox[{"10", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "3"}], ",", 
           RowBox[{"2", "/", "3"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "1"}], ",", "7"}], "}"}], ",", 
     RowBox[{"ExtentSize", "\[Rule]", "Right"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"func", ",", "PDF", ",", "\"\<ProbabilityFunction\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "PDF", ",", "CDF", ",", "SurvivalFunction", ",", "HazardFunction"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7009204563668585`*^9, {3.701023801800787*^9, 3.701023814690076*^9}},
 CellTags->"DiscretePlot3D",
 CellID->2140205674,ExpressionUUID->"8c914bbb-90b6-44ed-92fa-fe15eb202af5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`func$$ = HazardFunction, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`func$$], PDF, "ProbabilityFunction"}, {
      PDF, CDF, SurvivalFunction, HazardFunction}}}, Typeset`size$$ = {
    450., {178., 186.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`func$802473$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`func$$ = PDF}, 
      "ControllerVariables" :> {
        Hold[$CellContext`func$$, $CellContext`func$802473$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DiscretePlot3D[
        $CellContext`func$$[
         MultinomialDistribution[
         10, {1/3, 2/
           3}], {$CellContext`x, $CellContext`y}], {$CellContext`x, -1, 
         7}, {$CellContext`y, -1, 7}, ExtentSize -> Right], 
      "Specifications" :> {{{$CellContext`func$$, PDF, 
          "ProbabilityFunction"}, {
         PDF, CDF, SurvivalFunction, HazardFunction}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{589., {242., 251.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.706620406832386*^9},
 CellTags->
  "DiscretePlot3D",ExpressionUUID->"75d4e5b8-7562-45c5-ab9f-b00dc2fc1ac6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Moments and Moment Generating Functions", \
"Subsection"]], "Subsubsection",
 CellChangeTimes->{{3.700927224771658*^9, 3.700927254330775*^9}, 
   3.7017749734025197`*^9},ExpressionUUID->"5aa3e3bf-8f35-4c05-8ed4-\
aee78b9d5e79"],

Cell["Moments till order 5 for the GammaDistribution ", "Text",
 CellChangeTimes->{{3.701605725868549*^9, 3.701605753816755*^9}, {
  3.701781127398024*^9, 
  3.701781145501835*^9}},ExpressionUUID->"76f3987d-02f2-4f97-bed3-\
40d8c25455a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MomentTabView", "[", 
  RowBox[{
   RowBox[{"GammaDistribution", "[", 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.7016929130103164`*^9, 3.7016929291249743`*^9}, 
   3.70177049844841*^9, 3.7017705668711357`*^9},
 CellTags->
  "GammaDistribution",ExpressionUUID->"72e75e57-26b9-4cc2-8259-ac1ed4f8f27c"],

Cell[BoxData[
 TabViewBox[{{1,"\<\"Moment\"\>"->
  TagBox[GridBox[{
     {
      RowBox[{"\[Alpha]", " ", "\[Beta]"}]},
     {
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "2"]}]},
     {
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "3"]}]},
     {
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "\[Alpha]"}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "4"]}]},
     {
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", "\[Alpha]"}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "5"]}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
         RGBColor[0.8, 0.9, 0.9], 
         GrayLevel[1]}}},
    GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {
        RGBColor[0.2, 0.2, 0.2], {False}, 
        RGBColor[0.2, 0.2, 0.2]}},
    GridBoxItemSize->{"Columns" -> {{30}}}],
   "Grid"]}, {2,"\<\"CentralMoment\"\>"->
  TagBox[GridBox[{
     {"0"},
     {
      RowBox[{"\[Alpha]", " ", 
       SuperscriptBox["\[Beta]", "2"]}]},
     {
      RowBox[{"2", " ", "\[Alpha]", " ", 
       SuperscriptBox["\[Beta]", "3"]}]},
     {
      RowBox[{"3", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "4"]}]},
     {
      RowBox[{"4", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Alpha]"}]}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "5"]}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
         RGBColor[1., 0.8500000000000001, 0.8], 
         GrayLevel[1]}}},
    GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {
        RGBColor[0.2, 0.2, 0.2], {False}, 
        RGBColor[0.2, 0.2, 0.2]}},
    GridBoxItemSize->{"Columns" -> {{30}}}],
   "Grid"]}, {3,"\<\"FactorialMoment\"\>"->
  TagBox[GridBox[{
     {
      RowBox[{"\[Alpha]", " ", "\[Beta]"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Alpha]"}], " ", "\[Beta]"}], "+", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "-", 
       RowBox[{"3", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "3"]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "6"}], " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
       RowBox[{"11", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "-", 
       RowBox[{"6", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "3"]}], "+", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "4"]}]}]},
     {
      RowBox[{
       RowBox[{"24", " ", "\[Alpha]", " ", "\[Beta]"}], "-", 
       RowBox[{"50", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       RowBox[{"35", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "3"]}], "-", 
       RowBox[{"10", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "4"]}], "+", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "5"]}]}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
         RGBColor[0.9, 0.9, 1.], 
         GrayLevel[1]}}},
    GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {
        RGBColor[0.2, 0.2, 0.2], {False}, 
        RGBColor[0.2, 0.2, 0.2]}},
    GridBoxItemSize->{"Columns" -> {{30}}}],
   "Grid"]}, {4,"\<\"Cumulant\"\>"->
  TagBox[GridBox[{
     {
      RowBox[{"\[Alpha]", " ", "\[Beta]"}]},
     {
      RowBox[{"\[Alpha]", " ", 
       SuperscriptBox["\[Beta]", "2"]}]},
     {
      RowBox[{"2", " ", "\[Alpha]", " ", 
       SuperscriptBox["\[Beta]", "3"]}]},
     {
      RowBox[{"6", " ", "\[Alpha]", " ", 
       SuperscriptBox["\[Beta]", "4"]}]},
     {
      RowBox[{"24", " ", "\[Alpha]", " ", 
       SuperscriptBox["\[Beta]", "5"]}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
         RGBColor[0.95, 0.8, 0.8500000000000001], 
         GrayLevel[1]}}},
    GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {
        RGBColor[0.2, 0.2, 0.2], {False}, 
        RGBColor[0.2, 0.2, 0.2]}},
    GridBoxItemSize->{"Columns" -> {{30}}}],
   "Grid"]}}, 4]], "Output", "Output",
 CellFrame->False,
 CellMargins->{{100, 100}, {40, 0}},
 GeneratedCell->False,
 ShowCellLabel->False,
 CellChangeTimes->{3.7021388820722704`*^9},
 Background->None,
 CellTags->
  "GammaDistribution",ExpressionUUID->"a9d9de15-a296-4c2d-9cfb-2118b1433803"]
}, Open  ]],

Cell["Moment generating functions for the GammaDistribution", "Text",
 CellChangeTimes->{{3.7016057641330996`*^9, 3.701605776489773*^9}, {
  3.701694486542595*^9, 
  3.701694494069521*^9}},ExpressionUUID->"1fa2323e-8f84-4567-9b58-\
8ba7b5f48f7e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CellPrint", "[", 
  RowBox[{"ExpressionCell", "[", 
   RowBox[{
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"GammaDistribution", "[", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"MomentGeneratingFunction", "\[Rule]", "\"\<MGF\>\""}], ",", 
          RowBox[{
          "CentralMomentGeneratingFunction", "\[Rule]", 
           "\"\<CumulantMGF\>\""}], ",", 
          RowBox[{
          "FactorialMomentGeneratingFunction", "\[Rule]", 
           "\"\<FactorialMGF\>\""}], ",", 
          RowBox[{
          "CumulantGeneratingFunction", "\[Rule]", "\"\<CumulantGF\>\""}]}], 
         "}"}]}], "}"}]}], "]"}], ",", "\"\<Output\>\"", ",", 
    RowBox[{"GeneratedCell", "\[Rule]", "False"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7015123414636383`*^9, 3.7015123443701677`*^9}, {
  3.7015124176225815`*^9, 3.7015124532079163`*^9}, {3.7015125272103605`*^9, 
  3.7015126483150373`*^9}, {3.7016929467336206`*^9, 
  3.7016929646845303`*^9}},ExpressionUUID->"8e5673d6-51d6-44cf-b12a-\
10b289caada3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`f$$ = CumulantGeneratingFunction, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`f$$], {
      MomentGeneratingFunction -> "MGF", CentralMomentGeneratingFunction -> 
       "CumulantMGF", FactorialMomentGeneratingFunction -> "FactorialMGF", 
       CumulantGeneratingFunction -> "CumulantGF"}}}, Typeset`size$$ = {
    159., {4., 14.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`f$1600488$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`f$$ = MomentGeneratingFunction -> "MGF"}, 
      "ControllerVariables" :> {
        Hold[$CellContext`f$$, $CellContext`f$1600488$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`f$$[
        GammaDistribution[$CellContext`\[Alpha], $CellContext`\[Beta]], \
$CellContext`t], 
      "Specifications" :> {{$CellContext`f$$, {
         MomentGeneratingFunction -> "MGF", CentralMomentGeneratingFunction -> 
          "CumulantMGF", FactorialMomentGeneratingFunction -> "FactorialMGF", 
          CumulantGeneratingFunction -> "CumulantGF"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{468., {72., 81.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 GeneratedCell->False,
 CellChangeTimes->{
  3.7021388821402707`*^9},ExpressionUUID->"72ea40b0-7d2e-4537-834e-\
d45787172db3"]
}, {2}]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"fe63993c-cef8-438c-bfbc-48c4bc60cdae"],

Cell[CellGroupData[{

Cell["Simulation of Distributions", "Section",
 CellChangeTimes->{{3.700927491230589*^9, 3.7009274930063066`*^9}, {
   3.7010138256015587`*^9, 3.7010138353091135`*^9}, 
   3.701092341987426*^9},ExpressionUUID->"4699d872-d462-41f5-a559-\
84cd490b557c"],

Cell["Univariate Continuous", "Text",
 CellChangeTimes->{{3.7010102130986695`*^9, 3.70101021664564*^9}, {
  3.701010250487895*^9, 
  3.701010254613285*^9}},ExpressionUUID->"36de5f6a-a300-4ae3-b6b9-\
2de2b1d3cdcf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"1", ",", "3"}], "]"}], ",", 
     RowBox[{"10", "^", "4"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"data", ",", "20", ",", "\"\<ProbabilityDensity\>\""}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"1", ",", "3"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7010102405652523`*^9, 3.70101024097149*^9}},
 CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"},
 CellID->980116677,ExpressionUUID->"fd00e5f7-2e75-4107-b0e7-89e7b5905714"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.518], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.518], Thickness[Small]}], RectangleBox[{-10., 0}, {-9., 0.0002},
       RoundingRadius->0], RectangleBox[{-9., 0}, {-8., 0.0009},
       RoundingRadius->0], RectangleBox[{-8., 0}, {-7., 0.0018},
       RoundingRadius->0], RectangleBox[{-7., 0}, {-6., 0.0068},
       RoundingRadius->0], RectangleBox[{-6., 0}, {-5., 0.0125},
       RoundingRadius->0], RectangleBox[{-5., 0}, {-4., 0.0248},
       RoundingRadius->0], RectangleBox[{-4., 0}, {-3., 0.0454},
       RoundingRadius->0], RectangleBox[{-3., 0}, {-2., 0.0665},
       RoundingRadius->0], RectangleBox[{-2., 0}, {-1., 0.0976},
       RoundingRadius->0], RectangleBox[{-1., 0}, {0., 0.1166},
       RoundingRadius->0], RectangleBox[{0., 0}, {1., 0.1313},
       RoundingRadius->0], RectangleBox[{1., 0}, {2., 0.1289},
       RoundingRadius->0], RectangleBox[{2., 0}, {3., 0.1203},
       RoundingRadius->0], RectangleBox[{3., 0}, {4., 0.0915},
       RoundingRadius->0], RectangleBox[{4., 0}, {5., 0.0673},
       RoundingRadius->0], RectangleBox[{5., 0}, {6., 0.0406},
       RoundingRadius->0], RectangleBox[{6., 0}, {7., 0.0244},
       RoundingRadius->0], RectangleBox[{7., 0}, {8., 0.0134},
       RoundingRadius->0], RectangleBox[{8., 0}, {9., 0.0065},
       RoundingRadius->0], RectangleBox[{9., 0}, {10., 0.0018},
       RoundingRadius->0], RectangleBox[{10., 0}, {11., 0.0005},
       RoundingRadius->0], RectangleBox[{11., 0}, {12., 0.0003},
       RoundingRadius->0], RectangleBox[{13., 0}, {14., 0.0001},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
       LineBox[CompressedData["
1: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
o/J5N/j//+9YRqv7ZxshN/gfh1BJfg==
        "]]},
      Annotation[#, "Charting`Private`Tag$1378346#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-10.48, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-10., 14.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7066210572649593`*^9},
 CellTags->{
  "RandomVariate", "Show", "PlotStyle", 
   "Thick"},ExpressionUUID->"ec13953b-8d23-4d51-9a4a-006fea2840af"]
}, Open  ]],

Cell["Multivariate Discrete", "Text",
 CellChangeTimes->{{3.70101024497163*^9, 
  3.7010102691887226`*^9}},ExpressionUUID->"814243d4-0b8c-4fa1-9b90-\
eb0e8b978788"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultivariatePoissonDistribution", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{"10", "^", "4"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Histogram3D", "[", 
    RowBox[{"data", ",", "20", ",", "\"\<Probability\>\"", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}], ",", "All"}], "}"}]}]}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"DiscretePlot3D", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"MultivariatePoissonDistribution", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ExtentSize", "\[Rule]", "Full"}]}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{
  3.7010102386432314`*^9, 3.7010102762672224`*^9, {3.701092714324895*^9, 
   3.701092717790072*^9}},
 CellTags->"MultivariatePoissonDistribution",
 CellID->1621417849,ExpressionUUID->"c5b5798c-4292-410e-9537-221e7c177958"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[
     RGBColor[0.880722, 0.611041, 0.142051]], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], 
        StyleBox[{{{}, CuboidBox[{-0.5, -0.5, 0.}, {0.5, 0.5, 0.0025}]}, {{}, 
           CuboidBox[{-0.5, 0.5, 0.}, {0.5, 1.5, 0.0083}]}, {{}, 
           CuboidBox[{-0.5, 1.5, 0.}, {0.5, 2.5, 0.0104}]}, {{}, 
           CuboidBox[{-0.5, 2.5, 0.}, {0.5, 3.5, 0.0118}]}, {{}, 
           CuboidBox[{-0.5, 3.5, 0.}, {0.5, 4.5, 0.0086}]}, {{}, 
           CuboidBox[{-0.5, 4.5, 0.}, {0.5, 5.5, 0.0063}]}, {{}, 
           CuboidBox[{-0.5, 5.5, 0.}, {0.5, 6.5, 0.0029}]}, {{}, 
           CuboidBox[{-0.5, 6.5, 0.}, {0.5, 7.5, 0.0009}]}, {{}, 
           CuboidBox[{-0.5, 7.5, 0.}, {0.5, 8.5, 0.0004}]}, {{}, 
           CuboidBox[{-0.5, 8.5, 0.}, {0.5, 9.5, 0.0001}]}, {{}, 
           CuboidBox[{0.5, -0.5, 0.}, {1.5, 0.5, 0.0054}]}, {{}, 
           CuboidBox[{0.5, 0.5, 0.}, {1.5, 1.5, 0.0175}]}, {{}, 
           CuboidBox[{0.5, 1.5, 0.}, {1.5, 2.5, 0.0311}]}, {{}, 
           CuboidBox[{0.5, 2.5, 0.}, {1.5, 3.5, 0.0348}]}, {{}, 
           CuboidBox[{0.5, 3.5, 0.}, {1.5, 4.5, 0.0277}]}, {{}, 
           CuboidBox[{0.5, 4.5, 0.}, {1.5, 5.5, 0.0181}]}, {{}, 
           CuboidBox[{0.5, 5.5, 0.}, {1.5, 6.5, 0.0094}]}, {{}, 
           CuboidBox[{0.5, 6.5, 0.}, {1.5, 7.5, 0.0045}]}, {{}, 
           CuboidBox[{0.5, 7.5, 0.}, {1.5, 8.5, 0.002}]}, {{}, 
           CuboidBox[{0.5, 8.5, 0.}, {1.5, 9.5, 0.0007}]}, {{}, 
           CuboidBox[{0.5, 9.5, 0.}, {1.5, 10.5, 0.0001}]}, {{}, 
           CuboidBox[{0.5, 10.5, 0.}, {1.5, 11.5, 0.0001}]}, {{}, 
           CuboidBox[{1.5, -0.5, 0.}, {2.5, 0.5, 0.0048}]}, {{}, 
           CuboidBox[{1.5, 0.5, 0.}, {2.5, 1.5, 0.0187}]}, {{}, 
           CuboidBox[{1.5, 1.5, 0.}, {2.5, 2.5, 0.0382}]}, {{}, 
           CuboidBox[{1.5, 2.5, 0.}, {2.5, 3.5, 0.054}]}, {{}, 
           CuboidBox[{1.5, 3.5, 0.}, {2.5, 4.5, 0.0468}]}, {{}, 
           CuboidBox[{1.5, 4.5, 0.}, {2.5, 5.5, 0.0295}]}, {{}, 
           CuboidBox[{1.5, 5.5, 0.}, {2.5, 6.5, 0.0213}]}, {{}, 
           CuboidBox[{1.5, 6.5, 0.}, {2.5, 7.5, 0.0107}]}, {{}, 
           CuboidBox[{1.5, 7.5, 0.}, {2.5, 8.5, 0.0048}]}, {{}, 
           CuboidBox[{1.5, 8.5, 0.}, {2.5, 9.5, 0.0019}]}, {{}, 
           CuboidBox[{1.5, 9.5, 0.}, {2.5, 10.5, 0.001}]}, {{}, 
           CuboidBox[{1.5, 10.5, 0.}, {2.5, 11.5, 0.0001}]}, {{}, 
           CuboidBox[{2.5, -0.5, 0.}, {3.5, 0.5, 0.0039}]}, {{}, 
           CuboidBox[{2.5, 0.5, 0.}, {3.5, 1.5, 0.0172}]}, {{}, 
           CuboidBox[{2.5, 1.5, 0.}, {3.5, 2.5, 0.0301}]}, {{}, 
           CuboidBox[{2.5, 2.5, 0.}, {3.5, 3.5, 0.043}]}, {{}, 
           CuboidBox[{2.5, 3.5, 0.}, {3.5, 4.5, 0.0414}]}, {{}, 
           CuboidBox[{2.5, 4.5, 0.}, {3.5, 5.5, 0.0356}]}, {{}, 
           CuboidBox[{2.5, 5.5, 0.}, {3.5, 6.5, 0.0228}]}, {{}, 
           CuboidBox[{2.5, 6.5, 0.}, {3.5, 7.5, 0.0128}]}, {{}, 
           CuboidBox[{2.5, 7.5, 0.}, {3.5, 8.5, 0.0055}]}, {{}, 
           CuboidBox[{2.5, 8.5, 0.}, {3.5, 9.5, 0.0022}]}, {{}, 
           CuboidBox[{2.5, 9.5, 0.}, {3.5, 10.5, 0.0013}]}, {{}, 
           CuboidBox[{2.5, 10.5, 0.}, {3.5, 11.5, 0.0003}]}, {{}, 
           CuboidBox[{3.5, -0.5, 0.}, {4.5, 0.5, 0.0017}]}, {{}, 
           CuboidBox[{3.5, 0.5, 0.}, {4.5, 1.5, 0.0081}]}, {{}, 
           CuboidBox[{3.5, 1.5, 0.}, {4.5, 2.5, 0.0201}]}, {{}, 
           CuboidBox[{3.5, 2.5, 0.}, {4.5, 3.5, 0.0288}]}, {{}, 
           CuboidBox[{3.5, 3.5, 0.}, {4.5, 4.5, 0.0324}]}, {{}, 
           CuboidBox[{3.5, 4.5, 0.}, {4.5, 5.5, 0.0283}]}, {{}, 
           CuboidBox[{3.5, 5.5, 0.}, {4.5, 6.5, 0.0197}]}, {{}, 
           CuboidBox[{3.5, 6.5, 0.}, {4.5, 7.5, 0.0141}]}, {{}, 
           CuboidBox[{3.5, 7.5, 0.}, {4.5, 8.5, 0.0057}]}, {{}, 
           CuboidBox[{3.5, 8.5, 0.}, {4.5, 9.5, 0.0022}]}, {{}, 
           CuboidBox[{3.5, 9.5, 0.}, {4.5, 10.5, 0.0009}]}, {{}, 
           CuboidBox[{3.5, 10.5, 0.}, {4.5, 11.5, 0.0004}]}, {{}, 
           CuboidBox[{3.5, 12.5, 0.}, {4.5, 13.5, 0.0001}]}, {{}, 
           CuboidBox[{4.5, -0.5, 0.}, {5.5, 0.5, 0.0011}]}, {{}, 
           CuboidBox[{4.5, 0.5, 0.}, {5.5, 1.5, 0.0046}]}, {{}, 
           CuboidBox[{4.5, 1.5, 0.}, {5.5, 2.5, 0.0102}]}, {{}, 
           CuboidBox[{4.5, 2.5, 0.}, {5.5, 3.5, 0.0157}]}, {{}, 
           CuboidBox[{4.5, 3.5, 0.}, {5.5, 4.5, 0.0198}]}, {{}, 
           CuboidBox[{4.5, 4.5, 0.}, {5.5, 5.5, 0.0169}]}, {{}, 
           CuboidBox[{4.5, 5.5, 0.}, {5.5, 6.5, 0.0145}]}, {{}, 
           CuboidBox[{4.5, 6.5, 0.}, {5.5, 7.5, 0.0083}]}, {{}, 
           CuboidBox[{4.5, 7.5, 0.}, {5.5, 8.5, 0.0054}]}, {{}, 
           CuboidBox[{4.5, 8.5, 0.}, {5.5, 9.5, 0.0011}]}, {{}, 
           CuboidBox[{4.5, 9.5, 0.}, {5.5, 10.5, 0.0011}]}, {{}, 
           CuboidBox[{4.5, 10.5, 0.}, {5.5, 11.5, 0.0006}]}, {{}, 
           CuboidBox[{4.5, 14.5, 0.}, {5.5, 15.5, 0.0001}]}, {{}, 
           CuboidBox[{5.5, -0.5, 0.}, {6.5, 0.5, 0.0001}]}, {{}, 
           CuboidBox[{5.5, 0.5, 0.}, {6.5, 1.5, 0.001}]}, {{}, 
           CuboidBox[{5.5, 1.5, 0.}, {6.5, 2.5, 0.0038}]}, {{}, 
           CuboidBox[{5.5, 2.5, 0.}, {6.5, 3.5, 0.0067}]}, {{}, 
           CuboidBox[{5.5, 3.5, 0.}, {6.5, 4.5, 0.0094}]}, {{}, 
           CuboidBox[{5.5, 4.5, 0.}, {6.5, 5.5, 0.0108}]}, {{}, 
           CuboidBox[{5.5, 5.5, 0.}, {6.5, 6.5, 0.008}]}, {{}, 
           CuboidBox[{5.5, 6.5, 0.}, {6.5, 7.5, 0.0052}]}, {{}, 
           CuboidBox[{5.5, 7.5, 0.}, {6.5, 8.5, 0.003}]}, {{}, 
           CuboidBox[{5.5, 8.5, 0.}, {6.5, 9.5, 0.0015}]}, {{}, 
           CuboidBox[{5.5, 9.5, 0.}, {6.5, 10.5, 0.0011}]}, {{}, 
           CuboidBox[{5.5, 10.5, 0.}, {6.5, 11.5, 0.0002}]}, {{}, 
           CuboidBox[{5.5, 11.5, 0.}, {6.5, 12.5, 0.0001}]}, {{}, 
           CuboidBox[{6.5, -0.5, 0.}, {7.5, 0.5, 0.0001}]}, {{}, 
           CuboidBox[{6.5, 0.5, 0.}, {7.5, 1.5, 0.0005}]}, {{}, 
           CuboidBox[{6.5, 1.5, 0.}, {7.5, 2.5, 0.0015}]}, {{}, 
           CuboidBox[{6.5, 2.5, 0.}, {7.5, 3.5, 0.0026}]}, {{}, 
           CuboidBox[{6.5, 3.5, 0.}, {7.5, 4.5, 0.0031}]}, {{}, 
           CuboidBox[{6.5, 4.5, 0.}, {7.5, 5.5, 0.0048}]}, {{}, 
           CuboidBox[{6.5, 5.5, 0.}, {7.5, 6.5, 0.0047}]}, {{}, 
           CuboidBox[{6.5, 6.5, 0.}, {7.5, 7.5, 0.0029}]}, {{}, 
           CuboidBox[{6.5, 7.5, 0.}, {7.5, 8.5, 0.0015}]}, {{}, 
           CuboidBox[{6.5, 8.5, 0.}, {7.5, 9.5, 0.0006}]}, {{}, 
           CuboidBox[{6.5, 9.5, 0.}, {7.5, 10.5, 0.0003}]}, {{}, 
           CuboidBox[{6.5, 10.5, 0.}, {7.5, 11.5, 0.0001}]}, {{}, 
           CuboidBox[{7.5, 0.5, 0.}, {8.5, 1.5, 0.0001}]}, {{}, 
           CuboidBox[{7.5, 1.5, 0.}, {8.5, 2.5, 0.0003}]}, {{}, 
           CuboidBox[{7.5, 2.5, 0.}, {8.5, 3.5, 0.0009}]}, {{}, 
           CuboidBox[{7.5, 3.5, 0.}, {8.5, 4.5, 0.0019}]}, {{}, 
           CuboidBox[{7.5, 4.5, 0.}, {8.5, 5.5, 0.0013}]}, {{}, 
           CuboidBox[{7.5, 5.5, 0.}, {8.5, 6.5, 0.0012}]}, {{}, 
           CuboidBox[{7.5, 6.5, 0.}, {8.5, 7.5, 0.0008}]}, {{}, 
           CuboidBox[{7.5, 7.5, 0.}, {8.5, 8.5, 0.0012}]}, {{}, 
           CuboidBox[{7.5, 8.5, 0.}, {8.5, 9.5, 0.0005}]}, {{}, 
           CuboidBox[{7.5, 9.5, 0.}, {8.5, 10.5, 0.0003}]}, {{}, 
           CuboidBox[{7.5, 11.5, 0.}, {8.5, 12.5, 0.0001}]}, {{}, 
           CuboidBox[{7.5, 12.5, 0.}, {8.5, 13.5, 0.0002}]}, {{}, 
           CuboidBox[{8.5, 2.5, 0.}, {9.5, 3.5, 0.0001}]}, {{}, 
           CuboidBox[{8.5, 3.5, 0.}, {9.5, 4.5, 0.0006}]}, {{}, 
           CuboidBox[{8.5, 4.5, 0.}, {9.5, 5.5, 0.0003}]}, {{}, 
           CuboidBox[{8.5, 5.5, 0.}, {9.5, 6.5, 0.0005}]}, {{}, 
           CuboidBox[{8.5, 6.5, 0.}, {9.5, 7.5, 0.0006}]}, {{}, 
           CuboidBox[{8.5, 7.5, 0.}, {9.5, 8.5, 0.0004}]}, {{}, 
           CuboidBox[{8.5, 8.5, 0.}, {9.5, 9.5, 0.0003}]}, {{}, 
           CuboidBox[{8.5, 10.5, 0.}, {9.5, 11.5, 0.0002}]}, {{}, 
           CuboidBox[{9.5, 0.5, 0.}, {10.5, 1.5, 0.0001}]}, {{}, 
           CuboidBox[{9.5, 3.5, 0.}, {10.5, 4.5, 0.0002}]}, {{}, 
           CuboidBox[{9.5, 4.5, 0.}, {10.5, 5.5, 0.0003}]}, {{}, 
           CuboidBox[{9.5, 6.5, 0.}, {10.5, 7.5, 0.0003}]}, {{}, 
           CuboidBox[{9.5, 7.5, 0.}, {10.5, 8.5, 0.0001}]}, {{}, 
           CuboidBox[{9.5, 9.5, 0.}, {10.5, 10.5, 0.0001}]}, {{}, 
           CuboidBox[{10.5, 7.5, 0.}, {11.5, 8.5, 0.0001}]}},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0, 10}, {0, 10}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}], ",", 
   Graphics3DBox[
    {CapForm["Butt"], EdgeForm[None], 
     {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
      0.016666666666666666`], {
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{-0.5, -0.5, 0.0024787521766663585`}, {0.5, 0.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{-0.5, 0.5, 0.0074362565299990755`}, {0.5, 1.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{-0.5, 1.5, 0.011154384794998614`}, {0.5, 2.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{-0.5, 2.5, 0.011154384794998614`}, {0.5, 3.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{-0.5, 3.5, 0.00836578859624896}, {0.5, 4.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{-0.5, 4.5, 0.005019473157749376}, {0.5, 5.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{-0.5, 5.5, 0.002509736578874688}, {0.5, 6.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{-0.5, 6.5, 0.001075601390946295}, {0.5, 7.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{-0.5, 7.5, 0.00040335052160486056`}, {0.5, 8.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{-0.5, 8.5, 0.00013445017386828686`}, {0.5, 9.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{-0.5, 9.5, 0.00004033505216048605}, {0.5, 10.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{0.5, -0.5, 0.004957504353332717}, {1.5, 0.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{0.5, 0.5, 0.01735126523666451}, {1.5, 1.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{0.5, 1.5, 0.029745026119996302`}, {1.5, 2.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{0.5, 2.5, 0.03346315438499584}, {1.5, 3.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{0.5, 3.5, 0.027885961987496533`}, {1.5, 4.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{0.5, 4.5, 0.01840473491174771}, {1.5, 5.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{0.5, 5.5, 0.010038946315498752`}, {1.5, 6.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{0.5, 6.5, 0.004660939360767277}, {1.5, 7.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{0.5, 7.5, 0.001882302434156016}, {1.5, 8.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{0.5, 8.5, 0.0006722508693414343}, {1.5, 9.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{0.5, 9.5, 0.00021512027818925897`}, {1.5, 10.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{1.5, -0.5, 0.004957504353332717}, {2.5, 0.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{1.5, 0.5, 0.019830017413330868`}, {2.5, 1.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{1.5, 1.5, 0.038420658738328554`}, {2.5, 2.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{1.5, 2.5, 0.04833566744499399}, {2.5, 3.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{1.5, 3.5, 0.044617539179994455`}, {2.5, 4.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{1.5, 4.5, 0.03234771590549598}, {2.5, 5.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{1.5, 5.5, 0.019241313771372608`}, {2.5, 6.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{1.5, 6.5, 0.009680412518516654}, {2.5, 7.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{1.5, 7.5, 0.004212772114539655}, {2.5, 8.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{1.5, 8.5, 0.0016134020864194422`}, {2.5, 9.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{1.5, 9.5, 0.000551245712859976}, {2.5, 10.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{2.5, -0.5, 0.003305002902221811}, {3.5, 0.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{2.5, 0.5, 0.014872513059998151`}, {3.5, 1.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{2.5, 1.5, 0.03222377829666266}, {3.5, 2.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{2.5, 2.5, 0.04503066454277218}, {3.5, 3.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{2.5, 3.5, 0.04585691526832763}, {3.5, 4.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{2.5, 4.5, 0.03643765699699547}, {3.5, 5.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{2.5, 5.5, 0.023610114482747066`}, {3.5, 6.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{2.5, 6.5, 0.012867379602801973`}, {3.5, 7.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{2.5, 7.5, 0.006035318915865321}, {3.5, 8.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{2.5, 8.5, 0.0024798587624595128`}, {3.5, 9.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{2.5, 9.5, 0.0009052978373797982}, {3.5, 10.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{3.5, -0.5, 0.0016525014511109056`}, {4.5, 0.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{3.5, 0.5, 0.00826250725555453}, {4.5, 1.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{3.5, 1.5, 0.019830017413330868`}, {4.5, 2.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{3.5, 2.5, 0.030571276845551755`}, {4.5, 3.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{3.5, 3.5, 0.03418612376985686}, {4.5, 4.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{3.5, 4.5, 0.02968305731557964}, {4.5, 5.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{3.5, 5.5, 0.0209144714906224}, {4.5, 6.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{3.5, 6.5, 0.012336218422087753`}, {4.5, 7.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{3.5, 7.5, 0.006234504358633153}, {4.5, 8.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{3.5, 8.5, 0.002748759110196087}, {4.5, 9.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{3.5, 9.5, 0.0010726136093047775`}, {4.5, 10.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{4.5, -0.5, 0.0006610005804443623}, {5.5, 0.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{4.5, 0.5, 0.003635503192443992}, {5.5, 1.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{4.5, 1.5, 0.009584508416443253}, {5.5, 2.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{4.5, 2.5, 0.016194514220886875`}, {5.5, 3.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{4.5, 3.5, 0.019788704877053094`}, {5.5, 4.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{4.5, 4.5, 0.01871044768020323}, {5.5, 5.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{4.5, 5.5, 0.014302400059364888`}, {5.5, 6.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{4.5, 6.5, 0.00911738166695958}, {5.5, 7.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{4.5, 7.5, 0.0049610454278708116`}, {5.5, 8.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{4.5, 8.5, 0.0023464045158050656`}, {5.5, 9.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{4.5, 9.5, 0.0009787972657611282}, {5.5, 10.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{5.5, -0.5, 0.00022033352681478742`}, {6.5, 0.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{5.5, 0.5, 0.0013220011608887246`}, {6.5, 1.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{5.5, 1.5, 0.0038007533375550833`}, {6.5, 2.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{5.5, 2.5, 0.006995589476369501}, {6.5, 3.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{5.5, 3.5, 0.009295320662498845}, {6.5, 4.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{5.5, 4.5, 0.009534933372909926}, {6.5, 5.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{5.5, 5.5, 0.007885874633155501}, {6.5, 6.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{5.5, 6.5, 0.005422860565547341}, {6.5, 7.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{5.5, 7.5, 0.0031732454204502006`}, {6.5, 8.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{5.5, 8.5, 0.0016089757432468238`}, {6.5, 9.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{5.5, 9.5, 0.0007173331745545537}, {6.5, 10.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{6.5, -0.5, 0.0000629524362327964}, {7.5, 0.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{6.5, 0.5, 0.00040919083551317663`}, {7.5, 1.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{6.5, 1.5, 0.001274786833714127}, {7.5, 2.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{6.5, 2.5, 0.0025417046128991547`}, {7.5, 3.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{6.5, 3.5, 0.0036551758287667415`}, {7.5, 4.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{6.5, 4.5, 0.004052169629759814}, {7.5, 5.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{6.5, 5.5, 0.003615240377031561}, {7.5, 6.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{6.5, 6.5, 0.0026759422520357405`}, {7.5, 7.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{6.5, 7.5, 0.0016813359152068204`}, {7.5, 8.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{6.5, 8.5, 0.000913028129563407}, {7.5, 9.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{6.5, 9.5, 0.0004348060131937044}, {7.5, 10.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{7.5, -0.5, 0.0000157381090581991}, {8.5, 0.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{7.5, 0.5, 0.00011016676340739371`}, {8.5, 1.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{7.5, 1.5, 0.0003698455628676789}, {8.5, 2.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{7.5, 2.5, 0.0007947745074390547}, {8.5, 3.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{7.5, 3.5, 0.0012315070338040797`}, {8.5, 4.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{7.5, 4.5, 0.001469939386035796}, {8.5, 5.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{7.5, 5.5, 0.0014103312979778671`}, {8.5, 6.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{7.5, 6.5, 0.0011208906101378804`}, {8.5, 7.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{7.5, 7.5, 0.0007548267603061726}, {8.5, 8.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{7.5, 8.5, 0.00043842402179170427`}, {8.5, 9.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{7.5, 9.5, 0.000222830019493852}, {8.5, 10.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{8.5, -0.5, 3.4973575684886893`*^-6}, {9.5, 0.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{8.5, 0.5, 0.00002623018176366517}, {9.5, 1.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{8.5, 1.5, 0.00009442865434919462}, {9.5, 2.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{8.5, 2.5, 0.0002177105086384209}, {9.5, 3.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{8.5, 3.5, 0.00036197650833857937`}, {9.5, 4.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{8.5, 4.5, 0.0004634873117639635}, {9.5, 5.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{8.5, 5.5, 0.00047673355355461444`}, {9.5, 6.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{8.5, 6.5, 0.0004057902798059586}, {9.5, 7.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{8.5, 7.5, 0.00029228268119446953`}, {9.5, 8.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{8.5, 8.5, 0.00018129720043217568`}, {9.5, 9.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{8.5, 9.5, 0.00009823156230882315}, {9.5, 10.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{9.5, -0.5, 6.994715136977378*^-7}, {10.5, 0.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{9.5, 0.5, 5.5957721095819025`*^-6}, {10.5, 1.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{9.5, 1.5, 0.00002150874904620544}, {10.5, 2.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{9.5, 2.5, 0.00005298496716260364}, {10.5, 3.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{9.5, 3.5, 0.00009416635253155796}, {10.5, 4.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{9.5, 4.5, 0.00012889511318665064`}, {10.5, 5.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{9.5, 5.5, 0.00014169544188731925`}, {10.5, 6.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{9.5, 6.5, 0.00012883141131665317`}, {10.5, 7.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{9.5, 7.5, 0.00009903556421948978}, {10.5, 8.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{9.5, 8.5, 0.00006548770820588209}, {10.5, 9.5, 0.}]}, 
       {RGBColor[0.53210271, 0.61927077, 0.74717274], PointSize[
        0.016666666666666666`], Opacity[0.5], 
        CuboidBox[{9.5, 9.5, 0.0000377760325049822}, {10.5, 10.5, 0.}]}}}, 
     {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
      0.016666666666666666`], EdgeForm[Opacity[0.5]], {}, 
      {RGBColor[0.53210271, 0.61927077, 0.74717274], 
       Polygon3DBox[CompressedData["
1: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
        "],
        VertexColors->None]}, {}, {{{}, {}}, {{}, {}}}}},
    Axes->True,
    AxesOrigin->{Automatic, Automatic, Automatic},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    Lighting->"Neutral",
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.3315753, 0.4561011, 0.6388182]], 
        Directive[
         RGBColor[0.7926498, 0.5499369, 0.1278459]], 
        Directive[
         RGBColor[0.5041629000000001, 0.6224121, 0.1753965]], 
        Directive[
         RGBColor[0.8302733999999999, 0.3470634, 0.18826110000000001`]], 
        Directive[
         RGBColor[0.47563919999999993`, 0.4235616, 0.6312158999999999]], 
        Directive[
         RGBColor[0.6948711, 0.3883986, 0.0921483]], 
        Directive[
         RGBColor[0.3275082, 0.5566509, 0.7041141]], 
        Directive[
         RGBColor[0.9, 0.675, 0.]], 
        Directive[
         RGBColor[0.5828616, 0.340344, 0.5526333000000001]], 
        Directive[
         RGBColor[0.5144301, 0.5278347, 0.]], 
        Directive[
         RGBColor[0.8235, 0.29925, 0.19125]], 
        Directive[
         RGBColor[0.3607400034841738, 0.4698059979094957, 0.765]], 
        Directive[
         RGBColor[
         0.8755460013936696, 0.5594800069683477, 0.06602579623709227]], 
        Directive[
         RGBColor[0.6631044054353109, 0.3222, 0.45272399163798316`]], 
        Directive[
         RGBColor[0.25223796933927034`, 0.6435, 0.3862880390227469]]}, 
      "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05], 
      "RelieveDPZFighting" -> True, "SpherePoints" -> 10, "TubePoints" -> 10},
    Ticks->{Automatic, Automatic, Automatic},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJytfQdcVVe2/h2aaEyZzLx5eW/eZDI10zItk5lJMpNqoknsDem99yYd6UWQ
Ir0IiogKCGIvEREERezYsSEKKiLlSrntnP9a++x97rl40eSf8fe7eMspe6/1
7bW+tfba+8yzD3Jz9rYPcne0f2N2gL2fm7tj4Buf+wbAV4bfk8lk3fCqeENm
BO95eCv5g788579k/GPAu7i4GJPPJr92cnKKd3Z2xq/whe/xu3mTjzcinw1f
p8fhS2ZE/hq+jH/Zvy+nOHEFvYkzXFxmIHyH7/G7T/C7uVOcWEBPxDuzE1kr
AvE7/SdKL4Fvd8BlyKevnnM4efe8a37rgxK0UhBFJW3iDtpL4ZPesw1IFwx/
TYUmaEA4PpB+fp6MEslfI2fJJSRt+IR+TRo5SUXz8Covk++mxMw/hJsk6Spc
2s6X9aDndSl6Zuq2fUqU/U0ieu2thN7pbySKAb97WfeUKeH4d+EOG4WfngtC
6eFTQu8d4aAS4acYKRaMdU8k7+g1C4UDYiSdwRc53WTq0/LFL2RG0lvhNwb4
xTNumSNIUnpLfG8ofP0K/JH+JJiSqSBML5ktfkFuLsjQ+DX485FjYFqarW9i
prmrX7yjo6MgmW+KbHp5M0HrP3JzcwuUCAnVjMD5i/4OCReciR+zbewc/rVu
z43kr5a7n0nf2MqvP3D76t4L94rt7O2Z+HTl8PzxQtu2XPgJ2ybKyFD4WyDF
wB+e1UgTU/jzBrzsPaOjz0YkZlzefqpbVb7vliFfvv+WzERT2XjnVmp+cb4D
gPfptj535P1Np606Q8FAt7vku98L30nbKmBYZuT65XLXW6llTcNbW3uwVSak
gYaKrPJa8VBDbdOmHKn/0GnR0+gSZChK8M2npYcv4VDjt+w8UxL++PePNy+w
9j28fv/tWzk1p2XThZZxCdkb+zLXVZoHp6ayzoojDP99ILTESoTwr/X0Xjhx
Gr5HK7b443nWm+Zb+j5Mq2hRZ285yRc2XJS9QG5ozMdlVuBND++/0v16SEoK
OZMMiw8n3+kXz8KEMWLiT2+88fukWfNtD3vHFCmyNrfLBEAYqra29k7sOj/I
VRzqFnpqgPeVGY3uvzyyuGxvkynVPLnxBxJhC0bD5E+urq4MHUz3iIufaY/R
tWFCo4x+CX/W//j1X/eHZVRzJbuuUv2ra9ruY1vIJ1Nte0hzL7bceYzA1iv+
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
XO2zigyecbCfcLCrvpaKEgmk3fre/wPxIdQ8\
\>"]]}], "}"}]], "Output",
 CellChangeTimes->{3.706621073240101*^9},
 CellTags->
  "MultivariatePoissonDistribution",ExpressionUUID->"8797af9f-23c7-4c5e-ad36-\
08e269b8c571"]
}, Open  ]],

Cell["Mixture Distributions", "Text",
 CellChangeTimes->{{3.701010332366341*^9, 
  3.70101033675733*^9}},ExpressionUUID->"d16d7fca-dd5d-4f47-8c22-\
edee87429350"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", " ", "=", 
   RowBox[{"MixtureDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"6", ",", "2"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", 
     RowBox[{"10", "^", "5"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"data", ",", "50", ",", "\"\<PDF\>\""}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalD]", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7010103510269213`*^9, 3.7010103576043634`*^9}, 
   3.701620964279334*^9},
 CellTags->"MixtureDistribution",
 CellID->181972816,ExpressionUUID->"8d47320b-2919-4c84-aca8-4c5ffef44a31"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.42], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.42], Thickness[Small]}], RectangleBox[{-4.5, 0}, {-4., 0.00002},
       RoundingRadius->0], RectangleBox[{-4., 0}, {-3.5, 0.00014},
       RoundingRadius->0], RectangleBox[{-3.5, 0}, {-3., 0.00038},
       RoundingRadius->0], RectangleBox[{-3., 0}, {-2.5, 0.00246},
       RoundingRadius->0], RectangleBox[{-2.5, 0}, {-2., 0.0084},
       RoundingRadius->0], RectangleBox[{-2., 0}, {-1.5, 0.02164},
       RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1., 0.04732},
       RoundingRadius->0], RectangleBox[{-1., 0}, {-0.5, 0.075},
       RoundingRadius->0], RectangleBox[{-0.5, 0}, {0., 0.09778},
       RoundingRadius->0], RectangleBox[{0., 0}, {0.5, 0.0964},
       RoundingRadius->0], RectangleBox[{0.5, 0}, {1., 0.08048},
       RoundingRadius->0], RectangleBox[{1., 0}, {1.5, 0.05644},
       RoundingRadius->0], RectangleBox[{1.5, 0}, {2., 0.03806},
       RoundingRadius->0], RectangleBox[{2., 0}, {2.5, 0.03466},
       RoundingRadius->0], RectangleBox[{2.5, 0}, {3., 0.04372},
       RoundingRadius->0], RectangleBox[{3., 0}, {3.5, 0.06034},
       RoundingRadius->0], RectangleBox[{3.5, 0}, {4., 0.07972},
       RoundingRadius->0], RectangleBox[{4., 0}, {4.5, 0.1003},
       RoundingRadius->0], RectangleBox[{4.5, 0}, {5., 0.1222},
       RoundingRadius->0], RectangleBox[{5., 0}, {5.5, 0.1378},
       RoundingRadius->0], RectangleBox[{5.5, 0}, {6., 0.15096},
       RoundingRadius->0], RectangleBox[{6., 0}, {6.5, 0.14622},
       RoundingRadius->0], RectangleBox[{6.5, 0}, {7., 0.13808},
       RoundingRadius->0], RectangleBox[{7., 0}, {7.5, 0.12338},
       RoundingRadius->0], RectangleBox[{7.5, 0}, {8., 0.10138},
       RoundingRadius->0], RectangleBox[{8., 0}, {8.5, 0.08044},
       RoundingRadius->0], RectangleBox[{8.5, 0}, {9., 0.05698},
       RoundingRadius->0], RectangleBox[{9., 0}, {9.5, 0.03918},
       RoundingRadius->0], RectangleBox[{9.5, 0}, {10., 0.02624},
       RoundingRadius->0], RectangleBox[{10., 0}, {10.5, 0.0157},
       RoundingRadius->0], RectangleBox[{10.5, 0}, {11., 0.00864},
       RoundingRadius->0], RectangleBox[{11., 0}, {11.5, 0.00518},
       RoundingRadius->0], RectangleBox[{11.5, 0}, {12., 0.00252},
       RoundingRadius->0], RectangleBox[{12., 0}, {12.5, 0.00112},
       RoundingRadius->0], RectangleBox[{12.5, 0}, {13., 0.00046},
       RoundingRadius->0], RectangleBox[{13., 0}, {13.5, 0.00018},
       RoundingRadius->0], RectangleBox[{13.5, 0}, {14., 0.00004},
       RoundingRadius->0], RectangleBox[{14., 0}, {14.5, 0.00004},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
LEa6nk3k3LpK/v9/O3wjNC/8plwo+T+GgdC+
        "]]},
      Annotation[#, "Charting`Private`Tag$1378576#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-4.88, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-4.5, 14.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7066210802204647`*^9},
 CellTags->
  "MixtureDistribution",ExpressionUUID->"2cf43301-6531-4351-ae8a-\
6e5f9e91d038"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"91e0cab1-9001-4d86-a1ec-4d79c51a8061"],

Cell[CellGroupData[{

Cell["Fitting Data to Known Distributions", "Section",
 CellChangeTimes->{{3.701010876186033*^9, 3.70101088822723*^9}, {
   3.701010937687173*^9, 3.7010109437647867`*^9}, {3.701092357491291*^9, 
   3.70109236977061*^9}, {3.7010927664839134`*^9, 3.7010927876589575`*^9}, {
   3.7011047358198805`*^9, 3.7011047362891283`*^9}, {3.7011906502941384`*^9, 
   3.701190658358275*^9}, 3.7011906893410892`*^9, {3.7021435160692706`*^9, 
   3.7021435215882707`*^9}},ExpressionUUID->"3bfa1cb5-8548-45c7-9f7a-\
38ceaabb2dd3"],

Cell[TextData[{
 "The lottery.txt file contains information on the Maryland Pick 3 lottery. \
The winning numbers are returned as three-digit numbers from 000 to 999. If \
the lottery is fair, you would expect the winning numbers to come from a \
uniform distribution defined on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"0", ",", "999"}], "}"}], $CellContext`MR]],ExpressionUUID->
  "9900ef9d-398a-4658-9137-8d658add97ed"],
 ". Let\[CloseCurlyQuote]s go ahead and check that visually and \
quantitatively."
}], "Text",
 CellChangeTimes->{{3.7010108951965528`*^9, 3.7010109231001806`*^9}, {
   3.7010971539151525`*^9, 3.7010971583238373`*^9}, {3.7011047432806787`*^9, 
   3.7011047583226185`*^9}, 
   3.7021392448412704`*^9},ExpressionUUID->"27969aa5-2585-4c67-8377-\
d9e19aba5077"],

Cell[CellGroupData[{

Cell["Visualizations", "Subsection",
 CellChangeTimes->{{3.7010110071169386`*^9, 3.701011014407653*^9}, {
  3.70109280131522*^9, 
  3.7010928238759637`*^9}},ExpressionUUID->"be549b52-c9c3-47c1-9ff0-\
7e479db79b73"],

Cell[TextData[{
 StyleBox[ButtonBox["Import",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Import"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " the data:"
}], "Text",
 CellChangeTimes->{{3.701782257905594*^9, 3.7017822721000767`*^9}, {
   3.7017823532373347`*^9, 3.701782353240342*^9}, 
   3.7017830987434654`*^9},ExpressionUUID->"900be852-1e60-4519-84f6-\
24261acb52d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lotDat", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<lottery.txt\>\""}],
        "}"}], "]"}], ",", "\"\<List\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7010228225208683`*^9, 3.701022908196435*^9}},
 CellTags->{
  "Import", "FileNameJoin", 
   "NotebookDirectory"},ExpressionUUID->"a8679006-5664-4bc6-9d45-\
64aa64fecc22"],

Cell[TextData[{
 "Visualize the data by plotting a ",
 StyleBox[ButtonBox["Histogram",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Histogram"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 ", along with ",
 StyleBox[ButtonBox["DistributionChart",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DistributionChart"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["BoxWhiskerChart",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/BoxWhiskerChart"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 ". Finally, ",
 StyleBox[ButtonBox["QuantilePlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/QuantilePlot"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " will help compare the data to a UniformDistribution."
}], "Text",
 CellChangeTimes->{{3.701782276393424*^9, 3.7017823394900618`*^9}, {
   3.7017823810928993`*^9, 3.70178238109493*^9}, {3.701782411682684*^9, 
   3.7017824593556128`*^9}, 
   3.7021393049262705`*^9},ExpressionUUID->"f8610a88-07a4-4cd8-a66f-\
4e786aae30ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Histogram", "[", 
      RowBox[{"lotDat", ",", "10", ",", 
       RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<Histogram\>\""}]}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"DistributionChart", "[", 
      RowBox[{"lotDat", ",", 
       RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<DistributionChart\>\""}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"BoxWhiskerChart", "[", 
      RowBox[{"lotDat", ",", 
       RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<BoxWhiskerChart\>\""}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"QuantilePlot", "[", 
      RowBox[{"lotDat", ",", 
       RowBox[{"UniformDistribution", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "999"}], "}"}], "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<QuantilePlot\>\""}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7010924999284587`*^9, 3.701092609967659*^9}, {
  3.7016206939002943`*^9, 3.7016207655244455`*^9}},
 CellTags->{
  "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
   "QuantilePlot", 
   "PlotLabel"},ExpressionUUID->"46be293e-f274-4ffb-9fd4-2d44eba484a9"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.616], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.616], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {100., 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{48.661386611165824`, 
              69.63104972093944}, {-128.32327539816532`, -25.37984623853336}}],
            StatusArea[#, 21]& ,
            TagBoxNote->"21"],
           StyleBox["21", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[21, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{100., 0}, {200., 19.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{69.00604972093944, 
              89.97571283071306}, {-118.578663097248, -25.37984623853336}}],
            StatusArea[#, 19]& ,
            TagBoxNote->"19"],
           StyleBox["19", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[19, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{200., 0}, {300., 19.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{89.35071283071306, 
              110.32037594048668`}, {-118.578663097248, -25.37984623853336}}],
            StatusArea[#, 19]& ,
            TagBoxNote->"19"],
           StyleBox["19", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[19, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{300., 0}, {400., 20.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{109.69537594048668`, 
              130.66503905026033`}, {-123.45096924770667`, \
-25.37984623853336}}],
            StatusArea[#, 20]& ,
            TagBoxNote->"20"],
           StyleBox["20", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[20, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{400., 0}, {500., 25.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{130.04003905026033`, 
              151.00970216003395`}, {-147.8125, -25.37984623853336}}],
            StatusArea[#, 25]& ,
            TagBoxNote->"25"],
           StyleBox["25", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[25, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{500., 0}, {600., 18.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{150.38470216003395`, 
              171.35436526980757`}, {-113.70635694678933`, \
-25.37984623853336}}],
            StatusArea[#, 18]& ,
            TagBoxNote->"18"],
           StyleBox["18", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[18, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{600., 0}, {700., 25.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{170.72936526980757`, 
              191.6990283795812}, {-147.8125, -25.37984623853336}}],
            StatusArea[#, 25]& ,
            TagBoxNote->"25"],
           StyleBox["25", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[25, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{700., 0}, {800., 25.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{191.0740283795812, 
              212.0436914893548}, {-147.8125, -25.37984623853336}}],
            StatusArea[#, 25]& ,
            TagBoxNote->"25"],
           StyleBox["25", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[25, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{800., 0}, {900., 22.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{211.4186914893548, 
              232.38835459912843`}, {-133.19558154862398`, \
-25.37984623853336}}],
            StatusArea[#, 22]& ,
            TagBoxNote->"22"],
           StyleBox["22", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[22, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{900., 0}, {1000., 24.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{231.76335459912843`, 
              252.73301770890205`}, {-142.94019384954132`, \
-25.37984623853336}}],
            StatusArea[#, 24]& ,
            TagBoxNote->"24"],
           StyleBox["24", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[24, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-20., 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotLabel->FormBox["\"Histogram\"", TraditionalForm],
      PlotRange->{{0., 1000.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {194.4, -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 222.49223594996212}], 
    InsetBox[
     GraphicsBox[{
       {Opacity[0], 
        PointBox[{{-0.19605693430634064`, -45.75}, {2.1960569343063403`, 
         1048.75}}]}, 
       {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], {}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], 
          TagBox[
           TooltipBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlm3lUjf3X/ytTEhmSJEkyJ5Qhoc9pLg3nHJQUoVFFlCIqmufZlDlzMhQy
c/Y2JTMhbnFL3DcylTHzc37ru/f3t9bzWMsfZ52crnNd+7P3fr/fL339FkwO
VFNRUVFrpfyr8v//vPj4/NXLWyGSiPeXfa5Pe2V1pdzpTrF3iGTmmTbv3pq/
sdoXtu+00/O5kvqOIYf+eLy3yh/YeVfL/LkS47jKXyvnNFtFPluUX/o1WLIF
Qx/6ST5aeWy5H+OVGCxpJV+oPXLSZysLn/F+6h2CJS1V/S0fJn610uuxxeX4
qiDJOv19g+SN36x+1qiNnmsQJDGo33l8U9pPq/q8IAPd0kCJuWes3sXpf6zO
TbrSrnpkoKTYcN2RpeaqYldb0+YlpwIkB7o/ubPzgZrIOFf4cKB9gMRjU5tF
Pze1FqHLP5+/f8NfEvD99Gnd1LbC3XL6/nQvf0ml/fsBBfnqYsSX02vGNvhJ
fO9/c/qg0BBdDxkmvAjzk2jXuimuaXcUX+anhKz9PEdS/OD4rh1FWuLB4JeT
HVfMkVheqRr+Vb+LOPmPy4Sv6nMkn/q7dtZI6yo2by3vv7totuRQG92/x7bR
Fgkzu2lN058tOWEw4HqfDd1Ftdm7po6usySX7VTWTnHqIXLKjpyfP8tXsmTt
BJ1ZHXsKmVH8muuRMyUa7Z9bnGjUE7rr7UKGpc2Q7EwcZnWlXl886qI5IXed
j2RYyPK0l+8NREnmnU5v93lL9rTAGJMcQzFXdcNTV5wuGVDgZ9Jvf19hstSv
ct8dL4lCZ93sfx8aiU9Ng9M1X0yTmOlmhC3ubiyOz22ePu+7p6R1r+tl1TP6
i7j64ybXOnpKzvg7T71YMUDYeSX8GdrXQ7Lnfba3Y5dBQv2WY032qKmS5ICV
4wyWDxbXHLV2vnacImmv4W7Q4esQsQpql7j4TJaUmwTKz8WaCK+xmyftDZdL
HvgFTX/VwVTolwf27pAkkziM3q3Za/dwUe3mXX9viFSS0NycHbFrhJBNfJW6
Wu4mabNsyb+zl48U9SYxQz1iXCRHVVcf1fYxE3P1293W3uIsqdmyPkUywVw0
dViz+O5FR0mfMf7JRX1HiYQfxvqr3thLPI92ijmsMVqovz58dko3O8nG4MPu
jl9Hi4KHNsHdLG0kltD63dt/xwjDK7c178yWSPau71Jp89dYIVt0NqC/1kTJ
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
/ZWE/TYPMPpZKxWywJ5bv39Jwt07uqvNei0VXotxV552Mk42P6k/U0V5XtOD
9xmZJeMkxbeiuA7K+izudOioNBmdPjZ4tOohE+F7jhybND8Zzbdsq/3XSFmv
J2ec+TsrGRWLh2j2VtZb3NVW5yNLk/Gp2qbaDeNlIuVRWXXbqmScP3xq0nQn
5fl+K7+x/lkydoz6cMHVQyaKfrfcMVVNwfiriuR5fjKxXqvkr3MGKZjSXq9b
hbLflBg6PvGckIL5SQHqWsrzVDry3fPG6Sno6HEvMTFLWe82qxuXL0nBYM+I
lj9rlf1gyoSmrqtT8Pe3xrbJO2VCEfDs865DKXhTdf3TVoeV/SE664flrRRs
rql9H4vK85A2UvXm2xRs2pBw8/l1mbi79kFb/w6paOz3YK9FnfJ8lK7Q/Doo
Fc9atk2KeKnsHycGdFW2SOxue2FL5meZaLxyvUefgFT0+/lweqyaXDTVRfU+
nJiKEdOepVtryUXLm179HLekYuyOq8dre8mFyu9zg+pOp2KHGYoVowfJRVut
UNMFD1PRR94yx2uUXHQy7DKqVUsqKu6a/DNOIhc6I4+PW9s9DTuctFx810Uu
9G1miaHmaZgfdm660TS5MJ7S1h5kaRiudrW0t59cmATsnzQlPA3vxIwuwnly
YRY9VfYiOw0vlfXf23qJXFim/fCI3ZOGK92DdzxLkAubtdt8tC6l4eMnd154
ZsmFU6nznO3P0zCrwiV12kq5kJ1oChqrlo52Zslxf2+QC68ra+dd7ZOOsbXt
tj/fLhe+dVaRsyamY6P/zBi/vXIR9OafJR+901Ey/71Udkguwn/lxKfHpOPE
5xVLdx2Xi6hOo5J7rUlHt4+3v89QyEVcn7qM8sPpGBGfdDTsvFykjEjKs72d
jnN1J5ZduSQXWdaDV91/l44nIxwuR1yVi6LJt9aFaWbgtvfuqV435GK9/5It
fwZnoLfPxYrFt+SiJMpg50rHDGwo3/39/G25KE29WDYwMAPz/u6gY1EjFxVr
5lWcSsrAIz3qD1xRvn90d7ej0pIM1LJ3OrhI+e8Vx0+eenYmA1PmeNcNUX7+
hctzzi6py0DzuMZBL6/IxbWH6pc6fMvAg6cKV2+vkou7r8uvbdHJxJKtZu4e
Z+Xi4U/PGvNRmRhht3vb55Ny0dDx9/1L8kw0mV12Ne6wXDQa7HzssyATu94D
m2dlynoZ7vrsfU4m2jfez+m7VVkvko8vk8sy8fo/yxeMWKOsl8nr3/WozkTP
g3ti1JXPp62/9ae9/2SiyuLQ1dvilPUS9fKbaJWF7ZzWbPg6X1kvqfl/7hhm
YfjY02Uqvsp6WTOmzVyrLPT+/vuvo67Ketn9WOOnTxaqtt9q281SWS/HUzoX
LM1Cde8j/bQGKOvl8lAd47VZCK1Vr23vrKyXhzW9jldmocHu7iuvfJMJm9dL
+7rWZKEsfp92/FPlfPtpOLD+fRYG/Dhje+SScv53rDaJ6piNDnoRj+ftkwkv
gwVm6kOzMTR6bvUm5fz3Ha5jsdEpG4si15raRCj7i+TMxBFByvdX1dyZKlf2
F3mA7YXkbHQ2OLDslrKfRPl1cPbamo0yz/nxFZrK/rLokPsbRTbujVdrrr8p
FSkp06cmPMrGtz0cx/VMloqs1Sre2t+zMeSiR0Arc6ko2rV7VmmPHLReabx3
3RN3sf6Ye+CE0TlYtKW76V8Z7qKk+nPorck5eCjwx0owdRelf21cGLBQ+dqx
bKbrbTdR0Wi7uCU3B23LDusnLnQTR380xubszUHj0KEBczTdhEKzKNHwcg5u
/X234uMOV1HVe1x65b85qPr6vr3E0lVcM63PcWqdi2MNh4+afM1F3BXpRY/6
5qLPuXmaY31cxCOZafFCkYtWfYbL//w7STTMubep9cxcdPl33XzFgkmiMTJu
e/GyXCxRlJ7M+qzUl8n99pgU5+Kl8f0Px8c4i5ZVVw7gkVz81MWi/nCLk1DZ
FVE59Y7yteayN66LnUTbY7onXzblYueY5IqwZkfRqRogrlMeBqrXV44OdRQ6
fwVd7GySh6aafhvu1DsI/caOV3c456G3TfsZER4OwvhH5S2L4DzsM6pQd2K1
vTDRnFF7LSUPb9+cGxs8zl6Y9W71aPa2PNTx297GeI+dsDQte/oJ8vDssK0r
SnvYCRshf5HxOA97mX9wNEm1FU6yljf6P/LwdN6U/JfNNkI2Z8uHCt189Gz8
oaXrayO8Ih1a7Mbk4/SB3Td9uWwtfJPf/nowJR+HPfje/uxoaxH0/+yQiHzc
Vd9xdeVWiQjfOb69an4+rt14rqtWJ4mIOtrQafW+fBzUov681xcrEXcpU3vw
lXw0KQr1e3R7okh5MELvzIt83Pdn26MH5RPExU+v80vVCtCx44l+6QXjhXM8
FEV2KcB3Vx/5+URZiuttVq6eYFiAlS0XT170GSdkeUHFbYcXYGCn5efMHC3E
XR3LDbcmFuCYEFmcxtixwmtLx83rXQtQ03JwSfnQMaJu4NOSAJ8CPJ/eXLCi
/2gxq6Jyu2loAV7Q2WVy23iUeGaRsaslpgDtu1f6fRlsLoLO+uw5l658P6Th
0bjRZqLRefi+nDUFOGhlW+0nDiNFeI1auefOAqy502WC0awRotm79qBhZQFu
2/8zauFPUxH9bE9l47kCvPip3GeT0zDxLSz+WOXtAly1pGBAr+1DRdwn2cnl
9QV4TTtme3/NIUIl3viM0/sC/OtnSvab5EEiuU0LdP1dgFO7fZPlawwU7fKu
nnukWYhruxq071fSX2TrbLm4q1ch7i/zCd9rZyw6bYmsXjikEO+OznvRp8VI
FA10uGo5rhC9Fm9fEnqyr9Cp6HmjtVMh7h5a1xyWbSjWWby9dcOzED9/b25+
e89A9D6Ld4oDCzHaqveAnQf1xVbnVbV+UYWY1zdiQsoePWFcE/yXSXIhNg3o
rvvptK4o9R7/6EthId7/etZT/lpHmDzr9ARLCrHd4k/vXph3F+VhDU+zygux
6mpu5NfV3YT5pyPPpyoKccj5uYFHOncVx+IyXxhcL0RJ0hgh295ZWLaZ2fiy
rhBHrFU41K7rJBS5I94eaizERbHDntv31BQ2Oq2b4r4pP1/mu7bv+fbi4ub7
HxzUi/DYyiOWq1e3E84D937u3KMI2xi+N7yU10ZcL1/e8rB/EW5dNt+5YV8r
IbOY/GPHqCIstZ9wteM7VXEX+/8Oty3C7NqYo9EyFeHl/E1l3OQifLZz1Lfc
Hb+s6m5fa9VqThGGjtwasObZd6tZ3iVtry8owpR9HU7EebdYPWtY1H7t8iJM
3zNwcF2bL1ZBYY6ac3KL8ItMq3hhw0erxo96WkM3FuF3/0PNKm+brcLj3nX5
XFaExScayvONmqyaW5/ThhNFOCzm94fxKm+tonNX98isLsIC03cvK9s0Wn3r
HqI35X4RehsH5xjLXljFbZ7Qu/e/RfjfAGBgZ8MXn/7va/p5Bf88fZ6CP49+
n4J/H12Pgq+HrlfB10vfR8Hfh76vgr8v3Q8F3w+6Xwq+X3Q/FXw/6X4D3296
HsDPg54X8POi5wn8POl5Az9vqgfgeqB6Aa4XqifgeqJ6A643qkfgeqR6Ba5X
qmfgeqZ6B653Og/A54HOC/B5ofMEfJ7ovAGfNzqPwOeRzivweaXzDHye6bwD
n3fqB8D9gPoFcL+gfgLcT6jfAPcb6kfA/Yj6FXC/on4G3M+o3wH3O+qHwP2Q
+iVwv6R+Cv/tp//pt8D9lvoxcD+mfg3cr6mfA/dz6vfA/Z7mAfA8oHkBPC9o
ngDPE5o3wPOG5hHwPKJ5BTyvaJ4BzzOad8DzjuYh8DykeQk8L2meAs9TmrfA
85bmMfA8pnkNPK9pngPPc5r3wPOe9gHgfYD2BeB9gfYJ4H2C9g3gfYP2EeB9
hPYV4H2F9hngfYb2HeB9h/Yh4H2I9iXgfYn2KeB9ivYt4H2L9jHgfYz2NeB9
jfY54H2O9j3gfY/2QeB9kPZF4H2R9kngfZL2TeB9k/ZR4H2U9lXgfZX2WeB9
lvZd4H2X9mHgfZj2ZeB9mfZp4H2a9m347779n30ceB+nfR14X6d9Hnifp30f
eN8nPQCsB0gvAOsF0hPAeoL0BrDeID0CrEdIrwDrFdIzwHqG9A6w3iE9BKyH
SC8B6yXSU8B6ivQWsN4iPQasx0ivAes10nPAeo70HrDeIz0IrAdJLwLrRdKT
wHqS9Caw3iQ9CqxHSa8C61XSs8B6lvQusN4lPQysh0kvA+tl0tPAepr0NrDe
Jj0OrMdJrwPrddLzwHqe9D6w3ic/ANgPIL8A2C8gPwHYTyC/AdhvID8C2I8g
vwLYryA/A9jPIL8D2O8gPwTYDyG/BNgvIT8F2E8hvwXYbyE/BtiPIb8G2K8h
PwfYzyG/B9jvIT8I2A8ivwjYLyI/CdhPIr8J2G8iPwrYjyK/CtivIj8L2M8i
vwvY7yI/DNgPI78M2C8jPw3YTyO/DdhvIz8O2I8jvw7YryM/D9jPI78P2O8j
PxDYDyS/ENgvJD8R2E8kvxHYbyQ/EtiPJL8S2K8kPxPYzyS/E9jvJD8U2A8l
vxTYLyU/FdhPJb8V2G8lPxbYjyW/FtivJT8X2M8lvxfY7yU/GNgPJr8Y2C8m
PxnYTya/GdhvJj8a2I8mvxrYryY/G9jPJr8b2O8mPxzYDye/HNgvJz8d2E8n
vx3Ybyc/HtiPJ78e2K8nPx/Yzye/H9jvpzwAOA+gvAA4L6A8AThPoLwBOG+g
PAI4j6C8AjivoDwDOM+gvAM476A8BDgPobwEOC+hPAU4T6G8BThvoTwGOI+h
vAY4r6E8BzjPobwHOO+hPAg4D6K8CDgvojwJOE+ivAk4b6I8CjiPorwKOK+i
PAs4z6K8CzjvojwMOA+jvAw4L6M8DThPo7wNOG+jPA44j6O8DjivozwPOM+j
vA8476M8EDgPpLwQOC+kPBE4T6S8EThvpDwSOI+kvBI4r6Q8EzjPpLwTOO+k
PBQ4D6W8FDgvpTwVOE+lvBU4b6U8FjiPpbwWOK+lPBc4z6W8FzjvpTwYOA+m
vBg4L6Y8GThPprwZOG+mPBo4j6a8GjivpjwbOM+mvBs476Y8HDgPp7wcOC+n
PB04T6e8HThvpzweOI+nvB44r6c8HzjPp7wfOO8nHgCYByBeAJgXIJ4AmCcg
3gCYNyAeAZhHIF4BmFcgngGYZyDeAZh3IB4CmIcgXgKYlyCeApinIN4CmLcg
HgOYxyBeA5jXIJ4DmOcg3gOY9yAeBJgHIV4EmBchngSYJyHeBJg3IR4FmEch
XgWYVyGeBZhnId4FmHchHgaYhyFeBpiXIZ4GmKch3gaYtyEeB5jHIV4HmNch
ngf+y/P8h/cB5n2IBwLmgYgXAuaFiCcC5omINwLmjYhHAuaRiFcC5pWIZwLm
mYh3AuadiIcC5qGIlwLmpYinAuapiLcC5q2IxwLmsYjXAua1iOcC5rmI9wLm
vYgHA+bBiBcD5sWIJwPmyYg3A+bNiEcD5tGIVwPm1YhnA+bZiHcD5t2IhwPm
4YiXA+bliKcD5umItwPm7YjHA+bxiNcD5vWI5wPm+Yj3A+b9iAcE5gGJFwTm
BYknBOYJiTcE5g2JRwTmEYlXBOYViWcE5hmJdwTmHYmHBOYhiZcE5iWJpwTm
KYm3BOYticcE5jGJ1wTmNYnnBOY5ifcE5j2JBwXmQYkXBeZFiScF5kmJNwXm
TYlHBeZRiVcF5lWJZwXmWYl3BeZdiYcF5mGJlwXmZYmnBeZpibcF5m2JxwXm
cYnXBeZ1iecF5nmJ9wXmfYkHBuaBiRcG5oWJJwbmiYk3BuaNiUcG5pGJVwbm
lYlnBuaZiXcG5p2JhwbmoYmXBualiacG5qmJtwbmrYnHBuaxidcG5rWJ5wbm
uYn3Bua9iQcH5sGJFwfmxYknB+bJiTcH5s2JRwfm0YlXB+bViWdXMM9OvLuC
eXfi4RXMwxMvr2Bennh6BfP0xNsrmLcnHl/BPD7x+grm9YnnVzDPT7y/gnn/
//3/Af4HT/ipDA==
                "]], {{{180.24614079582864`, 0.}, {0., -1.}}, {1., 0.}}]},
             
             ImageSizeCache->{{-508.7162388630859, 
              839.2749617428108}, {-730.6497699720051, 570.0952898380644}}],
            StyleBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"max\"", Bold, StripOnInput -> False], "999"}, {
                 StyleBox["\"75%\"", Bold, StripOnInput -> False], "780"}, {
                 StyleBox["\"median\"", Bold, StripOnInput -> False], "522"}, {
                 StyleBox["\"25%\"", Bold, StripOnInput -> False], "271"}, {
                 StyleBox["\"min\"", Bold, StripOnInput -> False], "4"}}, 
               GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
               AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, 
               GridBoxFrame -> {
                "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[
             Grid[{{
                Style["max", Bold], 999}, {
                Style["75%", Bold], 780}, {
                Style["median", Bold], 522}, {
                Style["25%", Bold], 271}, {
                Style["min", Bold], 4}}, Dividers -> {{
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}, {
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
              Frame -> GrayLevel[0], BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], {}], 
            "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0.8039430656936596, 4},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {{{1., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0], Selectable -> False], TraditionalForm], {0.008, 0}}, {
          0.8039430656936596, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0], Selectable -> False], TraditionalForm], {0, 0}}, {
          1.1960569343063403`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0], Selectable -> False], TraditionalForm], {0, 0}}}, {{
          1., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0], Selectable -> False], TraditionalForm], {0.008, 0}}, {
          0.8039430656936596, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0], Selectable -> False], TraditionalForm], {0, 0}}, {
          1.1960569343063403`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0], Selectable -> False], TraditionalForm], {0, 0}}}}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotLabel->FormBox["\"DistributionChart\"", TraditionalForm],
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{{{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0], Selectable -> False], TraditionalForm], {0.008, 0}}, {
         0.8039430656936596, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0], Selectable -> False], TraditionalForm], {0, 0}}, {
         1.1960569343063403`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0], Selectable -> False], TraditionalForm], {0, 0}}}, 
        Automatic}], {583.2, -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 222.49223594996212}], 
    InsetBox[
     GraphicsBox[{
       {Opacity[0], 
        PointBox[{{-0.19605693430634064`, -45.75}, {2.1960569343063403`, 
         1048.75}}]}, 
       {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         {RGBColor[0.982864, 0.7431472, 0.3262672], 
          TagBox[
           TooltipBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{0.8039430656936596, 780}, {
                  1.1960569343063403`, 780}, {1.1960569343063403`, 271}, {
                  0.8039430656936596, 271}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 LineBox[
                  NCache[{{1.1960569343063403`, 
                    Rational[1045, 2]}, {0.8039430656936597, 
                    Rational[1045, 2]}}, {{1.1960569343063403`, 522.5}, {
                   0.8039430656936597, 522.5}}]]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 LineBox[{{{1., 271}, {1., 4}}, {{1., 780}, {1., 999}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{1.0980284671531702`, 4}, {
                    0.9019715328468298, 4}}, {{1.0980284671531702`, 999}, {
                    0.9019715328468298, 999}}}]}, {}}]},
             
             ImageSizeCache->{{148.5857864376269, 
              187.4142135623731}, {-141.41421356237308`, \
-17.585786437626894`}}],
            StyleBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"max\"", Bold, StripOnInput -> False], "999"}, {
                 StyleBox["\"75%\"", Bold, StripOnInput -> False], "780"}, {
                 StyleBox["\"median\"", Bold, StripOnInput -> False], 
                 FractionBox["1045", "2"]}, {
                 StyleBox["\"25%\"", Bold, StripOnInput -> False], "271"}, {
                 StyleBox["\"min\"", Bold, StripOnInput -> False], "4"}}, 
               GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
               AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, 
               GridBoxFrame -> {
                "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[
             Grid[{{
                Style["max", Bold], 999}, {
                Style["75%", Bold], 780}, {
                Style["median", Bold], 
                Rational[1045, 2]}, {
                Style["25%", Bold], 271}, {
                Style["min", Bold], 4}}, Dividers -> {{
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}, {
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
              Frame -> GrayLevel[0], BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], {}], 
            "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0.7843373722630256, -45.75},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {{{1., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0], Selectable -> False], TraditionalForm], {0.008, 0}}, {
          0.8039430656936596, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0], Selectable -> False], TraditionalForm], {0, 0}}, {
          1.1960569343063403`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0], Selectable -> False], TraditionalForm], {0, 0}}}, {{
          1., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0], Selectable -> False], TraditionalForm], {0.008, 0}}, {
          0.8039430656936596, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0], Selectable -> False], TraditionalForm], {0, 0}}, {
          1.1960569343063403`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0], Selectable -> False], TraditionalForm], {0, 0}}}}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotLabel->FormBox["\"BoxWhiskerChart\"", TraditionalForm],
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{{{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0], Selectable -> False], TraditionalForm], {0.008, 0}}, {
         0.8039430656936596, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0], Selectable -> False], TraditionalForm], {0, 0}}, {
         1.1960569343063403`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0], Selectable -> False], TraditionalForm], {0, 0}}}, 
        Automatic}], {972., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{}, {{{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Dashing[Small], 
          LineBox[{{963.3115433191559, 999.}, {2987.3942307692305`, 
           999.}}]}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Dashing[{0, Small}], 
          LineBox[{{-3.2019230769230766`, 12.297247706421967`}, {
           963.3115433191559, 999.}}]}}, {{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          PointBox[CompressedData["
1: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
mdB+fZ5OJ7Rfz9Glg/r3StEg92MQ/wPPBzto
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{{}, 
        StyleBox[
         LineBox[{{-3.2019230769230766`, 12.297247706421967`}, {
          2987.3942307692305`, 3065.3633027522937`}}], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}]], StripOnInput -> False]},
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"QuantilePlot\"", TraditionalForm],
      PlotRange->{{0, 995.7980769230769}, {0, 999.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}},
      Ticks->{Automatic, Automatic}], {1360.8000000000002, -116.80842387373012},
      ImageScaled[{0.5, 0.5}], {359.9999999999998, 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->1000,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.706621126171322*^9},
 CellTags->{
  "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
   "QuantilePlot", 
   "PlotLabel"},ExpressionUUID->"6876c400-2067-45fc-a739-e16d39527bfb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Quantitative fitting", "Subsection",
 CellChangeTimes->{{3.7010110204613075`*^9, 3.7010110260287714`*^9}, 
   3.7011106702626143`*^9},ExpressionUUID->"6575cd52-546a-4f41-b6cc-\
ca7d80a2458b"],

Cell[TextData[{
 "Now let\[CloseCurlyQuote]s do a quantitative test. ",
 StyleBox[ButtonBox["DistributionFitTest",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DistributionFitTest"],
  FontWeight->"Bold"],
 " can be used to determine if your assumptions about the fairness of the \
lottery are reasonable."
}], "Text",
 CellChangeTimes->{{3.701782515115138*^9, 
  3.701782535747085*^9}},ExpressionUUID->"f4919ee7-bbe1-46bd-bbc6-\
6e723f37017d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ftTst", "=", " ", 
  RowBox[{"DistributionFitTest", "[", 
   RowBox[{"lotDat", ",", 
    RowBox[{"UniformDistribution", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "999"}], "}"}], "]"}], ",", 
    "\"\<HypothesisTestData\>\""}], "]"}]}]], "Input",
 CellTags->{
  "DistributionFitTest", 
   "UniformDistribution"},ExpressionUUID->"fc0b28c2-9cc1-4414-a1c8-\
be82a0db9e2d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HypothesisTestData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{15., {0., 15.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQvV+g6N7//+IHyh7/qMr9uMOO7VZyUp+w2IFfkzYn
Sh58Z/f9/5/PG/4KH7htIzfPZbOi/dT38+JNuIUOmB3ymyXb6m1/7+Zl7nol
gQMZNpuWcacV2C9yTOjercBzwDCs3j3VbqL9wyStzVbOHAccTwR7F91faV9i
6/ztoRDLgZ4iRasJkQfs90qxlOq/+b9ffvGd3Q7y5+2dHy5JlXP4sd/n3Lw9
E6Ku2T82OSa5+877/Ru23tpo2nHTfsmXDguHkAf75f3161YvvWYvNsdi39f5
C/f3Rm5wuMtywX7Rd151p+v37C+xnJ1uxHHQnsFk9Sara+/saywuavluXWtf
4Oz1SfLYd/seR+51+6ZPsjdi+tzx8+d/e4sDRVPXWhfZK/ruua11gdlhc3uy
xl9Wf/ur8RuuG3xjd9jltzUx46GivcH9SfKlV7kd4veWPWBI+2Q3J0h42Qlm
AQfhYtWiqpoddl+sTlXzCws56M1lWjdVvMpuQWRF+dd/wg7Ohid4Eh2t7BZJ
16e6i4g5TDt7qs1T4YMtNPwdPDeu6MsQWwLjH0jZLlQ6c4aNPSw+vI9XlDDK
BtjD4iPkrcf+e2ZJ8Pjov7jnbGJEETw+1r3m/37NpBEeH4eOZy+78rofHh/M
fWfi7PfPgsdHX6aSxfEXS+HxwWV2y7Ro8QZ4fLDO/HZputp2eHy0LHnA+J1z
Pzw+rtv/zTtudBgeH51P9674FnoMHh+acsv3TN1wAh4f5z4H3TdoPwmPj/X1
pobmp07A40O35vzB6K5j8PjYe9+N71nBYXh8NH4U7n/EvR8eHwEfWhe9Xbfd
HhYf7kcSN7h3bLCHxUfegdOy63cttYfFR7ef4ONnq2fbw+LDYUfsm8Un+u1h
8dFwaIvgx0+NMP4BBiiAyaPxccoDAAUJngM=
           "], {{{}, 
             {GrayLevel[0.5], AbsoluteThickness[1.5], Opacity[0.2], EdgeForm[
              None], GraphicsGroupBox[
               PolygonBox[{{1, 53, 54, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,
                 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2}}]]}, {}, 
             {GrayLevel[0.65], AbsoluteThickness[1.5], Opacity[0.2], EdgeForm[
              None], GraphicsGroupBox[
               PolygonBox[{{26, 51, 52, 50, 49, 48, 47, 46, 45, 44, 43, 42, 
                41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 
                27}}]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
             {GrayLevel[0.5], AbsoluteThickness[1.5], Opacity[1.], 
              LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
               17, 18, 19, 20, 21, 22, 23, 24, 25}]}, 
             {GrayLevel[0.65], AbsoluteThickness[1.5], Opacity[1.], 
              LineBox[{26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}]}}}],
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None, "AxesInFront" -> True},
          PlotRange->{All, All},
          PlotRangeClipping->True,
          PlotRangePadding->{{0, 0}, {0, 0.1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["DistributionFitTest",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"p-Value: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["0.4867243430604342`",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQvV+g6N7//+IHyh7/qMr9uMOO7VZyUp+w2IFfkzYn
Sh58Z/f9/5/PG/4KH7htIzfPZbOi/dT38+JNuIUOmB3ymyXb6m1/7+Zl7nol
gQMZNpuWcacV2C9yTOjercBzwDCs3j3VbqL9wyStzVbOHAccTwR7F91faV9i
6/ztoRDLgZ4iRasJkQfs90qxlOq/+b9ffvGd3Q7y5+2dHy5JlXP4sd/n3Lw9
E6Ku2T82OSa5+877/Ru23tpo2nHTfsmXDguHkAf75f3161YvvWYvNsdi39f5
C/f3Rm5wuMtywX7Rd151p+v37C+xnJ1uxHHQnsFk9Sara+/saywuavluXWtf
4Oz1SfLYd/seR+51+6ZPsjdi+tzx8+d/e4sDRVPXWhfZK/ruua11gdlhc3uy
xl9Wf/ur8RuuG3xjd9jltzUx46GivcH9SfKlV7kd4veWPWBI+2Q3J0h42Qlm
AQfhYtWiqpoddl+sTlXzCws56M1lWjdVvMpuQWRF+dd/wg7Ohid4Eh2t7BZJ
16e6i4g5TDt7qs1T4YMtNPwdPDeu6MsQWwLjH0jZLlQ6c4aNPSw+vI9XlDDK
BtjD4iPkrcf+e2ZJ8Pjov7jnbGJEETw+1r3m/37NpBEeH4eOZy+78rofHh/M
fWfi7PfPgsdHX6aSxfEXS+HxwWV2y7Ro8QZ4fLDO/HZputp2eHy0LHnA+J1z
Pzw+rtv/zTtudBgeH51P9674FnoMHh+acsv3TN1wAh4f5z4H3TdoPwmPj/X1
pobmp07A40O35vzB6K5j8PjYe9+N71nBYXh8NH4U7n/EvR8eHwEfWhe9Xbfd
HhYf7kcSN7h3bLCHxUfegdOy63cttYfFR7ef4ONnq2fbw+LDYUfsm8Un+u1h
8dFwaIvgx0+NMP4BBiiAyaPxccoDAAUJngM=
           "], {{{}, 
             {GrayLevel[0.5], AbsoluteThickness[1.5], Opacity[0.2], EdgeForm[
              None], GraphicsGroupBox[
               PolygonBox[{{1, 53, 54, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,
                 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2}}]]}, {}, 
             {GrayLevel[0.65], AbsoluteThickness[1.5], Opacity[0.2], EdgeForm[
              None], GraphicsGroupBox[
               PolygonBox[{{26, 51, 52, 50, 49, 48, 47, 46, 45, 44, 43, 42, 
                41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 
                27}}]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
             {GrayLevel[0.5], AbsoluteThickness[1.5], Opacity[1.], 
              LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
               17, 18, 19, 20, 21, 22, 23, 24, 25}]}, 
             {GrayLevel[0.65], AbsoluteThickness[1.5], Opacity[1.], 
              LineBox[{26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}]}}}],
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None, "AxesInFront" -> True},
          PlotRange->{All, All},
          PlotRangeClipping->True,
          PlotRangePadding->{{0, 0}, {0, 0.1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["DistributionFitTest",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"p-Value: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["0.4867243430604342`",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"CramerVonMises\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test statistic: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["0.1221649278743067`",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Data: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Univariate\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Conclusion: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              InterpretationBox[Cell["\<\
The null hypothesis that the data is distributed according to the \
UniformDistribution[{0, 999}] is not rejected at the 5 percent level based on \
the Cram\[EAcute]r\[Hyphen]von Mises test.\
\>",
                CellSize->{300, Automatic},ExpressionUUID->
                "a14df29c-f0a4-4fce-9fa5-5d69c73c7576"],
               TextCell[
               "The null hypothesis that the data is distributed according to \
the UniformDistribution[{0, 999}] is not rejected at the 5 percent level \
based on the Cram\[EAcute]r\[Hyphen]von Mises test.", 
                CellSize -> {300, Automatic}]],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  HypothesisTestData[DistributionFitTest, {CompressedData["
1:eJwtz81rzgEcAPCfl5X3XZg9o5jaRUlbyWrzjMtSComSZubxkuVl0TMHSWE7
LE6mlOYxqzWKjM3StqSIZcJhpT0UTTjgYGpKks/he/j8AZ/STNO2Y9OSJMkz
k1kUUkRxSLGUUlaE1ayhijQ1rGcHdewNhzgSTnCKC1wMl2gnRxc93OQW9xni
EU8Y5TVveccHJvjEd34yGX7xm/lyhRSRYjlllFNJFdWkQy2b2E49+zlII01k
aeYM52mljat0kAud3OA2d7hLL33084CHDDLMY56HEV4wHt7zkSn+8o+C6Uky
h7ksopgSVlER1lJJNWlq2cweGshwgONkaeZkOM05Wmilnct0cI0c10Mn3dyj
nwFGGWM85MMEn/kWfjDJFH8omJEks5nHAhaGxaQoYQnLKGMl5awjTQ0b2MgW
trKTXdSxm3oayLCPwxwly1laaONK6KKbHnrpY4BBhhjmKc8YCS95xRvGyPOF
r/wH3s9wyA==
    "], "SampleToNull", 1, 
    Rational[1, 20], {
     UniformDistribution[{0, 999}], Automatic}, Automatic, {}}, {
   "Normality" -> 0, "EqualVariance" -> 0, "Symmetry" -> 0}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.706621183012597*^9},
 CellTags->{
  "DistributionFitTest", 
   "UniformDistribution"},ExpressionUUID->"f495da2f-701e-4e75-b4ec-\
b6d9daf880cb"]
}, Open  ]],

Cell["Here are the properties available from the test.", "Text",
 CellChangeTimes->{
  3.7017825650246534`*^9},ExpressionUUID->"aa3ecdfe-60f3-4d2e-93e6-\
9a905128f41e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ftTst", "[", "\"\<Properties\>\"", "]"}]], "Input",ExpressionUUID->"b1d4adbb-13fe-4c6e-946e-bef1f752ebad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AllTests\"\>", ",", "\<\"AndersonDarling\"\>", 
   ",", "\<\"AutomaticTest\"\>", ",", "\<\"BaringhausHenze\"\>", 
   ",", "\<\"CramerVonMises\"\>", ",", "\<\"DegreesOfFreedom\"\>", 
   ",", "\<\"DistanceToBoundary\"\>", ",", "\<\"FittedDistribution\"\>", 
   ",", "\<\"FittedDistributionParameters\"\>", 
   ",", "\<\"HypothesisTestData\"\>", ",", "\<\"JarqueBeraALM\"\>", 
   ",", "\<\"KolmogorovSmirnov\"\>", ",", "\<\"Kuiper\"\>", 
   ",", "\<\"MardiaCombined\"\>", ",", "\<\"MardiaKurtosis\"\>", 
   ",", "\<\"MardiaSkewness\"\>", ",", "\<\"PearsonChiSquare\"\>", 
   ",", "\<\"Properties\"\>", ",", "\<\"PValue\"\>", 
   ",", "\<\"PValueTable\"\>", ",", "\<\"ShapiroWilk\"\>", 
   ",", "\<\"ShortTestConclusion\"\>", ",", "\<\"SzekelyEnergy\"\>", 
   ",", "\<\"TestConclusion\"\>", ",", "\<\"TestData\"\>", 
   ",", "\<\"TestDataTable\"\>", ",", "\<\"TestEntries\"\>", 
   ",", "\<\"TestStatistic\"\>", ",", "\<\"TestStatisticTable\"\>", 
   ",", "\<\"WatsonUSquare\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7066212134791155`*^9},ExpressionUUID->"9411ab7f-1bb7-407a-a487-\
6b197cb7f8ef"]
}, Open  ]],

Cell["The tests that are relevant for this particular case:", "Text",
 CellChangeTimes->{{3.7017825723217664`*^9, 3.7017825987198067`*^9}, 
   3.702139294606271*^9},ExpressionUUID->"1d0a1bdb-21f7-4d10-a62f-\
d94319d47630"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ftTst", "[", 
  RowBox[{"\"\<TestDataTable\>\"", ",", "All"}], "]"}]], "Input",
 CellChangeTimes->{{3.701620788468025*^9, 
  3.7016207908653603`*^9}},ExpressionUUID->"3016993c-2456-4636-a8b0-\
bfb3727fbe20"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\<\"Anderson\[Hyphen]Darling\"\>", "1.6294124906060006`", 
      "0.14841305756021672`"},
     {"\<\"Cram\[EAcute]r\[Hyphen]von Mises\"\>", "0.1221649278743067`", 
      "0.4867243430604342`"},
     {"\<\"Distance\[Hyphen]to\[Hyphen]Boundary\"\>", "0.03300548254676697`", 
      "0.965204035913414`"},
     {"\<\"Pearson \\!\\(\\*SuperscriptBox[\\(\[Chi]\\),\\(2\\)]\\)\"\>", 
      "9.660550458715596`", "0.9172383450935486`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.706621218364008*^9},ExpressionUUID->"6894c0de-feba-44b3-95c4-\
80ecd0b1c5dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"ftTst", "[", "\"\<ShortTestConclusion\>\"", "]"}], ",", 
       "\"\<Text\>\""}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"ftTst", "[", "\"\<TestConclusion\>\"", "]"}], ",", 
       "\"\<Text\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellTags->{
  "Column", "Style", 
   "Frame"},ExpressionUUID->"e701f0a8-0a9a-42dd-adda-a82f1a2f6bbc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Do not reject\"\>", "Text",
      StripOnInput->False]},
    {
     StyleBox[
      TemplateBox[{
       "\"The null hypothesis that \"",
        TemplateBox[{"\"the data is distributed according to the \"", 
          RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
              RowBox[{"0", ",", "999"}], "}"}], "]"}], "\" \""}, 
         "RowDefault"],"\"is not rejected at the \"",
        TemplateBox[{"5", "\" percent level \""}, "RowDefault"],
        TemplateBox[{
         "\"based on the \"", "\"Cram\[EAcute]r\[Hyphen]von Mises\"", 
          "\" test.\""}, "RowDefault"]},
       "RowDefault"], "Text",
      StripOnInput->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7066212197158175`*^9},
 CellTags->{
  "Column", "Style", 
   "Frame"},ExpressionUUID->"86a51d96-8953-4a5a-a38b-4ad450c4dca8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"3122510a-95ed-4290-8b10-c156d4feb9bd"],

Cell[CellGroupData[{

Cell["Fitting Data with No Prior Knowledge of the Distribution", "Section",
 CellChangeTimes->{{3.7009276831155105`*^9, 3.700927699954995*^9}, {
  3.701092781003353*^9, 3.7010927839310904`*^9}, {3.701190694133506*^9, 
  3.7011907624283905`*^9}, {3.7021435260682707`*^9, 
  3.7021435405232706`*^9}},ExpressionUUID->"83946ca4-bee7-4547-b20b-\
9c96c060dbd9"],

Cell["\<\
India has the fourth largest installed wind power capacity in the world and \
29% of India\[CloseCurlyQuote]s wind power come from Tamil Nadu, while the \
largest generation plant is at Kanyakumari whose Geographic coordinates are \
{8.73,77.7}.\
\>", "Text",
 CellChangeTimes->{
  3.701010702071081*^9, {3.701098111521795*^9, 3.7010981799537554`*^9}, {
   3.7010982409159217`*^9, 3.7010983009246597`*^9}, {3.701104416383812*^9, 
   3.7011044199091187`*^9}, {3.701104599809561*^9, 3.7011046574981155`*^9}, {
   3.701107997432572*^9, 3.701107998408327*^9}, {3.7011909910697055`*^9, 
   3.701190998509407*^9}, {3.701193038419842*^9, 3.701193062923031*^9}, {
   3.7017750748734937`*^9, 
   3.701775077201642*^9}},ExpressionUUID->"c8181add-1a61-4eac-922e-\
ccb6078f4cd1"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"GeoGraphics", "[", 
   RowBox[{
    RowBox[{"GeoMarker", "[", 
     TemplateBox[{"\"Kanyakumari\"",RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"Kanyakumari\"", ",", "\"TamilNadu\"", ",", 
               "\"India\""}], "}"}]}], "]"}],
       "\"Entity[\\\"City\\\", {\\\"Kanyakumari\\\", \\\"TamilNadu\\\", \
\\\"India\\\"}]\"","\"city\""},
      "Entity"], "]"}], ",", 
    RowBox[{"GeoRange", "\[Rule]", 
     TemplateBox[{"400","\"km\"","kilometers","\"Kilometers\""},
      "Quantity"]}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7017896225324535`*^9, 
  3.7017896264598274`*^9}},ExpressionUUID->"c38b315d-6946-4209-a103-\
99c9e39c25db"],

Cell["\<\
In this example we will try to fit the WindData to a parametric as well as \
non-parametric distribution, and find the probability that the wind speed is \
greater than the cut-off wind speed required to generate power. \
\>", "Text",
 CellChangeTimes->{
  3.7011930443616705`*^9, {3.701775035893521*^9, 
   3.701775044069112*^9}},ExpressionUUID->"5a3fc795-4b85-4a01-ae61-\
02fbf2391066"],

Cell[CellGroupData[{

Cell["Getting the data via WeatherData", "Subsection",
 CellChangeTimes->{{3.7011045595628614`*^9, 
  3.7011045679631004`*^9}},ExpressionUUID->"4944f52c-8eaa-4180-a2f8-\
5fef7519212c"],

Cell[TextData[{
 "In this example, information from ",
 StyleBox[ButtonBox["WeatherData",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/WeatherData"],
  FontWeight->"Bold"],
 " is used to investigate the feasibility of using wind to generate \
electricity for Kanyakumari"
}], "Text",
 CellChangeTimes->{
  3.572701094939999*^9, 3.572701133681587*^9, 3.572885751155064*^9, {
   3.5772055135208893`*^9, 3.577205529082736*^9}, {3.622302533207438*^9, 
   3.6223025427673683`*^9}, {3.6224581049336433`*^9, 3.622458120587368*^9}, {
   3.7017826315175548`*^9, 
   3.701782635670446*^9}},ExpressionUUID->"eba5df7d-dfa3-4cfc-92c0-\
a60739cd1faf"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"wndData", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{"WeatherData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"8.08", ",", "77.54"}], "}"}], ",", " ", 
      "\"\<MeanWindSpeed\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"Date", "[", "]"}], ",", "\"\<Day\>\""}], "}"}]}], "]"}], 
    "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.701023992902027*^9, 3.7010239940610266`*^9}, 
   3.7010290816779957`*^9, {3.7010983755266867`*^9, 3.7010983774006*^9}, 
   3.701104439038746*^9, {3.7017897279126334`*^9, 3.7017897313917303`*^9}},
 CellTags->{
  "TimeSeries", "WeatherData", 
   "Date"},ExpressionUUID->"4bbffebe-26db-43e4-b8c5-8d3be287a281"],

Cell["\<\
Let us visualize the data in Histograms for the PDF and CDF. \
\>", "Text",
 CellChangeTimes->{{3.701782657484477*^9, 
  3.7017826786608667`*^9}},ExpressionUUID->"d6817264-2c6d-4db0-9b95-\
5b1f90d5eb4d"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"histplotpdf", ",", "histplotcdf"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{
        RowBox[{"QuantityMagnitude", "@", "wndData"}], ",", "45", ",", 
        "\"\<PDF\>\"", ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<PDF\>\""}]}], "]"}], ",", 
      RowBox[{"Histogram", "[", 
       RowBox[{
        RowBox[{"QuantityMagnitude", "@", "wndData"}], ",", "45", ",", 
        "\"\<CDF\>\"", ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<CDF\>\""}]}], "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.701104448525875*^9, {3.7016208695461655`*^9, 3.7016208860086336`*^9}},
 CellTags->{
  "GraphicsRow", "QuantityMagnitude", "ImageSize", 
   "Large"},ExpressionUUID->"bd02f494-2991-482e-8692-8b74cc7f37d2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitting it to non-parametric distribution", "Subsection",
 CellChangeTimes->{{3.7011045724269104`*^9, 3.701104586897176*^9}, {
  3.701104716802459*^9, 
  3.701104721736637*^9}},ExpressionUUID->"71726a5c-3264-42ad-8957-\
14ef08306257"],

Cell[TextData[{
 "Since wind speed can be assumed to vary continuously, estimate a \
distribution for observations using the ",
 StyleBox[ButtonBox["SmoothKernelDistribution ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SmoothKernelDistribution"],
  FontWeight->"Bold"],
 "function.  Find an estimated distribution and visualize the results. This \
assumes the data comes from a continuous distribution."
}], "Text",
 CellChangeTimes->{{3.7017826948401933`*^9, 
  3.701782698011476*^9}},ExpressionUUID->"def20e05-93de-4f7d-bff8-\
47255a5ae6b9"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[ScriptCapitalD]", "e"], "=", 
  RowBox[{"SmoothKernelDistribution", "[", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"QuantityMagnitude", "@", 
      RowBox[{
       RowBox[{"Normal", "[", "wndData", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"_", "?", "NumericQ"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.701104456338564*^9},
 CellTags->{
  "SmoothKernelDistribution", "Cases", "Normal", 
   "NumericQ"},ExpressionUUID->"2f9f9c99-f0bd-4c4d-b949-8487f25d1dbc"],

Cell["\<\
Let us visualize how good the fit is and conclude it with a quantitative \
estimate. \
\>", "Text",
 CellChangeTimes->{{3.701782657484477*^9, 3.7017826786608667`*^9}, {
  3.701782721539009*^9, 
  3.701782749625435*^9}},ExpressionUUID->"2bfb6cff-720e-45cc-9d7a-\
d340b7ce76ab"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"histplotpdf", ",", "\[IndentingNewLine]", 
        RowBox[{"estplot", "=", " ", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{
             SubscriptBox["\[ScriptCapitalD]", "e"], ",", "x"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "25"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], ",", 
     RowBox[{"Show", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"histplotcdf", ",", "\[IndentingNewLine]", 
        RowBox[{"estplot", "=", " ", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"CDF", "[", 
            RowBox[{
             SubscriptBox["\[ScriptCapitalD]", "e"], ",", "x"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "25"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}]}]}], "}"}], 
      "\[IndentingNewLine]", "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7011045193152156`*^9, 
  3.7011045207079334`*^9}},ExpressionUUID->"b32364df-e26c-4b3b-b67e-\
243c37b0254d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tstData", "=", 
   RowBox[{"DistributionFitTest", "[", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"QuantityMagnitude", "@", 
        RowBox[{
         RowBox[{"Normal", "[", "wndData", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"_", "?", "NumericQ"}]}], "]"}], ",", 
     SubscriptBox["\[ScriptCapitalD]", "e"], ",", 
     "\"\<HypothesisTestData\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tstData", "[", 
  RowBox[{"\"\<TestDataTable\>\"", ",", " ", "All"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7011045364747324`*^9},ExpressionUUID->"f5e5db8c-0993-41fa-868d-\
728d8c65e0e3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitting to parametric distributions", "Subsection",
 CellChangeTimes->{{3.7011046615699186`*^9, 3.701104670241894*^9}, {
  3.7011047252568555`*^9, 
  3.7011047271609364`*^9}},ExpressionUUID->"ca2a8df5-f63b-4228-a443-\
436714aca099"],

Cell[TextData[{
 "An alternate approach would be to fit it to known parametric distributions \
using ",
 StyleBox[ButtonBox["FindDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindDistribution"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.701783148638915*^9, 3.7017832042945414`*^9}, {
  3.702139415295271*^9, 
  3.7021394187112703`*^9}},ExpressionUUID->"14b91954-87cd-4abd-8db2-\
018746f74ec3"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[ScriptCapitalD]", "p"], "=", 
  RowBox[{"FindDistribution", "[", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"QuantityMagnitude", "@", 
      RowBox[{
       RowBox[{"Normal", "[", "wndData", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"_", "?", "NumericQ"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7010110709507256`*^9, 3.7010110985665903`*^9}, {
   3.701028905086996*^9, 3.7010289061229963`*^9}, {3.7010291143209963`*^9, 
   3.701029119374996*^9}, 3.7011044777783084`*^9},
 CellTags->
  "FindDistribution",ExpressionUUID->"49f6bc1b-0894-4197-bea4-0eb8f54cc8f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tstData", "=", 
   RowBox[{"DistributionFitTest", "[", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"QuantityMagnitude", "@", 
        RowBox[{
         RowBox[{"Normal", "[", "wndData", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"_", "?", "NumericQ"}]}], "]"}], ",", 
     SubscriptBox["\[ScriptCapitalD]", "p"], ",", 
     "\"\<HypothesisTestData\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tstData", "[", 
  RowBox[{"\"\<TestDataTable\>\"", ",", " ", "All"}], "]"}]}], "Input",
 CellChangeTimes->{3.7010291406489964`*^9, 
  3.701104485861699*^9},ExpressionUUID->"a991fb35-cd1a-4fd2-b534-\
1b532d108331"],

Cell["Let us visualize how good the fit. ", "Text",
 CellChangeTimes->{{3.701783228676776*^9, 
  3.701783244932602*^9}},ExpressionUUID->"7ddfd2b3-951f-465b-99b8-\
fb240db8ec3e"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"histplotpdf", ",", "\[IndentingNewLine]", 
        RowBox[{"estplot", "=", " ", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{
             SubscriptBox["\[ScriptCapitalD]", "p"], ",", "x"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "25"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], ",", 
     RowBox[{"Show", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"histplotcdf", ",", "\[IndentingNewLine]", 
        RowBox[{"estplot", "=", " ", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"CDF", "[", 
            RowBox[{
             SubscriptBox["\[ScriptCapitalD]", "p"], ",", "x"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "25"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}]}]}], "}"}], 
      "\[IndentingNewLine]", "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7011045016946115`*^9, 
  3.701104504580289*^9}},ExpressionUUID->"3f48d237-cde1-4366-bad4-\
fe88eb79c43d"],

Cell["\<\
Let us now find out what is the probability of wind speeds greater than the \
cut-off wind speed that is approximately 12 km/h.\
\>", "Text",
 CellChangeTimes->{{3.7017750511608753`*^9, 3.7017751149533415`*^9}, {
  3.7021394270062704`*^9, 
  3.7021394271022706`*^9}},ExpressionUUID->"a0fd9327-9048-4789-966d-\
697ee6432b9e"],

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"x", ">", "12.0"}], ",", 
   RowBox[{"x", "\[Distributed]", 
    SubscriptBox["\[ScriptCapitalD]", "p"]}]}], "]"}]], "Input",ExpressionUUID\
->"c01b9a4a-fd9b-4142-b3c6-dd7da090a47f"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"00a429ee-9d6b-44fe-b72f-8b797a4fa16e"],

Cell[CellGroupData[{

Cell["Linear Models", "Section",
 CellChangeTimes->{{3.700226537933625*^9, 3.7002265470444884`*^9}, {
  3.7002268594728513`*^9, 3.7002268614089303`*^9}, {3.7010928338987513`*^9, 
  3.7010928367711754`*^9}},ExpressionUUID->"2a2cecd0-0da5-4c4e-885b-\
3a4c8bb5957d"],

Cell[TextData[{
 "LinearModelFit produces a linear model of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     OverscriptBox[
      StyleBox["y", "TI"], "^"], "TI"], "=", 
    RowBox[{
     SubscriptBox["\[Beta]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Beta]", "1"], 
      SubscriptBox["f", "1"]}], "+", 
     RowBox[{
      SubscriptBox["\[Beta]", "2"], 
      SubscriptBox["f", "2"]}], "+", 
     StyleBox["\[Ellipsis]", "TR"]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"26f8c1df-1211-4d8e-acab-c3a5fff7e8a3"],
 " under the assumption that the original ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "9f8e67ae-14f6-49dd-9030-09fc4d636546"],
 " are independent normally distributed with mean ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox[
     OverscriptBox[
      StyleBox["y", "TI"], "^"], "TI"], "i"], TraditionalForm]], "InlineMath",
  ExpressionUUID->"6e4bf699-028e-487b-ab5c-14cdaf4516ab"],
 " and common standard deviation. "
}], "Text",
 CellChangeTimes->{{3.7011929644240627`*^9, 
  3.701192976555326*^9}},ExpressionUUID->"a45bc7d5-9959-4e51-8ccb-\
f7d5c4772545"],

Cell["\<\
In this example we are going to fetch the population and GDP of India from \
the Wolfram Data resources and then do analysis on the GDP per capita for the \
more recent years. \
\>", "Text",
 CellChangeTimes->{{3.7011929975943036`*^9, 3.7011930206355476`*^9}, {
   3.7017711064050026`*^9, 3.701771182035735*^9}, {3.7017748590855846`*^9, 
   3.7017748625888677`*^9}, 
   3.702139450302271*^9},ExpressionUUID->"901ae659-ed63-4223-a42a-\
5ff2a0d4fba3"],

Cell[CellGroupData[{

Cell["Data manipulation", "Subsection",
 CellChangeTimes->{{3.7003926989164705`*^9, 3.7003927031876993`*^9}, 
   3.7003927504221783`*^9, 3.701110661815849*^9, {3.701622923010257*^9, 
   3.7016229247215114`*^9}},ExpressionUUID->"1c4303d4-dec8-45bf-b28c-\
c2b15406b37a"],

Cell["\<\
Let us obtain the population of India for the last 5 decades The population \
data returns as a TimeSeries object and the use of Normal returns the data in \
the form of a list.\
\>", "Text",
 CellChangeTimes->{{3.7017712136442127`*^9, 3.7017712843048253`*^9}, {
   3.7017732735573316`*^9, 3.7017732946029396`*^9}, 
   3.7021394632282705`*^9},ExpressionUUID->"a577a4b8-905d-4873-8c9b-\
0cd002370759"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"popdat", "=", 
   RowBox[{"Normal", "@", 
    RowBox[{"EntityValue", "[", 
     RowBox[{
      RowBox[{"Entity", "[", 
       RowBox[{"\"\<Country\>\"", ",", "\"\<India\>\""}], "]"}], ",", 
      RowBox[{"EntityProperty", "[", 
       RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
          RowBox[{"Interval", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"DateObject", "[", 
              RowBox[{
               RowBox[{"{", "1967", "}"}], ",", "\"\<Year\>\"", ",", 
               "\"\<Gregorian\>\"", ",", 
               RowBox[{"-", "5."}]}], "]"}], ",", 
             RowBox[{"DateObject", "[", 
              RowBox[{
               RowBox[{"{", "2017", "}"}], ",", "\"\<Year\>\"", ",", 
               "\"\<Gregorian\>\"", ",", 
               RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
       "]"}]}], "]"}]}]}], "*)"}]], "Input",ExpressionUUID->"47fb1c49-b14f-\
43d9-812f-0edc7c624989"],

Cell[TextData[{
 "Since the time series data has a quantity, we just convert it to the \
numbers using ",
 StyleBox[ButtonBox["QuantityMagnitude",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/QuantityMagnitude"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " and convert the date objects to the corresponding year so that it can be \
fed into the ",
 StyleBox[ButtonBox["LinearModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinearModelFit"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.701771287688732*^9, 3.701771296473937*^9}, {
  3.7017713649357357`*^9, 3.701771411111709*^9}, {3.701771781400614*^9, 
  3.70177185370356*^9}, {3.701783284308338*^9, 3.7017833264232903`*^9}, {
  3.7021394681482706`*^9, 
  3.7021394694842706`*^9}},ExpressionUUID->"e6c9ce74-9de5-4551-9632-\
1ce67cfeac70"],

Cell[BoxData[
 RowBox[{"Pop", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1966", "+", "i"}], ",", 
      RowBox[{"QuantityMagnitude", "@", 
       RowBox[{"popdat", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "popdat", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.701622883816224*^9, 3.7016228850473022`*^9}, 
   3.7017710993744345`*^9, 3.7017714148154926`*^9, {3.701771772805915*^9, 
   3.7017717757125907`*^9}},
 CellTags->"Length",ExpressionUUID->"929655d3-eae6-41ab-a6a1-047db4f861f5"],

Cell["\<\
Let us visualize the growth in the population, which seems to be very linear.\
\>", "Text",
 CellChangeTimes->{{3.701771894896352*^9, 3.7017719442065716`*^9}, {
  3.7017833555129385`*^9, 
  3.701783359627804*^9}},ExpressionUUID->"f41e7a78-405e-46bd-a49c-\
0d629dabcea3"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Pop", ",", " ", 
   RowBox[{"Joined", "\[Rule]", " ", "False"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701771878375718*^9, 3.7017718890248404`*^9}},
 CellTags->{
  "ListPlot", 
   "NumericQ"},ExpressionUUID->"31b2b37f-0384-40d5-b69c-eaf5c88518b9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitting a linear model", "Subsection",
 CellChangeTimes->{{3.7003927097560167`*^9, 3.7003927138197217`*^9}, 
   3.7003927583310523`*^9, {3.7011106559994555`*^9, 
   3.701110658120042*^9}},ExpressionUUID->"f0196a9c-721e-46c4-a869-\
680661a2ca56"],

Cell["\<\
Let us fit the data to a linear model, and then visualize the fit to see if \
there is any variability unaccounted for:\
\>", "Text",
 CellChangeTimes->{{3.70177202434719*^9, 3.701772059315567*^9}, {
  3.7017796903692193`*^9, 
  3.7017796972552543`*^9}},ExpressionUUID->"47cfea07-5c51-487e-a40f-\
220f20f7263d"],

Cell[BoxData[
 RowBox[{"popfit", "=", " ", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"Pop", ",", "t", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7017719623414373`*^9, 3.70177197078275*^9}, {
  3.7017721631066647`*^9, 3.701772164937503*^9}},
 CellTags->
  "LinearModelFit",ExpressionUUID->"154b6dee-7213-477a-9a14-c29acd9f32a0"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"Pop", ",", 
     RowBox[{"Joined", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"popfit", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1967", ",", "2017"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7017719980758386`*^9, 3.7017720145593395`*^9}, {
  3.7017721702114353`*^9, 
  3.7017721717765646`*^9}},ExpressionUUID->"ee2c32ff-85d1-42c1-b82e-\
a8054415cb84"],

Cell["\<\
Obtain the available properties related to the LinearModelFit and evaluate a \
few of them.\
\>", "Text",
 CellChangeTimes->{{3.7017745460027847`*^9, 3.701774555580078*^9}, {
   3.7017746110174866`*^9, 3.7017746202338257`*^9}, {3.701774738671604*^9, 
   3.701774741615384*^9}, 3.701779710493414*^9, {3.7017835089589643`*^9, 
   3.701783522918831*^9}, {3.7021394779872704`*^9, 
   3.7021394782512703`*^9}},ExpressionUUID->"6e01e5fa-035c-4e96-966b-\
ebd6b93adac9"],

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"NiceTable", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"#", ",", "14", ",", "\"\<Text\>\""}], "]"}], "&"}], "/@", 
     RowBox[{"popfit", "[", "\"\<Properties\>\"", "]"}]}], "]"}], ",", 
   RowBox[{"RoundingRadius", "\[Rule]", " ", "12"}], ",", 
   RowBox[{"FrameMargins", "\[Rule]", " ", "15"}]}], "]"}]], "Input",
 CellChangeTimes->{3.701774711672304*^9},
 CellTags->{
  "Framed", "FrameMargins", 
   "RoundingRadius"},ExpressionUUID->"6fc74155-8238-4d03-ab77-1123d3a11f7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"popfit", "[", "\"\<ANOVATable\>\"", "]"}], ",", 
   RowBox[{"popfit", "[", "\"\<AdjustedRSquared\>\"", "]"}], ",", 
   RowBox[{"popfit", "[", "\"\<AICc\>\"", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7017833967095485`*^9, 
  3.7017834945379*^9}},ExpressionUUID->"72d1f9f3-2ea7-4d8d-8483-8ff909255d46"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitting several models ", "Subsection",
 CellChangeTimes->{{3.7003927239293933`*^9, 
  3.7003927448514996`*^9}},ExpressionUUID->"641b1668-8434-454a-8cf8-\
b70cd05fd1ba"],

Cell["\<\
Fit multiple models simultaneously with different polynomial degrees in time:\
\>", "Text",
 CellChangeTimes->{{3.701772125945508*^9, 3.70177215873713*^9}, {
   3.70177219492066*^9, 3.7017721954430766`*^9}, {3.7017797168817577`*^9, 
   3.7017797183632207`*^9}, 
   3.7021394862672706`*^9},ExpressionUUID->"5290ff33-26de-42b5-84e3-\
d5fe2b69ed39"],

Cell[BoxData[
 RowBox[{"multiFit", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"LinearModelFit", "[", 
     RowBox[{"Pop", ",", "basis", ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"basis", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        SuperscriptBox["t", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "2"}], "]"}]], ",", 
        SuperscriptBox["t", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "4"}], "]"}]], ",", 
        SuperscriptBox["t", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "5"}], "]"}]], ",", 
        SuperscriptBox["t", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "6"}], "]"}]], ",", 
        SuperscriptBox["t", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "7"}], "]"}]]}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.701772175738029*^9, 3.7017721834574094`*^9}, {
  3.7017888920755987`*^9, 
  3.7017888924185333`*^9}},ExpressionUUID->"c4f1bbb5-20d1-4e70-bda7-\
48e4c560ca2d"],

Cell["\<\
Obtain the relevant statistics for the fitted model and compare the fitted \
models:\
\>", "Text",
 CellChangeTimes->{{3.701772206928371*^9, 3.7017722134025054`*^9}, {
  3.701772305551622*^9, 3.7017723171361446`*^9}, {3.701772691085104*^9, 
  3.701772694181243*^9}, {3.701779722603941*^9, 
  3.701779724028209*^9}},ExpressionUUID->"12a92061-3a46-4e6f-9f56-\
9eb3321a44cf"],

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{"multiFit", "[", "\"\<AdjustedRSquared\>\"", "]"}], "]"}]], "Input",
 CellTags->
  "AdjustedRSquared",ExpressionUUID->"c7ec3570-121f-4b5c-986c-6b497b342980"],

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{"multiFit", "[", "\"\<AIC\>\"", "]"}], "]"}]], "Input",
 CellTags->"AIC",ExpressionUUID->"76d82340-4cd3-42c0-ad31-4c5c4b19fb91"]
}, Closed]],

Cell[CellGroupData[{

Cell["GDP per capita fit", "Subsection",
 CellChangeTimes->{{3.701773220499242*^9, 3.7017732267016244`*^9}, {
  3.701774846446206*^9, 
  3.701774851391302*^9}},ExpressionUUID->"815e079a-66a8-4a7f-9c2b-\
e20150b2840e"],

Cell["\<\
Analyzing the GDP Per Capita for India since 2000\[CloseCurlyQuote]s post the \
1990\[CloseCurlyQuote]s economic depression.\
\>", "Text",
 CellChangeTimes->{{3.7017732299231243`*^9, 3.7017732656033506`*^9}, {
  3.701779732984062*^9, 
  3.7017797449800296`*^9}},ExpressionUUID->"143727c0-b8e1-4501-a434-\
37177ebf4afd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"GDP", "=", 
    RowBox[{"Normal", "@", 
     RowBox[{"EntityValue", "[", 
      RowBox[{
       RowBox[{"Entity", "[", 
        RowBox[{"\"\<Country\>\"", ",", "\"\<India\>\""}], "]"}], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<Country\>\"", ",", "\"\<GDP\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
           RowBox[{"Interval", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DateObject", "[", 
               RowBox[{
                RowBox[{"{", "2000", "}"}], ",", "\"\<Year\>\"", ",", 
                "\"\<Gregorian\>\"", ",", 
                RowBox[{"-", "5."}]}], "]"}], ",", 
              RowBox[{"DateObject", "[", 
               RowBox[{
                RowBox[{"{", "2015", "}"}], ",", "\"\<Year\>\"", ",", 
                "\"\<Gregorian\>\"", ",", 
                RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
        "]"}]}], "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Pop2000", "=", 
    RowBox[{"Normal", "@", 
     RowBox[{"EntityValue", "[", 
      RowBox[{
       RowBox[{"Entity", "[", 
        RowBox[{"\"\<Country\>\"", ",", "\"\<India\>\""}], "]"}], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
           RowBox[{"Interval", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DateObject", "[", 
               RowBox[{
                RowBox[{"{", "2000", "}"}], ",", "\"\<Year\>\"", ",", 
                "\"\<Gregorian\>\"", ",", 
                RowBox[{"-", "5."}]}], "]"}], ",", 
              RowBox[{"DateObject", "[", 
               RowBox[{
                RowBox[{"{", "2015", "}"}], ",", "\"\<Year\>\"", ",", 
                "\"\<Gregorian\>\"", ",", 
                RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
        "]"}]}], "]"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7017730122011366`*^9, 3.7017730169075603`*^9}, {
  3.701773458233071*^9, 3.701773462657734*^9}, {3.7017748169974627`*^9, 
  3.7017748301050873`*^9}},ExpressionUUID->"9ab88302-2e5f-4278-bdde-\
01d73de3cfe2"],

Cell[BoxData[
 RowBox[{"GDPperCapita", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "+", "1999"}], ",", 
      RowBox[{
       RowBox[{"QuantityMagnitude", "@", 
        RowBox[{"GDP", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "/", 
       RowBox[{"QuantityMagnitude", "@", 
        RowBox[{"Pop2000", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "GDP", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.701773393353733*^9, {3.7017735391417484`*^9, 3.7017735512336826`*^9}},
 CellTags->"Length",ExpressionUUID->"497f99bc-b294-4af1-84b9-42a8fe383763"],

Cell[BoxData[
 RowBox[{"GDPperCapitafit", "=", " ", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"GDPperCapita", ",", 
    SuperscriptBox["t", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "3"}], "]"}]], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.701773638011853*^9, 3.701773660244567*^9}, 
   3.7017738117867785`*^9},ExpressionUUID->"a1cbfeee-1cb4-49c3-8bb9-\
8dc2e49ae549"],

Cell["Plot the fit to the actual data:", "Text",
 CellChangeTimes->{{3.7017797619298477`*^9, 3.701779770532638*^9}, 
   3.7021394938662705`*^9},ExpressionUUID->"23ebd654-0740-4a6b-a9e0-\
8d22d4cec718"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"GDPperCapita", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"GDPperCapitafit", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "2000", ",", " ", "2015"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701773678867749*^9, 3.701773697706502*^9}, {
  3.7017741810750437`*^9, 3.7017741869134593`*^9}, {3.7017742245147333`*^9, 
  3.7017742456916876`*^9}},ExpressionUUID->"819cedf5-4850-470b-86d6-\
555f5ba29039"],

Cell["Plot the Residuals and Cook\[CloseCurlyQuote]s Distance of the best \
fit:", "Text",
 CellChangeTimes->{{3.701773856705379*^9, 3.701773863225628*^9}, {
   3.7017740606841*^9, 3.701774070583214*^9}, {3.701779753399268*^9, 
   3.701779754542698*^9}, 
   3.7021394968182707`*^9},ExpressionUUID->"309ccbaa-da24-4274-9944-\
50e423242184"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"GDPperCapitafit", "[", "\"\<FitResiduals\>\"", "]"}], ",", 
       RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Residuals\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"GDPperCapitafit", "[", "\"\<CookDistances\>\"", "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
       RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Cook's Distances\>\""}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7017738685256352`*^9, 3.7017740537257233`*^9}, {
  3.701774142847085*^9, 3.7017741608104954`*^9}, {3.7017741993703628`*^9, 
  3.7017742141935043`*^9}},
 CellTags->{
  "Residuals", 
   "Cook's Distances"},ExpressionUUID->"2b93b195-d959-4def-b423-0d77e1564810"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"43459988-ab8d-47bc-9127-7c3aa1659152"],

Cell[CellGroupData[{

Cell["Nonlinear Model Fit", "Section",
 CellChangeTimes->{{3.7003953636438746`*^9, 
  3.700395374963683*^9}},ExpressionUUID->"cf8f0ae4-5f04-45ae-b699-\
5a0685192a45"],

Cell["\<\
Linear models are fitted using linear algebra, a process that is, in most \
cases, robust and fast. Nonlinear models, on the other hand, require the \
construction of a merit function and then minimizing the merit function based \
on varying a set of parameters present in the model. This process can be slow \
and often requires more attention on the part of the statistician.\
\>", "Text",
 CellChangeTimes->{
  3.7003953941873665`*^9},ExpressionUUID->"8d12d5be-f194-40a2-8e96-\
ec8ffb408264"],

Cell["\<\
In this example, we will import a file that contains data on total production \
from different sources of energy for the year 2010. We will look at the \
renewable energy sources and try to find a relationship that defines the \
growth in the production of renewable sources over the time. For convenience \
the data cleaning is done in the initialization cells, which is present at \
the end of the notebook.\
\>", "Text",
 CellChangeTimes->{{3.7011075815572667`*^9, 3.7011076536256943`*^9}, {
  3.7011077015723944`*^9, 3.7011077675298653`*^9}, {3.7011080306976757`*^9, 
  3.701108031265195*^9}, {3.7016232383647976`*^9, 3.701623265643396*^9}, {
  3.702139538184271*^9, 
  3.7021395384562707`*^9}},ExpressionUUID->"096837a7-f6cf-40e5-86ba-\
2120b18ac7d1"],

Cell[CellGroupData[{

Cell["Fitting a nonlinear model", "Subsection",
 CellChangeTimes->{{3.7003927097560167`*^9, 3.7003927138197217`*^9}, 
   3.7003927583310523`*^9, {3.7008218114730673`*^9, 3.7008218135383515`*^9}, {
   3.701110690639105*^9, 
   3.701110692894101*^9}},ExpressionUUID->"0f0bf8c7-a1fa-488e-af61-\
7bd325e23fbe"],

Cell["First let us visualize the data we imported:", "Text",
 CellChangeTimes->{{3.701623352334812*^9, 3.7016233663986883`*^9}, 
   3.702139552639271*^9},ExpressionUUID->"aa6f2b5b-374d-415f-8b9b-\
17aac9bd682c"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"elecdata", ",", 
   RowBox[{"Mesh", "\[Rule]", " ", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.70162332106483*^9, 
  3.701623336287741*^9}},ExpressionUUID->"c765c27a-c341-4a8b-862a-\
635a00a8951e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "c", ",", "t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"model", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"elecdata", ",", 
    RowBox[{"a", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"t", "-", "c"}], ")"}]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1990"}], "}"}]}], "}"}], ",", "t"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.701623290717334*^9, {3.7021395915772705`*^9, 3.7021396093982706`*^9}},
 CellTags->
  "NonlinearModelFit",ExpressionUUID->"f1d7a573-827c-4f83-94f1-ec12b178794e"],

Cell[BoxData[
 RowBox[{"model", "[", "\"\<BestFit\>\"", "]"}]], "Input",
 CellTags->"BestFit",ExpressionUUID->"90b18361-f2ea-4087-9aaa-97e2ccc426b4"],

Cell["The fit appears to be a good one.", "Text",
 CellChangeTimes->{{3.574506892772797*^9, 
  3.5745069074086447`*^9}},ExpressionUUID->"990061cb-cfec-4483-8722-\
9dfa904b049e"],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"model", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1993.5", ",", "2008.5"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Pink", ",", "Thick"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"elecdata", ",", 
     RowBox[{"Mesh", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", " ", "Automatic"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.574506628554311*^9, 3.574506635368815*^9}, {
   3.5745067094473867`*^9, 3.574506710071299*^9}, {3.574506762790502*^9, 
   3.574506764324902*^9}, 3.7011078410149817`*^9, 3.701623307922374*^9},
 CellTags->{
  "ListLinePlot", 
   "PlotMarkers"},ExpressionUUID->"51a7e33b-7669-416d-807e-9e366de41d9d"],

Cell[TextData[{
 "Because you are using a nonlinear model here, the property list is shorter \
than with ",
 StyleBox[ButtonBox["LinearModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinearModelFit"],
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.5745069308320312`*^9, 3.5745069429116583`*^9}, {
   3.574507008272293*^9, 3.574507065669055*^9}, 3.577206094637684*^9, 
   3.580041463534367*^9, {3.6322351231184397`*^9, 3.632235140367235*^9}, {
   3.702139558479271*^9, 
   3.7021395597512703`*^9}},ExpressionUUID->"b276549d-4be3-446a-afb1-\
f8b967e3f720"],

Cell[BoxData[
 RowBox[{"NiceTable", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"#", ",", "12", ",", "\"\<Text\>\""}], "]"}], "&"}], "/@", 
   RowBox[{"model", "[", "\"\<Properties\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5745069451286697`*^9, 3.574506957072156*^9}, {
  3.574674040529702*^9, 
  3.574674072376213*^9}},ExpressionUUID->"a25a6d00-5668-45d3-b981-\
72c1b6721c1f"],

Cell[BoxData[
 RowBox[{"model", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<ANOVATable\>\"", ",", "\"\<FitCurvatureTable\>\"", ",", 
    "\"\<ParameterBias\>\"", ",", "\"\<AICc\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.574507077914085*^9, 3.574507114860363*^9}, {
  3.574507186523142*^9, 3.574507193114949*^9}, {3.5746739505549803`*^9, 
  3.5746739610026197`*^9}, {3.575040871954615*^9, 3.5750408758828278`*^9}},
 CellTags->{
  "ANOVATable", "FitCurvatureTable", "ParameterBias", 
   "AICc"},ExpressionUUID->"5b21b25c-e021-44e2-97df-f67950dbb91d"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"7c81f184-928a-4b31-8b23-7e9ae53f19e0"],

Cell[CellGroupData[{

Cell["Generalized Linear Models", "Section",
 CellChangeTimes->{{3.7008219093637915`*^9, 
  3.7008219138435364`*^9}},ExpressionUUID->"e5bc71a7-117d-4891-9e79-\
95d8ebc80eba"],

Cell[TextData[{
 "Generalized linear models are a family of regression models, with the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     OverscriptBox[
      StyleBox["y", "TI"], "^"], "TI"], "\[LongEqual]", 
    RowBox[{
     SuperscriptBox["g", 
      RowBox[{"-", "1"}]], "(", 
     RowBox[{
      SubscriptBox["\[Beta]", "0"], "+", 
      RowBox[{
       SubscriptBox["\[Beta]", "1"], 
       SubscriptBox["x", "1"]}], "+", 
      RowBox[{
       SubscriptBox["\[Beta]", "2"], 
       SubscriptBox["x", "2"]}], "+", 
      StyleBox["\[Ellipsis]", "TR"]}], 
     StyleBox[")", "TR"]}]}], TraditionalForm]],ExpressionUUID->
  "985414e6-5a74-482d-b8bd-89906fd11332"],
 " and the Wolfram Language has a built-in framework, ",
 StyleBox[ButtonBox["GeneralizedLinearModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/GeneralizedLinearModelFit"],
  FontWeight->"Bold"],
 ", for working with such problems. Other than the two components we briefly \
discussed before for simple regression problems, the independent terms (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "2739991d-6e31-4abd-ac7c-7e908dc91aa0"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "f354a61f-d0d6-4a57-a17e-4b8c8d6642f6"],
 "...), and the response variable (",
 Cell[BoxData[
  FormBox[
   StyleBox[
    OverscriptBox[
     StyleBox["y", "TI"], "^"], "TI"], TraditionalForm]],ExpressionUUID->
  "4aa641f4-7950-4ec4-9545-9d2a3d1c53c7"],
 "), we have the link function (g) which specifies how the expected values of \
the response related to a linear change in the independent variables. \n\n\
Depending on the ",
 StyleBox[ButtonBox["LinkFunction, ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinkFunction"],
  FontWeight->"Bold"],
 "different models of regression can be created:\n\n",
 Cell[BoxData[
  TagBox[GridBox[{
     {"\<\"Link\"\>", "\<\"Regression Type\"\>"},
     {"Identity", 
      InterpretationBox[Cell[
       "Simple Linear Regression",ExpressionUUID->
        "33a3518f-1023-4af0-aa8d-34b65d75e33e"],
       TextCell[
       "Simple Linear Regression", ExpressionUUID -> 
        "6bd04cb8-ab8d-46fc-a0ee-ed2febf46b25"]]},
     {"Logit", 
      InterpretationBox[Cell[
       "Logistic Regression",ExpressionUUID->
        "3845a169-2923-4b5c-b92b-be47b567d704"],
       TextCell[
       "Logistic Regression", ExpressionUUID -> 
        "6bd04cb8-ab8d-46fc-a0ee-ed2febf46b25"]]},
     {"Log", 
      InterpretationBox[Cell[
       "Poisson Regression",ExpressionUUID->
        "0463c858-2085-42dc-9747-c18e6d70668c"],
       TextCell[
       "Poisson Regression", ExpressionUUID -> 
        "6bd04cb8-ab8d-46fc-a0ee-ed2febf46b25"]]},
     {"Reciprocal", 
      InterpretationBox[Cell[
       "Gamma Regression",ExpressionUUID->
        "bfbb60c6-7389-4b7f-837e-0864383d649f"],
       TextCell[
       "Gamma Regression", ExpressionUUID -> 
        "6bd04cb8-ab8d-46fc-a0ee-ed2febf46b25"]]},
     {
      RowBox[{"Inverse", " ", "Square"}], 
      InterpretationBox[Cell[
       "InverseGaussian Regression",ExpressionUUID->
        "b10a7219-6d90-432e-ba3f-5e15492fcfbe"],
       TextCell[
       "InverseGaussian Regression", ExpressionUUID -> 
        "6bd04cb8-ab8d-46fc-a0ee-ed2febf46b25"]]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
        RGBColor[1., 1., 0.9], {
         GrayLevel[1], 
         RGBColor[0.8, 0.9, 0.9]}}},
    GridBoxDividers->{"Columns" -> {
        RGBColor[0.2, 0.2, 0.2], {
         RGBColor[0.75, 0.75, 0.75]}, 
        RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
        RGBColor[0.2, 0.2, 0.2], 
        RGBColor[0.2, 0.2, 0.2], {False}, 
        RGBColor[0.2, 0.2, 0.2]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{4}}, "Rows" -> {{2}}}],
   "Grid"]], "Output",
  CellChangeTimes->{{3.697482792840692*^9, 3.6974828394784927`*^9}, {
    3.6974828927777147`*^9, 3.6974829193395033`*^9}, 3.6974829881102624`*^9, {
    3.6974830652450304`*^9, 3.697483126811825*^9}, {3.6974833213208995`*^9, 
    3.6974833376518173`*^9}, {3.6974833850694227`*^9, 
    3.6974835016689177`*^9}, {3.6974836480737004`*^9, 3.697483653113948*^9}, {
    3.6974836891616955`*^9, 3.6974837131828628`*^9}},ExpressionUUID->
  "3f556eb0-8510-4759-a178-3849034a78e9"]
}], "Text",
 CellChangeTimes->{
  3.700821957634098*^9, 3.7008311956898985`*^9, 3.701190889456973*^9, {
   3.7021396436432705`*^9, 
   3.7021396437792706`*^9}},ExpressionUUID->"1ea7de91-842c-4cb5-8ea7-\
b0b1b2b240fd"],

Cell[TextData[StyleBox["Let us consider an example using one of these type of \
Regression, say the Poisson Regression:",
 FontFamily->"Arial",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.7011121544887857`*^9, 3.701112169500845*^9}, 
   3.7021396520902705`*^9},ExpressionUUID->"511a9988-acf1-439a-ba7d-\
67dcf23a4e5f"],

Cell[CellGroupData[{

Cell["Poisson Regression", "Subsection",
 CellChangeTimes->{{3.7011106025770583`*^9, 
  3.7011106071832285`*^9}},ExpressionUUID->"0db756f3-3f84-4f46-bd00-\
93c7456fba5a"],

Cell["\<\
A dataset from Australia will be used that gives the number of deaths from \
AIDS on a quarterly basis, covering the time period from January 1983 to June \
1986.\
\>", "Text",
 CellChangeTimes->{{3.5750327321494093`*^9, 3.575032750452382*^9}, {
   3.575032780813327*^9, 3.575032865543146*^9}, {3.57587642419039*^9, 
   3.575876424803344*^9}, 3.580043349312005*^9, 3.580224729711443*^9, {
   3.622305973409778*^9, 
   3.622305996214295*^9}},ExpressionUUID->"6fbf5dd8-9b46-41bf-ba71-\
b40e8627137e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aidsDat", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", " ", "1", ",", " ", "2", ",", " ", "3", ",", " ", "1", ",", " ",
      "4", ",", " ", "9", ",", " ", "18", ",", " ", "23", ",", " ", "31", ",",
      " ", "20", ",", " ", "25", ",", " ", "37", ",", " ", "45"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5750328734941072`*^9, 
  3.5750328990625267`*^9}},ExpressionUUID->"a0448766-bc71-498d-bd3f-\
8d8d16dd76ad"],

Cell[TextData[{
 "The independent variables are just uniformly spaced time values, so take \
them to be ",
 StyleBox["1-Length[aidsDat]", "MR"],
 ". Fit two models, the first where just the count is taken and the second \
where the logarithm of the count is used. Use ",
 StyleBox[ButtonBox["ExponentialFamily",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ExponentialFamily"],
  FontWeight->"Bold"],
 " \[Rule] \[OpenCurlyDoubleQuote]Poisson\[CloseCurlyDoubleQuote] because the \
responses are counts."
}], "Text",
 CellChangeTimes->{{3.575032937315436*^9, 3.5750329418003902`*^9}, {
   3.575032984977523*^9, 3.5750330488510523`*^9}, {3.575033083579665*^9, 
   3.575033159942527*^9}, 3.577206261959504*^9, {3.5772063059528027`*^9, 
   3.577206326664865*^9}, 3.5800433704966393`*^9, {3.5802247581473293`*^9, 
   3.580224760657338*^9}, {3.5802252629937162`*^9, 3.580225264958145*^9}, {
   3.622306002870617*^9, 
   3.622306103721321*^9}},ExpressionUUID->"b5b2e17b-945b-4f5f-8138-\
0564c49c937f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mod1", "=", 
   RowBox[{"GeneralizedLinearModelFit", "[", 
    RowBox[{"aidsDat", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "x"}], "}"}], ",", "x", ",", 
     RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Poisson\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.575033208523205*^9, 3.575033210368843*^9}, {
  3.5802251468169947`*^9, 3.580225193251295*^9}},
 CellTags->{
  "GeneralizedLinearModelFit", "ExponentialFamily", 
   "Poisson"},ExpressionUUID->"8611a442-bb73-48b5-8e46-58f849585e39"],

Cell[BoxData[
 RowBox[{"mod2", "=", 
  RowBox[{"GeneralizedLinearModelFit", "[", 
   RowBox[{"aidsDat", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"Log", "[", "x", "]"}]}], "}"}], ",", "x", ",", 
    RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Poisson\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.574752578196262*^9, 3.57475261083431*^9}, {
  3.574752823693482*^9, 3.574752823694578*^9}, {3.575033253254257*^9, 
  3.5750332597134857`*^9}, {3.58022515221793*^9, 3.580225154752236*^9}, {
  3.580225196075551*^9, 
  3.580225207667293*^9}},ExpressionUUID->"79a8b13d-d05b-4a1c-aa30-\
72046ceeb327"],

Cell["\<\
Taking a look at the parameter tables shows that the estimates are more \
\"significant\" for the second model, even though the model is no more \
complex.\
\>", "Text",
 CellChangeTimes->{{3.574752578196262*^9, 3.5747526202264967`*^9}, {
   3.574753824423764*^9, 3.574753832684286*^9}, 
   3.62245933812934*^9},ExpressionUUID->"3a36ca70-935a-44bf-b2fe-\
1c3432f18ccb"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"mod1", "[", "\"\<ParameterTable\>\"", "]"}], ",", "\"\<   \>\"", 
    ",", 
    RowBox[{"mod2", "[", "\"\<ParameterTable\>\"", "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.575033653034062*^9, 
  3.5750337481942253`*^9}},ExpressionUUID->"77fa9420-4772-460e-92b9-\
9c3970736e91"],

Cell["\<\
Taking a look at the plot and giving AIC shows that the log-based model also \
fits much better. Both of these models are better in terms of reflecting the \
true nature of the data than a linear model and fit better (according to \
AIC). If the dataset was larger, it would likely be possible to show that the \
linear model has residuals with bad properties (but the dataset is just too \
small to do that).\
\>", "Text",
 CellChangeTimes->{{3.574752578196262*^9, 3.574752654728675*^9}, 
   3.574753869349641*^9, 3.580043476958497*^9, 3.6223061258901997`*^9, {
   3.622459373055842*^9, 
   3.62245938237963*^9}},ExpressionUUID->"02a26607-a719-4f0b-86e9-\
983ff5d64ecc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mod3", " ", "=", " ", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"aidsDat", ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "x"}], "}"}], ",", " ", "x"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.574752578196262*^9, 3.574752654728675*^9}, {
  3.574752823703425*^9, 3.574752823704838*^9}, {3.575033848679295*^9, 
  3.575033865959489*^9}},ExpressionUUID->"2c5bc403-e04f-4581-a56e-\
e902fdf2144c"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mod3", "[", "t", "]"}], ",", 
       RowBox[{"mod1", "[", "t", "]"}], ",", 
       RowBox[{"mod2", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", "14"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Linear AIC: \>\"", ",", 
           RowBox[{"mod3", "[", "\"\<AIC\>\"", "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<GLM {1,x} AIC: \>\"", ",", 
           RowBox[{"mod1", "[", "\"\<AIC\>\"", "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<GLM {1,Log[x]} AIC: \>\"", ",", 
           RowBox[{"mod2", "[", "\"\<AIC\>\"", "]"}]}], "}"}], "]"}]}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"aidsDat", ",", 
     RowBox[{"PlotMarkers", "\[Rule]", " ", "Automatic"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5747527782312326`*^9, 3.574752778232736*^9}, {
  3.575033904906949*^9, 
  3.575033924737142*^9}},ExpressionUUID->"d5179941-f9ab-4b7b-8332-\
a327abfe62c5"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"91ca2122-493c-418c-8dfa-e7d608466d74"],

Cell[CellGroupData[{

Cell["Generalized Linear Models: Logistic Models", "Section",
 CellChangeTimes->{{3.7008305126330867`*^9, 3.7008305291597853`*^9}, {
  3.7008363056998196`*^9, 
  3.7008363080761304`*^9}},ExpressionUUID->"e8c8096c-558e-48ae-b396-\
d88be5b5b1ac"],

Cell["\<\
This dataset indicates the presence/absence of gold deposit as a function of \
water/chemical factors: As, Sb, and presence/absence of lineament in the \
Hutti-Maski Schist Belt, Raichur, Karnataka, India. 
The presence/absence of gold deposit is fitted in a logistic regression model \
to the Arsenic and Antimony level, and the lineament proximity to water.\
\>", "Text",
 CellChangeTimes->{{3.7008305571005783`*^9, 3.700830659021286*^9}, {
   3.700830753107853*^9, 3.700830766909339*^9}, {3.701108064234499*^9, 
   3.7011080867387815`*^9}, {3.7011086850240126`*^9, 
   3.7011086924567633`*^9}, {3.701108754431285*^9, 3.7011088299109216`*^9}, 
   3.7011103715811634`*^9},ExpressionUUID->"1bdbc1b9-495e-4081-8202-\
813d692fc53a"],

Cell[CellGroupData[{

Cell["Data import and cleaning", "Subsection",
 CellChangeTimes->{{3.7003926989164705`*^9, 3.7003927031876993`*^9}, 
   3.7003927504221783`*^9, 
   3.7011107032394705`*^9},ExpressionUUID->"d7af9807-bfc1-411c-a9a8-\
565728359d55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<gold_target1.dat\>\""}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7008308176273184`*^9, 3.700830837963045*^9}, {
  3.701108638906685*^9, 
  3.7011086596487155`*^9}},ExpressionUUID->"f6f89a67-2a69-46ec-9ebb-\
33ab91040ee7"],

Cell["\<\
The last five rows are blank and the data is in string format. Let us convert \
it to numbers and get rid of the last five rows:\
\>", "Text",
 CellChangeTimes->{{3.7008308407704587`*^9, 3.700830867727523*^9}, 
   3.7017750048345275`*^9, {3.7021397486922703`*^9, 
   3.7021397684592705`*^9}},ExpressionUUID->"69dd64c2-95dc-43c2-a3b9-\
6ae8ad3c30b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"golddat", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{";;", 
       RowBox[{"-", "5"}]}], "]"}], "]"}]}]}], ";"}]], "Input",ExpressionUUID-\
>"18dc82dd-6d40-4976-a20f-4f600714c225"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitting a logistic model", "Subsection",
 CellChangeTimes->{{3.7003927097560167`*^9, 3.7003927138197217`*^9}, 
   3.7003927583310523`*^9, {3.7008218114730673`*^9, 3.7008218135383515`*^9}, {
   3.7008308835288277`*^9, 3.7008308847129793`*^9}, 3.701110708310092*^9, 
   3.7017749998493595`*^9},ExpressionUUID->"7083cfee-85d4-4300-a890-\
3ece5ba0ebfb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"mod1", "=", 
    RowBox[{"GeneralizedLinearModelFit", "[", 
     RowBox[{"golddat", ",", 
      RowBox[{"{", 
       RowBox[{"As", ",", "Sb", ",", "Ln"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"As", ",", "Sb", ",", "Ln"}], "}"}], ",", 
      RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Binomial\>\""}]}], "]"}]}],
    ")"}], "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.700829140637833*^9, 3.70082917051639*^9}, {
   3.7008292712567987`*^9, 3.7008293355027018`*^9}, {3.7008294091083865`*^9, 
   3.700829422340376*^9}, {3.7008294728662043`*^9, 3.700829483195118*^9}, {
   3.7008297986212196`*^9, 3.700829798957109*^9}, {3.700830232374935*^9, 
   3.7008303163498125`*^9}, 3.7008303863948493`*^9, {3.700830417189851*^9, 
   3.7008304250748134`*^9}, {3.701108842271634*^9, 3.7011088519983616`*^9}},
 CellTags->"Binomial",ExpressionUUID->"e1c7d007-ac7e-423e-bd1e-be8689816120"],

Cell["\<\
A logistic model is commonly used. LogitModelFit can be obtained from \
GeneralizedLinearModelFit by setting ExponentialFamily to Binomial. \
\>", "Text",
 CellChangeTimes->{{3.700830905016348*^9, 3.700830973645911*^9}, {
  3.701779826808364*^9, 3.701779829256708*^9}, {3.702139789137271*^9, 
  3.7021398218322706`*^9}},ExpressionUUID->"a608e5f7-c60d-4449-97df-\
3a2e2df303e1"],

Cell[BoxData[
 RowBox[{"mod2", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"LogitModelFit", "[", 
     RowBox[{"golddat", ",", 
      RowBox[{"{", 
       RowBox[{"As", ",", "Sb", ",", "Ln"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"As", ",", "Sb", ",", "Ln"}], "}"}]}], "]"}], ")"}], "//", 
   "Normal"}]}]], "Input",
 CellChangeTimes->{{3.700830191967409*^9, 3.7008302202539363`*^9}, {
  3.700830449130352*^9, 3.700830449569518*^9}},
 CellTags->
  "LogitModelFit",ExpressionUUID->"0eb2344b-1be9-4a90-acb3-24c10d37cc8a"],

Cell["Computing the statistics and visualizing the residuals:", "Text",
 CellChangeTimes->{{3.7008309783019886`*^9, 3.700831011397032*^9}, 
   3.7021398314632707`*^9},ExpressionUUID->"40fa79e2-c1c9-444f-b892-\
ca76831e0bd2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"mod1", "[", "\"\<ParameterTable\>\"", "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"mod1", "[", "\"\<FitResiduals\>\"", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
     RowBox[{"Filling", "\[Rule]", " ", "Axis"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<BIC: \>\"", ",", 
         RowBox[{"mod1", "[", "\"\<BIC\>\"", "]"}], ",", "\"\<   AIC: \>\"", 
         ",", 
         RowBox[{"mod1", "[", "\"\<AIC\>\"", "]"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.700829814186339*^9, 3.700829867227434*^9}, {
  3.7008301221830225`*^9, 3.7008301625998297`*^9}, {3.7008410375443506`*^9, 
  3.7008410441437817`*^9}, {3.7017837940699177`*^9, 3.7017839006323676`*^9}},
 CellTags->{
  "ParameterTable", 
   "FitResiduals"},ExpressionUUID->"2f45001c-ad78-4400-8a61-010b15d1e2e4"],

Cell[TextData[StyleBox["Source: N.R. Sahoo and H.S. Pandalai (1999). \
\[OpenCurlyDoubleQuote]Integration of Sparse GeologiInformation in Gold \
Targeting Using Logistic Regression Analysis in the  Hutti-Maski Schist Belt, \
Raichur, Karnataka, India - A Case Study,\[CloseCurlyDoubleQuote] Natural \
Resources Research, Vol. 8, #3, pp. 233-250.",
 FontFamily->"Arial",
 FontSize->8,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.701108095081126*^9},ExpressionUUID->"5ccf1b0c-cadf-46e4-a53d-\
7fe7967eacde"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d046c1e5-4fb9-4612-9ea1-bbe1a96ebdb5"],

Cell[CellGroupData[{

Cell["Generalized Linear Models : Link Function", "Section",
 CellChangeTimes->{{3.700834330582546*^9, 3.7008343345101423`*^9}, {
  3.7008393940681863`*^9, 3.700839399595953*^9}, {3.70119049316226*^9, 
  3.7011905246822133`*^9}, {3.7016932627430587`*^9, 
  3.701693263130063*^9}},ExpressionUUID->"83b7f2f2-2d17-4a5b-a020-\
2e6b81566e60"],

Cell[TextData[{
 "The canonical link functions and their corresponding type of regression has \
been discussed. Now let\[CloseCurlyQuote]s focus on other link functions that \
can be used for Binomial data: \n\n",
 Cell[BoxData[
  TagBox[GridBox[{
     {"\<\"Link\"\>", "\<\"Formula\"\>"},
     {"Probit", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"InverseErf", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "y"}]}], "]"}]}]},
     {"Cauchit", 
      InterpretationBox[Cell[BoxData[Cell[BoxData[
         FormBox[
          RowBox[{"tan", "(", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{"x", "-", 
              FractionBox["1", "2"]}], ")"}]}], ")"}], TraditionalForm]], 
         "InlineMath",ExpressionUUID->
         "78b8a2a9-521f-4f3b-9c1b-4e73e4c66183"]], "TableText",
        ExpressionUUID->"8e3a4a4c-cf02-4904-b49b-3bf1d9d0966a"],
       TextCell[
        RawBoxes[
         Cell[
          BoxData[
           FormBox[
            RowBox[{"tan", "(", 
              RowBox[{"\[Pi]", " ", 
                RowBox[{"(", 
                  RowBox[{"x", "-", 
                    FractionBox["1", "2"]}], ")"}]}], ")"}], 
            TraditionalForm]], "InlineMath", ExpressionUUID -> 
          "ffe46d07-8a4b-4951-8d31-7943bd62e782"]], "TableText"]]},
     {"LogLog", 
      InterpretationBox[Cell[BoxData[Cell[BoxData[
         FormBox[
          RowBox[{"-", 
           RowBox[{"log", "(", 
            RowBox[{"-", 
             RowBox[{"log", "(", "y", ")"}]}], ")"}]}], TraditionalForm]], 
         "InlineMath",ExpressionUUID->
         "19d1fdd8-4c80-45e1-baa5-61dc4bd9b028"]], "TableText",
        ExpressionUUID->"73e806f4-da84-4473-aba9-4e84c940f59b"],
       TextCell[
        RawBoxes[
         Cell[
          BoxData[
           FormBox[
            RowBox[{"-", 
              RowBox[{"log", "(", 
                RowBox[{"-", 
                  RowBox[{"log", "(", "y", ")"}]}], ")"}]}], 
            TraditionalForm]], "InlineMath", ExpressionUUID -> 
          "916e4f49-efec-43f9-ba92-96323e99f882"]], "TableText"]]},
     {"LogComplement", 
      InterpretationBox[Cell[BoxData[Cell[BoxData[
         FormBox[
          RowBox[{"log", "(", 
           RowBox[{"1", "-", "y"}], ")"}], TraditionalForm]], "InlineMath",
         ExpressionUUID->"c5e3a2e1-3dc9-45ca-8fcc-d8b78dfb70d5"]], 
        "TableText",ExpressionUUID->"e8d819c3-a8a7-4d55-ab55-0b76e4f77616"],
       TextCell[
        RawBoxes[
         Cell[
          BoxData[
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"1", "-", "y"}], ")"}], TraditionalForm]], "InlineMath",
           ExpressionUUID -> "42e358ec-a0b8-43ea-b5ac-1283945389c6"]], 
        "TableText"]]},
     {"ComplementaryLogLog", 
      RowBox[{"Log", "[", 
       RowBox[{"-", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "y"}], "]"}]}], "]"}]},
     {"OddsPowerLink", 
      InterpretationBox[Cell[BoxData[Cell[BoxData[
         FormBox[
          RowBox[{"\[Piecewise]", GridBox[{
             {
              FractionBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox["y", 
                   RowBox[{"1", "-", "y"}]], ")"}], "\[Alpha]"], "-", "1"}], 
               "\[Alpha]"], 
              RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]},
             {
              RowBox[{"log", "(", 
               FractionBox["y", 
                RowBox[{"1", "-", "y"}]], ")"}], 
              RowBox[{"\[Alpha]", "\[LongEqual]", "0"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}]}], TraditionalForm]], 
         "InlineMath",ExpressionUUID->
         "0540a66e-17e6-4c2c-94ec-1369f489ca67"]], "TableText",
        ExpressionUUID->"61cffdc3-a7ad-4961-adbc-db4484f533c0"],
       TextCell[
        RawBoxes[
         Cell[
          BoxData[
           FormBox[
            RowBox[{"\[Piecewise]", 
              GridBox[{{
                 FractionBox[
                  RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["y", 
                    RowBox[{"1", "-", "y"}]], ")"}], "\[Alpha]"], "-", "1"}], 
                  "\[Alpha]"], 
                 RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}, {
                 RowBox[{"log", "(", 
                   FractionBox["y", 
                    RowBox[{"1", "-", "y"}]], ")"}], 
                 RowBox[{"\[Alpha]", "\[LongEqual]", "0"}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{1.}}, "RowsIndexed" -> {}}, 
               GridBoxSpacings -> {"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}, "RowsIndexed" -> {}}]}], TraditionalForm]], 
          "InlineMath", ExpressionUUID -> 
          "be8849a7-a674-4eac-97e3-72d96855ef5a"]], "TableText"]]},
     {"NegativeBinomialLink", 
      InterpretationBox[Cell[BoxData[Cell[BoxData[
         FormBox[
          RowBox[{"log", "(", 
           FractionBox[
            RowBox[{"\[Alpha]", " ", "y"}], 
            RowBox[{
             RowBox[{"\[Alpha]", " ", "y"}], "+", "1"}]], ")"}], 
          TraditionalForm]], "InlineMath",ExpressionUUID->
         "85897c60-fc34-416f-a9fc-84837bd6367b"]], "TableText",
        ExpressionUUID->"6e0c9553-0b07-42ca-95a6-424702234e80"],
       TextCell[
        RawBoxes[
         Cell[
          BoxData[
           FormBox[
            RowBox[{"log", "(", 
              FractionBox[
               RowBox[{"\[Alpha]", " ", "y"}], 
               RowBox[{
                 RowBox[{"\[Alpha]", " ", "y"}], "+", "1"}]], ")"}], 
            TraditionalForm]], "InlineMath", ExpressionUUID -> 
          "52d8ac62-abf9-4589-ab7d-ed0e2e3eea89"]], "TableText"]]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
        RGBColor[1., 1., 0.9], {
         GrayLevel[1], 
         RGBColor[0.8, 0.9, 0.9]}}},
    GridBoxDividers->{"Columns" -> {
        RGBColor[0.2, 0.2, 0.2], {
         RGBColor[0.75, 0.75, 0.75]}, 
        RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
        RGBColor[0.2, 0.2, 0.2], 
        RGBColor[0.2, 0.2, 0.2], {False}, 
        RGBColor[0.2, 0.2, 0.2]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{4}}, "Rows" -> {{2}}}],
   "Grid"]], "Output",
  CellChangeTimes->{3.7008346387458963`*^9},ExpressionUUID->
  "24b84033-baf1-46aa-9407-9ccc4dddbbf0"]
}], "Text",
 CellChangeTimes->{{3.7008343504791393`*^9, 3.700834431557721*^9}, {
   3.700834645592972*^9, 3.7008346458797565`*^9}, 3.701190845066078*^9, {
   3.7021398535112705`*^9, 
   3.702139858486271*^9}},ExpressionUUID->"8877ec59-3c6c-4b93-b378-\
e87574d31fe6"],

Cell[TextData[StyleBox["Let us consider an example using one of these link \
function, the NegativeBinomialLink.",
 FontFamily->"Arial",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.701112102328727*^9, 3.7011121278783274`*^9}, {
  3.702139872413271*^9, 
  3.7021398759892707`*^9}},ExpressionUUID->"a61d6c64-fe45-4a43-92b8-\
49f41a84a7a1"],

Cell[CellGroupData[{

Cell["Import and clean data", "Subsection",
 CellChangeTimes->{{3.70083946534663*^9, 3.700839471059581*^9}, {
  3.701192014283683*^9, 
  3.701192016187699*^9}},ExpressionUUID->"9d19bfec-96f1-4c91-bfc2-\
e53c10cd7f0d"],

Cell["\<\
In this example we will try to fit the terrorism (incidence and casualties) \
in different provinces of Afghanistan to various variables. The variables \
include: opium production, population, area, mountainous, nutrition, \
literacy, drinking water, roads, infant mortality, Pashtun majority, and \
foreign troops. This data is aggregated over years (n=33). Finally we want to \
conclude what are the most important factors. \
\>", "Text",
 CellChangeTimes->{{3.700839337242318*^9, 3.7008393795337873`*^9}, {
  3.7008395268839207`*^9, 3.7008395270523634`*^9}, {3.701110388531047*^9, 
  3.7011104917071033`*^9}, {3.7011106344002547`*^9, 3.7011106393994884`*^9}, {
  3.701779940314664*^9, 
  3.7017799610699177`*^9}},ExpressionUUID->"0c1d4dda-5fcc-4df6-b149-\
0c3f33eac17c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<afghan_terror.dat\>\""}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.700839433916483*^9, {3.7011114169977493`*^9, 3.7011114262462287`*^9}, 
   3.701111459877243*^9},ExpressionUUID->"c4c6a205-e194-4959-bb5c-\
f54c098c81df"],

Cell["Let us look at how the data is interpreted in Mathematica:", "Text",
 CellChangeTimes->{{3.7008394759316044`*^9, 3.700839479402727*^9}, {
   3.700839531297757*^9, 3.7008395400015364`*^9}, 
   3.7021399090512705`*^9},ExpressionUUID->"16b579f8-87b4-4f05-bc04-\
dfeebe37ce32"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "InputForm"}]], "Input",
 CellChangeTimes->{
  3.7008394304443226`*^9},ExpressionUUID->"365681fd-ee9e-4907-8ee7-\
33c42ef3825e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Fitting the number of incidents with the NegativeBinomialLink\
\>", "Subsection",
 CellChangeTimes->{{3.7008413234615917`*^9, 3.7008413527404857`*^9}, {
  3.7011115204365273`*^9, 
  3.701111527579566*^9}},ExpressionUUID->"b91702b2-3a9e-497a-ad6c-\
01ba64bcc8c2"],

Cell["\<\
First we will try to fit the number of incidents of terrorism occurring. \
Since the first entry is not one of the variables, we can eliminate it, and \
then modify the data so that we can fit the number of incidents with the \
other variable:\
\>", "Text",
 CellChangeTimes->{{3.7008395518739276`*^9, 3.700839613409502*^9}, {
   3.701111471621295*^9, 3.701111499788883*^9}, 
   3.7017799704610476`*^9},ExpressionUUID->"64fbee3c-ef72-4fc2-8c70-\
d8157f731dba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataincidents", "=", 
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"2", ";;"}]}], "]"}], "]"}], "/.", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "inc_", ",", "death_", ",", "opium_", ",", "pop_", ",", "area_", ",", 
       "mountain_", ",", "literacy_", ",", "water_", ",", "food_", ",", 
       "road_", ",", "infmortality_", ",", "Pashtun_", ",", "foreign_"}], 
      "}"}], "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", ",",
        "water", ",", "food", ",", "road", ",", "infmortality", ",", 
       "Pashtun", ",", "foreign", ",", "inc"}], "}"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7011115380200644`*^9},ExpressionUUID->"70d5ee34-3058-41de-a7a7-\
97419954afc7"],

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"mod1", "=", 
   RowBox[{"GeneralizedLinearModelFit", "[", 
    RowBox[{"dataincidents", ",", 
     RowBox[{"{", 
      RowBox[{
      "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", ",",
        "water", ",", "food", ",", "road", ",", "infmortality", ",", 
       "Pashtun", ",", "foreign"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", ",",
        "water", ",", "food", ",", "road", ",", "infmortality", ",", 
       "Pashtun", ",", "foreign"}], "}"}], ",", 
     RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Poisson\>\""}], ",", 
     RowBox[{
     "LinkFunction", "\[Rule]", " ", "\"\<NegativeBinomialLink\>\""}]}], 
    "]"}]}], ")"}]], "Input",
 CellChangeTimes->{{3.700837490439766*^9, 3.700837523535207*^9}, {
   3.700837574358466*^9, 3.700837599116872*^9}, 3.7008376575983653`*^9, {
   3.700838013373779*^9, 3.7008380149980707`*^9}, {3.700838573390767*^9, 
   3.7008385748776894`*^9}, {3.7008386248136168`*^9, 
   3.7008387012343597`*^9}, {3.701111549701955*^9, 3.701111572636689*^9}},
 CellTags->{
  "LinkFunction", 
   "NegativeBinomialLink"},ExpressionUUID->"418b44d6-d29e-402c-8afe-\
c2a3768f1101"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"mod1", "[", "\"\<FitResiduals\>\"", "]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", " ", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<BIC: \>\"", ",", 
       RowBox[{"mod1", "[", "\"\<BIC\>\"", "]"}], ",", "\"\<   AIC: \>\"", 
       ",", 
       RowBox[{"mod1", "[", "\"\<AIC\>\"", "]"}]}], "}"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.700841281241243*^9, 3.7008412935130405`*^9}, 
   3.701513873282275*^9, 3.701783604261649*^9, {3.701783669370597*^9, 
   3.7017837395409136`*^9}, 
   3.7017840047874365`*^9},ExpressionUUID->"e423c71f-5ada-4538-a69b-\
6e120b12554e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitting the number of deaths  ", "Subsection",
 CellChangeTimes->{{3.700841733943799*^9, 3.7008417446059685`*^9}, {
  3.701111602675192*^9, 
  3.7011116097228155`*^9}},ExpressionUUID->"769b1571-95e8-4197-a602-\
35c53e97527b"],

Cell["\<\
In this section we will analyse the number of deaths. For that let us modify \
our data accordingly. \
\>", "Text",
 CellChangeTimes->{{3.700839619184757*^9, 3.700839633887735*^9}, {
   3.701111789545458*^9, 3.7011118422994747`*^9}, {3.70178508475737*^9, 
   3.7017851033494973`*^9}, 
   3.701787943823039*^9},ExpressionUUID->"30cf6791-60a9-43ee-9b28-\
cc4e9abba6e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datadeaths", "=", 
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"2", ";;"}]}], "]"}], "]"}], "/.", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "inc_", ",", "death_", ",", "opium_", ",", "pop_", ",", "area_", ",", 
       "mountain_", ",", "literacy_", ",", "water_", ",", "food_", ",", 
       "road_", ",", "infmortality_", ",", "Pashtun_", ",", "foreign_"}], 
      "}"}], "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", ",",
        "water", ",", "food", ",", "road", ",", "infmortality", ",", 
       "Pashtun", ",", "foreign", ",", "death"}], "}"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.700839643505004*^9, 3.7008396821681433`*^9}, 
   3.7011116129536343`*^9},ExpressionUUID->"2486ac45-8d32-4c03-88d3-\
9aac92d3d882"],

Cell["Next let us try to fit the data using all the variables:", "Text",
 CellChangeTimes->{{3.7011118472270107`*^9, 3.7011118620818367`*^9}, 
   3.702139938809271*^9},ExpressionUUID->"8e5a7112-2c5a-484d-8180-\
8e233b1ecc43"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"mod1", "=", 
    RowBox[{"GeneralizedLinearModelFit", "[", 
     RowBox[{"datadeaths", ",", 
      RowBox[{"{", 
       RowBox[{
       "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", 
        ",", "water", ",", "food", ",", "road", ",", "infmortality", ",", 
        "Pashtun", ",", "foreign"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", 
        ",", "water", ",", "food", ",", "road", ",", "infmortality", ",", 
        "Pashtun", ",", "foreign"}], "}"}], ",", 
      RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Gaussian\>\""}]}], "]"}]}],
    ")"}], "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.700837490439766*^9, 3.700837523535207*^9}, {
   3.700837574358466*^9, 3.700837599116872*^9}, 3.7008376575983653`*^9, {
   3.700838013373779*^9, 3.7008380149980707`*^9}, {3.700838573390767*^9, 
   3.7008385748776894`*^9}, {3.7008386248136168`*^9, 
   3.7008387012343597`*^9}, {3.7008396671133657`*^9, 
   3.7008396699298096`*^9}, {3.7008397015443306`*^9, 
   3.7008397568073225`*^9}, {3.7011116210955153`*^9, 
   3.7011116294354444`*^9}},ExpressionUUID->"f5790836-2dfd-466a-9cc3-\
be44b549eccc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"mod1", "[", "\"\<ParameterTable\>\"", "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"mod1", "[", "\"\<FitResiduals\>\"", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
     RowBox[{"Filling", "\[Rule]", " ", "Axis"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<AICc: \>\"", ",", 
         RowBox[{"mod1", "[", "\"\<BIC\>\"", "]"}], ",", "\"\<   AIC: \>\"", 
         ",", 
         RowBox[{"mod1", "[", "\"\<AIC\>\"", "]"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.700839999867565*^9, 3.7008400062173448`*^9}, {
  3.701788119693499*^9, 
  3.7017881512197623`*^9}},ExpressionUUID->"922a567d-df6a-459c-818c-\
f128060257fd"],

Cell[TextData[StyleBox["However, is this the best model? To find out the best \
model fit, let us consider all subsets of the variables and find out the fit \
which corresponds to the highest of a statistical inference parameter, here \
the AICc is chosen.",
 FontFamily->"Arial",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.701111865672948*^9, 3.701111934255062*^9}, {
   3.7011119731668243`*^9, 3.7011119743260374`*^9}, {3.7017881027236843`*^9, 
   3.7017881081941037`*^9}, 
   3.702139945401271*^9},ExpressionUUID->"2b0c1fd8-8753-467a-b737-\
b27280249845"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sub", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "i", "}"}], ",", 
       RowBox[{
        RowBox[{"GeneralizedLinearModelFit", "[", 
         RowBox[{"datadeaths", ",", "i", ",", 
          RowBox[{"{", 
           RowBox[{
           "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy",
             ",", "water", ",", "food", ",", "road", ",", "infmortality", ",",
             "Pashtun", ",", "foreign"}], "}"}], ",", 
          RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Gaussian\>\""}]}], 
         "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\<AIC\>\"", ",", "\"\<BIC\>\"", ",", 
          "\"\<LikelihoodRatioIndex\>\"", ",", "\"\<PearsonChiSquare\>\""}], 
         "}"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Subsets", "[", 
        RowBox[{"{", 
         RowBox[{
         "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", 
          ",", "water", ",", "food", ",", "road", ",", "infmortality", ",", 
          "Pashtun", ",", "foreign"}], "}"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.700840191798637*^9, 3.700840226873275*^9}, {
   3.700840263390937*^9, 3.700840270069585*^9}, {3.7008403389034004`*^9, 
   3.700840399972733*^9}, 3.7008406140803843`*^9},
 CellTags->{
  "BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", 
   "Gaussian"},ExpressionUUID->"c2fbcee1-ceab-4725-8b53-75474bacc199"],

Cell["\<\
Thus we see that the most important variables are opium production, area, \
mountain, water, and road, and infant mortality.\
\>", "Text",
 CellChangeTimes->{{3.7011119813571863`*^9, 3.701112063082324*^9}, {
   3.701788173168697*^9, 3.701788203954001*^9}, 
   3.702139952816271*^9},ExpressionUUID->"22f98df9-c782-4682-9733-\
7071aee718e8"],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Model\>\"", ",", "\"\<AICc\>\"", ",", "\"\<BIC\>\"", ",", 
        "\"\<LikelihoodRatioIndex\>\"", ",", "\"\<PearsonChiSquare\>\""}], 
       "}"}], "}"}], ",", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"SortBy", "[", 
        RowBox[{"sub", ",", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], ",", "5"}], 
      "]"}]}], "]"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7008405182843227`*^9, 3.700840522632805*^9}, {
   3.700840566777394*^9, 3.700840601616461*^9}, {3.700840646887169*^9, 
   3.7008406950052695`*^9}, {3.7011119369205265`*^9, 
   3.7011119371705265`*^9}, {3.7011119692716675`*^9, 3.701111969624586*^9}, 
   3.701787989580884*^9, {3.7017880385492034`*^9, 3.7017880714059505`*^9}},
 CellTags->{
  "Grid", "Join", "Take", 
   "SortBy"},ExpressionUUID->"c124816b-35d7-488d-bf59-760b5caf68ed"],

Cell[TextData[StyleBox["Source: J.A. Piazza (2012). \
\[OpenCurlyDoubleQuote]The Opium Trade and Patterns of Terrorism in the \
Provinces of Afghanistan: An Empirical Analysis,\[CloseCurlyDoubleQuote] \
Terrorism and Political Violence, Vol. 24, pp. 213-234",
 FontFamily->"Arial",
 FontSize->10,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.7011104990595856`*^9},ExpressionUUID->"562a9e50-734d-4bbd-b021-\
0ed9ec117f8c"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4b531018-72db-4618-be26-96ee684dc958"],

Cell[CellGroupData[{

Cell["Time Series Models: Airline Passenger Data", "Section",
 CellChangeTimes->{{3.700841779174068*^9, 3.7008417836118746`*^9}, {
  3.7008429141993303`*^9, 
  3.700842920751644*^9}},ExpressionUUID->"b03469b5-e00d-48ba-b188-\
b9b7102f134b"],

Cell["\<\
Time series refers to a sequence of observations following each other in \
time, where adjacent observations are correlated. This can be used to model, \
simulate, and forecast behavior for a system. Time series models are \
frequently used in fields such as economics, finance, biology, and \
engineering. The Wolfram Language provides a full suite of time series \
functionality, including standard models such as MA, AR, and ARMA, as well as \
several extensions. Time series models can be simulated, estimated from data, \
and used to produce forecasts of future behavior. \
\>", "Text",
 CellChangeTimes->{{3.7008419547938914`*^9, 
  3.7008419672737765`*^9}},ExpressionUUID->"2cf35c0f-4130-4d2f-a9bd-\
10d949204400"],

Cell["The existing time series models in the Wolfram Language:", "Text",
 CellChangeTimes->{{3.7008419746883183`*^9, 3.700841989871373*^9}, {
  3.7021400181402707`*^9, 
  3.7021400196922703`*^9}},ExpressionUUID->"9b942fb5-f01c-4845-a8bb-\
2819b10db3a5"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Model Type\"\>", "\<\"Models\"\>"},
    {"\<\"Basic Auto-Regressive and Moving Average Processes  \"\>", \
"\<\"MAProces| ARProcess | ARMAProcess\"\>"},
    {"\<\"Integrated and Seasonal Processes\"\>", "\<\"ARIMAProcess | \
SARIMAProcess  | SARMA Process | FARIMA Process\"\>"},
    {"\<\"Generalized Auto-regressive Conditional Heteroskedasicity Processes\
\"\>", "\<\"ARCHProcess |GARCHProcess \"\>"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       RGBColor[1., 1., 0.9], {
        GrayLevel[1], 
        RGBColor[0.8, 0.9, 0.9]}}},
   GridBoxDividers->{"Columns" -> {
       RGBColor[0.2, 0.2, 0.2], {
        RGBColor[0.75, 0.75, 0.75]}, 
       RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
       RGBColor[0.2, 0.2, 0.2], 
       RGBColor[0.2, 0.2, 0.2], {False}, 
       RGBColor[0.2, 0.2, 0.2]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{4}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.700842540674093*^9, 3.700842547350757*^9}, 
   3.700842600654575*^9, 
   3.7011934833198085`*^9},ExpressionUUID->"291ebfdb-0d28-48ee-9cc1-\
cd1dc3efcb24"],

Cell["\<\
The following data contains the monthly total number of US international \
airline passengers (in thousands) from January 1949 to December 1960. This a \
standard \[OpenCurlyDoubleQuote]text book\[CloseCurlyDoubleQuote] data set \
because it contains seasonality integrated with autoregressive and Moving \
Average processes. \
\>", "Text",
 CellChangeTimes->{{3.7008427060981126`*^9, 3.70084271002752*^9}, {
  3.7008429250149317`*^9, 3.7008430207207375`*^9}, {3.7021400467472706`*^9, 
  3.7021400622182703`*^9}},ExpressionUUID->"b0dd330f-01f7-4fa5-a901-\
b071b88cd4e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"passengers", "=", 
   InterpretationBox[
    RowBox[{
     TagBox["TimeSeries",
      "SummaryHead",
      Selectable->True], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{15., {0., 15.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            ImageSize->{Automatic, 
              Dynamic[
              3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])]}], 
           GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt08tpAmEUhuHB1SxduHDhYiIiIiLj/Y6WENwIkoWYxMSFqEgCgYiWYAmW
YAmWYAmWkBJMOO8v+HUgZEBeHs+ZfwSZh/G8/xrxPG/w+/mrXT9d61OPL6zn
EfbpkEZlHrMen3Ecj3GC/XccMH/BSeYTnMJvOG3dznCGLmmW+RTn8ALnrSM3
D60nNy+wv8JF66M7v8T+Fy5bA7dfsYafuGo9fOCade/mdetugxs8382beI1b
cn+b3/ONO9ajO8/9n9erd0tfHBXHxHFxQhyIk+KUOC3OiLPinDgvDsUFcVFc
EpfFFXFVXBPXxQ1xU9wSt8Ud8f/7afv3/35eAOrEcFs=
              "], {{{}, {}, {}, {}, {{{{{{{{{{{{{{
                    {RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5], Opacity[0.3], 
                    
                    StyleBox[{LineBox[{30, 1}], LineBox[{31, 2}], 
                    LineBox[{32, 3}], LineBox[{33, 4}], LineBox[{34, 5}], 
                    LineBox[{35, 6}], LineBox[{36, 7}], LineBox[{37, 8}], 
                    LineBox[{38, 9}], LineBox[{39, 10}], LineBox[{40, 11}], 
                    LineBox[{41, 12}], LineBox[{42, 13}], LineBox[{43, 14}], 
                    LineBox[{44, 15}], LineBox[{45, 16}], LineBox[{46, 17}], 
                    LineBox[{47, 18}], LineBox[{48, 19}], LineBox[{49, 20}], 
                    LineBox[{50, 21}], LineBox[{51, 22}], LineBox[{52, 23}], 
                    LineBox[{53, 24}], LineBox[{54, 25}], LineBox[{55, 26}], 
                    LineBox[{56, 27}], LineBox[{57, 28}], LineBox[{58, 29}]},
                    FontFamily->"Arial"]}}}}}}}}}}}}}}}}, {{}, {{{{{{{{{{{{{{
                    {RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5], 
                    
                    StyleBox[PointBox[{59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
                     69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
                    83, 84, 85, 86, 87}],
                    FontFamily->"Arial"]}}}}}}}}}}}}}}}, {}}}], {}},
            AspectRatio->1,
            Axes->{False, False},
            AxesLabel->{None, None},
            AxesOrigin->{0., 104.},
            BaseStyle->{FontFamily -> "Arial"},
            BaselinePosition->Bottom,
            DisplayFunction->Identity,
            Frame->{{True, True}, {True, True}},
            FrameLabel->{{None, None}, {None, None}},
            FrameStyle->Directive[
              Thickness[Tiny], 
              RGBColor[0.368417, 0.506779, 0.709798]],
            FrameTicks->{{None, None}, {None, None}},
            GridLines->{None, None},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImagePadding->1,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            LabelStyle->{FontFamily -> "Arial"},
            Method->{"ScalingFunctions" -> None},
            PlotRange->{{0., 29.}, {104., 508.}},
            PlotRangeClipping->True,
            PlotRangePadding->{{
               Scaled[0.02], 
               Scaled[0.02]}, {
               Scaled[0.02], 
               Scaled[0.02]}},
            Ticks->{None, None}], GridBox[{
             {
              TagBox[
               TemplateBox[{RowBox[{
                   StyleBox["\"Time: \"", FontColor -> GrayLevel[0.5]], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"01 Jan 1949\"", "SummaryItem", Selectable -> True]}],
                 RowBox[{
                   StyleBox["\" to \"", FontColor -> GrayLevel[0.5]], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"01 Dec 1960\"", "SummaryItem", Selectable -> True]}]},
                "RowDefault"],
               "SummaryItem",
               Selectable->True], "\[SpanFromLeft]"},
             {
              RowBox[{
               StyleBox["\<\"Data points: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["144",
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            ImageSize->{Automatic, 
              Dynamic[
              3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])]}], 
           GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt08tpAmEUhuHB1SxduHDhYiIiIiLj/Y6WENwIkoWYxMSFqEgCgYiWYAmW
YAmWYAmWkBJMOO8v+HUgZEBeHs+ZfwSZh/G8/xrxPG/w+/mrXT9d61OPL6zn
EfbpkEZlHrMen3Ecj3GC/XccMH/BSeYTnMJvOG3dznCGLmmW+RTn8ALnrSM3
D60nNy+wv8JF66M7v8T+Fy5bA7dfsYafuGo9fOCade/mdetugxs8382beI1b
cn+b3/ONO9ajO8/9n9erd0tfHBXHxHFxQhyIk+KUOC3OiLPinDgvDsUFcVFc
EpfFFXFVXBPXxQ1xU9wSt8Ud8f/7afv3/35eAOrEcFs=
              "], {{{}, {}, {}, {}, {{{{{{{{{{{{{{
                    {RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5], Opacity[0.3], 
                    
                    StyleBox[{LineBox[{30, 1}], LineBox[{31, 2}], 
                    LineBox[{32, 3}], LineBox[{33, 4}], LineBox[{34, 5}], 
                    LineBox[{35, 6}], LineBox[{36, 7}], LineBox[{37, 8}], 
                    LineBox[{38, 9}], LineBox[{39, 10}], LineBox[{40, 11}], 
                    LineBox[{41, 12}], LineBox[{42, 13}], LineBox[{43, 14}], 
                    LineBox[{44, 15}], LineBox[{45, 16}], LineBox[{46, 17}], 
                    LineBox[{47, 18}], LineBox[{48, 19}], LineBox[{49, 20}], 
                    LineBox[{50, 21}], LineBox[{51, 22}], LineBox[{52, 23}], 
                    LineBox[{53, 24}], LineBox[{54, 25}], LineBox[{55, 26}], 
                    LineBox[{56, 27}], LineBox[{57, 28}], LineBox[{58, 29}]},
                    FontFamily->"Arial"]}}}}}}}}}}}}}}}}, {{}, {{{{{{{{{{{{{{
                    {RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5], 
                    
                    StyleBox[PointBox[{59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
                     69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
                    83, 84, 85, 86, 87}],
                    FontFamily->"Arial"]}}}}}}}}}}}}}}}, {}}}], {}},
            AspectRatio->1,
            Axes->{False, False},
            AxesLabel->{None, None},
            AxesOrigin->{0., 104.},
            BaseStyle->{FontFamily -> "Arial"},
            BaselinePosition->Bottom,
            DisplayFunction->Identity,
            Frame->{{True, True}, {True, True}},
            FrameLabel->{{None, None}, {None, None}},
            FrameStyle->Directive[
              Thickness[Tiny], 
              RGBColor[0.368417, 0.506779, 0.709798]],
            FrameTicks->{{None, None}, {None, None}},
            GridLines->{None, None},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImagePadding->1,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            LabelStyle->{FontFamily -> "Arial"},
            Method->{"ScalingFunctions" -> None},
            PlotRange->{{0., 29.}, {104., 508.}},
            PlotRangeClipping->True,
            PlotRangePadding->{{
               Scaled[0.02], 
               Scaled[0.02]}, {
               Scaled[0.02], 
               Scaled[0.02]}},
            Ticks->{None, None}], GridBox[{
             {
              TagBox[
               TemplateBox[{RowBox[{
                   StyleBox["\"Time: \"", FontColor -> GrayLevel[0.5]], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"01 Jan 1949\"", "SummaryItem", Selectable -> True]}],
                 RowBox[{
                   StyleBox["\" to \"", FontColor -> GrayLevel[0.5]], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"01 Dec 1960\"", "SummaryItem", Selectable -> True]}]},
                "RowDefault"],
               "SummaryItem",
               Selectable->True], "\[SpanFromLeft]"},
             {
              RowBox[{
               StyleBox["\<\"Data points: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["144",
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"},
             {
              RowBox[{
               StyleBox["\<\"Regular: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["True",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Output dimension: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Metadata: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["2",
                "SummaryItem",
                Selectable->True], "\[InvisibleSpace]", 
               StyleBox["\<\" properties\"\>",
                FontColor->GrayLevel[0.5]]}], 
              RowBox[{
               StyleBox["\<\"Minimum Increment: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{"1", ",", "\<\"Month\"\>"}], "}"}],
                "SummaryItem",
                Selectable->True]}]},
             {
              TagBox["\<\"\"\>",
               "SummaryItem",
               Selectable->True], 
              RowBox[{
               StyleBox["\<\"Resampling: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"HoldValueFromLeft\"\>",
                "SummaryItem",
                Selectable->True]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TemporalData[TimeSeries, {CompressedData["
1:eJwt0s0rplEYB+AXGzX5SBkbmymWaCxE0/gb0GRjskARYqLIwpQyWFDoxYoy
ZIGFMI2FEk1JaJKNbEX52rBSFq439+LqnM7z63efp86npu66rvREIpHGJD/o
Y5ghBhglGcbopy1yvfxkInKDzLAaFvhFD+NMMcsmS6zH/jDs8JtpVlhjm33+
8JdLbnjijL3oOeBfeOCea57J9IO5PNqfR+cRJ+xG9oq7yJZSTEbae8dxdKVm
3vLBeRbZfKGTBirJizkfrYXk85UqquljnhmaKScn1lRXCS18j+8rnHFOMuZ8
poZv0dke+Q62uOcl8q1UUEsb9cwyzjIXFHkEZfy3n4u+1P0WGWWJ08gWyKUe
TSOvcT7CBm9ZnFBB
      "], {
       TemporalData`DateSpecification[{1949, 1, 1, 0, 0, 0.}, {1960, 12, 1, 0,
         0, 0}, {1, "Month"}]}, 1, {"Discrete", 1}, {"Discrete", 1}, 1, {
      MetaInformation -> {
        "Source" -> 
         "Box, G. E. P., Jenkins, G. M. and Reinsel, G. C. (1994) Time Series \
Analysis, Forecasting and\nControl. Second Edition. New York: Prentice-Hall.",
          "Description" -> 
         "International Airline Passengers: Monthly Totals (Thousands of \
Passengers) January 1949 - December 1960"}}}, True, 10.],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellID->26079817,ExpressionUUID->"4422e681-fb2a-426f-b5d9-99f5752b10d8"],

Cell["Split the data at January 1958:", "Text",
 CellChangeTimes->{{3.7008427258904247`*^9, 
  3.7008427412028503`*^9}},ExpressionUUID->"57754c61-c411-4657-93d9-\
631aec374798"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"before1958", "=", 
   RowBox[{"TimeSeriesWindow", "[", 
    RowBox[{"passengers", ",", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "\"\<December 1957\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"since1958", "=", 
   RowBox[{"TimeSeriesWindow", "[", 
    RowBox[{"passengers", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<January 1958\>\"", ",", "Automatic"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellTags->"TimeSeriesWindow",
 CellID->35234274,ExpressionUUID->"f3867716-5e08-44ea-a084-86ba31d48147"],

Cell[BoxData[
 RowBox[{"plot", "=", 
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"before1958", ",", "since1958"}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Before 1958\>\"", ",", "\"\<After 1958\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7017898077484565`*^9, 3.701789808119396*^9}},
 CellID->76320772,ExpressionUUID->"ce3b2b54-a042-49d4-a3db-057e10178689"],

Cell["Fit the Model using TimeSeriesModelFit:", "Text",
 CellChangeTimes->{{3.7008428302480884`*^9, 3.700842839607814*^9}, {
  3.7021400723772707`*^9, 
  3.7021400770012703`*^9}},ExpressionUUID->"bbd6a60d-4a28-4f8f-bdaf-\
15e7a349b1e5"],

Cell[BoxData[
 RowBox[{"tsm", "=", 
  RowBox[{"TimeSeriesModelFit", "[", "before1958", "]"}]}]], "Input",
 CellTags->
  "TimeSeriesModelFit",ExpressionUUID->"7998d32b-0027-46ce-966b-893a2f1f6cf0"],

Cell["Visualize the Model Fit and the Forecast:", "Text",
 CellChangeTimes->{{3.7008428428163214`*^9, 3.700842858847644*^9}, 
   3.7021400752252703`*^9},ExpressionUUID->"93b5a1a0-0fe6-4a0b-b06c-\
d3e235e36160"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"before1958", ",", "since1958", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tsm", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"DateRange", "[", 
          RowBox[{
          "\"\<January 1958\>\"", ",", "\"\<December 1960\>\"", ",", 
           "\"\<Month\>\""}], "]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Before 1958\>\"", ",", "\"\<After 1958\>\"", ",", 
      "\"\<Forecast\>\""}], "}"}]}]}], "]"}]], "Input",
 CellTags->"DateRange",
 CellID->643306091,ExpressionUUID->"932122fe-f883-41e6-9f51-f518cc1a5c59"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"32502cc2-10f2-44aa-8bed-f675003f1fd7"],

Cell[CellGroupData[{

Cell["Time Series Models: Weather Data at Your Present Location", "Section",
 CellChangeTimes->{{3.700843034757821*^9, 3.700843040108992*^9}, {
   3.700845879253682*^9, 3.7008458845263076`*^9}, {3.7021431266752706`*^9, 
   3.702143128163271*^9}, {3.7021435506342707`*^9, 3.702143556170271*^9}, 
   3.7021436287822704`*^9},ExpressionUUID->"32a75ae1-4c9d-4966-81f1-\
11cdef347ba3"],

Cell["\<\
Let us gather the temperature in your present location for the last 10 years \
and plot the data. \
\>", "Text",
 CellChangeTimes->{{3.7011125052664647`*^9, 3.7011125570971003`*^9}, 
   3.7021431340112705`*^9},ExpressionUUID->"8a2836a1-f7cc-429b-abdc-\
ed4bd16dda81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"today", "=", 
     RowBox[{"DateValue", "[", 
      RowBox[{"Today", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Year\>\"", ",", "\"\<Month\>\""}], "}"}]}], "]"}]}], ";",
     "\n", 
    RowBox[{"start", "=", 
     RowBox[{"DateValue", "[", 
      RowBox[{
       RowBox[{"DatePlus", "[", 
        RowBox[{"Today", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "\"\<Year\>\""}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Year\>\"", ",", "\"\<Month\>\""}], "}"}]}], "]"}]}], ";",
     "\n", 
    RowBox[{"tspec", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"start", ",", "today", ",", "\"\<Month\>\""}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"temp", "=", 
     RowBox[{"TimeSeries", "[", 
      RowBox[{
       RowBox[{"WeatherData", "[", 
        RowBox[{
         RowBox[{"FindGeoLocation", "[", "]"}], ",", "\"\<Temperature\>\"", 
         ",", "tspec", ",", "\"\<NonMetricValue\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"start", ",", "Automatic", ",", "\"\<Month\>\""}], "}"}]}], 
      "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"today", "=", 
    RowBox[{"{", 
     RowBox[{"2017", ",", "4"}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.701792176734546*^9, 3.7017922031962295`*^9}, {
  3.7021431857442703`*^9, 3.7021432037512703`*^9}},
 CellTags->"FindGeoLocation",
 CellID->831135752,ExpressionUUID->"bb04d436-3af9-4ddf-ae22-dd0ec1769b55"],

Cell[BoxData[
 RowBox[{"temp", "=", "tempdelhi", " ", 
  RowBox[{"(*", 
   RowBox[{"or", " ", "tempblore"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7017921606642094`*^9, 
  3.701792173446884*^9}},ExpressionUUID->"b849a6cb-149d-4196-b568-\
b03392d53149"],

Cell["Clearly there is a seasonal variation in the temperatures", "Text",
 CellChangeTimes->{{3.701112565288721*^9, 
  3.7011125883322587`*^9}},ExpressionUUID->"d4407a38-a9f6-44d9-80d2-\
c8eca935ee69"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"temp", ",", 
   RowBox[{"{", 
    RowBox[{"Automatic", ",", "today"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701788733632209*^9, 3.7017887527255144`*^9}},
 CellID->373022908,ExpressionUUID->"aa424378-7a01-40ef-8a03-96db1254f0c1"],

Cell["Let us automatically fit the data to a time series model. ", "Text",
 CellChangeTimes->{{3.701112605768283*^9, 3.701112639591585*^9}, {
  3.7021431438262706`*^9, 
  3.702143144882271*^9}},ExpressionUUID->"da8a9994-87e8-4d4e-8040-\
57188d069277"],

Cell[BoxData[
 RowBox[{"tsm", "=", 
  RowBox[{"TimeSeriesModelFit", "[", "temp", "]"}]}]], "Input",
 CellID->193739114,ExpressionUUID->"09b6cb3f-aca0-4dad-997c-fd2303f79c15"],

Cell["\<\
Next let us forecast the temperature for the next year, along with the \
PredictionLimits. Prediction limits are slightly higher than the confidence \
intervals. \
\>", "Text",
 CellChangeTimes->{{3.7011126495187893`*^9, 3.701112703301824*^9}, {
  3.7021431512182703`*^9, 
  3.702143156321271*^9}},ExpressionUUID->"b3a6fed6-ce58-4768-b1fd-\
3c2fdf440b73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fdates", "=", 
   RowBox[{"DateRange", "[", 
    RowBox[{"today", ",", 
     RowBox[{"DatePlus", "[", 
      RowBox[{"today", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\"\<Year\>\""}], "}"}]}], "]"}], ",", 
     "\"\<Month\>\""}], "]"}]}], ";"}]], "Input",
 CellTags->"DateRange",
 CellID->1486872,ExpressionUUID->"0661170d-a077-41f5-b7c5-115fe357977c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"forecast", "=", 
   RowBox[{"tsm", "/@", "fdates"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bands", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tsm", "[", "\"\<PredictionLimits\>\"", "]"}], "[", "#", "]"}], 
     "&"}], "/@", "fdates"}]}], ";"}]}], "Input",
 CellTags->"PredictionLimits",
 CellID->642359114,ExpressionUUID->"1f24a4c6-b056-4bce-b5bd-b68f90faf483"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bands", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", "forecast", 
     ",", 
     RowBox[{"bands", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"today", ",", " ", "Automatic", ",", "\"\<Month\>\""}], "}"}], 
   ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", "\[Rule]", 
      RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Gray", ",", "Automatic"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701788356631236*^9, 3.701788402724962*^9}, {
   3.7017885197339764`*^9, 3.7017885734017076`*^9}, 3.70178861103409*^9, {
   3.701788641938611*^9, 3.7017886579468145`*^9}, {3.7017887681742144`*^9, 
   3.7017887793015213`*^9}},
 CellID->75358596,ExpressionUUID->"65bacd4e-a685-45a7-abd2-361ba0a688a0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b84bd5d2-b791-4bd5-a48f-ea1989a3a1a2"],

Cell[CellGroupData[{

Cell["Glossary", "Section",
 CellChangeTimes->{{3.701782138956437*^9, 
  3.701782140422339*^9}},ExpressionUUID->"fab2e504-14a0-4424-b93b-\
5470d98434c4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ButtonBox[
      StyleBox["\<\"AdjustedRSquared\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["AdjustedRSquared"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"AIC\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["AIC"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"AICc\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["AICc"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ANOVATable\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ANOVATable"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Axis\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Axis"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"BestFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["BestFit"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"BIC\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["BIC"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Binomial\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Binomial"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"BinomialDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["BinomialDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"BinormalDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["BinormalDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"BoxWhiskerChart\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["BoxWhiskerChart"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Cases\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Cases"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"CDF\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["CDF"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ChiSquareDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ChiSquareDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Column\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Column"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Cook's Distances\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Cook's Distances"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Date\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Date"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DatePlus\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DatePlus"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DateRange\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DateRange"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DateValue\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DateValue"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"DirichletDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DirichletDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DiscretePlot\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DiscretePlot"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DiscretePlot3D\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DiscretePlot3D"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DistributionChart\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DistributionChart"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DistributionFitTest\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DistributionFitTest"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Evaluate\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Evaluate"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ExponentialFamily\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ExponentialFamily"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ExtentSize\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ExtentSize"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"FileNameJoin\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FileNameJoin"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Filling\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Filling"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"FindDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FindDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"FindGeoLocation\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FindGeoLocation"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"FitCurvatureTable\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FitCurvatureTable"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"FitResiduals\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FitResiduals"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Frame\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Frame"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Framed\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Framed"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"FrameMargins\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FrameMargins"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GammaDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GammaDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Gaussian\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Gaussian"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GeneralizedLinearModelFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GeneralizedLinearModelFit"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"GeoGraphics\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GeoGraphics"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GeoMarker\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GeoMarker"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GeometricDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GeometricDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GeoRange\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GeoRange"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GraphicsRow\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GraphicsRow"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Grid\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Grid"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"HazardFunction\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["HazardFunction"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Histogram\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Histogram"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ImageSize\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ImageSize"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Import\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Import"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Join\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Join"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"LaplaceDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["LaplaceDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Large\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Large"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Length\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Length"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"LikelihoodRatioIndex\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["LikelihoodRatioIndex"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"LinearModelFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["LinearModelFit"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"LinkFunction\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["LinkFunction"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ListLinePlot\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ListLinePlot"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ListPlot\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ListPlot"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"LogitModelFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["LogitModelFit"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Manipulate\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Manipulate"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"MaxRecursion\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["MaxRecursion"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"MixtureDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["MixtureDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"MultivariatePoissonDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["MultivariatePoissonDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"NegativeBinomialLink\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["NegativeBinomialLink"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"NonlinearModelFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["NonlinearModelFit"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Normal\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Normal"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"NormalDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["NormalDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"NotebookDirectory\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["NotebookDirectory"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"NumericQ\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["NumericQ"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"ParameterBias\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ParameterBias"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ParameterTable\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ParameterTable"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PDF\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PDF"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PearsonChiSquare\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PearsonChiSquare"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Plot\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Plot"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Plot3D\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Plot3D"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PlotLabel\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PlotLabel"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PlotMarkers\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PlotMarkers"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PlotRange\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PlotRange"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PlotStyle\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PlotStyle"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Poisson\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Poisson"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PoissonDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PoissonDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PredictionLimits\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PredictionLimits"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Probability\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Probability"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"QuantilePlot\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["QuantilePlot"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"QuantityMagnitude\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["QuantityMagnitude"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"RandomVariate\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["RandomVariate"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Residuals\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Residuals"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"RoundingRadius\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["RoundingRadius"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Show\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Show"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"SmoothKernelDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["SmoothKernelDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"SortBy\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["SortBy"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Style\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Style"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Subsets\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Subsets"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"SurvivalFunction\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["SurvivalFunction"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Table\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Table"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Take\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Take"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Thick\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Thick"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"TimeSeries\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["TimeSeries"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"TimeSeriesModelFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["TimeSeriesModelFit"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"TimeSeriesWindow\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["TimeSeriesWindow"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Today\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Today"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"UniformDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["UniformDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"WeatherData\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["WeatherData"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ZipfDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ZipfDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> False, "Rows" -> False},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7017821491293144`*^9},ExpressionUUID->"48b2b06e-698b-40de-b631-\
08031b55fb25"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"fe77db7f-9273-447c-9cd6-ae670eae35df"],

Cell[CellGroupData[{

Cell["Initialize Slide", "Section",
 CellChangeTimes->{{3.7017821261075287`*^9, 
  3.7017821287033887`*^9}},ExpressionUUID->"3926c5da-6f0b-4361-a7e0-\
bf5c7b571e88"],

Cell[CellGroupData[{

Cell["Display functions", "Subsection",
 CellChangeTimes->{{3.7066209700404735`*^9, 
  3.706620976278843*^9}},ExpressionUUID->"c5b66729-3bc4-44d0-ac4f-\
95219bc2b266"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CellDisplay", "[", "expr_", "]"}], ":=", 
   RowBox[{"CellPrint", "[", 
    RowBox[{"ExpressionCell", "[", 
     RowBox[{"expr", ",", "\"\<Output\>\"", ",", 
      RowBox[{"Background", "\[Rule]", "None"}], ",", 
      RowBox[{"ShowCellLabel", "\[Rule]", "False"}], ",", 
      RowBox[{"CellFrame", "\[Rule]", "False"}], ",", 
      RowBox[{"CellMargins", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"100", ",", "100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"40", ",", "0"}], "}"}]}], "}"}]}], ",", "\"\<Output\>\"", 
      ",", 
      RowBox[{"GeneratedCell", "\[Rule]", "False"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MomentGrid", "[", 
    RowBox[{"list_", ",", "type_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"{", "list", "}"}]}], ",", 
     RowBox[{"Alignment", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Lighter", "[", 
            RowBox[{
             RowBox[{"Blend", "[", 
              RowBox[{"Switch", "[", 
               RowBox[{"type", ",", "Moment", ",", 
                RowBox[{"{", 
                 RowBox[{"Blue", ",", "Green"}], "}"}], ",", "CentralMoment", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"Red", ",", "Orange"}], "}"}], ",", 
                "FactorialMoment", ",", 
                RowBox[{"{", 
                 RowBox[{"Magenta", ",", "Cyan"}], "}"}], ",", "Cumulant", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"Purple", ",", "Red"}], "}"}]}], "]"}], "]"}], ",", 
             ".8"}], "]"}], ",", "White"}], "}"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Dividers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", 
           RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
          RowBox[{"{", "False", "}"}], ",", 
          RowBox[{"Darker", "[", 
           RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ItemSize", "\[Rule]", "30"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MomentTabView", "[", 
    RowBox[{"dist_", ",", 
     RowBox[{"n_Integer", "?", "Positive"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"CellDisplay", "@", 
    RowBox[{"TabView", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Moment\>\"", "\[Rule]", 
        RowBox[{"MomentGrid", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Moment", "[", 
             RowBox[{"dist", ",", "k"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", "Moment"}], 
         "]"}]}], ",", 
       RowBox[{"\"\<CentralMoment\>\"", "\[Rule]", 
        RowBox[{"MomentGrid", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"CentralMoment", "[", 
             RowBox[{"dist", ",", "k"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", "CentralMoment"}], 
         "]"}]}], ",", 
       RowBox[{"\"\<FactorialMoment\>\"", "\[Rule]", 
        RowBox[{"MomentGrid", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"FactorialMoment", "[", 
             RowBox[{"dist", ",", "k"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
          "FactorialMoment"}], "]"}]}], ",", 
       RowBox[{"\"\<Cumulant\>\"", "\[Rule]", 
        RowBox[{"MomentGrid", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Cumulant", "[", 
             RowBox[{"dist", ",", "k"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", "Cumulant"}], 
         "]"}]}]}], "}"}], "]"}]}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"99fbddae-6f57-48d6-8cbb-972cb86c23d3"]
}, Closed]],

Cell[CellGroupData[{

Cell["fshDat", "Subsection",
 CellChangeTimes->{{3.706620980102575*^9, 
  3.706620981074178*^9}},ExpressionUUID->"d03e69ea-728e-4cc6-a076-\
05ff7ad91f52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fshDat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "5.9`", ",", "7.5`", ",", "8.4`", ",", "8.8`", ",", "24.`", ",", 
       "16.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "32.`", ",", "12.5`", ",", "13.7`", ",", "14.7`", ",", "24.`", ",", 
       "13.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "40.`", ",", "13.8`", ",", "15.`", ",", "16.`", ",", "23.9`", ",", 
       "15.2`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "51.5`", ",", "15.`", ",", "16.2`", ",", "17.2`", ",", "26.7`", ",", 
       "15.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "70.`", ",", "15.7`", ",", "17.4`", ",", "18.5`", ",", "24.8`", ",", 
       "15.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "100.`", ",", "16.2`", ",", "18.`", ",", "19.2`", ",", "27.2`", ",", 
       "17.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "78.`", ",", "16.8`", ",", "18.7`", ",", "19.4`", ",", "26.8`", ",", 
       "16.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "80.`", ",", "17.2`", ",", "19.`", ",", "20.2`", ",", "27.9`", ",", 
       "15.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "85.`", ",", "17.8`", ",", "19.6`", ",", "20.8`", ",", "24.7`", ",", 
       "14.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "85.`", ",", "18.2`", ",", "20.`", ",", "21.`", ",", "24.2`", ",", 
       "13.2`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "110.`", ",", "19.`", ",", "21.`", ",", "22.5`", ",", "25.3`", ",", 
       "15.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "115.`", ",", "19.`", ",", "21.`", ",", "22.5`", ",", "26.3`", ",", 
       "14.7`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "125.`", ",", "19.`", ",", "21.`", ",", "22.5`", ",", "25.3`", ",", 
       "16.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "130.`", ",", "19.3`", ",", "21.3`", ",", "22.8`", ",", "28.`", ",", 
       "15.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "120.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "26.`", ",", 
       "14.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "120.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "24.`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "130.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "26.`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "135.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "25.`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "110.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "23.5`", ",", 
       "17.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "130.`", ",", "20.5`", ",", "22.5`", ",", "24.`", ",", "24.4`", ",", 
       "15.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "150.`", ",", "20.5`", ",", "22.5`", ",", "24.`", ",", "28.3`", ",", 
       "15.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "145.`", ",", "20.7`", ",", "22.7`", ",", "24.2`", ",", "24.6`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "150.`", ",", "21.`", ",", "23.`", ",", "24.5`", ",", "21.3`", ",", 
       "14.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "170.`", ",", "21.5`", ",", "23.5`", ",", "25.`", ",", "25.1`", ",", 
       "14.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "225.`", ",", "22.`", ",", "24.`", ",", "25.5`", ",", "28.6`", ",", 
       "14.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "145.`", ",", "22.`", ",", "24.`", ",", "25.5`", ",", "25.`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "188.`", ",", "22.6`", ",", "24.6`", ",", "26.2`", ",", "25.7`", ",", 
       "15.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "180.`", ",", "23.`", ",", "25.`", ",", "26.5`", ",", "24.3`", ",", 
       "13.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "197.`", ",", "23.5`", ",", "25.6`", ",", "27.`", ",", "24.3`", ",", 
       "15.7`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "218.`", ",", "25.`", ",", "26.5`", ",", "28.`", ",", "25.6`", ",", 
       "14.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "300.`", ",", "25.2`", ",", "27.3`", ",", "28.7`", ",", "29.`", ",", 
       "17.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "260.`", ",", "25.4`", ",", "27.5`", ",", "28.9`", ",", "24.8`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "265.`", ",", "25.4`", ",", "27.5`", ",", "28.9`", ",", "24.4`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "250.`", ",", "25.4`", ",", "27.5`", ",", "28.9`", ",", "25.2`", ",", 
       "15.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "250.`", ",", "25.9`", ",", "28.`", ",", "29.4`", ",", "26.6`", ",", 
       "14.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "300.`", ",", "26.9`", ",", "28.7`", ",", "30.1`", ",", "25.2`", ",", 
       "15.4`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "320.`", ",", "27.8`", ",", "30.`", ",", "31.6`", ",", "24.1`", ",", 
       "15.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "514.`", ",", "30.5`", ",", "32.8`", ",", "34.`", ",", "29.5`", ",", 
       "17.7`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "556.`", ",", "32.`", ",", "34.5`", ",", "36.5`", ",", "28.1`", ",", 
       "17.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "840.`", ",", "32.5`", ",", "35.`", ",", "37.3`", ",", "30.8`", ",", 
       "20.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "685.`", ",", "34.`", ",", "36.5`", ",", "39.`", ",", "27.9`", ",", 
       "17.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "700.`", ",", "34.`", ",", "36.`", ",", "38.3`", ",", "27.7`", ",", 
       "17.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "700.`", ",", "34.5`", ",", "37.`", ",", "39.4`", ",", "27.5`", ",", 
       "15.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "690.`", ",", "34.6`", ",", "37.`", ",", "39.3`", ",", "26.9`", ",", 
       "16.2`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "900.`", ",", "36.5`", ",", "39.`", ",", "41.4`", ",", "26.9`", ",", 
       "18.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "650.`", ",", "36.5`", ",", "39.`", ",", "41.4`", ",", "26.9`", ",", 
       "14.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "820.`", ",", "36.6`", ",", "39.`", ",", "41.3`", ",", "30.1`", ",", 
       "17.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "850.`", ",", "36.9`", ",", "40.`", ",", "42.3`", ",", "28.2`", ",", 
       "16.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "900.`", ",", "37.`", ",", "40.`", ",", "42.5`", ",", "27.6`", ",", 
       "17.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1015.`", ",", "37.`", ",", "40.`", ",", "42.4`", ",", "29.2`", ",", 
       "17.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "820.`", ",", "37.1`", ",", "40.`", ",", "42.5`", ",", "26.2`", ",", 
       "15.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1100.`", ",", "39.`", ",", "42.`", ",", "44.6`", ",", "28.7`", ",", 
       "15.4`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1000.`", ",", "39.8`", ",", "43.`", ",", "45.2`", ",", "26.4`", ",", 
       "16.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1100.`", ",", "40.1`", ",", "43.`", ",", "45.5`", ",", "27.5`", ",", 
       "16.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1000.`", ",", "40.2`", ",", "43.5`", ",", "46.`", ",", "27.4`", ",", 
       "17.7`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1000.`", ",", "41.1`", ",", "44.`", ",", "46.6`", ",", "26.8`", ",", 
       "16.3`"}], "}"}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.701622846863825*^9, 
  3.7016228533059397`*^9}},ExpressionUUID->"2c02205e-1dcb-449d-a7a5-\
6adaa56d3818"]
}, Closed]],

Cell[CellGroupData[{

Cell["Excel file clean up", "Subsection",
 CellChangeTimes->{{3.7066209932512665`*^9, 
  3.7066209973879137`*^9}},ExpressionUUID->"4ed51ec6-9aa0-4b18-9ce9-\
b5969cab5a71"],

Cell["\<\
Initialization code/ Data cleaning for Slide You will look at renewables up \
through the year 2010. First, determine the number of the column containing \
the data you want to use. Referring to your table above, you see you want \
rows 4 through 57 and columns 1 and 9. Using pattern matching, convert the \
strings to numbers and extract only the yearly totals.Using replacement \
rules, \[OpenCurlyDoubleQuote]clean up\[CloseCurlyDoubleQuote] the rows \
corresponding to the years 2006, 2007, and 2008.\
\>", "Text",
 CellChangeTimes->{{3.574672766264118*^9, 3.5746727664150963`*^9}, 
   3.580041294993176*^9, {3.632234911782844*^9, 3.632234924566309*^9}, 
   3.701623118775034*^9, 3.7016231550800676`*^9, {3.7016232037751884`*^9, 
   3.7016232179919825`*^9}},ExpressionUUID->"af951f61-6eb0-48e4-ae76-\
85fd1756620f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"electricData", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<epmxlfile1_1.xls\>\""}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Dimensions", "[", "electricData", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Position", "[", 
   RowBox[{"electricData", ",", "\"\<Other Renewables[4]\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"renewables", "=", 
   RowBox[{"electricData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"4", ";;", "57"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "9"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yearTots", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"renewables", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"_", "?", "NumericQ"}], "|", "\"\<Total\>\""}], ",", 
       RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elecdata", "=", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"yearTots", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "1"}], "}"}], "\[Rule]", " ", "2006."}], 
       ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1"}], "}"}], "\[Rule]", "2007."}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "\[Rule]", "2008."}]}], 
      "}"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7008215673436494`*^9, 3.700821586316769*^9}, {
  3.701107442982889*^9, 3.7011074636455884`*^9}, {3.701107517862075*^9, 
  3.7011075696568327`*^9}, {3.701623089919279*^9, 3.701623112117771*^9}, {
  3.7016231707466154`*^9, 
  3.701623196321854*^9}},ExpressionUUID->"359ceb4a-5769-4658-bd82-\
5d3977de27f0"]
}, Closed]],

Cell[CellGroupData[{

Cell["United States data", "Subsection",
 CellChangeTimes->{{3.7066207788124566`*^9, 3.706620780704779*^9}, {
  3.7066209602561884`*^9, 
  3.7066209620917315`*^9}},ExpressionUUID->"c16b6f52-7791-47ee-b4ac-\
7b590b33b83e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"popdat", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"EntityValue", "[", 
       RowBox[{
        RowBox[{"Entity", "[", 
         RowBox[{"\"\<Country\>\"", ",", "\"\<UnitedStates\>\""}], "]"}], ",", 
        RowBox[{"EntityProperty", "[", 
         RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
            RowBox[{"Interval", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"DateObject", "[", 
                RowBox[{
                 RowBox[{"{", "1967", "}"}], ",", "\"\<Year\>\"", ",", 
                 "\"\<Gregorian\>\"", ",", 
                 RowBox[{"-", "5."}]}], "]"}], ",", 
               RowBox[{"DateObject", "[", 
                RowBox[{
                 RowBox[{"{", "2017", "}"}], ",", "\"\<Year\>\"", ",", 
                 "\"\<Gregorian\>\"", ",", 
                 RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
         "]"}]}], "]"}]}]}], ";"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"popdat", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 1967\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1967", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1.98712`*^8","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 1968\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1968", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "2.00706`*^8","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 1969\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1969", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "2.02677`*^8","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 1970\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1970", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "209463865","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 1971\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1971", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "211355529","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 1972\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1972", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "213250350","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 1973\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1973", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "215164616","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 1974\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1974", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "217113584","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 1975\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1975", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "219108358","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 1976\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1976", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "221161377","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 1977\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1977", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "223274855","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 1978\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1978", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "225436004","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 1979\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1979", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "227624232","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 1980\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1980", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "229825004","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 1981\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1981", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "232035086","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 1982\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1982", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "234261242","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 1983\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1983", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "236510688","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 1984\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1984", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "238794274","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 1985\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1985", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "241119752","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 1986\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1986", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "243495805","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 1987\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1987", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "245920994","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 1988\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1988", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "248381577","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 1989\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1989", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "250857751","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 1990\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1990", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "253339097","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 1991\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1991", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "255807342","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 1992\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1992", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "258275919","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 1993\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1993", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "260803255","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 1994\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1994", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "263468979","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 1995\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1995", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "266323717","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 1996\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1996", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "269393632","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 1997\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1997", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "272643340","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 1998\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1998", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "275986072","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 1999\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1999", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "279300030","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2000\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "282496310","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2001\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2001", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "285544778","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2002\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2002", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "288467308","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2003\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2003", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "291290823","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2004\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2004", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "294063120","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2005\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "296820296","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2006\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2006", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "299564470","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2007\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2007", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "302284564","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2008\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2008", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "304989064","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2009\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2009", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "307686729","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 2010\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "310383948","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2011\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "313232044","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2012\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2012", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "316265537","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2013\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2013", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "319330342","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2014\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "322422965","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2015\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "325539790","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 2016\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2016", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "328677531","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2017\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2017", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "331833494","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"GDP", "=", 
      RowBox[{"Normal", "@", 
       RowBox[{"EntityValue", "[", 
        RowBox[{
         RowBox[{"Entity", "[", 
          RowBox[{"\"\<Country\>\"", ",", "\"\<UnitedStates\>\""}], "]"}], 
         ",", 
         RowBox[{"EntityProperty", "[", 
          RowBox[{"\"\<Country\>\"", ",", "\"\<GDP\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
             RowBox[{"Interval", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DateObject", "[", 
                 RowBox[{
                  RowBox[{"{", "2000", "}"}], ",", "\"\<Year\>\"", ",", 
                  "\"\<Gregorian\>\"", ",", 
                  RowBox[{"-", "5."}]}], "]"}], ",", 
                RowBox[{"DateObject", "[", 
                 RowBox[{
                  RowBox[{"{", "2015", "}"}], ",", "\"\<Year\>\"", ",", 
                  "\"\<Gregorian\>\"", ",", 
                  RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}]}], ";"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"GDP", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2000\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.0284779`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2001\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2001", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.0621824`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2002\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2002", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.0977514`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2003\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2003", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.151067`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2004\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2004", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.2274928`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2005\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.3093726`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2006\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2006", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.3855888`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2007\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2007", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.4477635`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2008\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2008", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.4718582`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2009\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2009", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.4418739`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 2010\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.4964372`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2011\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.5517926`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2012\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2012", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.6155255`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2013\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2013", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.6691517`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2014\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.7393103`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2015\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.8036648`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Pop2000", "=", 
      RowBox[{"Normal", "@", 
       RowBox[{"EntityValue", "[", 
        RowBox[{
         RowBox[{"Entity", "[", 
          RowBox[{"\"\<Country\>\"", ",", "\"\<UnitedStates\>\""}], "]"}], 
         ",", 
         RowBox[{"EntityProperty", "[", 
          RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
             RowBox[{"Interval", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DateObject", "[", 
                 RowBox[{
                  RowBox[{"{", "2000", "}"}], ",", "\"\<Year\>\"", ",", 
                  "\"\<Gregorian\>\"", ",", 
                  RowBox[{"-", "5."}]}], "]"}], ",", 
                RowBox[{"DateObject", "[", 
                 RowBox[{
                  RowBox[{"{", "2015", "}"}], ",", "\"\<Year\>\"", ",", 
                  "\"\<Gregorian\>\"", ",", 
                  RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}]}], ";"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Pop2000", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2000\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "282496310","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2001\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2001", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "285544778","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2002\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2002", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "288467308","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2003\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2003", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "291290823","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2004\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2004", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "294063120","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2005\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "296820296","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2006\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2006", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "299564470","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2007\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2007", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "302284564","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2008\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2008", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "304989064","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2009\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2009", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "307686729","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 2010\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "310383948","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2011\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "313232044","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2012\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2012", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "316265537","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2013\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2013", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "319330342","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2014\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "322422965","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2015\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "325539790","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}]}], "}"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7017717056746287`*^9, 3.701771727700796*^9}, {
   3.7017731416339607`*^9, 3.7017731422655983`*^9}, 3.7017744878371477`*^9, {
   3.7066207842002115`*^9, 3.706620855663538*^9}, 
   3.7066209543001175`*^9},ExpressionUUID->"3cec2939-a17a-4ec7-b7b3-\
da9ce5c991ca"]
}, Closed]],

Cell[CellGroupData[{

Cell["India data", "Subsection",
 CellChangeTimes->{{3.7066207392046757`*^9, 
  3.7066207409864473`*^9}},ExpressionUUID->"fefd771a-670f-4480-af0b-\
0fa34dc03c5c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{"popdat", "=", 
    RowBox[{"Normal", "@", 
     RowBox[{"EntityValue", "[", 
      RowBox[{
       RowBox[{"Entity", "[", 
        RowBox[{"\"\<Country\>\"", ",", "\"\<India\>\""}], "]"}], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
           RowBox[{"Interval", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DateObject", "[", 
               RowBox[{
                RowBox[{"{", "1967", "}"}], ",", "\"\<Year\>\"", ",", 
                "\"\<Gregorian\>\"", ",", 
                RowBox[{"-", "5."}]}], "]"}], ",", 
              RowBox[{"DateObject", "[", 
               RowBox[{
                RowBox[{"{", "2017", "}"}], ",", "\"\<Year\>\"", ",", 
                "\"\<Gregorian\>\"", ",", 
                RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
        "]"}]}], "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"popdat", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 1967\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1967", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "5.04345`*^8","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 1968\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1968", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "5.15601`*^8","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 1969\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1969", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "5.27177`*^8","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 1970\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1970", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "553873890","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 1971\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1971", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "566651479","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 1972\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1972", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "579871075","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 1973\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1973", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "593526633","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 1974\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1974", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "607606569","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 1975\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1975", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "622096682","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 1976\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1976", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "636992593","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 1977\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1977", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "652279308","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 1978\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1978", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "667917437","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 1979\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1979", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "683857312","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 1980\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1980", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "700058589","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 1981\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1981", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "716493309","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 1982\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1982", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "733151769","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 1983\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1983", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "750033539","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 1984\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1984", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "767146806","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 1985\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1985", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "784490842","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 1986\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1986", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "802051806","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 1987\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1987", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "819800055","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 1988\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1988", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "837699675","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 1989\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1989", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "855707358","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 1990\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1990", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "873785449","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 1991\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1991", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "891910180","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 1992\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1992", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "910064576","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 1993\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1993", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "928226051","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 1994\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1994", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "946373316","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 1995\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1995", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "964486155","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 1996\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1996", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "982553253","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 1997\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1997", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1000558144","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 1998\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1998", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1018471141","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 1999\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1999", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1036258683","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 2000\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1053898107","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 2001\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2001", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1071374264","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 2002\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2002", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1088694080","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 2003\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2003", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1105885689","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 2004\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2004", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1122991192","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 2005\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1140042863","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 2006\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2006", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1157038539","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 2007\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2007", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1173971629","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 2008\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2008", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1190863679","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 2009\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2009", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1207740408","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 2010\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1224614327","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 2011\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1241491960","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 2012\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2012", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1258350971","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 2013\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2013", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1275137828","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 2014\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1291780156","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 2015\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1308220695","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 2016\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2016", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1324435275","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 2017\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2017", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1340420485","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"(*", 
    RowBox[{"GDP", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"EntityValue", "[", 
       RowBox[{
        RowBox[{"Entity", "[", 
         RowBox[{"\"\<Country\>\"", ",", "\"\<India\>\""}], "]"}], ",", 
        RowBox[{"EntityProperty", "[", 
         RowBox[{"\"\<Country\>\"", ",", "\"\<GDP\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
            RowBox[{"Interval", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"DateObject", "[", 
                RowBox[{
                 RowBox[{"{", "2000", "}"}], ",", "\"\<Year\>\"", ",", 
                 "\"\<Gregorian\>\"", ",", 
                 RowBox[{"-", "5."}]}], "]"}], ",", 
               RowBox[{"DateObject", "[", 
                RowBox[{
                 RowBox[{"{", "2015", "}"}], ",", "\"\<Year\>\"", ",", 
                 "\"\<Gregorian\>\"", ",", 
                 RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
         "]"}]}], "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"GDP", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 2000\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"4.76609148165173`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 2001\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2001", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"4.93954161367563`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 2002\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2002", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"5.23968381476715`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 2003\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2003", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"6.18356467437027`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 2004\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2004", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"7.21584805204777`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 2005\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"8.3421469956814`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 2006\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2006", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"9.49116769619554`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 2007\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2007", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.20107196052975`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 2008\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2008", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.18691341902134`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 2009\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2009", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.32389641714706`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 2010\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.65656216864857`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 2011\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.82298950729005`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 2012\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2012", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.828985283085`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 2013\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2013", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.86320834355781`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 2014\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"2.04243859134398`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 2015\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"2.09539834909554`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"Pop2000", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Normal", "@", 
       RowBox[{"EntityValue", "[", 
        RowBox[{
         RowBox[{"Entity", "[", 
          RowBox[{"\"\<Country\>\"", ",", "\"\<India\>\""}], "]"}], ",", 
         RowBox[{"EntityProperty", "[", 
          RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
             RowBox[{"Interval", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DateObject", "[", 
                 RowBox[{
                  RowBox[{"{", "2000", "}"}], ",", "\"\<Year\>\"", ",", 
                  "\"\<Gregorian\>\"", ",", 
                  RowBox[{"-", "5."}]}], "]"}], ",", 
                RowBox[{"DateObject", "[", 
                 RowBox[{
                  RowBox[{"{", "2015", "}"}], ",", "\"\<Year\>\"", ",", 
                  "\"\<Gregorian\>\"", ",", 
                  RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], "\n", "Pop2000"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2000\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1053898107","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2001\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2001", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1071374264","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2002\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2002", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1088694080","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2003\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2003", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1105885689","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2004\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2004", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1122991192","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2005\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1140042863","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2006\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2006", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1157038539","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2007\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2007", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1173971629","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2008\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2008", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1190863679","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2009\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2009", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1207740408","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 2010\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1224614327","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2011\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1241491960","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2012\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2012", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1258350971","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2013\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2013", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1275137828","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2014\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1291780156","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2015\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1308220695","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}]}], "}"}]}]}], ";"}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7017717056746287`*^9, 3.701771727700796*^9}, {
   3.7017731416339607`*^9, 3.7017731422655983`*^9}, 
   3.7017744878371477`*^9},ExpressionUUID->"dc7e9e7e-3932-4d1f-a1e8-\
123e4bd1097d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Other data", "Subsection",
 CellChangeTimes->{{3.7066207530737157`*^9, 
  3.7066207539448276`*^9}},ExpressionUUID->"65101648-3e1b-4174-baad-\
49fb1a7a4951"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NiceTable", "[", 
   RowBox[{"lis_List", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "Grid", "]"}]}]}], "]"}], ":=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"lis", ",", "4", ",", "4", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", "\"\<\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"opts", ",", 
      RowBox[{"Alignment", "\[Rule]", " ", "Left"}]}], "}"}]}], 
   "]"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"e76bdc5c-28b1-4f62-bcee-fa4069b2a96a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"wndData", "=", 
    RowBox[{"TimeSeries", "[", 
     RowBox[{"WeatherData", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8.08", ",", "77.54"}], "}"}], ",", " ", 
       "\"\<MeanWindSpeed\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"Date", "[", "]"}], ",", "\"\<Day\>\""}], "}"}]}], "]"}], 
     "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"wndData", "=", 
    InterpretationBox[
     RowBox[{
      TagBox["TimeSeries",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"],
               ImageSizeCache->{15., {0., 15.}}],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = True),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {}, 
               {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
                StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]],
                 StripOnInput->False,
                 FontFamily->"Arial"]}}, {}},
             AspectRatio->1,
             Axes->{False, False},
             AxesLabel->{None, None},
             AxesOrigin->{0., 0.},
             Background->GrayLevel[0.93],
             BaseStyle->{FontFamily -> "Arial"},
             DisplayFunction->Identity,
             Frame->{{True, True}, {True, True}},
             FrameLabel->{{None, None}, {None, None}},
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]],
             FrameTicks->{{None, None}, {None, None}},
             GridLines->{None, None},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             ImageSize->{Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]},
             LabelStyle->{FontFamily -> "Arial"},
             Method->{"ScalingFunctions" -> None},
             PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
             PlotRangeClipping->True,
             PlotRangePadding->{{1, 1}, {1, 1}},
             Ticks->{Automatic, Automatic}], GridBox[{
              {
               TagBox[
                TemplateBox[{RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2000\"", "SummaryItem"]}],RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"13 Apr 2017\"", "SummaryItem"]}]},
                 "RowDefault"],
                "SummaryItem"], "\[SpanFromLeft]"},
              {
               RowBox[{
                TagBox["\<\"Data points: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["6283",
                 "SummaryItem"]}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
         GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = False),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {}, 
               {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
                StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]],
                 StripOnInput->False,
                 FontFamily->"Arial"]}}, {}},
             AspectRatio->1,
             Axes->{False, False},
             AxesLabel->{None, None},
             AxesOrigin->{0., 0.},
             Background->GrayLevel[0.93],
             BaseStyle->{FontFamily -> "Arial"},
             DisplayFunction->Identity,
             Frame->{{True, True}, {True, True}},
             FrameLabel->{{None, None}, {None, None}},
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]],
             FrameTicks->{{None, None}, {None, None}},
             GridLines->{None, None},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             ImageSize->{Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]},
             LabelStyle->{FontFamily -> "Arial"},
             Method->{"ScalingFunctions" -> None},
             PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
             PlotRangeClipping->True,
             PlotRangePadding->{{1, 1}, {1, 1}},
             Ticks->{Automatic, Automatic}], GridBox[{
              {
               TagBox[
                TemplateBox[{RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2000\"", "SummaryItem"]}],RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"13 Apr 2017\"", "SummaryItem"]}]},
                 "RowDefault"],
                "SummaryItem"], "\[SpanFromLeft]"},
              {
               RowBox[{
                TagBox["\<\"Data points: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["6283",
                 "SummaryItem"]}], "\[SpanFromLeft]"},
              {
               RowBox[{
                TagBox["\<\"Regular: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["False",
                 "SummaryItem"]}], 
               RowBox[{
                TagBox["\<\"Output dimension: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["1",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Metadata: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["None",
                 "SummaryItem"]}], 
               RowBox[{
                TagBox["\<\"Minimum increment: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["86400",
                 "SummaryItem"]}]},
              {
               TagBox["\<\"\"\>",
                "SummaryItem"], 
               RowBox[{
                TagBox["\<\"Resampling: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"LinearInterpolation\"\>",
                 "SummaryItem"]}]}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open$$],
         ImageSize->Automatic],
        BaselinePosition->Baseline],
       DynamicModuleValues:>{}], "]"}],
     TemporalData[TimeSeries, {{{
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[17.96, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[17.22, "Hours"^(-1) "Kilometers"], 
         Quantity[16.85, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[19.82, "Hours"^(-1) "Kilometers"], 
         Quantity[20.37, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[16.85, "Hours"^(-1) "Kilometers"], 
         Quantity[19.45, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[20.37, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[18.89, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[17.78, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[17.22, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[17.59, "Hours"^(-1) "Kilometers"], 
         Quantity[17.22, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[34.45, "Hours"^(-1) "Kilometers"], 
         Quantity[18.15, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[17.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[18.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[18.15, "Hours"^(-1) "Kilometers"], 
         Quantity[18.71, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[18.52, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[17.59, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[19.26, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[18.52, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[17.22, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[18.71, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[18.89, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[16.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[17.96, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[17.78, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[16.48, "Hours"^(-1) "Kilometers"], 
         Quantity[18.33, "Hours"^(-1) "Kilometers"], 
         Quantity[18.15, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[19.26, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[17.22, "Hours"^(-1) "Kilometers"], 
         Quantity[18.33, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[18.52, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[18.33, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[18.15, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[20.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[17.41, "Hours"^(-1) "Kilometers"], 
         Quantity[18.52, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[16.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[17.41, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[16.48, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[17.96, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[18.33, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[16.48, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[0.37, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[17.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[17.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[17.22, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[19.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[16.85, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[19.63, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[17.22, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[17.78, "Hours"^(-1) "Kilometers"], 
         Quantity[18.52, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[17.41, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[18.33, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[0.56, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[0.37, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[0.56, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[17.59, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[17.22, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[17.78, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[16.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[19.63, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[17.22, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[17.59, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[18.71, "Hours"^(-1) "Kilometers"], 
         Quantity[18.52, "Hours"^(-1) "Kilometers"], 
         Quantity[18.71, "Hours"^(-1) "Kilometers"], 
         Quantity[18.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[18.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[0.56, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[0.37, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[0.56, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[25.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[17.78, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[17.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[20.56, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[17.41, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[17.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[18.15, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[18.89, "Hours"^(-1) "Kilometers"], 
         Quantity[17.59, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[19.08, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[16.48, "Hours"^(-1) "Kilometers"], 
         Quantity[19.08, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[16.85, "Hours"^(-1) "Kilometers"], 
         Quantity[17.96, "Hours"^(-1) "Kilometers"], 
         Quantity[19.08, "Hours"^(-1) "Kilometers"], 
         Quantity[18.15, "Hours"^(-1) "Kilometers"], 
         Quantity[17.41, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[17.78, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[0.37, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[0.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[17.41, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[17.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[18.15, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[16.85, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[17.96, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[16.85, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[19.26, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[16.85, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[17.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[16.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[19.26, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[16.48, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[0.37, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[0.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[0.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[0.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[0.19, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[0.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[0.56, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[17.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[0.56, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[0.37, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Missing["NotAvailable"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[0.37, "Hours"^(-1) "Kilometers"], 
         Quantity[0.37, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[0.37, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[18.15, "Hours"^(-1) "Kilometers"], 
         Quantity[17.41, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Missing["NotAvailable"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[0.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[0.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[0.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[16.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[18.15, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[17.96, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[17.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[17.96, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[17.59, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[0.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[16.85, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[17.96, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[1.3, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[17.96, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[0, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[1.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.67, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[1.85, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[1.48, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.33, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.59, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[2.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[2.22, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[2.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[0.74, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[2.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[16.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[3.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[2.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[4.07, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[4.26, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[4.82, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[3.89, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[3.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[4.44, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[5.56, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[4.63, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[3.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[17.59, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[5.93, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[12.96, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[17.78, "Hours"^(-1) "Kilometers"], 
         Quantity[18.33, "Hours"^(-1) "Kilometers"], 
         Quantity[18.89, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[17.78, "Hours"^(-1) "Kilometers"], 
         Quantity[16.3, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[17.22, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[17.22, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[17.22, "Hours"^(-1) "Kilometers"], 
         Quantity[17.96, "Hours"^(-1) "Kilometers"], 
         Quantity[17.04, "Hours"^(-1) "Kilometers"], 
         Quantity[18.33, "Hours"^(-1) "Kilometers"], 
         Quantity[16.48, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[18.52, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[18.33, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[16.48, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[17.59, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[11.85, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[16.67, "Hours"^(-1) "Kilometers"], 
         Quantity[16.11, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[15.93, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[14.08, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[14.82, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[15, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[15.74, "Hours"^(-1) "Kilometers"], 
         Quantity[15.19, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[13.89, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[14.63, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[14.26, "Hours"^(-1) "Kilometers"], 
         Quantity[15.56, "Hours"^(-1) "Kilometers"], 
         Quantity[14.45, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[13.52, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[11.48, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.37, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[5, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[10.56, "Hours"^(-1) "Kilometers"], 
         Quantity[12.41, "Hours"^(-1) "Kilometers"], 
         Quantity[12.78, "Hours"^(-1) "Kilometers"], 
         Quantity[12.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[6.48, "Hours"^(-1) "Kilometers"], 
         Quantity[5.74, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[9.07, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.04, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.63, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[5.19, "Hours"^(-1) "Kilometers"], 
         Quantity[10.37, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[6.67, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.41, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[7.22, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[10.19, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[7.96, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[9.26, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[11.67, "Hours"^(-1) "Kilometers"], 
         Quantity[8.15, "Hours"^(-1) "Kilometers"], 
         Quantity[8.89, "Hours"^(-1) "Kilometers"], 
         Quantity[6.3, "Hours"^(-1) "Kilometers"], 
         Quantity[8.7, "Hours"^(-1) "Kilometers"], 
         Quantity[10.93, "Hours"^(-1) "Kilometers"], 
         Quantity[11.11, "Hours"^(-1) "Kilometers"], 
         Quantity[10.74, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[6.11, "Hours"^(-1) "Kilometers"], 
         Quantity[6.85, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[8.52, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[8.33, "Hours"^(-1) "Kilometers"], 
         Quantity[7.78, "Hours"^(-1) "Kilometers"], 
         Quantity[9.82, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[7.59, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[13.7, "Hours"^(-1) "Kilometers"], 
         Quantity[11.3, "Hours"^(-1) "Kilometers"], 
         Quantity[13.33, "Hours"^(-1) "Kilometers"], 
         Quantity[10, "Hours"^(-1) "Kilometers"], 
         Quantity[9.45, "Hours"^(-1) "Kilometers"], 
         Quantity[13.15, "Hours"^(-1) "Kilometers"], 
         Quantity[15.37, "Hours"^(-1) "Kilometers"], 
         Quantity[12.59, "Hours"^(-1) "Kilometers"], 
         Quantity[12.22, "Hours"^(-1) "Kilometers"]}}, CompressedData["
1:eJxdvU+u7UrzXPcz4JZH4K5nwPqXlTkEAWppCG4IUMsNeRaatDL2oS5X6BMk
vNB7l/ec2JtcVeRi1f/z//5//+W//h//8R//8d//z/5//vN/++////+W/sf/
jfSf/q/+hzXOibvief7F2wExd2zEWjO/GM+oiTieE4z6l1+cN3GoWLF5qH0G
D3XW5aFibh7qjoeHuhU8VObioar/zxfv72f84tgTh7pzJg51+//iUHc/g4fa
+m+/2P8fPFTEw0PdfXmoXKz9/qr6F/vPsfZ8irXnuKw9Z7D2XIe1516sPc9k
7RmDtWcUa8/fJ/bFvKw967D2ejZrrzFZe83B2ms9rL1Wsvbal7X338Pa6/fF
+eJdrL1ysvaqh7VXFWrvf0rU3l/nQO3xzIPa41kLtcez5+Ghft9fxEoeKnLz
UPcOHirP5aFqo/Y+qxZq7w9soPbo46D2jonaY/xOoy/umDzU2clDxTo81J2D
h8oneaiszUNVovaYT6D2mOOw9vk7m7+4Jmufe7D2uYu1z/4K81C/v+eL97D2
mZu1z1qsfT2Dta/fRQWxWPual7X32cva+yvI2tfv1/3i32/8L96Hta9brL1P
Bda+fte2f3E/h7XvsVn7npO17zVY++9bxZisfffFj4eKw9r33ax9/y6xX6zB
2s/zsPbzFGs/47L28/vwv7gOaz97sfZzJmvvH4m1n9+V/os3WXtf3Vh7X1ZY
e5/PrD1+38EvzsHa+6vD2vszY+1dFmv/XZ0Rg0iNxi9rjyRSI4pI7Uikxn2I
1KYikdonBpHafw+RGncTqXEPkdqRSI3+6rP2/vxY+00itWlMpPZhiNT+/YjU
6Ks1a89JpPbfSqT2NZRIjTxEamQQqfH7SBCTSO1IpEYWkdqtE6lRg0iNmkRq
9JiItdcmUjsSqVGHSO0aidSmL5EajRDW3h8+ar/PQ6TeZxCpHYnU+0wi9T6L
SO2fgUjtIRKRep8gUvtLR6R2IFL/Lm2IRaT2uI1IvWMQqc1EIvWORaR2JFJ7
4EakXg3leKggUu+4ROodSaTeUUSqfjnU3pFIbSgSqT1gJFLvXETqnZtI7TOS
SL0ziNSOROrt8TJrn0mk3llE6v39PoiDSO1LDJHakUjtCwOR2sMpIvWuQ6T2
lY1IvesSqXclkXpXEakdidQeTROpdw8iVdcn1r4XkdofJ5HacCJSOxKpdweR
2gNxIrVH8UTq3UWk3vMQqX2ZJFJ/59TDSKTensSw9rOJ1HsOkdpnPpHakwki
tYc1RGpHIrWv1kRq/yORenucx9p7vMXa+69l7f0nWXtsIvU2RFl7w4y1NzZY
e1+vWXsUkXr7CsXa+9LA2vu3Z+19MrD2X0DcROrt3ln7DSL13kukdiRS700i
tf8lkdonJJF6cxCpPdogUnuGR6R2JFL7byFShVDWnkGk9g9FpN5MIvVmEam3
HiK1I5F6axCp/csTqX0pJ1Kb5ETq3zgVMYjUjkTqrUuk3koi9VYRqf3HiNR8
BpHaIwgitSORmn9/9IubSO1PjEjVIGDxUJdI7estkdrTbiK1I5Ga4yFSe1xD
pObfb/DFRaTm2ERq9gl6eahDpOYPToiXSM2RRGoPH4nUHl4RqflXJCKR2t9f
IjXnIlL7xCdScx4iNWcQqTkvkdrfVyJVX1/W/vd5/ovrIVL7NCJS+6whUnMt
IjXXJlI7Eqm5DpGaK4jUHmwSqfn3tfpiEan974jUjkRqX/iI1NyTSO1RHZHa
c1QiNfchUnvMS6Tm37cbkUjtj49Izb54s/bGAGs/g0jtrxGRmmcRqR2J1EYm
kZp/J9kXg0hN3TjjoZJIzVNEav6u7IxEauquBA4Vk0jtGQCRmn/n+hcPkZqa
8vFQQaT2YItI7akjkZo9jmftGk/jUH3asPb+ZVn73yXni4tITQ1WeKhDpPan
S6TmvURqo4tITZGAhyoitf8SIvXvpgPiJFJTpxkO1d9v1t5fLNaeh0jNrpK1
63fgoZJI7esCkZp/F+AvDiK1I5GqGR1r72soa69NpGYdIrUvR0RqTweJ1Kwk
UvOPA18sIrVLJ1KrhzmovX8hIrV+l0XETaR2JFLrOURqT1KJ1PrD0ReTSK2n
iNQaD5HakUjtmonUPi+I1D5didTq79zioQ6RWn9U/OIlUktjGR4qiVR9vKi9
f3UiteYgUquvXqx9LiK1I5H61wXiIVL7Qk+kVo89WftMIrXn5ERqRyK1+iLK
2n+TXMRJpNbfGOGLm0itdYhU/TqsvS9ArH1dIrVWEqk9RCBSe8JDpNYeRGr9
DVUQidQeIRKp/a+I1D7niNT6XVMQL5HaPxOR2pFIrV1Eav2NmL44iNRGFZHa
U2UitU99IrXOIVI7Eql1gkitc4lU3c5h7X8Dt38xHiK1v81EakciVVcg1h6L
SO15CJFaDVjWHkGkVlwi9e8OMiOR2sN2IrV6esTa7yBS+z8lUusuIrWvg0Rq
RyK1ek7L2v+GsV+8RGr1fIm194WPtfe/Ye35EKmVg0itHpuy9h4FsvYefrH2
v9H0F4NIbYISqR2J1MYCkVq/E/KL/a1i7X0ZZe19OWPtfeFg7X+D+i9uIrXn
UkRq9ZeDtfeHxNoridTqn4O19/++2vVXAqlTE8uv9o4TSNVdMyC14wZSOx4g
dQqSg4cKILXjBVI7JpDasYDU+YwHSJ1/YEOcQKoikNpxAakdN5Da8QCpulMN
pHa8QGrHBFIVgdSOBaT2rOwBUjuOw9r7qsHa+6vP2ucerH2eh7XPk6x9xmXt
8wZr/5vwfbEWa1/PZO1rPKz9j0FfnMna+yNh7T0wZ+3rLNa+YrL2v3knYrH2
lcnaV13Wvp/D2vfYrH3Pxdr3Gqy9/1PW3ghh7X/T3y9GsPZ9N2vfuVj7rsna
z/Ow9vMUaz8jWfuZwdrPOqz9bxb+xTNZ+4nB2k8Uaz83WfvJy9pPHdYez2bt
MRZrjzlY+9/NAMRi7bEva48TrD1is/Y/P+WLOVl71MPao4q13ydZ+989iS/O
w9rv2qz97sna7xms/U+TQUzWfu9l7TcPa7+1WfvfrZEvjsHacz6sPWex9lyX
tf/ZOl88h7VnLNaed7L2zIe1/92h+WIla68nWHuNw9prbtb+Jw19cQ/WXudh
7XWStRf1pPk3S0GkntSRetIcD/WkjtSTFIHUjtSTOlJP6kg9qSP1pI7UkzpS
T1IkUjUEXDwU9aQ5BvWkjtSTdPOOSB2DelJH6kmKROoY1JM6Uk/qSD2pI/Wk
jtSTpppA7WNST+pIPakj9aSO1JM6Uk/qSD2pI/UkRSJ1TOpJesJFpDbnidSx
qCdNXbxY+6Ke1JF6kiKR2tNOIlWzYda+qCd1pJ7UkXpSR+pJikTqn9uBSD2p
I/WkjtSTpCsQqWNTT1IkUnvUQ6SOTT2pI/WkjtSTeuBCPakj9aSp7ydrP9ST
ZAURqeNQT+pIPUkjJCJVrh5rP9STFIlUaWGsPagnTYlQrD2oJ009lWTtQT1J
kUiVZcLag3rSlFfB2oN60pRJwNov9aQ5LvUkRSJVT4tZ+6WeNPXIh7Vf6kkC
N5GqJ3Os/VJPmrphw9ov9aSpxy2sPaknTT1gYO1JPWn+3XJiJFJ1E5m1J/Wk
qdumrD2pJ03dKGTtRT1JkUjVPSnWXtSTpu7CsPainjQ1n2ftRT1JkUjVFJe1
F/WkqUkdatdsCrXPh3rS1PwBtWvgjto1Yr48FPWkOR/qSVODs+ChqCfpDhuR
qnHA4aGoJ02RD7ULOahd13rUrossap+DetLUZeXhoagnTZ1Ii4einjTnoJ40
9ZmhdnWH2vVTsvZJPUmRSJ2TepKenhCpc1JP6kg9af6dCYjUkxSJ1DmpJ/Vf
Sz2pI/WkjtSTOlJP6kg9SZFInYt6UkfqSfp1iVT9Nax9UU/SFYVI7REhkdqR
SJ2bepJmv0Tq3NSTOlJPUutE6tzUkxSJ1LmpJ00pJqz9UE/qSD2pI/Wk/mfq
SYpEan/4ROo81JN0HCJ1HupJHakndaSe1N8j6kmKROoM6kmSk4jU/g4SqX1p
I1J125u1B/UkRSK1J6VE6gzqSR2pJ82/5weI1JN0KhCpHYnUeakndaSe1JF6
UkfqSR2pJ3WkntSRepIikdo/EZGqm7OsPakndaSepOfoROpM6kmKROpM6kkd
qSfpikOk9oWBSJ1FPakj9aSOk0jVnS/WXtSTOlJP6kg9qSP1JF2QiNRZ1JMU
idT+OInU9VBP6kg9qSP1pI7Uk353b4qHop7UkXqSLpNE6nqoJ009mRk8FPWk
vqZST+pIPUmRSO3vGJH6N6xBpJ6kqzWR+nPneSjqSXMN6knz94yXh6KeNH+3
jnCoST1prkk9af5+xc1IpIoZrH1ST5KvT6SuST2pI/Uk3bskUntqRaSuRT2p
I/UksYtIXYt6UkfqSR2pJ/0es7L2RT2pI/WkjtSTOlJPakhSTxJCidS1qScp
EqlrU0/qSD2pI/WkjtSTpn5b1r6pJwndRGpHIrXHqUSqHh6y9kM9qSP1pI7U
kzpST1IkUv8eBiNST9KAgkhdh3pSn+nUkzpST1IkUldQT+pIPakj9aSO1JM6
Uk/SuIZI1QWHtQf1pI7Uk3oQRD1JjhSR2pdUInVd6kkaLxKp61JP0vCKSO2T
l0hdl3pSR+pJU48xWHtST1IkUldST+pIPakj9SSN8ojUhjGRupJ6UkfqSYpE
6krqSR2pJ03dI2btRT1Jo0sidRX1JEUiVc+3WXtRT9KVjkhdRT2pI/WkjtST
/u4MPIxE6n6oJ3WkntSRelJH6kkdqSd1pJ6kSKTuh3pSR+pJHaknaehNpGoC
gNr3oJ6kSKTuQT2pI/WkjtSTdNeXSN2DepKG/ETqHtSTFInUPakndaSeNDW6
Yu2TelJH6kkdqScpEql7Uk/SRIRI3ZN6UkfqST1NoZ7UkXqSIpHaHzaRKnSx
9kU9Sa8NEKl7UU/qSD1Jt1CJ1L2oJ3WkntRzKepJHakndaSeNP/MHkTqSYpE
6t7UkzpST+pIPUl6BpGqI7H2Qz1JkUjdh3pSR+pJmh0SqdImWPuhntSRepIM
VyK1I5G6D/WkjtSTNPknUndQT9IklUjdQT1JkUjdQT1p6pk0aw/qSR2pJ3Wk
ntSRepIikdpjESJ1X+pJHakndaSe1JF6UkfqSR2pJykSqftST+pIPUlTdiK1
f0AiVZYQa0/qSYpEqr5lrD2pJ3WknjT/bjgiUk/SnQMitSORupN6Us8NqSd1
pJ409WVn7UU9qSP1pI7UkxSJ1CYmkaq7Oay9qCfpTVoi9TzUkzpST1IkUs9D
Pakj9aSO1JN0wSVSz0M9qSP1pI5JpGqqHDwU9aR5BvWkjtSTdEeRSD2DelJH
6kmKROoZ1JM6Uk/qSD2pI/WkjtSTpmpD7WdST9I7YETqmdSTOlJP0vMwIvVM
6kkdqCdNXQhZ+6SepD9JpP5dB7+4qCfp5haRehb1pI7UkxSJ1LOoJ01dj1n7
op7UkXpSR+pJuqlGpHYkUvUlY+3b9KSzTU862/Sk/roSqWebnnS26Ulnm550
tulJZ5uedLbpST15IlLPMT1JnzVrP6Yn9eWJSD3H9KRzTE/qmSSReo7pSeeY
ntSRSD3H9KT+S4jUhiSResL0JNkbrD1MTzphelJHIrXBRqTKtWTtYXrSCdOT
xGrWfk1P6kik/j09QjQ96VzTk841PakhSKSea3pSRyJVQwbWfk1P6gkekXrS
9KSTpiedND1JBGHtaXrSSdOTTpqe1CMXIrU/AyK1vwtE6inTkzoSqadMT+qr
MZHa83si9ZTpSbrvydrL9KSOROop05NOmZ50yvSk/u+I1D57idR4TE+Kx/Sk
jkRqj+OI1HhMT9JNpeKhTE/q6wCRGo/pSR2JVOnAqD2G6UldDZGq4SRq7+s+
kdonKJH6N6hlJFJjmJ4Uw/SkGKYnxTQ9KabpSRrVsvZpelJM05Nimp4U0/Sk
mKYnacTA2qfpSTFNT4ppelIPronUWKYnxTI9KZbpSbFMT4plelJHIrV/YiI1
lulJuhyz9mV6Uv8bIrWvmkRqbNOTYpueFNv0pNimJ8U2PSm26UmxTU/qSKT2
YYlUfddZ+zE9qUFOpPa0hEiNY3qSjHXWfkxPimN6kmY8rP2YntQMIVL/VIAv
hulJHYnUCNOT+ipJpEaYntSMIFI18WLtYXpSRyI1wvSkCNOT+r8lUvWclbVf
05Pimp7U3zkitSORGtf0pOYrkRrX9KS4pif1j0ykxjU9qSORGml6kh5isfY0
PSnS9KQGO5EaaXpSRyK1L15EahdJpPaZTqRGmp4UZXpSz4aJ1CjTk/SEgLWX
6UlRpif1B0ik9mlCpOqlCtZepid1JFI1KUftPYgnUu9jetLfHQpE05P6e0Sk
diRS72N60n1MT7qP6Um6N7B5KNOT+iJCpN5helJHIrU/LyJV07/FQ5medIfp
SXeYnnSH6Ul3mJ50h+lJd5iedKfpSXeannSn6Ul3mp5031u/XyRS7zQ96U7T
k+40PelO05PuND2pT24itSORepfpSXeZnnSX6Ul9bhOpd5meJHKx9mV6Us/K
iNS+xhCpd5mepPd+WPs2Pelu05N034i1b9OTmgJE6l9xiKYn9aWOSO0xLpF6
t+lJd5ue1PN5IlW3r1j7MT2pJwRE6j2mJ91jelJHIlXSDGs/pifdY3rSPaYn
9d9JpPbsiEjteQmResP0pBumJ/WFn0i9YXrSDdOTbpiepJOXtYfpSf37EKn3
mp50r+lJPfQkUps/RGrPq4nUjkTqvaYn9YlApN5retK9pifpcS9rT9OTbpqe
1JFI7TOBSNWraaw9TU/qSQuRqlubrD1NT+pIpP7dbkY0PalpTKTeMj2pfz8i
9ZbpSR2JVN1hZe1lelKPCInUW6Yn9XSXSO1BAZGqnx+1dyRS8zE9KR/Tk/Ix
PSkf05N66kyk5mN6UkciNR/Tk/qfidSeSxCpOUxP0o0S1K77zai9I5Gaw/Sk
HKYn5TA9KYfpSTlMT8phelIO05NymJ6U0/SknKYn5TQ9KafpSTlNT8ppelJO
05Nymp6U0/SknKYn6e47a1+mJ+UyPemPgoxEag8YidRcpiflMj0pl+lJuUxP
0kMA1r5MT8plelJu05Nym57U41YiVZcY1r5NT8ptelJu05N6ckik5jY9qU9P
IjW36Ul5TE/q4TOR2pFIzWN6Uh7Tk/T5sfZjelIe05PymJ6Ux/SkPKYn5TE9
KcP0pAzTkzJMT8owPSnD9KQM05MyTE/KMD0pw/SkDNOTMkxPymt6Ul7Tk/Ka
npTX9KS8piflNT0pr+lJeU1Pymt6Ul7Tk/KanpTX9KRM05MyTU/KND0p0/Sk
TNOTMk1PyjQ9KdP0pEzTkzJNT8o0PSnT9KQs05OyTE/KMj0py/SkLNOTskxP
yjI9Kcv0pCzTk7JMT8oyPake05PqMT2pHtOT6jE9qR7Tk+oxPake05PqMT2p
HtOT6jE9qR7Tk+oxPamG6Uk1TE+qYXpSDdOTapieVMP0pBqmJ9UwPamG6Uk1
TE+qYXpSTdOTapqeVNP0pJqmJ9U0Pamm6Uk1TU+qaXpSTdOTapqeVNP0pJqm
J9UyPamW6Um1TE+qZXpSLdOTapmeVMv0pFqmJ9UyPamW6Um1TE+qv0kqIpFa
2/Sk2qYn1TY9qbbpSbVNT6ptelJt05Nqm55U2/Sk2qYn1TE9qY7pSXVMT6pj
elId05PqmJ5Ux/SkOqYn1TE9qY7pSXVMT6pjelKF6UkVpidVmJ5UYXpShelJ
FaYnVZieVGF6UoXpSRWmJ1WYnlTX9KS6pifVNT2prulJdU1Pqmt6Ul3Tk+qa
nlTX9KS6pifVNT2prulJlaYnVZqeVGl6UqXpSZWmJ1WanlRpelKl6UmVpidV
mp5UaXpSlelJVaYnVZmeVGV6UpXpSVWmJ1WZnlRlelKV6UlVpidVmZ5URT1p
PQ/1JEnYQOqSCfLV3pF6kiKQ+t6fQqSeJLsfSO1IPUl3foDUjtSTFIHUJSFl
41CDelJH6knr/YW+SD1JLxkAqUtfyMVDUU/SuvBAakfqSR2pJ2mNDCC1I/Wk
9faKWKx9Uk/SXf1g7ZN6UkfqSb+ZFWuf1JMUi7VP6knr/Xi/SD1Jr1xs1r6o
J3WkntSRepJisfZFPakj9aSlYStrX9ST9OlN1r6pJykWa9/Uk/Syd7D2TT1p
SVZi7Zt6UkfqSev9siMma9/Uk9ZzqCd1pJ7UkXpSR+pJS84Uaz/UkzpST1rv
OfdF6kl6D2ax9kM9afUV9mHtQT2pI/UkrcUZrD2oJ3WknrTeU/+L1JM6Uk9S
TNYe1JM6Uk9a8lFY+6WepG/zYO2XetJ6r0BfpJ6kt4KCtV/qSR2pJ3WkntSR
epJisfaknrT0sJ+1J/WkjtST9HLSZO1JPWlpPSTWntSTOlJP0kA0WHtST1pP
UU96HzYgUk9SLNZe1JM6Uk/qSD2pI/WkJa2PtRf1JMVi7UU9aY2HepJe1QJS
l+7kovbxUE/SXQUgtSP1JEUgtSP1JK1/RKS+dPoi9SS54ETqGNSTFInUMagn
/W6TBQ9FPakj9aSO1JPWC0lEInUM6kkdqSfpMk+kjkk9qSP1pI7UkzpST1Ik
Ul9Wf5F6kt6fI1LHpJ6kpTqI1LGoJykSqWNRT5LFSKSORT1pvUOGL1JP0gSP
SO1IpI5FPakj9aSO1JOWzFPWvqkndaSetN6RCyKR2h8JkSrAsPZNPakj9SSt
pEyk9vyeSO1IpI5DPWm9A6gvUk/SS41E6jjUk+TfEKnj75keIpEqD5e1H+pJ
v92hWHtQT/ptj8Tag3rSbwcg1h7Uk3573rD2oJ702+WFtQf1pN+JwNqDetJv
Jw/Wfqkn/fauYO2XetJvtwbWfqkn/fYnYO2XetJvRX7Wfqkn/dagZ+2XetJv
EXbWntSTfuuMs/aknvRbWZu1J/Wk31rSrD2pJ/1WT2btST3pt14wa0/qSb8V
cll7UU/6LRHL2ot60m8VVNZe1JN+636y9qKe9FvpkrUX9aTf2o6oXf+M2jsS
qVpVELVr/T7U/k41vkg9Sa//Eqlao23wUNSTfquSbR6KetJvHS7UrgWwULtu
KKP2d8bzRepJvzWPkoeinvRb1mfwUNSTfgvZbB6KetJv6ZbLQ1FPWu/E64vU
k37Lc7D2ST3ptyAFa5/Uk34rMrD2ST3pt+gAa5/Uk9Y7//sXF/Wk34vlrH1R
T/q9Wc3aF/Wk38vDrH1RT/q9LsvaF/Wk9U5DEYlUvRLJ2jf1pN9LgKx9U0/6
vfbG2jf1pN97X6x9U09a72z4i9STfi/zsPZNPen3+gprP9STfi9ssPZDPen3
igJrP9ST1jsp/yL1pJ+VztoP9aSfeM3aD/Wkn2rM2oN60k+uZe1BPenVgBiJ
VAmUrD2oJ/2UQdYe1JN+zhxrv9STfloYa7/Uk9Z7i+KL1JN+6g9rv9STfu4L
a7/Uk356B2u/1JN+QgNrT+pJ671T8kXqSb+H1qw9qSf9HtOy9qSe9HswydqT
etLvyRxrT+pJ671h8y8W9aTf4xbWXtSTfg8YWHtRT/rdUmftRT3pdxOZtRf1
pPXeN/oi9aTffUPUrjt0qF23xlD7eqgn/W4GbR6KetLv9sfloagnrff21Rep
J/2muJOHop70m9Sh9jWoJ/1mNahd8wfUroH74KGoJ633LtoXqSf9BmfBQ1FP
+o1OUPua1JN+AGbtk3rSDzmsfVJPWu/NvC9ST/pdVlj7pJ70O5FY+6Se9Pvq
sPZFPenXHWtf1JPWe08RkUhdi3pS/496Uv+PelL/j3pS/496kg5MpPYshUjV
pIW1b+pJHaknabkRIrVrJFK1wjFr39STFIlUvSHH2jf1pI7Uk16nE5F6klY9
IVI7Eqk93SVS16Ge1JF60tKLeqz9UE/qSD1pvTd6EYnU/vGJVH0jWXtQT9Je
qkTqCupJ+rSJ1BXUk7TMNJH63m/+IvUkvXJPpK5LPakj9STpR0SqbCTWfqkn
6TtIpK5LPWm9t72/SD2pI/UkRSJ1XepJ/e2mntSRelJH6kk6FYhUXdlYe1JP
0i6AROpK6kkdqSdpRVQidSX1pD7nqCfpFCRSV1FP0sCbSH0fAnyRepKeoxOp
q6gndaSepEikrqKetPQuKWrfD/WkjtST1vss4ovUkxSJVN3HXzwU9aSO1JM6
Uk/SBYlI3Q/1pL4+UU9a7yORL1JP0jJFROoe1JP0mhORugf1pKUPN3go6km6
TBKpe1BPWu+TmX9xUk/SaklE6p7UkxSJ1D2pJ+kOOZG6J/UkXa2JVN2BYu2T
epJWaSJS96SepJ1XiNS9qCd1pJ6kVaiIVL1nzNoX9SRFIvV9TvVF6klaO4pI
3Yt6kv5OInVv6kmKRKped2btm3pSR+pJ631c9kXqSVrCikgVMlj7pp6kjbGJ
1H2oJ3WkniSEEqn7UE9a71M7RCJ1H+pJUlmI1H2oJ3WknvRTS1l7UE9SJFJ3
UE9a78PDL1JP0oJeROoO6kkdqSd1pJ6kSKTuoJ6kAQWRqhODtV/qSTrxidSe
wxCp+1JPWtrKgLVf6kkdqSctvQrP2i/1pI7Uk9b7KBWRSO2/lUjdST2pI/Uk
DRCJ1J3UkzSeIlJ3Uk/qSD1pvU90v0g9SausEal6KMvai3qSIpG6i3qSNiMk
UndRT+pIPWm9D5a/SD2pI/UkRSL1PNSTOlJPWnrihdq1PgFqPw/1pI7Uk9b7
fPuL1JN0pSNSz0M9qSP1pB7GUk/qSD1JkUg9g3rS0uOE4qGoJ3WknqSl74jU
M6gnLe22MXgo6kkdqSfp4kSknkk9qSP1pPdtK0TqSYpE6pnUk/Qgikg9k3pS
R+pJGvITqWdRT1IkUl/p4IvUk7QQIJGquSJrX9ST9CiNSD2LepIikXoW9SRt
AEOkvu7DF01P6o+TSD3b9KSzTU862/QkDcRZ+zY96WzTk842PelVMBCJ1HNM
TzrH9KRzTE86x/Skc0xP6gsBkdrDGiJVoxzWfkxPau4RqeeYnqQjsfYwPemE
6UkdiVQtKMLaw/SkE6YnvULKF01P6t+ASNUvxNrD9KRzTU/qyT+RqnVNWPtd
ROq5pie9XgwikdofEJGqXln7NT3pXNOTerRBpPbkmEjtSKT2zIpIffWcL5qe
dNL0JH28rD1NTzp/t2QQiVSt8sLay/SkU6YnvZbQF01P6q8VkdqRSO05OZF6
yvSkU6YnnTI96ZTpSeoYtcdjelIPzYjUeExP0pf98FCmJ8VjelLPcIhUrXnz
8FCmJ/Vln0h9nal/cZieFMP0JJ1zqD2G6UkxTE/qn4lI1dI7m4cyPamHj0Tq
q2590fSkGKYn6dRn7dP0pJimJ8U0PSmm6UkxTU+KaXrSa5B90fSkmKYn6QrE
2pfpSbFMT9LZytqX6UmxTE+KZXrSK7J90fSkWKYn9b8jUjsSqbFMT+qfiEjt
UR2RGtv0JE1ZWfs2PSm26UkdiVRdj1n7Nj0ptulJsU1P0rJMrP2YntSRSH21
vi+antTzASJVWGDtx/SkOKYndSRStToUaz+mJ0WYnvTahV80PSnC9CT9wKw9
TE+KMD0pwvSknkkSqRGmJ0WYnvRKjohEalzTkwRJ1n5NT4prepI+bNZ+TU/q
SKTGNT3pdS2/aHpS90SkNquJ1EjTkyJNT+pIpEaanhRpepJEH9aepif1ZYJI
7TECkaohA2sv05OiTE/qz4RI1cphrL1MT4oyPek1TxGJ1CjTkzRyYe1letJ9
TE+6j+lJWsAMtXckUu9jetIrwH7R9KT7mJ6kAdTioUxPuo/pSf0NJVLvMD3p
DtOT+nwkUl8P94umJ/XAjUjVOO7yUKYn3WF6km6RBw9letKdpifdaXrSqwN/
0fSkO01PutP0pDtNT7rT9KQ7TU+60/SkO01P0v1H1r5MT7rL9KS7TE+6y/Qk
bU7I2pfpSXeZnqTF7Vj7Mj3pLtOTXjn6X9ymJ3UkUjW4Zu3b9KS7TU/qH4lI
1Rp7rH2bntSRSH0d7S+annS36UkaXLL2Y3rSPaYn3WN6Ukci9R7Tk+4xPelV
xb9oetI9pidpqsHaj+lJN0xPErlZe5ie1NMSIvWG6UmvsY5IpN4wPalnPERq
X6uJ1BumJ91relL/SSK1r4NEqi6LrP2antRjPiL1XtOTNPFi7df0pHtNT+pI
pGr9RdaepifdND3p9fe/aHpSf+eIVM3/WHuannTT9KQGLJGqZSBZe5qedMv0
pPc1AkQitc84IlXTUNZepifdMj2pL09E6i3TkzoSqV0kkfq+zfC/Yv8jkZqP
6UmaDaP2fExPyr8n2IhEqhbFnDyU6Un5mJ70vlTxRdOTehZOpHYkUnsQT6Tm
MD2pRz1Eag7Tk/p7RKSqqOKhTE/KYXpSDtOTdG8AtWuLV9Se0/SknKYnaYlQ
1j5NT8ppetL7iskXTU/KaXqSblGw9ml6Uk7Tk3KZnqSVSln7Mj0pf0/AEU1P
ymV6Ui7Tk3SngLUv05NymZ7UQ1EitX9AIrVPbiI1t+lJ7ws3XzQ9qU9mIlU3
bFj7Nj0pt+lJuvyy9m16Ul9jiNQ8pie97/180fSkPKYn5TE9qSORmsf0pC6O
SG0MEKl9qSNSNcZl7WF6UobpSR2JVN2+Yu1helKG6UkZpidpFVvWHqYndSRS
37egvmh6Ug8giFTdRWPt1/SkvKYndSRStZgua7+mJ+U1Pel9GeuLpiflNT1J
vwBrT9OTMk1P6tkSkdpDTyK1+UOkZpqe9L4ThkikZpqepHuKrD1NT8oyPUny
Cmsv05M6EqlNRSL1fTXti6YndRVEapbpSVmmJ2WZntSRSK3H9KSmMZEqMwC1
v2/IfdH0pL5KEqm6w3p4KNOT6jE9qaewRKoWWkbtNUxPqmF60vuiHiKRWsP0
JN3oLR7K9KQapifVMD1J6z1vHsr0pB6qEKnv+4JfND2ppulJuu3L2qfpSTVN
T6ppelJN05Nqmp5U0/Sk97XFf3GZnlTL9CTd9mbty/SkWqYn6Z4aa1+mJ9Uy
PamW6Unv25NfND2plulJtU1Pqm16Um3Tk2qbntSRSK1tepJuWLD2bXpSn5FE
am3Tk/QQgLUf05PqmJ5Ux/QkrQXO2o/pSXVMT3rfJf2i6UkdiVQ9i2Dtx/Sk
OqYn9a9OpGpJctYepid1JFLfV1q/aHpShelJohFrD9OTKkxPqjA9qSORWtf0
pLqmJ/V1kQytaz6SHsWw52s+Ul3zkXRus+drPlJd85F6GkaGvm/0IpKhleYj
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
j7Q1xUXtmmqy9kkfaWs2xdonfaSt+QNrn/SR9p70kRSJVI0RWfukj7Q1KmLt
iz7S1jiAtS/6SIpE6l70kfZe9JG03hORqqsba1/0keS+E6nvIr6IRKq+Oqx9
00fa6o61b/pIW/+atW/6SIpEak/aiNR3LeEv0kfqSB9JByZSe5ZCpO4/QQOR
SNWW1Kz90EfqSB9pv0saf5E+Ukf6SIpEah+XSN1BH6kjfaSO9JG0zAmRKjax
9qCP1JE+Ukf6SFtv5rH2oI/UkT5Sfwj0kbS8CpHakUjtbySR+i7w/EX6SB3p
I+nTJlL3pY+kSKTqfjNrv/SR9MUnUnfSR9rvOtNfpI+kSKTq4sXakz6SRmZE
6k76SFpshkjdSR+pv7/0kfa73PUX6SN1pI+09bokay/6SB3pI/1GvKy96CNp
CRwidRd9pP2uuv2/Yg8YidTz0EfSKUikdiRSz0MfqSN9JD04J1LPQx9pywoq
Hoo+Ukf6SIpEql4eRe19YSBSz+BySR2pJ2kFICL1DOpJikTquwb5F6knaYcq
IlXvsKL2/gGJ1DOpJykSqdrKnrVP6kl6kYlIfZdC/yL1pI7Uk363pln7pJ7U
kXpSXzWpJ3WknqTlkYjUs6gn7XdFdkQi9SzqSVtv9LL2RT2pI/WkrfvprH2b
nnS26Ulnm570Lgz/RdOTzjY96WzTk842Pels05M6Eqk9nydSzzY9STcrWfsx
Pakv3UTqOaYn6f1m1n5MTzrH9KROROo5pif1eIJIPcf0pHeZfEQi9YTpSXrN
mrWH6UknTE/SUzvWHqYndSRST5ie9K7W/0XTk841PUkjUdZ+TU861/Skc01P
6qqI1HNNT+oTkEh9Nw34oulJ55qepJfOWXuannTS9CRhnrWn6Un97SVST5qe
9O5d8EXTk06annTS9KQe1xCpp0xP6m8KkdqRSO2/lUjVNZS1l+lJPUAkUnu6
S6TqFXzWXqYnnTI96ZTpSf3fEanxmJ4Uj+lJ704OXzQ9qSORqpUAiocyPSke
05P0YDl5KNOTYpie1JFIfTeU+KLpSTFMT9Lz+8VDmZ4Uw/SkPn2J1I5EagzT
k3rcRqS++1p80fSkmKYnaV0E1j5NT4ppepIejrL2aXpSTNOTYpqe9G6vgUik
xjI9KZbpSbFMT4plelIs05NimZ4Uy/QkPXli7cv0pFimJ8UyPUmrRLD2bXpS
bNOTYpueFNv0pNimJ8U2PendbOSLpif1ZYFI1WIVrH2bnhTH9CS5D6z9mJ4U
x/SkhhOR+u55gkik9ilGpOq2Ams/pifFMT2pCUOkRpie1JFIjTA96d165Yum
J/WZT6Rq6Q7WHqYnxd/4EZFIbe4RqXFNT+ojEanvDjBfND0prulJHYnUnh0S
qXFNT2reEqnNDCI1rulJ+jesPU1P6tk+kRppepIWMmHtaXpSpOlJjX0iNdL0
pI5Eav8tROq7H86/WKYnRZmepPVUWHuZnhRlepL0HNZepic19YjU/niJ1Hdb
ni+anhRlepJ+W9TeU3Yi9T6mJ/UgiEi9j+lJ/bUiUu9jetK7O9AXTU+6j+lJ
Wl0Gtd9hetIdpifpeova7zA9qc8TIrW/7ETqu0nRF01PusP0pDtMT+pIpN5h
elL/+ETqnaYn3Wl6ks451j5NT7rT9KQ7TU/SWjusfZqedKfpSXeannSX6Ul3
mZ50l+lJ75ZNXzQ96S7Tk7TkD2tfpifdZXqSDDLWvkxPusv0pLtNT3p3jvqi
6Ul3m56krxxr36Yn3W160t2mJ91telIHIrUvhETqu4EVIpF6j+lJWgCJtR/T
k+4xPUk34Fj7MT2pI5Ha12Mi9d1H64umJ90wPam/RkTqDdOTbpie1JFIvWF6
0g3Tk4QF1h6mJ/UfJFJvmJ6k5aBY+zU96V7Tk3ryRKTea3pSX4CI1KYTkfru
KoZIpN5repJWpWLt1/Skm6YnSXJk7Wl6UkcitSFJpL6bm33R9KSbpicJXaw9
TU+6aXrSTdOTbpmedMv0pL6iEqnvHmtfND3plulJWqOLtZfpSbdMT9J1gbWX
6Un9T0RqT+GI1Herty+anpSP6Un5mJ6Uj+lJ+Zie1BNrIjUf05P61CZSVTpq
f3ec+6LpSTlMT9KKZai9J/9Eag7Tk3KYnpTD9KQcpif1AIpIfTe++xen6Uk5
TU/SwmmsfZqelNP0JHm4rH2antQDNyK1I5H67r/3RdOTcpqepAd+rH2ZnpTL
9KRcpiflMj0pl+lJuUxPercB/KLpSblMT9Iycqx9mZ6U2/QkPU1h7dv0pNym
J+U2PendjRCRSM1telJu05P6XxGpuU1PymN6Uh7Tk3o0TaRqcM3aj+lJeUxP
ymN6khbVY+3H9KQ8pid1JFLzmJ7Uo0kitcf4ROq7N+MXTU/KMD1Ja/ux9jA9
KcP0JKnirD1MT8owPam/zUTqu0UkIpGa1/QkzUNY+zU9Ka/pSXlNT8prelJH
IrVnPETqu1Plv5jmI2lpQ/ac5iPl3/11RDI003yknrKSoT3TIkPfHTK/aD5S
lvlIHcnQ/m/J0CzzkbLMR+pvFRmaZT6SvtvsucxH6vkAGdpEJUO10CN61o+M
nusxH6ke85HqMR+pIxna3xMy9N0v9IvmI/X1iAzVepPFQ5mPVI/5SHp9AbXX
MB+pOydDe/pLhr7bln7RfKSOZKh0jcVDmY9Uw3ykGuYj9Q9Mhva4nAytaT7S
u3vqF81H6mEOGarVN1n7NB+ppvlIIiZrn+Yj1TQfqZb5SO8mrl80H6mW+Ui1
zEeqZT5SLfORapmPVMt8pFrmI+meBGvf5iPVNh+ptvlIWouUtW/zkWqbj1Tb
fKTa5iPVNh+ptvlI75a2XzQfqceeZKiWRGXtx3ykOuYj6Q0b1n7MR+qTmQzt
sQgZ+u6s+0XzkeqYj6SOWXuYj1RhPlKF+UgV5iNVmI9UYT7Su8EvIhnaI3Ey
VAvEsvYwH6mu+UiaorP2az5SRzK0rvlI7z7DXzQfqb/MZGhd85H6ikuG1jUf
qSMZ2kMEMrTSfCTNf1h7mo/U3wQytNJ8JC2Xy9rTfKRK85EqzUeqNB+pf2Ii
tcp8pHfXZUQitQeXRKpW7WXtZT5SlflIegmMtZf5SB2J1Cr6SD2/o4+k5XKA
1I70kWSCAKkyiYFURSC1I32kjvSRtCEMkKppJpB63j2o/8VBH6kjfSRFIFV+
CpDakT7S0YGCh6KPpH1pgFRt2Quknncr7C/SR+pIH+l0c8XqJp2io7uzrG7S
KZLWtlndpFMkxWawukWnSDFZ3aJT1JFOkXba2axu0Sk67+beX6RTpFisbtEp
kvgTrG7RKdJXbLG6TaeoI50ixeI3dtMp6kinqCOdot9bx6x90ynqSKdIBsbD
2jedIu07dFn7oVN03q3Ov0inqCOdInlPD2s/dIr0vD5Z+6FT1JFOkbY/Wqw9
6BSdd8d1xGLtQaeoI50i2ViHtQedoo50irTt0mDtQafo974caw86RV0FnaKO
dIpU1GLtl05RRzpFisXaL50ibQYVrP3SKTrv/vNfpFPUyKBTpFisPekUdaRT
dPQ6LGtPOkXak2qx9qRT1JFOkWKx9qRTdDT4YO1Fp0hveizWXnSKtBfWw9qL
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
LLD2SWtIazkQmprEsva/50WIhOZZtIbOWbSGzlm0hnRnntA8i9bQOYvWkCKh
eZZZQ2ebNXS2WUNnmzV0tllDZ5s1dLZZQ2ebNXS2WUNnmzV0tllDZ5s1dI5Z
Q+eYNXSOWUPnmDX09xgD0ayhc8wa0p7MrP2YNXSOWUNa4pe1H7OG+s8Rmn1g
QvMEVzHqyFWMFAlN3TJm7WHG0Qkzjk6YcdQUIDT7TxKa/fsRmueacdRXSUKz
R3WEpnaoZu3XjKNzzTjSBZa1XzOOzjXj6Fwzjs414+ikGUcnzTjq7xyh2ZHQ
PGnGUV+sCM0efRCaJ8040s0O1p5mHJ00xUgbdLPnMsXolClGp0wx0qiHPZcp
Rh3J0L/RFaIpRj11JEO1Tzh67qOQofGYYqRlp9GzBl/oOR5TjOIxxSgeU4z6
sydD4zHFSF+qxUOZYhSPKUYxTDHqMSAZGsMUoz7nyNAYphh1JENjmGKkXdMv
D2WKUQxTjHTVQO0aiqL2jmRoTFOMYppiFNMUo/5lydCYphjFNMUopilGHcnQ
HhGToTFNMdInxNqXKUb9X5KhPT4mQ2OZYhTLFKNYphjFMsVIA3PWvkwximWK
0d9DaEYyNLYpRtrKnrVvU4xim2KkldFZ+zbFKLYpRrFNMYptilFsU4zimGKk
B36s/ZhiFMcUozimGMUxxSiOKUZxTDGKY4pRHFOMek5OhnYkQyNMMYowxUhP
U1h7mGLU1x8ytOlEhkaYYhRhilEnMrRHDGRohClGcU0ximuKUUcytM9lMlS3
qln7NcUorilG/UORoXFNMZKwz9qvKUZxTTHS3JG1pylGzWoy9G+qjGiKUUcy
tKsiQyNNMYo0xUiL97P2NMUoyhSjjmRolClGDXIytD8iMlSzFNZephhFmWLU
U2dOPDsSqVGmGEWZYnQfU4zuY4pRH5dIvY8pRh2J1PuYYqQhYPBQphj1/JZI
7QEUkXofU4w6Eql3mGLU318itf+ZSL3DFKM7TDHqbySR2nwlUoXb4qFMMerJ
A5Ha5w2R2j0RqXqnhLVPU4w6Eqm6vcHapylGd5pi9GcUIZpi1KcvkdqRSO2R
GZF6lylG2l+CtS9TjO4yxeguU4zuMsWoI5HaVxEiVfYGa1+mGN1litHdphjd
bYrR3aYY3W2K0d2mGN1titHdphjdbYrR3aYY3b8vOyKRqntOrP2YYnSPKUb3
mGJ0jylG93DZIkUi9R4zju4x4+geM47uMePoHjOOdBjWHmYc3TDjqC/tRGp/
fkSqXnti7WHGUQ+1iVTdgWPtYcZRf0+I1L/7nl+8Zhw1YYjUe804uteMo3vN
ONIWKKz9mnHUJROpPY4hUu8146hnZURqRyJVt5xYe5pxdNOMo5tmHPVPSKTe
NOOo539E6k0zjrpWIrUhQaTeNOOoR8BE6i0zjm6ZcXTLjKNbZhzdMuPolhlH
t8w4auwTqbfMOLplxtEtM47yMeMoHzOO8jHjKB8zjvIx4ygfM47yMeMoHzOO
8jHjKB8zjvIx4yiHGUc5zDjKYcZRDjOOcphxlMOMoxxmHOUw4yiHGUc5zDjK
YcZRDjOOcppxlNOMo5xmHOU04yinGUc5zTjKacZRTjOOcppxlNOMo5xmHOUy
4yiXGUe5zDjKZcZRLjOOcplxlMuMo1xmHOUy4yiXGUe5zDjKZcZRbjOOcptx
lNuMo9xmHOU24yi3GUe5zTjKbcZRbjOOcptxlNuMo9xmHOUx4yiPGUd5zDjK
Y8ZRHjOO8phxlO/qul8kUvOYcZTHjKM8ZhxlmHGUYcZRhhlHGWYcZZhxlGHG
UYYZRxlmHGWYcZRhxlGGGUcZZhzlNeMorxlHec04ymvGUV4zjvKacZTXjKO8
ZhzlNeMorxlHec04yjTjKNOMo0wzjjLNOMo04yjTjKNMM44yzTjKNOMo04yj
TDOOMs04yjLjKMuMoyyTiLJMIsoyiSjLJKIsk4iyTCKqxySiekwiqsckonpM
IqrHJKJ6TCKqxySiekwiqsckonpMIqrHJKJ6TCKqYRJRDZOIaphEVMMkohom
EdUwiaiGSUQ1TCKqYRJRDZOIaphEVMMkopomEdU0iaimWUM1zRqqadZQTbOG
apo1VNOsoZpmDdU0a6iWWUO1zBqqZdZQLbOGapk1VMusoVpmDdUya6iWWUO1
zBqqZdZQLbOGaps1VNusodpmDdU2a6i2WUO1zRqqbdZQbbOGaps1VNusodpm
DdUxa6iOWUN1zBqqY9ZQHbOG6pg1VMesoTpmDdUxa6iOWUN1zBqqY9ZQhVlD
FWYNVZg1VGHWUL13b79ILFaYNVRh1lCFaUIVpgnVNU2ormlCdU0TqmuaUF3T
hOqaJlTXNKG6pgnVNU2ormlCdU0TqmuaUKVpQpWmCVWaJlRpmlClaUKVpglV
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
Rh2pGHWkYqTFg4jUvagYhQ7D2jcVI0nYROreVIzifQL2RSpGHakYaedkInVv
KkYdqRjpORSRujcVo9iHipFeICNS3wdxX6RipEik7kPFSPs5E6n7UDHSYu5E
ql6zZu2HipEikfo+D/wiFaPQFt2sPWgcySIgUnfQOFIkUvW2N2sPGkehDYBZ
e9A4Cu1xy9ovjSNtZ02kandV1n5pHIU2EGXtl8aRNsgkUrVXJWu/NI4UiVRt
i8jak8aRNtkmUnfSOPq9zs3ak8ZRaFs19pxUjEL7irHnpGKk4QUZqh2t2HNR
MVIkQ7V5EnsuKkah29zsuagYCa9kqHamYc9FxUh7jJOhu6gYhbYbQc969R89
n4eKkd6tJEO1D0Twz9IpCu18UPyzXIlIz3cJTS2yj5615AB61jry6FnruaPn
99n4F6kYhZYODx6KilFosezioagYhdaDnjwUFaPQCsjoWUsPo+f3Ef0XqRiF
Fr1lz5OKkdZ6IzTPpGIUGiCy9knFSHe6CE2tocnaJxWj0CKSrH1RMQqtk8ja
FxWjOIuKUZxFxUiR0NQidKx9UTGKV1j4oilGWneMtW9TjLS0FmvfphhpMSnW
vk0x0mpKrH1zJaJ3lSJEM460gA5r32YcackY1n7MONKaKaz9mHGkZUFY+zHj
6NU3vmjGkVaCYO3HjCMthcDaw4wjve3P2sOMI73fztrDjKPXIvmiGUd6h5m1
hxlHemuXtYcZR3qOztqvGUd6UZO1XzOOXpkFkdDU23es/ZpxpNfPWPs140hv
WLH2a8aR3ili7WnG0evUfNGMI71GwtrTjCO9KcHa04wjvRvA2tOMI8nxrD3N
OHrVni+acSQ9mrWXGUfyg1l7mXEkQZa1lxlHUkJZe5lx9BpGiGRo/3dkqL7O
qF0aHGqPx4wjmV6ThzLFSBbR4J81xUjezOafNcVIpxF6lqKBnuPv5hYiGSob
YPJQphjp+ffhoUwx0gPg5KFMMdIzzsFDmWIU0xQjPU5jz9MUIz1AYs/TFKPX
8/qiKUZ6ZpA8lClGui3O2qcpRrovzNqXKUa6McralzlFuunGnpc5RbHMKdIN
Hfa8zCnSHQ32vMwp0qSdPW9zil7N7YvmFGmexp63OUWambDnbU6RBt/seZtT
pNEnez7mFL223RfNKdKAgz0fc4rimESkn4k9H5OIdBllz8ckotfy+xfDJCKd
Kuw5TCLSd4U9h0lEEaYJSRNhk2GaUIRpQh3JQbGLTV7ThOKaJhTXNCEtFsUm
r2lCHcnB12r8omlCcU0TEkJZbJomFGmaUEdyUGtWsdg0TagnluTgK1d+0TSh
SNOEdKaz9jRNKNI0oW6dHIwyTai/RuRglGlCr+OJSA5GmSakAQVrL9OEokwT
0v1W1K4VvFB7R3LwPqYJvarpF00T6mEbOdhXHHLwPqYJ3cc0oY7kYE//yMH7
mCakm1mo/TVev2iaUI+nOJfUnnKDf9a8oP6wyUEtYPbwz5oXdId5Qa9pi0gO
3mlekIZ17HmaF3SneUF3mhekddTY8zQv6E7zgl7h94vmBd1lXpAGLux5mRd0
l3lBfSUgB+8yL+gu84LuMi/o9Y6/aF5Qj2rJQQ1yWfs2L+hu84LEDNa+zQtq
ChCLPYEnFl/9+YvmBd1tXlCPtYnFu80Luse8oHvMC7rHvKB7zAvS2cvaj3lB
95gXdI95QRrys/ZjXtA95gXdY16Q1thj7WFe0A3zgl4Z/IvmBd0wL0gzD9Ye
5gXdMC+oT3xSUkv9sfZrXlBHUvJ10r9oXtC95gVpAsTar3lB95oX1CcVGdqR
DO1EhvaYgAx91fgvmhd007wgzcNYe5oXdNO8ID0tY+1pXlD/UGRo/8Rk6Gvo
I5KhfTkmQ3s6SIb2p0mG3jIv6JZ5QbfMC+puyFA9imDtZV7QLfOCbpkXpFkp
atfOnKg9H/OCOpKhWgby4aHMC8rHvKD3fYUvmhfUxyFDNTkuHsq8oBzmBfVA
hgzVapSovb8pZGhfJcnQ97UJRDK0MUeGaha6eCjzgnKYF5TTvKCc5gV15NSy
v79E6vv2xhfNC+qvIJGqWwWsfZoXlH8P8BGJVK3NydqXaUK5TBN6XyL5omlC
ucwLymVeUC7zgno4SYb21YoM7fOVDNVfwp63eUE9OSRDc5sXpDsl7HmbF5Tb
vKDc5gVpaVL2vM0L6lObDH3fofkXj3lBecwLymNeUB7zgvKYF5THvKA85gXl
MS8oj3lB76s8XzQvKI95QRnmBWWYF5RhXlCGeUEZ5gVlmBeUYV7Q+0bRF80L
yjAvSLevWPs1LyiveUH6gFj7NS+oPzAyNK95Qe+LTV80LyiveUE92yc085oI
1L8doZlpIlAzhNDUk2P2nCYCZZoI1JHQ1N079pwmAmWaCNQTLUIzy0SgRhmh
+b7I9UUzf7LM/NFdQxZbZv5kmfnTkZTUqr0stsz86VEsKfm+T/ZFM3/qMfNH
V/LFQ5n5U4+ZPz3RJCXrMfOnHjN/6jHz532tDZGUrGHmj+6houee/5CSNcz8
0Q2a4KHM/Klh5k+PL0jJ9+26L5r503+OlKxpqk9NU306Eos9miQWa5rqo7kx
e56m+vTXilisaaqPbiGz52WqTy1TfXq6TyxqCWf2vEz1qWWqz/tyISKx2PMQ
YlF3stnzMtWntqk+tU310UrS7Hmb6tOjPFLyfcfxi6b61DbVR5dF1r5N9alt
qk9tU33qmOpTx1SfOqb6vK9aftFUnzqm+tQx1aeOqT51TPWpY6pPHVN9Kkz1
qTDV533j84um+lSY6lNhqk+FqT4VpvpUmOpTYapPhak+Fab6vC+eftFUnx5s
kZJ6ysHar6k+dU31qWuqj1YZZ+3XVJ+6pvq877/+i2mqT0dSUg9bWHua6lNp
qk9fyUlJLXbO2tNUn46E5vsa7hdN9ak01UfPeFh7mepTZapPlak+HQnNKlN9
+opDaL5vA3/RVJ+e4BGaevTE2ouqT48eqfpcrfX+9dyRbo/WTwE07/sWMiKg
2ZFuT0e6PRq1Apq6Hwlo9uT/z+35n0wKOTk=
       "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
       ValueDimensions -> 1, DateFunction -> Automatic, 
        ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, 
      True, 11.1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7017890640465407`*^9, 3.7017890676620865`*^9}, {
  3.7017891104931717`*^9, 
  3.701789112168625*^9}},ExpressionUUID->"24553297-6fe5-47cd-bbb6-\
1d21d38a38ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"today", "=", 
     RowBox[{"DateValue", "[", 
      RowBox[{"Today", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Year\>\"", ",", "\"\<Month\>\""}], "}"}]}], "]"}]}], ";",
     "\n", 
    RowBox[{"start", "=", 
     RowBox[{"DateValue", "[", 
      RowBox[{
       RowBox[{"DatePlus", "[", 
        RowBox[{"Today", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "\"\<Year\>\""}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Year\>\"", ",", "\"\<Month\>\""}], "}"}]}], "]"}]}], ";",
     "\n", 
    RowBox[{"tspec", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"start", ",", "today", ",", "\"\<Month\>\""}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tempdelhi", "=", 
     RowBox[{"TimeSeries", "[", 
      RowBox[{
       RowBox[{"WeatherData", "[", 
        RowBox[{
         TemplateBox[{"\"New Delhi\"",RowBox[{"Entity", "[", 
             RowBox[{"\"City\"", ",", 
               RowBox[{"{", 
                 RowBox[{"\"NewDelhi\"", ",", "\"Delhi\"", ",", "\"India\""}],
                  "}"}]}], "]"}],
           "\"Entity[\\\"City\\\", {\\\"NewDelhi\\\", \\\"Delhi\\\", \
\\\"India\\\"}]\"","\"city\""},
          "Entity"], ",", "\"\<Temperature\>\"", ",", "tspec", ",", 
         "\"\<NonMetricValue\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"start", ",", "Automatic", ",", "\"\<Month\>\""}], "}"}]}], 
      "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tempdelhi", "=", 
     InterpretationBox[
      RowBox[{
       TagBox["TimeSeries",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{15., {0., 15.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{}, {{}, {}, 
                {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
                 StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                   "]],
                  StripOnInput->False,
                  FontFamily->"Arial"]}}, {}},
              AspectRatio->1,
              Axes->{False, False},
              AxesLabel->{None, None},
              AxesOrigin->{0., 0.},
              Background->GrayLevel[0.93],
              BaseStyle->{FontFamily -> "Arial"},
              DisplayFunction->Identity,
              Frame->{{True, True}, {True, True}},
              FrameLabel->{{None, None}, {None, None}},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]],
              FrameTicks->{{None, None}, {None, None}},
              GridLines->{None, None},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->{Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]},
              LabelStyle->{FontFamily -> "Arial"},
              Method->{"ScalingFunctions" -> None},
              PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
              PlotRangeClipping->True,
              PlotRangePadding->{{1, 1}, {1, 1}},
              Ticks->{Automatic, Automatic}], GridBox[{
               {
                TagBox[
                 TemplateBox[{RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Apr 2007\"", "SummaryItem"]}],RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Apr 2017\"", "SummaryItem"]}]},
                  "RowDefault"],
                 "SummaryItem"], "\[SpanFromLeft]"},
               {
                RowBox[{
                 TagBox["\<\"Data points: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["121",
                  "SummaryItem"]}], "\[SpanFromLeft]"}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{}, {{}, {}, 
                {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
                 StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                   "]],
                  StripOnInput->False,
                  FontFamily->"Arial"]}}, {}},
              AspectRatio->1,
              Axes->{False, False},
              AxesLabel->{None, None},
              AxesOrigin->{0., 0.},
              Background->GrayLevel[0.93],
              BaseStyle->{FontFamily -> "Arial"},
              DisplayFunction->Identity,
              Frame->{{True, True}, {True, True}},
              FrameLabel->{{None, None}, {None, None}},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]],
              FrameTicks->{{None, None}, {None, None}},
              GridLines->{None, None},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->{Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]},
              LabelStyle->{FontFamily -> "Arial"},
              Method->{"ScalingFunctions" -> None},
              PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
              PlotRangeClipping->True,
              PlotRangePadding->{{1, 1}, {1, 1}},
              Ticks->{Automatic, Automatic}], GridBox[{
               {
                TagBox[
                 TemplateBox[{RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Apr 2007\"", "SummaryItem"]}],RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Apr 2017\"", "SummaryItem"]}]},
                  "RowDefault"],
                 "SummaryItem"], "\[SpanFromLeft]"},
               {
                RowBox[{
                 TagBox["\<\"Data points: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["121",
                  "SummaryItem"]}], "\[SpanFromLeft]"},
               {
                RowBox[{
                 TagBox["\<\"Regular: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["True",
                  "SummaryItem"]}], 
                RowBox[{
                 TagBox["\<\"Output dimension: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["1",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Metadata: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}], 
                RowBox[{
                 TagBox["\<\"Minimum increment: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"1", ",", "\<\"Month\"\>"}], "}"}],
                  "SummaryItem"]}]},
               {
                TagBox["\<\"\"\>",
                 "SummaryItem"], 
                RowBox[{
                 TagBox["\<\"Resampling: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"LinearInterpolation\"\>",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TemporalData[TimeSeries, {{{
          Quantity[86.77, "DegreesFahrenheit"], 
          Quantity[89.42, "DegreesFahrenheit"], 
          Quantity[91.45, "DegreesFahrenheit"], 
          Quantity[88.12, "DegreesFahrenheit"], 
          Quantity[87.24, "DegreesFahrenheit"], 
          Quantity[84.56, "DegreesFahrenheit"], 
          Quantity[76.28, "DegreesFahrenheit"], 
          Quantity[67.17, "DegreesFahrenheit"], 
          Quantity[58.17, "DegreesFahrenheit"], 
          Quantity[55.35, "DegreesFahrenheit"], 
          Quantity[60.22, "DegreesFahrenheit"], 
          Quantity[77.32000000000001, "DegreesFahrenheit"], 
          Quantity[83.79, "DegreesFahrenheit"], 
          Quantity[86.76, "DegreesFahrenheit"], 
          Quantity[86.52, "DegreesFahrenheit"], 
          Quantity[87.26, "DegreesFahrenheit"], 
          Quantity[85.33, "DegreesFahrenheit"], 
          Quantity[83.48, "DegreesFahrenheit"], 
          Quantity[79.57000000000001, "DegreesFahrenheit"], 
          Quantity[67.23, "DegreesFahrenheit"], 
          Quantity[61.230000000000004`, "DegreesFahrenheit"], 
          Quantity[58.57, "DegreesFahrenheit"], 
          Quantity[64.94, "DegreesFahrenheit"], 
          Quantity[74.37, "DegreesFahrenheit"], 
          Quantity[85.32000000000001, "DegreesFahrenheit"], 
          Quantity[90.39, "DegreesFahrenheit"], 
          Quantity[94.3, "DegreesFahrenheit"], 
          Quantity[89.8, "DegreesFahrenheit"], 
          Quantity[87.69, "DegreesFahrenheit"], 
          Quantity[84.06, "DegreesFahrenheit"], 
          Quantity[77.18, "DegreesFahrenheit"], 
          Quantity[66.85, "DegreesFahrenheit"], 
          Quantity[58.89, "DegreesFahrenheit"], 
          Quantity[55.2, "DegreesFahrenheit"], 
          Quantity[64.53, "DegreesFahrenheit"], 
          Quantity[78.71000000000001, "DegreesFahrenheit"], 
          Quantity[89.96000000000001, "DegreesFahrenheit"], 
          Quantity[94.35000000000001, "DegreesFahrenheit"], 
          Quantity[93.92, "DegreesFahrenheit"], 
          Quantity[87.8, "DegreesFahrenheit"], 
          Quantity[85.37, "DegreesFahrenheit"], 
          Quantity[81.99, "DegreesFahrenheit"], 
          Quantity[78.96000000000001, "DegreesFahrenheit"], 
          Quantity[68.7, "DegreesFahrenheit"], 
          Quantity[57.29, "DegreesFahrenheit"], 
          Quantity[54.32, "DegreesFahrenheit"], 
          Quantity[62.620000000000005`, "DegreesFahrenheit"], 
          Quantity[73.27, "DegreesFahrenheit"], 
          Quantity[82.47, "DegreesFahrenheit"], 
          Quantity[91.76, "DegreesFahrenheit"], 
          Quantity[90., "DegreesFahrenheit"], 
          Quantity[87.17, "DegreesFahrenheit"], 
          Quantity[85.87, "DegreesFahrenheit"], 
          Quantity[84.60000000000001, "DegreesFahrenheit"], 
          Quantity[78.37, "DegreesFahrenheit"], 
          Quantity[69.62, "DegreesFahrenheit"], 
          Quantity[58.28, "DegreesFahrenheit"], 
          Quantity[55.33, "DegreesFahrenheit"], 
          Quantity[61.43, "DegreesFahrenheit"], 
          Quantity[73.36, "DegreesFahrenheit"], 
          Quantity[83.07000000000001, "DegreesFahrenheit"], 
          Quantity[92.41, "DegreesFahrenheit"], 
          Quantity[97.11, "DegreesFahrenheit"], 
          Quantity[89.51, "DegreesFahrenheit"], 
          Quantity[84.72, "DegreesFahrenheit"], 
          Quantity[84.54, "DegreesFahrenheit"], 
          Quantity[76.75, "DegreesFahrenheit"], 
          Quantity[65.95, "DegreesFahrenheit"], 
          Quantity[58.5, "DegreesFahrenheit"], 
          Quantity[53.85, "DegreesFahrenheit"], 
          Quantity[62.31, "DegreesFahrenheit"], 
          Quantity[73.71000000000001, "DegreesFahrenheit"], 
          Quantity[84.27, "DegreesFahrenheit"], 
          Quantity[92.97, "DegreesFahrenheit"], 
          Quantity[90.45, "DegreesFahrenheit"], 
          Quantity[87.13, "DegreesFahrenheit"], 
          Quantity[85.3, "DegreesFahrenheit"], 
          Quantity[86.05, "DegreesFahrenheit"], 
          Quantity[79.39, "DegreesFahrenheit"], 
          Quantity[65.5, "DegreesFahrenheit"], 
          Quantity[59.38, "DegreesFahrenheit"], 
          Quantity[56.08, "DegreesFahrenheit"], 
          Quantity[60.13, "DegreesFahrenheit"], 
          Quantity[71.01, "DegreesFahrenheit"], 
          Quantity[82.53, "DegreesFahrenheit"], 
          Quantity[89.02, "DegreesFahrenheit"], 
          Quantity[94.66, "DegreesFahrenheit"], 
          Quantity[90.09, "DegreesFahrenheit"], 
          Quantity[88.72, "DegreesFahrenheit"], 
          Quantity[85.59, "DegreesFahrenheit"], 
          Quantity[80.02, "DegreesFahrenheit"], 
          Quantity[67.77, "DegreesFahrenheit"], 
          Quantity[57.04, "DegreesFahrenheit"], 
          Quantity[55., "DegreesFahrenheit"], 
          Quantity[65.82000000000001, "DegreesFahrenheit"], 
          Quantity[70.92, "DegreesFahrenheit"], 
          Quantity[82.36, "DegreesFahrenheit"], 
          Quantity[92.52, "DegreesFahrenheit"], 
          Quantity[90.63, "DegreesFahrenheit"], 
          Quantity[86.79, "DegreesFahrenheit"], 
          Quantity[86.2, "DegreesFahrenheit"], 
          Quantity[87.26, "DegreesFahrenheit"], 
          Quantity[80.69, "DegreesFahrenheit"], 
          Quantity[70.2, "DegreesFahrenheit"], 
          Quantity[61.2, "DegreesFahrenheit"], 
          Quantity[60.4, "DegreesFahrenheit"], 
          Quantity[65.61, "DegreesFahrenheit"], 
          Quantity[78.62, "DegreesFahrenheit"], 
          Quantity[90.77, "DegreesFahrenheit"], 
          Quantity[94.21000000000001, "DegreesFahrenheit"], 
          Quantity[95.13, "DegreesFahrenheit"], 
          Quantity[87.57000000000001, "DegreesFahrenheit"], 
          Quantity[87.62, "DegreesFahrenheit"], 
          Quantity[87.71000000000001, "DegreesFahrenheit"], 
          Quantity[82.26, "DegreesFahrenheit"], 
          Quantity[71.35000000000001, "DegreesFahrenheit"], 
          Quantity[62.870000000000005`, "DegreesFahrenheit"], 
          Quantity[59.54, "DegreesFahrenheit"], 
          Quantity[67.15, "DegreesFahrenheit"], 
          Quantity[76.28, "DegreesFahrenheit"], 
          Quantity[85.64, "DegreesFahrenheit"]}}, {
         TemporalData`DateSpecification[{2007, 4, 1, 0, 0, 0.}, {2017, 4, 1, 
          0, 0, 0}, {1, "Month"}]}, 1, {"Continuous", 1}, {"Discrete", 1}, 
        1, {ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, 
       True, 11.1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"tempblore", "=", 
     RowBox[{"TimeSeries", "[", 
      RowBox[{
       RowBox[{"WeatherData", "[", 
        RowBox[{
         TemplateBox[{"\"Bengaluru\"",RowBox[{"Entity", "[", 
             RowBox[{"\"City\"", ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "\"Bengaluru\"", ",", "\"Karnataka\"", ",", "\"India\""}], 
                 "}"}]}], "]"}],
           "\"Entity[\\\"City\\\", {\\\"Bengaluru\\\", \\\"Karnataka\\\", \
\\\"India\\\"}]\"","\"city\""},
          "Entity"], ",", "\"\<Temperature\>\"", ",", "tspec", ",", 
         "\"\<NonMetricValue\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"start", ",", "Automatic", ",", "\"\<Month\>\""}], "}"}]}], 
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tempblore", "=", 
     InterpretationBox[
      RowBox[{
       TagBox["TimeSeries",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{15., {0., 15.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{}, {{}, {}, 
                {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
                 StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                   "]],
                  StripOnInput->False,
                  FontFamily->"Arial"]}}, {}},
              AspectRatio->1,
              Axes->{False, False},
              AxesLabel->{None, None},
              AxesOrigin->{0., 0.},
              Background->GrayLevel[0.93],
              BaseStyle->{FontFamily -> "Arial"},
              DisplayFunction->Identity,
              Frame->{{True, True}, {True, True}},
              FrameLabel->{{None, None}, {None, None}},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]],
              FrameTicks->{{None, None}, {None, None}},
              GridLines->{None, None},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->{Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]},
              LabelStyle->{FontFamily -> "Arial"},
              Method->{"ScalingFunctions" -> None},
              PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
              PlotRangeClipping->True,
              PlotRangePadding->{{1, 1}, {1, 1}},
              Ticks->{Automatic, Automatic}], GridBox[{
               {
                TagBox[
                 TemplateBox[{RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Apr 2007\"", "SummaryItem"]}],RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Apr 2017\"", "SummaryItem"]}]},
                  "RowDefault"],
                 "SummaryItem"], "\[SpanFromLeft]"},
               {
                RowBox[{
                 TagBox["\<\"Data points: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["121",
                  "SummaryItem"]}], "\[SpanFromLeft]"}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{}, {{}, {}, 
                {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
                 StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                   "]],
                  StripOnInput->False,
                  FontFamily->"Arial"]}}, {}},
              AspectRatio->1,
              Axes->{False, False},
              AxesLabel->{None, None},
              AxesOrigin->{0., 0.},
              Background->GrayLevel[0.93],
              BaseStyle->{FontFamily -> "Arial"},
              DisplayFunction->Identity,
              Frame->{{True, True}, {True, True}},
              FrameLabel->{{None, None}, {None, None}},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]],
              FrameTicks->{{None, None}, {None, None}},
              GridLines->{None, None},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->{Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]},
              LabelStyle->{FontFamily -> "Arial"},
              Method->{"ScalingFunctions" -> None},
              PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
              PlotRangeClipping->True,
              PlotRangePadding->{{1, 1}, {1, 1}},
              Ticks->{Automatic, Automatic}], GridBox[{
               {
                TagBox[
                 TemplateBox[{RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Apr 2007\"", "SummaryItem"]}],RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Apr 2017\"", "SummaryItem"]}]},
                  "RowDefault"],
                 "SummaryItem"], "\[SpanFromLeft]"},
               {
                RowBox[{
                 TagBox["\<\"Data points: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["121",
                  "SummaryItem"]}], "\[SpanFromLeft]"},
               {
                RowBox[{
                 TagBox["\<\"Regular: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["True",
                  "SummaryItem"]}], 
                RowBox[{
                 TagBox["\<\"Output dimension: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["1",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Metadata: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}], 
                RowBox[{
                 TagBox["\<\"Minimum increment: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"1", ",", "\<\"Month\"\>"}], "}"}],
                  "SummaryItem"]}]},
               {
                TagBox["\<\"\"\>",
                 "SummaryItem"], 
                RowBox[{
                 TagBox["\<\"Resampling: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"LinearInterpolation\"\>",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TemporalData[TimeSeries, {{{
          Quantity[81.19, "DegreesFahrenheit"], 
          Quantity[80.55, "DegreesFahrenheit"], 
          Quantity[76.26, "DegreesFahrenheit"], 
          Quantity[74.41, "DegreesFahrenheit"], 
          Quantity[73.47, "DegreesFahrenheit"], 
          Quantity[73.81, "DegreesFahrenheit"], 
          Quantity[74.21000000000001, "DegreesFahrenheit"], 
          Quantity[71.38, "DegreesFahrenheit"], 
          Quantity[69.10000000000001, "DegreesFahrenheit"], 
          Quantity[70.93, "DegreesFahrenheit"], 
          Quantity[74.71000000000001, "DegreesFahrenheit"], 
          Quantity[75.2, "DegreesFahrenheit"], 
          Quantity[80.17, "DegreesFahrenheit"], 
          Quantity[79.61, "DegreesFahrenheit"], 
          Quantity[75.47, "DegreesFahrenheit"], 
          Quantity[74.25, "DegreesFahrenheit"], 
          Quantity[73.27, "DegreesFahrenheit"], 
          Quantity[74.44, "DegreesFahrenheit"], 
          Quantity[72.91, "DegreesFahrenheit"], 
          Quantity[71.53, "DegreesFahrenheit"], 
          Quantity[70.14, "DegreesFahrenheit"], 
          Quantity[69.87, "DegreesFahrenheit"], 
          Quantity[75.81, "DegreesFahrenheit"], 
          Quantity[79.27, "DegreesFahrenheit"], 
          Quantity[81.68, "DegreesFahrenheit"], 
          Quantity[79.05, "DegreesFahrenheit"], 
          Quantity[76.12, "DegreesFahrenheit"], 
          Quantity[73.65, "DegreesFahrenheit"], 
          Quantity[74.66, "DegreesFahrenheit"], 
          Quantity[73.76, "DegreesFahrenheit"], 
          Quantity[74.88, "DegreesFahrenheit"], 
          Quantity[72.86, "DegreesFahrenheit"], 
          Quantity[70.9, "DegreesFahrenheit"], 
          Quantity[71.17, "DegreesFahrenheit"], 
          Quantity[76.26, "DegreesFahrenheit"], 
          Quantity[81., "DegreesFahrenheit"], 
          Quantity[81.77, "DegreesFahrenheit"], 
          Quantity[80.33, "DegreesFahrenheit"], 
          Quantity[76.28, "DegreesFahrenheit"], 
          Quantity[73.49, "DegreesFahrenheit"], 
          Quantity[73.9, "DegreesFahrenheit"], 
          Quantity[74.43, "DegreesFahrenheit"], 
          Quantity[74.07000000000001, "DegreesFahrenheit"], 
          Quantity[71.74, "DegreesFahrenheit"], 
          Quantity[69.96000000000001, "DegreesFahrenheit"], 
          Quantity[70.9, "DegreesFahrenheit"], 
          Quantity[73.27, "DegreesFahrenheit"], 
          Quantity[78.76, "DegreesFahrenheit"], 
          Quantity[79.25, "DegreesFahrenheit"], 
          Quantity[78.49, "DegreesFahrenheit"], 
          Quantity[74.89, "DegreesFahrenheit"], 
          Quantity[73.47, "DegreesFahrenheit"], 
          Quantity[73.08, "DegreesFahrenheit"], 
          Quantity[74.3, "DegreesFahrenheit"], 
          Quantity[74.32000000000001, "DegreesFahrenheit"], 
          Quantity[71.35000000000001, "DegreesFahrenheit"], 
          Quantity[69.87, "DegreesFahrenheit"], 
          Quantity[71.06, "DegreesFahrenheit"], 
          Quantity[75.09, "DegreesFahrenheit"], 
          Quantity[80.49, "DegreesFahrenheit"], 
          Quantity[82.13, "DegreesFahrenheit"], 
          Quantity[80.2, "DegreesFahrenheit"], 
          Quantity[77.29, "DegreesFahrenheit"], 
          Quantity[74.86, "DegreesFahrenheit"], 
          Quantity[73.83, "DegreesFahrenheit"], 
          Quantity[75.15, "DegreesFahrenheit"], 
          Quantity[73.63, "DegreesFahrenheit"], 
          Quantity[72.18, "DegreesFahrenheit"], 
          Quantity[71.17, "DegreesFahrenheit"], 
          Quantity[72.21000000000001, "DegreesFahrenheit"], 
          Quantity[75.07000000000001, "DegreesFahrenheit"], 
          Quantity[80.10000000000001, "DegreesFahrenheit"], 
          Quantity[83.01, "DegreesFahrenheit"], 
          Quantity[80.31, "DegreesFahrenheit"], 
          Quantity[74.07000000000001, "DegreesFahrenheit"], 
          Quantity[72.61, "DegreesFahrenheit"], 
          Quantity[73.54, "DegreesFahrenheit"], 
          Quantity[73.4, "DegreesFahrenheit"], 
          Quantity[74.25, "DegreesFahrenheit"], 
          Quantity[72.12, "DegreesFahrenheit"], 
          Quantity[69.66, "DegreesFahrenheit"], 
          Quantity[70.86, "DegreesFahrenheit"], 
          Quantity[74.82000000000001, "DegreesFahrenheit"], 
          Quantity[78.94, "DegreesFahrenheit"], 
          Quantity[83.12, "DegreesFahrenheit"], 
          Quantity[80.92, "DegreesFahrenheit"], 
          Quantity[77.67, "DegreesFahrenheit"], 
          Quantity[74.98, "DegreesFahrenheit"], 
          Quantity[74.17, "DegreesFahrenheit"], 
          Quantity[74.95, "DegreesFahrenheit"], 
          Quantity[74.07000000000001, "DegreesFahrenheit"], 
          Quantity[71.60000000000001, "DegreesFahrenheit"], 
          Quantity[70.99, "DegreesFahrenheit"], 
          Quantity[70.59, "DegreesFahrenheit"], 
          Quantity[74.35000000000001, "DegreesFahrenheit"], 
          Quantity[78.8, "DegreesFahrenheit"], 
          Quantity[78.89, "DegreesFahrenheit"], 
          Quantity[78.13, "DegreesFahrenheit"], 
          Quantity[75.54, "DegreesFahrenheit"], 
          Quantity[74.97, "DegreesFahrenheit"], 
          Quantity[74.77, "DegreesFahrenheit"], 
          Quantity[75.15, "DegreesFahrenheit"], 
          Quantity[76.06, "DegreesFahrenheit"], 
          Quantity[70.99, "DegreesFahrenheit"], 
          Quantity[71.83, "DegreesFahrenheit"], 
          Quantity[71.06, "DegreesFahrenheit"], 
          Quantity[76.8, "DegreesFahrenheit"], 
          Quantity[81.27, "DegreesFahrenheit"], 
          Quantity[85.39, "DegreesFahrenheit"], 
          Quantity[81.09, "DegreesFahrenheit"], 
          Quantity[74.53, "DegreesFahrenheit"], 
          Quantity[73.63, "DegreesFahrenheit"], 
          Quantity[74.23, "DegreesFahrenheit"], 
          Quantity[74.34, "DegreesFahrenheit"], 
          Quantity[76.21000000000001, "DegreesFahrenheit"], 
          Quantity[74.73, "DegreesFahrenheit"], 
          Quantity[70.95, "DegreesFahrenheit"], 
          Quantity[71.33, "DegreesFahrenheit"], 
          Quantity[75.06, "DegreesFahrenheit"], 
          Quantity[80.71000000000001, "DegreesFahrenheit"], 
          Quantity[84.29, "DegreesFahrenheit"]}}, {
         TemporalData`DateSpecification[{2007, 4, 1, 0, 0, 0.}, {2017, 4, 1, 
          0, 0, 0}, {1, "Month"}]}, 1, {"Continuous", 1}, {"Discrete", 1}, 
        1, {ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, 
       True, 11.1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"tempBoston", "=", 
      RowBox[{"TimeSeries", "[", 
       RowBox[{
        RowBox[{"WeatherData", "[", 
         RowBox[{
          NamespaceBox["LinguisticAssistant",
           
           DynamicModuleBox[{Typeset`query$$ = "Boston, MA", Typeset`boxes$$ =
             TemplateBox[{"\"Boston\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"City\"", ",", 
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"Boston\"", ",", "\"Massachusetts\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
              "\"Entity[\\\"City\\\", {\\\"Boston\\\", \\\"Massachusetts\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""}, "Entity"], 
            Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
            Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
            "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
             0.4929502`7.144348040648184, "Messages" -> {}}}, 
            DynamicBox[ToBoxes[
              AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
               Dynamic[Typeset`query$$], 
               Dynamic[Typeset`boxes$$], 
               Dynamic[Typeset`allassumptions$$], 
               Dynamic[Typeset`assumptions$$], 
               Dynamic[Typeset`open$$], 
               Dynamic[Typeset`querystate$$]], StandardForm],
             ImageSizeCache->{176., {13., 28.}},
             
             TrackedSymbols:>{
              Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
               Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
            DynamicModuleValues:>{},
            UndoTrackedVariables:>{Typeset`open$$}],
           BaseStyle->{"Deploy"},
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True], ",", "\"\<Temperature\>\"", ",", 
          "tspec", ",", "\"\<NonMetricValue\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"start", ",", "Automatic", ",", "\"\<Month\>\""}], "}"}]}], 
       "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tempBoston", "=", 
     InterpretationBox[
      RowBox[{
       TagBox["TimeSeries",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{15., {0., 15.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[{{}, {{}, {}, 
                {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
                 StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                   "]],
                  StripOnInput->False,
                  FontFamily->"Arial"]}}, {}},
              AspectRatio->1,
              Axes->{False, False},
              AxesLabel->{None, None},
              AxesOrigin->{0., 0.},
              Background->GrayLevel[0.93],
              BaseStyle->{FontFamily -> "Arial"},
              DisplayFunction->Identity,
              Frame->{{True, True}, {True, True}},
              FrameLabel->{{None, None}, {None, None}},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]],
              FrameTicks->{{None, None}, {None, None}},
              GridLines->{None, None},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->{Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]},
              LabelStyle->{FontFamily -> "Arial"},
              Method->{"ScalingFunctions" -> None},
              PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
              PlotRangeClipping->True,
              PlotRangePadding->{{1, 1}, {1, 1}},
              Ticks->{Automatic, Automatic}], GridBox[{
               {
                TagBox[
                 TemplateBox[{RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jun 2007\"", "SummaryItem"]}],RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jun 2017\"", "SummaryItem"]}]},
                  "RowDefault"],
                 "SummaryItem"], "\[SpanFromLeft]"},
               {
                RowBox[{
                 TagBox["\<\"Data points: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["121",
                  "SummaryItem"]}], "\[SpanFromLeft]"}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[{{}, {{}, {}, 
                {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
                 StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                   "]],
                  StripOnInput->False,
                  FontFamily->"Arial"]}}, {}},
              AspectRatio->1,
              Axes->{False, False},
              AxesLabel->{None, None},
              AxesOrigin->{0., 0.},
              Background->GrayLevel[0.93],
              BaseStyle->{FontFamily -> "Arial"},
              DisplayFunction->Identity,
              Frame->{{True, True}, {True, True}},
              FrameLabel->{{None, None}, {None, None}},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]],
              FrameTicks->{{None, None}, {None, None}},
              GridLines->{None, None},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->{Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]},
              LabelStyle->{FontFamily -> "Arial"},
              Method->{"ScalingFunctions" -> None},
              PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
              PlotRangeClipping->True,
              PlotRangePadding->{{1, 1}, {1, 1}},
              Ticks->{Automatic, Automatic}], GridBox[{
               {
                TagBox[
                 TemplateBox[{RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jun 2007\"", "SummaryItem"]}],RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jun 2017\"", "SummaryItem"]}]},
                  "RowDefault"],
                 "SummaryItem"], "\[SpanFromLeft]"},
               {
                RowBox[{
                 TagBox["\<\"Data points: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["121",
                  "SummaryItem"]}], "\[SpanFromLeft]"},
               {
                RowBox[{
                 TagBox["\<\"Regular: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["True",
                  "SummaryItem"]}], 
                RowBox[{
                 TagBox["\<\"Output dimension: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["1",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Metadata: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}], 
                RowBox[{
                 TagBox["\<\"Minimum increment: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"1", ",", "\<\"Month\"\>"}], "}"}],
                  "SummaryItem"]}]},
               {
                TagBox["\<\"\"\>",
                 "SummaryItem"], 
                RowBox[{
                 TagBox["\<\"Resampling: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"LinearInterpolation\"\>",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TemporalData[TimeSeries, {{{
          Quantity[67.87, "DegreesFahrenheit"], 
          Quantity[72.19, "DegreesFahrenheit"], 
          Quantity[72.64, "DegreesFahrenheit"], 
          Quantity[67.06, "DegreesFahrenheit"], 
          Quantity[58.86, "DegreesFahrenheit"], 
          Quantity[43.09, "DegreesFahrenheit"], 
          Quantity[32.34, "DegreesFahrenheit"], 
          Quantity[33.51, "DegreesFahrenheit"], 
          Quantity[32.79, "DegreesFahrenheit"], 
          Quantity[37.62, "DegreesFahrenheit"], 
          Quantity[49.120000000000005`, "DegreesFahrenheit"], 
          Quantity[57., "DegreesFahrenheit"], 
          Quantity[69.67, "DegreesFahrenheit"], 
          Quantity[74.44, "DegreesFahrenheit"], 
          Quantity[69.37, "DegreesFahrenheit"], 
          Quantity[65.08, "DegreesFahrenheit"], 
          Quantity[53.370000000000005`, "DegreesFahrenheit"], 
          Quantity[43.39, "DegreesFahrenheit"], 
          Quantity[36.18, "DegreesFahrenheit"], 
          Quantity[25.23, "DegreesFahrenheit"], 
          Quantity[32.7, "DegreesFahrenheit"], 
          Quantity[37.24, "DegreesFahrenheit"], 
          Quantity[49.980000000000004`, "DegreesFahrenheit"], 
          Quantity[59.31, "DegreesFahrenheit"], 
          Quantity[62.550000000000004`, "DegreesFahrenheit"], 
          Quantity[69.94, "DegreesFahrenheit"], 
          Quantity[73.26, "DegreesFahrenheit"], 
          Quantity[63.32, "DegreesFahrenheit"], 
          Quantity[51.75, "DegreesFahrenheit"], 
          Quantity[48.97, "DegreesFahrenheit"], 
          Quantity[33.28, "DegreesFahrenheit"], 
          Quantity[29.7, "DegreesFahrenheit"], 
          Quantity[32.72, "DegreesFahrenheit"], 
          Quantity[43.75, "DegreesFahrenheit"], 
          Quantity[52.29, "DegreesFahrenheit"], 
          Quantity[62.190000000000005`, "DegreesFahrenheit"], 
          Quantity[67.42, "DegreesFahrenheit"], 
          Quantity[73.49, "DegreesFahrenheit"], 
          Quantity[70.66, "DegreesFahrenheit"], 
          Quantity[67.55, "DegreesFahrenheit"], 
          Quantity[55.45, "DegreesFahrenheit"], 
          Quantity[44.74, "DegreesFahrenheit"], 
          Quantity[32.43, "DegreesFahrenheit"], 
          Quantity[27.93, "DegreesFahrenheit"], 
          Quantity[30.43, "DegreesFahrenheit"], 
          Quantity[37.51, "DegreesFahrenheit"], 
          Quantity[47.75, "DegreesFahrenheit"], 
          Quantity[56.53, "DegreesFahrenheit"], 
          Quantity[64.65, "DegreesFahrenheit"], 
          Quantity[74.19, "DegreesFahrenheit"], 
          Quantity[71.22, "DegreesFahrenheit"], 
          Quantity[64.78, "DegreesFahrenheit"], 
          Quantity[55.800000000000004`, "DegreesFahrenheit"], 
          Quantity[48.83, "DegreesFahrenheit"], 
          Quantity[39.47, "DegreesFahrenheit"], 
          Quantity[33.31, "DegreesFahrenheit"], 
          Quantity[35.69, "DegreesFahrenheit"], 
          Quantity[44.69, "DegreesFahrenheit"], 
          Quantity[49.870000000000005`, "DegreesFahrenheit"], 
          Quantity[57.94, "DegreesFahrenheit"], 
          Quantity[64.45, "DegreesFahrenheit"], 
          Quantity[73.56, "DegreesFahrenheit"], 
          Quantity[72.28, "DegreesFahrenheit"], 
          Quantity[63.86, "DegreesFahrenheit"], 
          Quantity[55.06, "DegreesFahrenheit"], 
          Quantity[40.69, "DegreesFahrenheit"], 
          Quantity[37.800000000000004`, "DegreesFahrenheit"], 
          Quantity[31.330000000000002`, "DegreesFahrenheit"], 
          Quantity[29.95, "DegreesFahrenheit"], 
          Quantity[36.03, "DegreesFahrenheit"], 
          Quantity[45.480000000000004`, "DegreesFahrenheit"], 
          Quantity[55.74, "DegreesFahrenheit"], 
          Quantity[66.61, "DegreesFahrenheit"], 
          Quantity[73.78, "DegreesFahrenheit"], 
          Quantity[70., "DegreesFahrenheit"], 
          Quantity[62.71, "DegreesFahrenheit"], 
          Quantity[55.44, "DegreesFahrenheit"], 
          Quantity[41.27, "DegreesFahrenheit"], 
          Quantity[32.52, "DegreesFahrenheit"], 
          Quantity[27.03, "DegreesFahrenheit"], 
          Quantity[29.03, "DegreesFahrenheit"], 
          Quantity[32.86, "DegreesFahrenheit"], 
          Quantity[46.67, "DegreesFahrenheit"], 
          Quantity[57.07, "DegreesFahrenheit"], 
          Quantity[66.16, "DegreesFahrenheit"], 
          Quantity[72.5, "DegreesFahrenheit"], 
          Quantity[69.17, "DegreesFahrenheit"], 
          Quantity[64.9, "DegreesFahrenheit"], 
          Quantity[55.17, "DegreesFahrenheit"], 
          Quantity[41.77, "DegreesFahrenheit"], 
          Quantity[38.300000000000004`, "DegreesFahrenheit"], 
          Quantity[26.46, "DegreesFahrenheit"], 
          Quantity[19.45, "DegreesFahrenheit"], 
          Quantity[31.82, "DegreesFahrenheit"], 
          Quantity[47.01, "DegreesFahrenheit"], 
          Quantity[59.97, "DegreesFahrenheit"], 
          Quantity[62.89, "DegreesFahrenheit"], 
          Quantity[72.54, "DegreesFahrenheit"], 
          Quantity[72.54, "DegreesFahrenheit"], 
          Quantity[68.25, "DegreesFahrenheit"], 
          Quantity[52.65, "DegreesFahrenheit"], 
          Quantity[47.61, "DegreesFahrenheit"], 
          Quantity[44.37, "DegreesFahrenheit"], 
          Quantity[31.59, "DegreesFahrenheit"], 
          Quantity[33.76, "DegreesFahrenheit"], 
          Quantity[40.95, "DegreesFahrenheit"], 
          Quantity[45.9, "DegreesFahrenheit"], 
          Quantity[55.69, "DegreesFahrenheit"], 
          Quantity[65.19, "DegreesFahrenheit"], 
          Quantity[73.24, "DegreesFahrenheit"], 
          Quantity[74.34, "DegreesFahrenheit"], 
          Quantity[66.24, "DegreesFahrenheit"], 
          Quantity[54.550000000000004`, "DegreesFahrenheit"], 
          Quantity[45.01, "DegreesFahrenheit"], 
          Quantity[34.480000000000004`, "DegreesFahrenheit"], 
          Quantity[34.47, "DegreesFahrenheit"], 
          Quantity[34.92, "DegreesFahrenheit"], 
          Quantity[34.05, "DegreesFahrenheit"], 
          Quantity[50.68, "DegreesFahrenheit"], 
          Quantity[54.660000000000004`, "DegreesFahrenheit"], 
          Quantity[64.4, "DegreesFahrenheit"]}}, {
         TemporalData`DateSpecification[{2007, 6, 1, 0, 0, 0.}, {2017, 6, 1, 
          0, 0, 0}, {1, "Month"}]}, 1, {"Continuous", 1}, {"Discrete", 1}, 
        1, {ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, 
       True, 11.1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7008430847228384`*^9, 3.7008430847258463`*^9}, {
   3.701792010536666*^9, 3.701792024403223*^9}, 3.701792121825858*^9, {
   3.706620491246645*^9, 3.7066205253676496`*^9}, {3.7066205914715486`*^9, 
   3.706620617572375*^9}},
 CellTags->{
  "DatePlus", "DateValue", 
   "Today"},ExpressionUUID->"99bb3c26-716d-41f8-b66c-ef818dbd9ae5"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"SlideShow",
WindowSize->{1375, 761},
WindowMargins->{{50, Automatic}, {Automatic, 38}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Style Environment Names", "Section"], 
      Cell[
       StyleData[All, "Working"]], 
      Cell[
       StyleData[All, "Presentation"], MenuSortingValue -> None], 
      Cell[
       StyleData[All, "Condensed"], MenuSortingValue -> None], 
      Cell[
       StyleData[All, "SlideShow"]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
       StyleData["Notebook"], 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.739193, 0.750317, 0.747173]}]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], ShowCellBracket -> Automatic, ShowGroupOpener -> 
          False, CellMargins -> {{100, 100}, {14, 50}}, 
          CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
          CellFrameMargins -> {{20, 20}, {20, 20}}, DefaultNewInlineCellStyle -> 
          "None", InputAutoReplacements -> {"TeX" -> StyleBox[
              RowBox[{"T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
              RowBox[{"L", 
                StyleBox[
                 AdjustmentBox[
                 "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
            "Mma" -> "Mathematica", "MMA" -> "Mathematica", "gridMathematica" -> 
            FormBox[
              RowBox[{"grid", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            "webMathematica" -> FormBox[
              RowBox[{"web", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            Inherited}, TextAlignment -> Center, LineSpacing -> {1, 0}, 
          LanguageCategory -> "NaturalLanguage", CounterIncrements -> "Title",
           CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
            "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}}, FontFamily -> 
          "Arial", FontSize -> 45, FontWeight -> "Bold", FontSlant -> "Plain",
           FontTracking -> "Plain", 
          FontVariations -> {
           "Outline" -> False, "Shadow" -> False, "StrikeThrough" -> False, 
            "Underline" -> False}, FontColor -> 
          RGBColor[
           0.8156862745098039, 0.07058823529411765, 0.07058823529411765], 
          Background -> None, FontVariations -> {"Masked" -> False}], 
         Cell[
          StyleData["Title", "Presentation", StyleDefinitions -> None], 
          CellMargins -> {{55, 3}, {14, 125}}, LineSpacing -> {1, 5}, 
          FontSize -> 48], 
         Cell[
          StyleData[
          "Title", "SlideShow", StyleDefinitions -> 
           StyleData["Title", "Presentation"]], 
          CellMargins -> {{100, 100}, {52, 105}}, FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["Title", "Printout", StyleDefinitions -> None], 
          CellMargins -> {{2, 0}, {0, 20}}, FontSize -> 24]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subtitle"], ShowCellBracket -> Automatic, 
          CellMargins -> {{0, 0}, {0, 5}}, 
          CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> False,
           DefaultNewInlineCellStyle -> "None", 
          InputAutoReplacements -> {"TeX" -> StyleBox[
              RowBox[{"T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
              RowBox[{"L", 
                StyleBox[
                 AdjustmentBox[
                 "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
            "Mma" -> "Mathematica", "MMA" -> "Mathematica", "gridMathematica" -> 
            FormBox[
              RowBox[{"grid", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            "webMathematica" -> FormBox[
              RowBox[{"web", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            Inherited}, TextAlignment -> Center, LanguageCategory -> 
          "NaturalLanguage", CounterIncrements -> "Subtitle", 
          CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
            "Figure", 0}, {"Subsubtitle", 0}}, FontFamily -> "Arial", 
          FontSize -> 27, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> RGBColor[0.4, 0.4, 0.4], Background -> None], 
         Cell[
          StyleData["Subtitle", "Presentation", StyleDefinitions -> None], 
          CellMargins -> {{58, 0}, {0, 5}}, FontSize -> 36], 
         Cell[
          StyleData[
          "Subtitle", "SlideShow", StyleDefinitions -> StyleData["Subtitle"]],
           CellMargins -> {{0, 0}, {0, 5}}, FontSize -> 27, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.9019607843137255, 0.9019607843137255]], 
         Cell[
          StyleData["Subtitle", "Printout", StyleDefinitions -> None], 
          CellMargins -> {{2, 0}, {0, 5}}, FontSize -> 18, Background -> 
          GrayLevel[1]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubtitle", StyleDefinitions -> StyleData["Subtitle"]],
           CellMargins -> {{0, 0}, {30, 5}}, FontSize -> 24, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.4, 0.4, 0.4]], 
         Cell[
          StyleData["Subsubtitle", "Presentation"], FontSize -> 24], 
         Cell[
          StyleData[
          "Subsubtitle", "SlideShow", StyleDefinitions -> 
           StyleData["Subsubtitle"]], CellMargins -> {{0, 0}, {10, 5}}, 
          FontColor -> 
          RGBColor[
           0.9019607843137255, 0.9019607843137255, 0.9019607843137255]], 
         Cell[
          StyleData["Subsubtitle", "Printout"], FontSize -> 14]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0.2, 0}}, 
          ShowGroupOpener -> False, CellMargins -> {{60, 50}, {7, 25}}, 
          FontSize -> 36, FontWeight -> "Plain", FontColor -> 
          RGBColor[
           0.8156862745098039, 0.07058823529411765, 0.07058823529411765]], 
         Cell[
          StyleData["Section", "Presentation"], 
          CellFrame -> {{0, 0}, {0.2, 0}}, 
          CellMargins -> {{58, 50}, {7, 35}}], 
         Cell[
          StyleData[
          "Section", "SlideShow", StyleDefinitions -> 
           StyleData["Section", "Presentation"]], 
          CellMargins -> {{58, 50}, {10, 35}}], 
         Cell[
          StyleData["Section", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{2, 0}, {4, 22}}, FontSize -> 20]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
          False, CellMargins -> {{60, Inherited}, {0, 15}}, 
          CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
          False, DefaultNewInlineCellStyle -> "None", 
          InputAutoReplacements -> {"TeX" -> StyleBox[
              RowBox[{"T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
              RowBox[{"L", 
                StyleBox[
                 AdjustmentBox[
                 "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
            "Mma" -> "Mathematica", "MMA" -> "Mathematica", "gridMathematica" -> 
            FormBox[
              RowBox[{"grid", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            "webMathematica" -> FormBox[
              RowBox[{"web", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            Inherited}, LanguageCategory -> "NaturalLanguage", 
          CounterIncrements -> "Subsection", 
          CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
          "Helvetica", FontSize -> 24, FontWeight -> "Plain", FontSlant -> 
          "Plain", FontColor -> RGBColor[0.4, 0.4, 0.4]], 
         Cell[
          StyleData["Subsection", "Presentation"], ShowGroupOpener -> True, 
          CellMargins -> {{60, 50}, {0, 20}}, LineSpacing -> {1, 0}, 
          FontFamily -> "Helvetica", $CellContext`WholeCellGroupOpener -> 
          True], 
         Cell[
          StyleData["Subsection", "SlideShow"], ShowGroupOpener -> True, 
          CellMargins -> {{60, 50}, {8, 12}}, LineSpacing -> {1, 0}, 
          FontFamily -> "Helvetica", $CellContext`WholeCellGroupOpener -> 
          True], 
         Cell[
          StyleData["Subsection", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{2, 0}, {0, 17}}, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          False, CellMargins -> {{60, Inherited}, {0, 15}}, 
          CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
          False, DefaultNewInlineCellStyle -> "None", 
          InputAutoReplacements -> {"TeX" -> StyleBox[
              RowBox[{"T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
              RowBox[{"L", 
                StyleBox[
                 AdjustmentBox[
                 "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
            "Mma" -> "Mathematica", "MMA" -> "Mathematica", "gridMathematica" -> 
            FormBox[
              RowBox[{"grid", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            "webMathematica" -> FormBox[
              RowBox[{"web", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            Inherited}, LanguageCategory -> "NaturalLanguage", 
          CounterIncrements -> "Subsubsection", FontFamily -> "Helvetica", 
          FontSize -> 20, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> RGBColor[0.4, 0.4, 0.4]], 
         Cell[
          StyleData["Subsubsection", "Presentation"], ShowGroupOpener -> True,
           CellMargins -> {{60, 50}, {0, 20}}, 
          LineSpacing -> {1, 0}, $CellContext`WholeCellGroupOpener -> True], 
         Cell[
          StyleData[
          "Subsubsection", "SlideShow", StyleDefinitions -> 
           StyleData["Subsubsection", "Presentation"]]], 
         Cell[
          StyleData["Subsubsection", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{2, 0}, {0, 22}}, FontSize -> 14]}, Closed]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Standard", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], CellMargins -> {{60, 10}, {7, 7}}, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", 
               "gridMathematica" -> FormBox[
                 RowBox[{"grid", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               "webMathematica" -> FormBox[
                 RowBox[{"web", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               Inherited}, LineSpacing -> {1, 3}, CounterIncrements -> "Text",
              FontFamily -> "Helvetica", FontSize -> 12], 
            Cell[
             StyleData["Text", "Presentation"], 
             CellMargins -> {{60, 50}, {10, 10}}, FontSize -> 17], 
            Cell[
             StyleData[
             "Text", "SlideShow", StyleDefinitions -> 
              StyleData["Text", "Presentation"]]], 
            Cell[
             StyleData["Text", "Printout"], CellMargins -> {{2, 2}, {6, 6}}, 
             TextJustification -> 0.5, Hyphenation -> True, FontSize -> 10]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Note"], CellMargins -> {{60, 10}, {7, 7}}, CellOpen -> 
             True, InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", 
               "gridMathematica" -> FormBox[
                 RowBox[{"grid", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               "webMathematica" -> FormBox[
                 RowBox[{"web", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               Inherited}, LineSpacing -> {1, 3}, CounterIncrements -> "Note",
              MenuSortingValue -> 1111, MenuCommandKey -> "n", FontFamily -> 
             "Helvetica", FontSize -> 12, FontSlant -> "Italic", Background -> 
             GrayLevel[0.85]], 
            Cell[
             StyleData["Note", "Presentation"], 
             CellMargins -> {{60, 50}, {10, 10}}, CellOpen -> False, FontSize -> 
             17, Background -> None], 
            Cell[
             StyleData[
             "Note", "SlideShow", StyleDefinitions -> 
              StyleData["Note", "Presentation"]], CellOpen -> False], 
            Cell[
             StyleData["Note", "Printout"], CellMargins -> {{2, 2}, {6, 6}}, 
             TextJustification -> 0.5, Hyphenation -> True, FontSize -> 10]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Display", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Item", StyleDefinitions -> StyleData["Text"]], 
             CellDingbat -> 
             Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
             ShowGroupOpener -> False, CellMargins -> {{84, 10}, {7, 7}}, 
             CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
             CounterIncrements -> "Item", $CellContext`ReturnCreatesNewCell -> 
             True], 
            Cell[
             StyleData["Item", "Presentation"], 
             CellMargins -> {{124, 10}, {7, 7}}], 
            Cell[
             StyleData[
             "Item", "SlideShow", StyleDefinitions -> 
              StyleData["Item", "Presentation"]]], 
            Cell[
             StyleData["Item", "Printout"], 
             CellMargins -> {{39, 2}, {0, 6}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subitem", StyleDefinitions -> StyleData["Item"]], 
             CellMargins -> {{108, 10}, {7, 7}}, 
             CellGroupingRules -> {"GroupTogetherNestedGrouping", 15150}, 
             CounterIncrements -> 
             "Subitem", $CellContext`ReturnCreatesNewCell -> True], 
            Cell[
             StyleData["Subitem", "Presentation"], 
             CellMargins -> {{146, 10}, {7, 7}}], 
            Cell[
             StyleData[
             "Subitem", "SlideShow", StyleDefinitions -> 
              StyleData["Subitem", "Presentation"]]], 
            Cell[
             StyleData["Subitem", "Printout"], 
             CellMargins -> {{67, 2}, {0, 6}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ItemNumbered", StyleDefinitions -> StyleData["Text"]],
              CellDingbat -> Cell[
               TextData[{
                 CounterBox["ItemNumbered"], "."}]], ShowGroupOpener -> False,
              CellMargins -> {{84, 10}, {7, 7}}, 
             CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
             CounterIncrements -> 
             "ItemNumbered", $CellContext`ReturnCreatesNewCell -> True], 
            Cell[
             StyleData["ItemNumbered", "Presentation"], 
             CellMargins -> {{124, 10}, {7, 7}}], 
            Cell[
             StyleData[
             "ItemNumbered", "SlideShow", StyleDefinitions -> 
              StyleData["ItemNumbered", "Presentation"]]], 
            Cell[
             StyleData["ItemNumbered", "Printout"], 
             CellMargins -> {{39, 2}, {0, 6}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData[
             "SubitemNumbered", StyleDefinitions -> 
              StyleData["ItemNumbered"]], CellDingbat -> Cell[
               TextData[{
                 CounterBox["SubitemNumbered", CounterFunction :> (Part[
                    CharacterRange["a", "z"], #]& )], "."}]], 
             CellMargins -> {{108, 10}, {7, 7}}, 
             CellGroupingRules -> {"GroupTogetherNestedGrouping", 15150}, 
             CounterIncrements -> 
             "SubitemNumbered", $CellContext`ReturnCreatesNewCell -> True], 
            Cell[
             StyleData["SubitemNumbered", "Presentation"], 
             CellMargins -> {{146, 10}, {7, 7}}], 
            Cell[
             StyleData[
             "SubitemNumbered", "SlideShow", StyleDefinitions -> 
              StyleData["SubitemNumbered", "Presentation"]]], 
            Cell[
             StyleData["SubitemNumbered", "Printout"], 
             CellMargins -> {{67, 2}, {0, 6}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData[
             "ItemParagraph", StyleDefinitions -> StyleData["Item"]], 
             CellDingbat -> None, CellMargins -> {{84, 10}, {7, 7}}, 
             CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
             CounterIncrements -> 
             "ItemParagraph", $CellContext`ReturnCreatesNewCell -> True], 
            Cell[
             StyleData["ItemParagraph", "Presentation"], 
             CellMargins -> {{124, 10}, {7, 7}}], 
            Cell[
             StyleData[
             "ItemParagraph", "SlideShow", StyleDefinitions -> 
              StyleData["ItemParagraph", "Presentation"]]], 
            Cell[
             StyleData["ItemParagraph", "Printout"], 
             CellMargins -> {{39, 2}, {0, 6}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData[
             "SubitemParagraph", StyleDefinitions -> StyleData["Subitem"]], 
             CellDingbat -> None, 
             CellGroupingRules -> {"GroupTogetherNestedGrouping", 15200}, 
             CounterIncrements -> 
             "SubitemParagraph", $CellContext`ReturnCreatesNewCell -> True], 
            Cell[
             StyleData["SubitemParagraph", "Presentation"]], 
            Cell[
             StyleData[
             "SubitemParagraph", "SlideShow", StyleDefinitions -> 
              StyleData["SubitemParagraph", "Presentation"]]], 
            Cell[
             StyleData["SubitemParagraph", "Printout"]]}, Closed]]}, 
        Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DisplayFormula"]], 
         Cell[
          StyleData["DisplayFormula", "Presentation"], 
          CellMargins -> {{60, Inherited}, {1.5 Inherited, 1.5 Inherited}}, 
          FontSize -> 17], 
         Cell[
          StyleData[
          "DisplayFormula", "SlideShow", StyleDefinitions -> 
           StyleData["DisplayFormula", "Presentation"]]], 
         Cell[
          StyleData["DisplayFormula", "Printout"], 
          CellMargins -> {{39, Inherited}, {Inherited, Inherited}}, FontSize -> 
          10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "DisplayFormulaNumbered", StyleDefinitions -> 
           StyleData["DisplayFormula"]], CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["DisplayFormulaNumbered"], ")"}]]}, {None, None}}, 
          CounterIncrements -> "DisplayFormulaNumbered"], 
         Cell[
          StyleData["DisplayFormulaNumbered", "Presentation"], 
          CellMargins -> {{60, Inherited}, {1.5 Inherited, 1.5 Inherited}}, 
          FontSize -> 17], 
         Cell[
          StyleData[
          "DisplayFormulaNumbered", "SlideShow", StyleDefinitions -> 
           StyleData["DisplayFormulaNumbered", "Presentation"]]], 
         Cell[
          StyleData["DisplayFormulaNumbered", "Printout"], 
          CellMargins -> {{39, Inherited}, {Inherited, Inherited}}]}, 
        Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Inline Formatting", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InlineFormula"]], 
         Cell[
          StyleData["InlineFormula", "Presentation"], FontSize -> 17], 
         Cell[
          StyleData[
          "InlineFormula", "SlideShow", StyleDefinitions -> 
           StyleData["InlineFormula", "Presentation"]]], 
         Cell[
          StyleData["InlineFormula", "Printout"]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], ShowCellBracket -> True, ShowGroupOpener -> 
          False, CellMargins -> {{103, 10}, {5, 7}}, 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.734936, 0.713848, 0.694041]}, Evaluatable -> 
          True, CellGroupingRules -> "InputGrouping", CellHorizontalScrolling -> 
          True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
          DefaultFormatType -> DefaultInputFormatType, 
          "TwoByteSyntaxCharacterAutoReplacement" -> True, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, LanguageCategory -> "Mathematica", 
          FormatType -> InputForm, ShowStringCharacters -> True, NumberMarks -> 
          True, LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, 
          CounterIncrements -> "Input", FontWeight -> "Bold"], 
         Cell[
          StyleData["Input", "Presentation"], 
          CellMargins -> {{110, 50}, {8, 10}}, LineSpacing -> {1, 0}, 
          FontSize -> 17], 
         Cell[
          StyleData[
          "Input", "SlideShow", StyleDefinitions -> 
           StyleData["Input", "Presentation"]]], 
         Cell[
          StyleData["Input", "Printout"], CellMargins -> {{39, 0}, {4, 6}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], ShowCellBracket -> True, ShowGroupOpener -> 
          False, CellMargins -> {{103, 10}, {7, 7}}, 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.734936, 0.713848, 0.694041]}, Evaluatable -> 
          True, CellGroupingRules -> "InputGrouping", CellHorizontalScrolling -> 
          True, DefaultFormatType -> DefaultInputFormatType, 
          "TwoByteSyntaxCharacterAutoReplacement" -> True, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, LanguageCategory -> "Mathematica", 
          FormatType -> InputForm, ShowStringCharacters -> True, NumberMarks -> 
          True, LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, 
          CounterIncrements -> "Input", MenuSortingValue -> 1550, FontWeight -> 
          "Bold"], 
         Cell[
          StyleData["InputOnly", "Presentation"], 
          CellMargins -> {{110, Inherited}, {8, 10}}, LineSpacing -> {1, 0}, 
          FontSize -> 17], 
         Cell[
          StyleData[
          "InputOnly", "SlideShow", StyleDefinitions -> 
           StyleData["InputOnly", "Presentation"]]], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{39, 0}, {4, 6}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], ShowCellBracket -> True, 
          CellMargins -> {{103, 10}, {7, 5}}, 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.734936, 0.713848, 0.694041]}, 
          CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping", 
          CellHorizontalScrolling -> True, PageBreakWithin -> False, 
          GroupPageBreakWithin -> False, GeneratedCell -> True, 
          CellAutoOverwrite -> True, DefaultFormatType -> 
          DefaultOutputFormatType, "TwoByteSyntaxCharacterAutoReplacement" -> 
          True, HyphenationOptions -> {
           "HyphenationCharacter" -> "\[Continuation]"}, 
          AutoItalicWords -> {}, LanguageCategory -> None, FormatType -> 
          InputForm, CounterIncrements -> "Output"], 
         Cell[
          StyleData["Output", "Presentation"], 
          CellMargins -> {{110, 50}, {10, 8}}, LineSpacing -> {1, 0}, 
          FontSize -> 17], 
         Cell[
          StyleData[
          "Output", "SlideShow", StyleDefinitions -> 
           StyleData["Output", "Presentation"]]], 
         Cell[
          StyleData["Output", "Printout"], CellMargins -> {{39, 0}, {6, 4}}, 
          FontSize -> 9]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"], CellMargins -> {{103, 10}, {5, 10}}], 
         Cell[
          StyleData["Code", "Presentation"], 
          CellMargins -> {{110, 50}, {8, 10}}, LineSpacing -> {1, 0}, 
          FontSize -> 17], 
         Cell[
          StyleData[
          "Code", "SlideShow", StyleDefinitions -> 
           StyleData["Code", "Presentation"]]], 
         Cell[
          StyleData["Code", "Printout"], CellMargins -> {{39, 0}, {4, 6}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Print"], 
          CellMargins -> {{103, Inherited}, {Inherited, Inherited}}, FontSize -> 
          14], 
         Cell[
          StyleData["Print", "Presentation"], 
          CellMargins -> {{70, Inherited}, {1.5 Inherited, 1.5 Inherited}}, 
          FontSize -> 17, Magnification -> 1. Inherited], 
         Cell[
          StyleData[
          "Print", "SlideShow", StyleDefinitions -> 
           StyleData["Print", "Presentation"]]], 
         Cell[
          StyleData["Print", "Printout"], 
          CellMargins -> {{39, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{98, 10}, {5, 7}}, EvaluationMode -> 
          "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               DynamicBox[
                FEPrivate`FrontEndResource["WABitmaps", "Equal"]]], 
              CellBaseline -> Baseline], None}, {None, None}}, FormatType -> 
          TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData["WolframAlphaShortInput", "Presentation"], 
          CellMargins -> {{107, 50}, {8, 10}}], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", "SlideShow", StyleDefinitions -> 
           StyleData["WolframAlphaShortInput", "Presentation"]]], 
         Cell[
          StyleData["WolframAlphaShortInput", "Printout"], 
          CellFrameLabelMargins -> 3]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "WolframAlphaLong", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{100, 10}, {5, 7}}, 
          StyleKeyMapping -> {
           "=" -> "Input", "Backspace" -> "WolframAlphaShort"}, 
          EvaluationMode -> "WolframAlphaLong", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               DynamicBox[
                FEPrivate`FrontEndResource["WABitmaps", "SpikeyEqual"]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, FormatType -> 
          TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData["WolframAlphaLong", "Presentation"], 
          CellMargins -> {{107, 50}, {8, 10}}], 
         Cell[
          StyleData[
          "WolframAlphaLong", "SlideShow", StyleDefinitions -> 
           StyleData["WolframAlphaLong", "Presentation"]], 
          CellMargins -> {{107, 50}, {8, 10}}], 
         Cell[
          StyleData["WolframAlphaLong", "Printout"], CellFrameLabelMargins -> 
          3]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Program"], CellMargins -> {{60, 4}, {6, 8}}], 
         Cell[
          StyleData["Program", "Presentation"], 
          CellMargins -> {{60, 50}, {8, 10}}, LineSpacing -> {1, 0}, FontSize -> 
          17], 
         Cell[
          StyleData[
          "Program", "SlideShow", StyleDefinitions -> 
           StyleData["Program", "Presentation"]]], 
         Cell[
          StyleData["Program", "Printout"], CellMargins -> {{2, 0}, {0, 8}}, 
          FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CellLabel"]], 
         Cell[
          StyleData["CellLabel", "Presentation"], FontSize -> 12], 
         Cell[
          StyleData[
          "CellLabel", "SlideShow", StyleDefinitions -> 
           StyleData["CellLabel", "Presentation"]]], 
         Cell[
          StyleData["CellLabel", "Printout"], FontSize -> 8, FontColor -> 
          GrayLevel[0.]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ManipulateLabel"]], 
         Cell[
          StyleData["ManipulateLabel", "Presentation"], FontSize -> 15], 
         Cell[
          StyleData[
          "ManipulateLabel", "SlideShow", StyleDefinitions -> 
           StyleData["ManipulateLabel", "Presentation"]]], 
         Cell[
          StyleData["ManipulateLabel", "Printout"], FontSize -> 8]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["GraphicsLabel"]], 
         Cell[
          StyleData["GraphicsLabel", "Presentation"], FontSize -> 14], 
         Cell[
          StyleData[
          "GraphicsLabel", "SlideShow", StyleDefinitions -> 
           StyleData["GraphicsLabel", "Presentation"]]], 
         Cell[
          StyleData["GraphicsLabel", "Printout"], FontSize -> 8]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Graphics3DLabel"]], 
         Cell[
          StyleData["Graphics3DLabel", "Presentation"], FontSize -> 14], 
         Cell[
          StyleData[
          "Graphics3DLabel", "SlideShow", StyleDefinitions -> 
           StyleData["Graphics3DLabel", "Presentation"]]], 
         Cell[
          StyleData["Graphics3DLabel", "Printout"], FontSize -> 8]}, 
        Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for SlideShow", "Section"], 
      Cell[
       StyleData["slideshowheader"], ShowCellBracket -> False, 
       CellMargins -> {{0, 0}, {0, -2}}, Evaluatable -> False, 
       CellHorizontalScrolling -> False, PageBreakBelow -> False, 
       CellFrameMargins -> 0, ImageMargins -> {{0, 0}, {0, 0}}, 
       ImageRegion -> {{0, 1}, {0, 1}}, Magnification -> 1, Background -> 
       GrayLevel[1], $CellContext`CellPadding -> 
       0, $CellContext`CellFramePadding -> 0], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["hidefromslideshowgraphic"], ShowCellBracket -> False, 
          CellMargins -> {{0, 0}, {0, 0}}, Evaluatable -> False, 
          CellHorizontalScrolling -> False, PageBreakBelow -> False, 
          CellFrameMargins -> 0, ImageMargins -> {{0, 0}, {0, 0}}, 
          ImageRegion -> {{0, 1}, {0, 1}}, Magnification -> 1, Background -> 
          None, $CellContext`CellPadding -> 0], 
         Cell[
          StyleData["hidefromslideshowgraphic", "SlideShow"], ShowCellBracket -> 
          False, CellElementSpacings -> {
           "CellMinHeight" -> 0, "ClosedCellHeight" -> 0, 
            "ClosedGroupTopMargin" -> 0}, CellOpen -> False, 
          CellHorizontalScrolling -> False], 
         Cell[
          StyleData["hidefromslideshowgraphic", "Printout"], Magnification -> 
          0.6]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["slideshowheader2"], ShowCellBracket -> False, 
          CellMargins -> {{0, 0}, {0, 0}}, Evaluatable -> False, 
          CellHorizontalScrolling -> False, PageBreakBelow -> False, 
          ImageMargins -> {{0, 0}, {0, 0}}, ImageRegion -> {{0, 1}, {0, 1}}, 
          Magnification -> 1, Background -> GrayLevel[1]], 
         Cell[
          StyleData["ConferenceGraphicCell", "SlideShow"], ShowCellBracket -> 
          False, CellElementSpacings -> {
           "CellMinHeight" -> 0, "ClosedCellHeight" -> 0, 
            "ClosedGroupTopMargin" -> 0}, CellOpen -> False, 
          CellHorizontalScrolling -> True], 
         Cell[
          StyleData["slideshowheader", "Printout"], FontSize -> 8, 
          Magnification -> 0.75]}, Closed]], 
      Cell[
       StyleData[
       "ConferenceGraphicCellSlideShowOnly", StyleDefinitions -> 
        StyleData["ConferenceCellGraphic"]], ShowCellBracket -> False, 
       CellMargins -> 0, 
       CellElementSpacings -> {
        "CellMinHeight" -> 0, "ClosedCellHeight" -> 0, "ClosedGroupTopMargin" -> 
         0}, CellOpen -> False], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SlideShowNavigationBar"], Editable -> True, Selectable -> 
          False, CellFrame -> 0, ShowGroupOpener -> False, 
          CellMargins -> {{0, 0}, {3, 3}}, CellOpen -> True, CellFrameMargins -> 
          0, CellFrameColor -> None, Background -> None], 
         Cell[
          StyleData["SlideShowNavigationBar", "Printout"], PageBreakAbove -> 
          Automatic]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Slide Show Environment Documents", "Section"], 
      Cell[
       StyleData["FirstSlide"], 
       PrivateCellOptions -> {
        "PagewiseNotebookBaseStyle" -> {
          FrontEnd`BackgroundAppearance -> FrontEnd`CurrentValue[
             FrontEnd`EvaluationNotebook[], {
             FrontEnd`UnknownOptions, presentertemplt`firstslideimage}]}}]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "11.1 for Microsoft Windows (64-bit) (April 18, 2017)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
presentertemplt`firstslideimage -> Image[CompressedData["
1:eJzt3UmudOtVreFDUqBIF5BL0AKqFKkaIcq2MBYVI9lIiF7QEMDkeZ7n0CNz
flmW5eO9IlYykzHmfAuTey+6hR0r9ol4/jHm9+2f+uqvfflXfvSzzz771k98
/j++/JXf+LlvfvMrv/kLP/n5/+MXv/GtX/36N772yz//jV//2te/9s2f/eqP
ff6//K0f+eyzX/r8//+Pf/5//853vvPZp/+DYRiGYRiGeTbfc9Vvf+lnmID5
nS/99OH87pv59pv5vRfz+yfmDz7/+d7NH76ZPzoxf3xy/uTC/OmF+bOL8+c3
5y+C5i+D56+Y1ol+P6N+z+78jl/9b+nTXPlv9ex//2c/U858Pn2ad59zZz4r
z3zmHn1ev/us//aJ74uj75nu70Dmu4OtYsfVVe8+a7pcdeVzuspVeIrpcJaT
sTJ8FW0sfMVkDraKG0VXVWVVZ13lmlWpearbDEfz1wLT/QwqrLXZWPgKXzkM
toqZqa46Y6vOrGqLqbpNoOKmSQZTcZaSsaIzrAhfnTHWE1+dMRa+8hts9Xxw
lb6rOro/V091m6d7HJ3lkGN1ZVgOvnqaX73a8+3+ftw62OrZ4KpZpurOqTCU
5mxyloqxqjtCdV/dza7wVc9gq/sz1VWqWZWyqdQ91W2TqaPsrGpjTciwInx1
xlh3+0F85TPY6t7gKlylbKpuc2wcVWdNMNYmX7F7NWOw1fW5e4fVBldhqh5P
dbvibwSn+5lMc1aWsVw7QnzFvBpsdW0cXeW6WzXFVBMs1e2kCf7aaKzpGRa+
Yo4GW12bjC5wi6u6syp3U2GoOd7CWBq+ijhDiK+YjwZbnR9cpeMqZVNFugpH
6YyDs6qN5ZBh4St81THY6tzgqtwOUC2rmuapbpdMHVVrTTAWvsJXzoOt3k/1
mUBchamwlN9MMRa+mucrbFU/2Or1THPVmc8P5w7QzVRYau64O8vNWFU7WBF3
NOCr+YOtjgdX5blKJavqMNVET/3t57+fatP9TLKsNc1YjhkWvmLeDbY6nsq7
FnCVflalYCr8NMNeW4ylnGFNvZ+B3SuNwVYfD67q6wDVsqptnuo2T/e4OWuS
sab56p2x7toKX+kPtvrhwVXXbOWSVbnkVBhKbxyctc1YER3hmTtmuvtBfOU5
2OoHp/KuBVyl6aqppur2yaRRdha+0vMVu1f7Blt9f3BVj6s2mwpLzRmM5dsR
4it8FT3Y6vsT3QXevRsUVz13VVX/p5RRdduC0XRWlbEcMqzu/St8tWew1XdH
Zccq21Vn/n2m5CrlrErBVN2G+OL8nch0P4dsZ00yFr7i7ODEwVY6rnpnq25X
Ve9WTTHVFE91e2mKvbqdpeirs8bCV7W+6v5udp7ttnLZsZriqu4O0NVUGGqm
uxxzrCkZFr4iu8ocbFWzY9W5u+7kKsWsqqv7w1Ea4+QsRWPhq9q7Gdi90pjN
tprgKoX9KnVXOZkKS3kMxtLIsPAVvlKdrbba4KqK84AdHWB2VjXJU90G2TKq
zlIzFr7S8BW7V/mz0VYqO1bdZwInu8phpwpLzZwJxlLKsPAVu1eOg61w1VVX
TewAnU3VbYnvzd8LTfezyLTWFGPhK3w1ebbZSqELxFX7TDXBU91emmCvLcZS
7gjx1TNfdX+Huwy20tqxwlWarlIwFY6aZS43Y03KsJR9pb571f0d7jLbbaXU
BeKq665SNVWUq3BU/zg4q3IfC1/t8hXZ1b3ZZKvuzKrzroVuVylkVS6mwlHa
o2ysJ85S6AnxFb6aMltshatyzgO6dIAO/R+e8hxFZzlnWJt8Vb17FXnvVfd3
uvpstZXLjhWuwlRYymu2GcuhI9zoK7IrbKXkqju2wlXeruow1URP/YPYdD+P
Cc6alGF1+qrr7CC+wlYKrnLZW59iqk2ecjNUt4umW6zbWkrOmmSsrv2r6H4Q
X2GrK656Zasp+1WdrpqcU3WaCkfN9tZUY3XmWE/3sKb5KjK/4k7R3ba6ekeo
Smbl6qrOvErRVBGuwlJ6o2wsfFWXX23fv8JW2GqLq97ZCld5ZFV4ymswlnZH
iK9yzg6SXe20laOrMnesnrjqna0ie0BMtdtS//iF6f55FKzlYKzJvlI9P6iw
e4WvdtkquwvsOBOIq7RdpWKqbld85KOO6X4GE4yVlWEp+sr1/CDdoPZssJV6
ZtW1Y1XhKpcOsNJUzp7qdpOrvbqN5Zph4St85TqTbIWrcNUGU+Eob3O5Gcsh
w1L31YTdK7rBnbbq7AI7dqy6zgTiqpmm6naN4mCs/AwLX/XtXpFdYau7tpq6
Y7XJVdtNhaW0RtVZ+MrfV87dINnVTFtdyawcukDFuxZUd9azXdXR/2Epj1Ez
lmqGpbqDha/oBrHVdVspd4FZO1bdZwKn5VXVrsJTvrPRWJ0Zlnp+lbXbrpBd
HX230g3OstUVV72y1dXMSm3HCldhKgVP/ZPAdD+DaGsp94TuvlK9W1TZV1dt
tdVXzraK2l936AKVzwQq94DKe1Wunuq2k5u9MFafr84Yq8tXDrvtZFfYKjqz
UnLVk8zqiavO2KrSVZkdoJupcJSftzqNtdlX2flVx+7VXVu98lVUN0h25W2r
rszKyVVPdtcrXbUlq1I3Vbdv1EbdWe7Gwle7usFuM2Cr+7a6mlm5d4G4yiOr
UvVUt13cRtVZFcbqzLBUfLV594pucIettnSBWTtWuKrGVYqm6vbJlMFX+Kpq
9yrjXoaKc4Pbu0E3Wynur6t1gdtcld0BVmdVWMpvFJx1d/8v01iOvlLcbSe7
8psJttqWWXWdCXR3lbKp8NSccTSWi6/OGqszv5q8e0V2NdNWmZkVrqqxFa7K
cVW3Jz6afy6e7te7zVhdO+4O+ZXL7hV77djqyFad++vsWM1zVZWpJmRU1XZy
tleXsVwzrM2+mpZdbfWVi63IrGa7SmFn3cVVOMrXWy7G2uKrabvt0b7CVjtt
lb1nNcFV2V2gqquyO8DJpur2Tve4OEvNWPhKe/cqKrs6+m7FV362inLVR7aK
zqxwVY6rVLKqalNhqf6ZZiyVDAtfeWRXUb7CVnpDZhXfBTq5KiuvynaVqqm6
reI8qsbKzrCm++qprSb4iuxql63UMqsJrnq6Y0VelecqPOU1SsZy7Qin+Mpl
90otu5rqq0m2ogvc6SolU9111TRP/UvD4Cy9DEvRV3SD7LVvt1VHZkUX+MxV
72zVmVcpZlXunuowlLq78BW+UveVWnbVbQ1sRWaFq/Lzqoqsys1U3TZyNZeb
sbI6wmm+ctm9IrvCVk9cpbq/PsVVlV2gm6s6TYWjvKw11Vj4quZehkl77djK
w1aT9tff/XeXZStc5eMqPOVtrS5j4Su6QbKr3bZyyaw2dIFnbKXoKkyFpdSd
1WEsBV+dNRa+6u0GI2y1+cygu62uZFZ3bEUXiKvuugpPzR4lY6lkWBt9lbF7
RXblP2q2IrPyuW9hk6vu7LgouKrbHxtGxVhuvqrsB5/Yqmv3SiG7OvJVZnbV
bRBsFZNZbd5ff/d5kn0mcKqr8NQPzr8mT/fri3aWsrGc86st3WDVXjvZlY+t
lDKr6P11NVdlZlbKrlLdrXI2VbadXO3VaSwFX0VnWOrdYIavlLtBsquZturK
rBy6QHVXnbVVp6ucsiocpe2tLmM5+SqyH1TdvSK72uUrFVuRWWl0gbjKI6vC
UX7emmasqfmV0+4V2ZXuONpqSmal5qp3tqraXXdx1TRTddtGaZSdVWEs9R33
ibtX6nvtZFd+tnLPrCr317u6QFzV6yo8NdNa+KqvH6QbJLvCVmRW7l2gsqsq
OkAlU3U7xX3cjYWvPH1FduU13bYis8JVLq5yNlW3R6aOgrEcd7DoBsmusJWO
rZwyqyld4CtbVd+1sMFVkz31b5//PkRN92vJNJZ7R+jkq3effWrZVfReO9nV
HltNz6zoAnHVVFNF2snZX13GwldzfKWcXUXYakN21Wkrh78b6J5ZPXFVRWal
7Kq731UdrtpsKFVzORkLX/V0g47Z1dF3K9nVLFtdcdWRrVwzK/cucLurXEzV
bSF3a3UYy8lXZ3ctI3y1ea+d7GqHrcisPLtAXDXfVN3W6R5lYyllWIq+ohus
uU80O7vCVr22mp5ZqbnqjK0UXaW0W6Vqqm7PqI6qs/CVnq+qu8GqOxnIrnxs
5XDvAplVTma1Na9SNFW3W9wGX2n4ynn3SnmvXW3vClvl2iqzDySz8u0Cu/Oq
qqwKT2mOo7HwlXY3qLzXTnblaavJmVX1/nrGuUBcVZ9V4SmPUTFWZoaFr/qz
q6q9drIrX1uRWc3LrNRcddZWqrtV20z17y+m+2frcBa+ivPVpHODkdmV2pnB
ifcxONqKzMprf10xr8o01V1XTfHUKytlT/dr7zaWi6/O7lQqZ1dP9to3ZFfb
e8FKW5FZ9eyvb3FVVl6FqfQM5WAufKWRXb3z1dbsSm3vClv5ZFZXbaV8NlAx
s1LrAje6CkvpW6vDWPjKuxvcmF1N6wWrbPXRs+noAyMzKxVXkVn5ucrBVN3+
mWatSRnWNF+p2cpt74qddi1bTc2s2F/f46rqrApP+VtrSoal5qtp3aBqdqWy
095tp622itph796zmtoF4iodV3U7RnlUjbXRV67d4LTs6qqttmZXFbZS2WE/
stXEzApXablKzVTdZnEcd2Phq93ZFTvt2CrLVVdtRWbV0wXiqp2m+o8vTPfP
U+ksxQwr2lebd6+2Z1cb72PYZCvFHfZJmVXVjtXZfyfjqn5TfdFLWbPdWPiq
ZveK7Oq1rciu6mylssNOZvVsf31yF6jkKkdPVflJ2Vzdvrqz++fsK8fs6p2v
VLMrekFs1ZlZVe5ZOXaBuGqGqbqt5OAtJ2PhK49u0Cm7Yqe9x1avzlhO3GFX
yqyU99dxla6pui3k6Cx89dxXFd3g5Owq+z4GesE+W03rA9mz6suscFWtqbrN
M8VaXcbq9pXL7pXTnQwV2ZXrTnu3o6bbSi2zumMrNVe9sxWummOqbteojZqx
8FVON3jXV2RXZFcqtoq402rCDrtSZvXEVSpdIK7CUxirzleOu1fTs6up9zFg
K6/MSnWHXW3PKjuzqt6xmuAqTDXDWfhKa/eK7Kpup33LXVcbbeV470L1nQvT
usBuVymYqtslk8bNV1eNVe0rsiuPvSvuY+i11ZYddoXMynXPSrELnOqqbod8
b/4zeLpfj4KxJuVXZFf12VXXfQzYysNWajvslfcuOGZWuGquqaL95OIulwyr
01cV3WDmXrtDdtV1l2jETvu0XhBb9d+7oJZZPXFVhK2qu8BprtrmKCVvdRnL
pR9U8FVHN+iYXdELatlKxVVdfSCZFa56aitlV3X7yMVZ6r5Szq9cd6/Us6uo
nXZstdtWXecDo+9dULqD3akLdHSVoqm6DeTurGpjOWRXFbtXTra6m1117bRf
tVW1r7pNha127rA7Z1YOrqrOqvCUh7NUfXXFWHSDPdmV4k472VW/rZRclW0r
lXsXHDMr1S5QOa/CVF7OUvWVaze4xVaKO+3YqtZWGzIr5x12MistVymYqtsv
DqNgLHyl5avqM4NqO+30gtiKzMo/s1J3VVVWhan6xy3D6vKVSze4Mbtip93f
Vkqu6rLV9MzKaX9dZceq01XdNpkw+KrWV122yvLV1p12bEVm5brDnpFZZdsK
V9W4qtsjR/NfJ6f758x0lquvpnSDZFd6vSC2wlaV9y5My6y2dYHbTHXWTVHj
bKztvlK1VdbeVVV2RS/obavNrorOrJRc9cpWLq7aaKqpdnKxV7Wzsozl1g9O
8ZVTdpXpK2y121YKXeBdW6l2gbhK01TdNnJy1jZfTc+vlLpB9q48zguq2mrq
PeyVZwMnZ1YdPWCmq5Szqm4HOTurylcO/SDZ1czsStlWnb7KsBWZlX4f2JVZ
uXaBV7+7rthK0VTd3pnkLHxFduW2d4Wt+m1FH6h5NnBzZoWr8NRWY6l3gwrn
BquzK3rBnb0gttKwlVIfeDezmrq/jqv2joqvFPKrDdmV0n1X9ILe2VW3rba4
KqMPrL7Pisyq31V4CmPhK7IrbDXbVmRWZFa4ys9V3U5xHnyl0w0qZleVO+1d
vSB3MWArd1sp7bBPyaxwVe/8d9B0vw4HX5Fd+e+0K/aC1bZy3blSs1XH3QtR
rqq0VUYfqHw2UDmzynSVq6miDKVuri5fkV35ZVdTekFHW3X4qsJWKplVtq3U
+0DFzCpifx1X9Zqqy1Eq1iK/Irsiu6IXzLSVeh/oZKspfaBKZtXZBU51Vbeb
1Jw1Jb9y6wax1XxbHflqoq0Udq3cXaV0p1XHDvuGLnCaq7p9pO4sfKWXXXFe
cK6tlHeulGxFZqXXBz6x1eTMKqsLVDRVt4McnbXFV2RX/dkVttLMrrJtRR/o
vcP+ylaTMitctc9U2caq9BXZ1Yzs6tW/tzf5Cluxa6ViK7U+kMzK11Xdxuke
fOXpq7vZ1bt/W9ILamdXk2zFrtWOHfaszOqMrXAVpuoefBXbDU7MrugF+22l
unOlYisyqx5bTe4DcRWm2uYrsqv47EqlF+w8LzjFVpW+6rAVfSA77Aqu6j4X
2O2qbrd8mv85Md0/o4KxHHw11VZkVzq+2marDbtWrncvkFlpZlabXHXGT0/G
zVj46pmv6AWx1URbKe9aHdlqa2bVYavsHfaOzEqpC3QwVbaluq01yVeOtnLL
rtx6QWVbOe2zK9hKPbPaaCsyK70uUNlV3Z7qcJa6r1yzq2k77RvPCyrvXGEr
X1tt7QNdMivHLlDRVd1uUnBWh686u8EJ2ZX7XVcOtrrqq4n77NW2Uti1csus
qm01fYd9k6u2e6rCWBN8RXaFrVx6wS22UtljV8msVPpAtTutpmZW2V2giqu6
PTTdWE7dINnV/F5Q2VYuO1eqtnLtAx1spdgHkllpuqrbP27GqrRVtK+mZVfV
d11tPS+oYqsjXznYil2rnF2r6X1gxQ67cmbl6Kpu7zgba4OvVLKr6l7Q4byg
ei+4ZZ+90lYKu1ZHtpqUWU07H6iYWeGquePmK7Krub3gRFtd9RW28rgzlD5w
Xh9IZhXjqm7TKA2+mm+rbb2gq61c99mf2Io99lm2UuwDyaxwlbOxqnzlnF25
9YLbzwsq2Mphn13RVq67VndsdWfXSqkPJLOKs1WHq7rt4jAOvjr7O0l2RS9Y
aSuVnStlW7HH7pFZTbKVc2Z11VZbXfW/J6b7Z+zyVWd2Femr7p12bJVvK8c7
RLEVe+z0gfdtNTmzcnLVGUPdGSdjkV3pZVcZtqry1bsz6Vd8pWKrSfvsVbZS
2GPHVlq2UuoD3TIrdVdlWUrBWviqPrtSs9Xm7KrDVo777NG2ytpjj3AVtoq1
lXpm5bDDPs1VXaaqNpaqrbr22tV32ukF5+2zT7WV4x57hK1cXTXNVhNcdcdW
iqbqdlSXs1R95Wqrp9nV3fOC2Cq3F9x6VrDLVh194BVbkVnRB6plVmqu6jaT
grHwVV12pdYLRt9z9e7MuKuttp4VPGOrKXvsH9mKPjA+s1I4HzjNVXdthany
jVXlq669KxVbZfWC7Fxp7bNjKz9bsWtFH+hqKwVXdZtomq82Zlf0grq2OvIV
ZwV1baVwH7uaraLvDL3rqg5bqfSBuGqnq7KMpeYrRVvRC/rZavJZQWylbatt
mVWmregDtWzVbR98pZFdqdhKrRes3LlSshVnBWttNf3+BfrA/l2ryj4QV+2a
ib5SzK46e8E7tlLPrpRsxVnBZ7aafv8Cu1a+faByZoWr9KfLV2RX9IKV2RVn
BWfaijOCsbtWU2w1vQ/MthWu0vHV5uwKW+nbSuWs4GZbcUawdo9dJbNStNWm
PrAjs+o2jdJMyq7oBbGV21nBLFtV7rNPs5XSGUH6QE1bkVnhKnzV2wtusdUr
XznZSuWsILbKPyOoYit2rebtWrllVrhK11fTbOXSC96xlUp2ha2wVcUZQZX7
F9hj37NrtSmz6raLw2zylVIvyM5VzFnB6n12t3sYttqKM4LYSrEPnJBZdZvF
aZR9RS+IrTafFVS94+qqrbLuX8BW984IbrkzlMyKLrB7sFVsL4itNHeu3Gyl
eseViq24f2F2ZoWtyKwmzAZfTekFsdXus4LYivsXNthKYddqUh+Iq/x85WIr
pV4wy1Z3fPXq8/Sur7BV/T0MU2016W4rdq00+kBVWylmVt0umTBV2ZWyrap6
wXdni6dmV4q2mnJWEFvp3L/AHru2rbb1gWRW/aOWXV3JUpVsRS9Yc1YQW9Wf
FXxlK9V7Q7l/od5W7/J1bHXfVmRWnqOUXUXbKqoXxFYaO1dZtuIehh5bud1t
pXhG8K6tXDKrKlsp71rhKs9xza7YudpnK+64wlbcv6CXWSn3gVG2is6ssNWO
mZxdYStsFb3Pjq1m20rxjCC2mmUrXLVjNtuqap/9la/O3P1y1VevPh9f+crR
VtV3XKnaKsNXEbZSvn/BxVbKu1bKtqrctSKzYpR95bpz9cRWLtnVq89xxbOC
bveHYitsha2wVaWtut2xYVRsdcVXSraiF9SzVfUdV9jKz1Yd94Z277FjK489
djKrOeNmK3au9G31ylfYSv9u9iu2Urh/QcVWymcEK211Zt/hrquqbDV116rb
G5tGJbvCVtjK0VYT/+4Nttplq3d7mkqZFbbCVk6jYKsrvnLaZ8dWO+8PxVb9
tsq6N9TRVlv6wEpbde5a0Qd6zERbqeyzYyts5fZ3b7CV7p3s786WbLeV8x47
mdV35/9OTPfPmGmrK77CVvH3MEyzVcfd7I5/9wZbYSvlXStsRR+YaSpHZylk
V4o7V6r3MBx95r3yFbbqv5vd2Vb8LUFsNcFW1WcEo201rQ+8ayoXY2Erzewq
0lbT7g/FVthq6t+7cT0jOMFW6nvsU1wVZSp1X2ErbIWtsBW2wlbYqt5W2/rA
DFcpG2vaztXks4LRtrrrK2xVa6uPfIWtsBW28j4juMlW2a5S9NU0W6nsXGEr
bJV5Nzu28rSVwt1W2Gq+rbpd0eGqTbaK7gWxlYatjnzlbKsjX2GrZ7Y6+/du
jmwVcW8otsq11Zmzz1n3hiqeEYy2FZmVp6+cbOV0VhBb5djqyFfYCltdsVXE
vaHYKt9W3L/gbatqV7n7ClthK2yFrbDVPFu9+oxx7QOx1S5XYStsha2wFbbC
Vtiqd9cKW82zlYqvuvfZsRW2wlbYClthqy22mn5GsNtV2ApbYStsha3m2Srq
TnZspXFG0MlW3Z7AVtgKW9XdH4qtsBW20rDVnT12bIWt3Gyl4KtuW13xlYqt
3vkKW82w1ZGvsBW2wlbYClthK2yFrbAVtsJW2ApbYStsha1cbfXEV9jquq2O
fIWtsBW2wlbYap+rsJWmrTp3rrAVtsJW2ApbYStsha2wFbbCVtgKW2ErbIWt
VKb7WWArbIWtsBW2wlbYCltN8lX3c8BW7FthK2yFrbAVtsJW2ApbKduKc4Kc
E8RW2ApbYStsha2wFbbCVtgKW8221StfYStsNcVW3c9AwVZnf2exFbbiXnZs
5WCrI19hKz1bnfWVi60UfNXtKmzla6usXStnW7363sBW2ApbYStsdd1XjrZS
8FX368dW2ApbYStsha2m2iqqF8RWPrbqfu13bXUlz8RW2ApbYSts5WGrV77C
VtjKxVfdrxtbYStsha022urIV9gq3lavfPXuc/SdrxRtFb1z5WyrDl91v967
rsJW2ApbYasqWx35Clvp2OpJdvXUVpVnBbts5XpWsMNW3a/V1VZnz8piq7m2
unJvKLbqt9VHvtpsq1e+2mgrlX32abba6qvu11llqzO/X9jKz1ZX71/AVtgK
W2Erd1tF71xtslWFr7pf33RbnTlvi62w1ZN7Q6/a6qNeDFthK2y121ZXfDXB
Vlm+6n5N1a5StdXZ3ccNtqq6NxRbPbPVR77BVjm2OvJVha2OfIWtuOPqznf1
Bl91vxZlWynusWMrbIWtjn2lYKsjX2ErbKWwcxVtq0nZVYSxun92bNXTByrZ
qmqPPdpWV84IYitstdVWr3yFrdhn7zZGpLO6f8ZMV6nvWjnY6sxdMFdtpXBG
0MVWV/bYsRW2euerClvdza622IqzgjN8NWUUMquptsrIrCbaKupuKxVbnT0j
iK2wVfc+O7by22efnl1NmYm2mnxGEFvNt9XZM4LY6vo+O7Z67qsntnrlqzM9
ALbCVg6T3Qc671phq3hbZd/JfmSrp3dbYascWx35ytFWr3w1zVbK2ZXiWUF6
wX2j4Cpsha1cbfX03lB3Wx35StlWH/kq21ZHvsJW2Irsat6oZFZXbKW0a4Wt
+u5fmGKrp/eGYitsha3mnBUku5oxKraKzqxU9tgn2OrdmW81W2X9vRtsVWur
I19tshV3XLHPjq38RsVVGbZS2WPPun/hyFavPh+n3RtabauI+xc22erIV6q2
Uvy7N9hqlq3w1Y7ZbCuHXatXtlLuA93vZHezVbSr1G1V/XdvFG31ylcTbMXO
FbZynQpXue9addtKoQ/caKvMe0OxVd49DFm2UrybXSW7evUZ1Z1dVe5cdfeC
+EpnJmdW7LHPstWkv3czwVYf+UrBVpv+7o2KrZR7QXdbVWVX+MrLVcp9ILbS
s9W0e0Oz/t4NttK/4wpbadhKtRfMshXZlaersjKrK7aKyqyq9tjf7RNMtZXi
/QtTbFWxx95hqy33h3IPQ5ytXHeurnw3kl35DLby37VSsZXiGcEpd7Jjq113
XL3y1WRb0QvqZFf4St9VnbaKyqyUbaXgKmw19+/dKNmKexj072FQ7gUn2Koy
u8JXuEq9D8RWs+62yro3dIqtptwf6mQrJV+p2kq1FyS7mjFPHTvJVlWZFbby
vH+BO9k9bMU9DNiK7IrsClfts1XWnaETbfXqe4i7rerPCEbaqvr+0Op7GDgr
OOMO0Wm2wlezXKWeWU2+e0HFVoq7VlPOCGIrH1u98hW2mt0L4qvZ8/SZklnR
B2IrbJVlq+l3XE29h0GxF4yyVUd2lb13ha/8XdWdWWGr/sxK1VZuZwQdbPWR
rxxt5XIPw52zgk7ZlcvO1cbsCmP5uKojs3LpA7EVZwS777bqspXKHVecFdSy
ldLOlaOtonzVbRt3Vyl1gYp9ILbqt9WUM4LTbDX9HgbOCs7fuXLoBTt9tdFY
Xa6alFlN7APVbdWxa3XVVllnBFXvtoq2VfU+e7WtOCtIL1idXeErH1OpuWpi
Hzhl18p9j33K/QvYSttW0fvsd3au7tpqYi+ofF7QLbua7is3V7lnVvSB/X2g
6xlBp7utqmxVvc/uYCv37GpLL4ivZhor+tnceX+mZVbqfSC28jgjOOH+ham2
mnpW0MVW9ILzusFJxsJVnjvsan3gNFtV77FX379Q2QeetdVHvppiK84Kzty5
muiru9/hGb5yNFbGM6hy1YTMalMfGH1n6B1bqeyxbzwj2Gkr9XsYpp0VpBf0
t5WirxyMlfW63V0VmVnRB3pnVpwR1LHV1nsYnH01yVaRvSC+mmes7Neq6qqp
mVVWH4itOCPoYiuVs4JHvsJWHr2gc3a12Vfdzqp4bXefvVtm5bTDzq4VZwS3
2kpl5wpb6dhKKbs68z2TlV1V+6rSWNnOqnwduCovs3KzVfSuVfSdoa577FPO
CGIrdq7O+OqurTbvtFdkV06+emqu7p9V3VXKtnrqKvpAnczK9Yygsq0+8pXj
PnuErZTvEM3IrrpsVd0Ldu5dbfWVwzx5vnddRWaVn1lhK84IbrNV5v3sarai
F5ybXV21VUc3iLH8XRW9vz5ph/2urdT7QDVbVe9aqZ8RfGqr6rOCEfezYyuy
q4m+ijBWt2OUJsKrVa6KttWWzCrDVu86BUVbXXGViq3U99izbFV9VpB99t5e
kOxKw1ZkWLjKLbOiD/TKrDps5bhrVW2rSfvsR756d3YjaueKXpDsCl/pmara
VZMzK8U+EFv57Vo52OojX7HPrpldbesFO7Kr6b7aYqyoZ7XFVRMyK/rAOFup
7Fop7bEr24p9dq+7GMiu5vpqsrEUXHXXVpO7QPrAXlup9IGue+wRtlLfZ//I
V262mtALkl3dzyZUfDXFWNHP5Mn7k+2qrZkVfaBmH7hljz3TVuxcaWdXir2g
a3al7qsMYzk6K+MZdLiKzEqvD8RWPnvs2MrXVvSCObZS9lV2N6jqK3VjZb3m
ja5SslVGZkUfyB77NFuxz+5zFwPZFb5St1b263v6HlS4SrkLdNxhd+gD2bXS
yazu2OojX6nss7vcc6WSXWX0gpuzq4puMMJXVcaqclbVa5nmKtfMymmHnT5w
565VlK0m3SE6LbvK6AU777qKtJVrN+jmqwh3df+sEc8bV+W7Sm2HHVthq0pb
sXMVayu17Cq7F5ySXSn4SsFY6oOrzv23pGAr+kDutcJWz3y10VZK2dWUXhBf
YSxVU111FZkVfeDkzMppj/2urT7y1aSdK2Vfqdhqa3Y13VcYK/ZZPnlfyaz2
ZVbYasYeO7aaYyu1XlAlu3LpBp/6CmNpmQpXzc+ssBX3WlXYip2rOFuRXc3o
Bq/aStFXG4yV8cwqXaXeBSpnVhv7wKu2Us6ssBU7V929YMddV5Ozq22+mmas
rGf09L1zcpVLZkUf6JVZTdi1emKrj3xFLzizF3xlq83ZlbKvMo3l6qzM5xHh
qju/J+quIrOadz5QyVaqmVW0rRz/brOqrZR6wSe2isiu3vkqMrtS2b1y8JWD
sypef0dWdcVWV/+9sCWzwlY+tnLrA6tstX3nSuW84PbsyuncYKSvqoylYK3K
14mrntnq7L+rslz1ylbssOu4Clt59IIf/a6oZldKd12pZ1cO3eBdX7kaK9tc
na8l6v3IdNX0LpDMClup7lphK21bOWVXT2ylmF3hKybTVGquUuwCn9pKKbNy
PB+oYivHzOqpra74arutXHbaN2RX+ApjdZpquqsmZ1bb+8AjWx19Bx/Zanof
WGkrfKXTCzpnV/gq/nu+2y3Ko2Kqba5y3LPa0AdetZVCH4itdttqw077lm6w
wlcYy8tUuIrMakIf6GirDldF2OojX2Er/ezqbi+ocGYQX+X5aruzXE2V6apJ
XaDLDvuEPlDBVdNspX4Xw9HvTXd2pbTT3rV3FZVdKfjqyvfik+9fjKXnKXVX
uXaBbpkVfSC2UrPV1OwqoxdUy66m7l1t9dVUZ2U/rypX0QV6Zlb0gXP7QGz1
3FbstOOrSF85GMvVWRXP5ampHF1FZrU3s1KylVJmFWWr7b5y3rvCV3r7V1HG
qnKWir86X2u1p1z2q6ryqi5XTduzmpRZYSt/W6l0g9X3XW33lUOGpWCsKHt1
/7wZpsJVdIGumdVVV224LzTDVh/5SslWatmV0t6VcnaFr+Yby3Gi3g9XV7n0
gJszKzVbbcqssm2l5islW1WfGXySXb36bHLKrlT2r7p9hbE8TbXRVY6Zleue
FbbCVp22IruKPzeIrzCW8kQ+76qsqtNVLpmVUx/46t/oSpkVtsqx1Ue+UrLV
lOzqrq2csysHX7lmWDhL11S4Kmd/3clVkZkVfeAcW6n5asNOu2J25doNVuRX
KhkWxsoxlbKrVHfXyazoA7HVXFtNzK6UbTXFV9UdYZaxNjkr6/k9eU+numpq
F7h9h13FVt2mmm6rI18d3X+WbSuyK+9ucLOvJjor+1lVmyrTVW5dIJkVmZXC
RNtKyVeZtnLeae/cu6rsBrt9dfc7Ut1Yrtaqei64al8XWJ1ZcQ87tnKxleNO
+9TsCl8991WlsRStVf3au0x1x1abXfXEVnddpZBZZdsq875QbNVnq67synmn
fZOvznw/qPrK0ViV7up+XU/fm6eucsmr6AK9MqsoW23NrLJs5ZpdOe60u2ZX
irtXk32lYqxJ02kqXBWbWWV1gZWZFX0gtuq2FdmVhq8isisnX2Es/4l4/sod
4FlXqXWBZFb5O+xRmdWGPjDTVh/5yrkXVMiu3M4MqnWDU3wVZSyc5Weqja5S
7QK3ZVb0gbq2UsquOnfaya76ukF8hbGqPeXQAWa4yqELJLOiD8RWunddbd67
cuwGVXylaKztzop+lh1Z1SZXkVnN3WF3vC9U0VZkV7rZ1VNbbfJVV4aVYawt
1sp6bh2mcnGVwo7V9MyKHfa5tlLKrpx22juyq2xfRXSD+KrXWFOclfl8oky1
3VUVXeCE+6ycMits5W0rp532jOwqqxt89xmFr3Q6wgpjOXmr6jlEvnfZpsJV
9a5yzazYYde01Ue+mtoLup8ZVOgGo3bbnX3laqxuc3W8xsj36W5WtS2viugC
79oqy1VVmZXSPezYyi+7yt5p35pdTe4Gp/uq01hP/dX9M1aYClfFuUoxs7rr
qo2ZFbaqtZVLdlW5d6WYXeGrWF9lGEvVWQ6jZConV7l0gWRW7LA72Uopu4ra
aZ+cXbl0g26+UjQWzurxlKqppruKzKo+s8JWs2x15KurtnLOrt75Kus+UXzl
5yucVeMpXOW3Y0VmRR84xVaZ2dXR70v3XaLTsqsoX535XO72VXVHWGGsjc5S
9tQdU21y1bQusCqzirIVmVWfrbZlVypnBtV9FZVdOfrKxVhTrVX13J6+x9mu
uvrfxCZXkVk9s9XWzMrRVmrZlcreVcdeu2M3ONFX1cZytVbHM+owFXmVdxfo
llmxw95vqyhfdey0T9676s6upvlqm7HUzNX9+iPeR7UOMNpVKjtWXfvryplV
VB/40fc0tvKz1YbsyvXOq2pfZfWDFRlWlLFUnBVpsO6fV9lUG101sQtUPRvY
lVlhqxxbbc2u1Pba330+KfoqK7+64qu735GRvnIwlvt0mwpXzd9fd9uz2t4H
dtjqqq9csqs7O+1O3WCEr6JsFe0rxR2sDGPhLD1PPTUVrqp3ldL++oQ9K2zV
Y6sJ2ZXTXrtLNxjdDyr7KsNYOKvXU+qmmu4qp8zqjqvIrPqnw1ZXfdVxH0PV
3pVTduXqq8z8CmPNn4xnjqv6dqyyMiuH/XUyK2xVdR+Da3bl3A3iK01jYa08
S3WYyslVZz4PpnaBCncucFfoHFtF+Wp6dpXVDW70lcqOu4uxtlgr+/lFvM8V
WZV7XjWtC1S9c4HMaoetyK7ybIWvPDKsKmNNcVbVs4pylVJWtdVVSl1g1f56
V2aFrXJ8pbbTrp5due9e4atYY1U6y8FcHc+iI6eqyKpwFZkVd4X62io7uzr6
fVHIrrL22id0g52+quoIJxir0l7drynDU3dMhavuu8qtC+zOrLgrdKatpmRX
bt3gk+wKX/UbS81Zkyb6fbr7+7LVVZ07Vkr761WZ1ZGt2LPSs9VVX23OrvCV
p6+UjIWz9Dw1wVSOrnLLrKruXCCz2mmrDdmVYjf46vNpm6+qM6wsY+GsXk9V
mwpX+brKLbPavGelZKurvnLKrrbstU/wlXqGlWksnFXnqSemmu6qqh2rd7Z6
4iqVLpDMCltdtdX27ErVV2c+76b5aqKxtlqr4pmqmwpX9exYKd8T2rVnha16
fDUlu+rYa8dXOr5yMNZEa1U+tyfv7xNTKWRVbq6a0gUqZlab+kBnWylmV1P2
2lV2r/CVrrPcvNXxbFxMNclVnTtWDvvrLplVt0Wm2eqqr7qyqw3d4GRfYax5
9up+nVGeemoqXDXHVZX76+xZYavK7IpuEF/d9ZWCsdScNXmmmypjt8rFVZu7
QPasZttK8e8MTsmu8JVmfhVtLJyl6alprlLMqzp3rCZ2gWRWnrY68tX27Apf
afhqgrFw1gxPuXaAk1xFZkVm5WSrq766kl0d2apyr736zqvsexkm+Eq9I8x0
FtaqsZSTqTqzKlxFZjVhJtiqM7va0A2esVXl3QxXfDUxw8o0Fs7Ke65dplJx
VbStnrpKsQusvMvqzv76R7Yis/Ky1VVfZWdX27vBquxqg69cjLXBW9nPLfJ9
VjOVc17l5iqFLpDMaqetonwVnV1Vd4PdvpqSXzkaq8pZjt6qfC7R72lF/4er
6ALJrPbY6qqvyK7m7F5t8lWGsaqdpWKurtesYqoKV3V1gFGuemWrTFc5dIFk
Vthqw167Yjeo6iuljlDNWJ3Omj5Z75eiqXCVTxdIZtU/6raK9FV2dnXXV6/+
u8JXGr6qzLAyjYWzNC1111O4Cle57K9vyqy22WpbN4iv+n2lbCyc1e+pp6a6
46pMUzm6SnXH6pWtKrvAzMyq2xbbbRXpq847GdS6QXzlY6wKZ2GtGkt1mUol
q9rkKqXMqtNV2Ep3ov4WzhVb4av3tqr2VdaO+x1fVfeElcba4q3qZxnx/leY
ClfNchX769jqqq+uZlcf/a5M2GtX373q8lV2R9iVYXUYa4K3up5Xl6mUOkA1
V026x6qqC8RWe2xFdlWzexWRXZ3xlWtH2Gmsbmcp2av7dTubClf1u0p5f/2V
rXCVt62OfNWZXeGrmflVpa8ijaXorG0T9T4qm6rLVWdt9dRV27tAMitsFZld
uey1u+9edeZXm4yFs/w8VW0qlaxKKa/CVbhqo62OfJV9ZhBfaftqUoaFs/Qn
+r15YirF/g9X1biquwvkntD5tqIbjOsG8dVsY+EsHU89NRWuOu8qdqzIrLBV
vK9cu0F8leurqgxL1Vh4q95SEZ5S3atSddXTvOqJq9y7wKj9dWzlM3SD+KrL
V53GqnDWNmtVPM+I932LqXBVjquu3mVFF4itKrOrTb4687kU5avoM4QbjFXl
rGneqnxmnaba7qrsHjBrx0ols6IL3GmrI19FZVcZ3aDivaJuvlLMsBSMVe0s
ZXd1PodIT6mbStlV2XnV9B0rMitsFZFdOXSDmb56aqtpvqrOsKKN1e2spz7r
/jm6PVVtquysStFVXWcCp7qKzGqWra766qqt8NUcXzlkWBnGcnWWw6h4qtJU
GVlVdQ+Y6Sq1+xYiu0Ayq122OvJVRXbF7tV1X3XuuLtkWJnOwlo6loow1Zas
yiGvmrBjdcdWuGqXrdS7wS5fKeRXjhnWRGNhrXpHRXlKOavCVXtcRRc421ZH
voqy1aZuEF/p9YSVztpqrYrnGmWqu6668/vu4Cr1uxaydqzoAnVnkq3w1ex+
MMtXrsaqctZEc1U/t05PqWVV2/Iqlx0rMitsddVWCt0g+VWtr6oyLBVjdThL
2V7dzyHSUw6mUs6qcBWuwlZ5vlLPrqb7quMMYWWGpWQsFWdFO6z75632VIep
trmq866FrB0rukCN2WIrB1+9+zeM4m57tK9UjFXtq+3Ocp2M92uaqaa6qmt3
nczKYybaqsJXHfcy4CufDEvVWVhL01JPPVVtqoysyslVXXkVrvKZqbY68pVC
dqW6246vNHbdq4yFtfo9FWGqCVlVtatUzwRm7VjRBWKrbF+9uq9fpRt09lXn
jvvkDKvKWdu9VfV8o34fFE2V0QGq5FWZPWC1q8issJWKr5z6wWnGUnOWirUq
veVmse5nEmmop5ZS81R0TjU5q1LpAXEVtsr0lVI/OMlX3TnWBGMpWSvKZd0/
m7unsvepXFzVec9C135VZA94ZKvu73Xl2WorfOXrq4nGynKWo7XcJut922qq
yr2qba6KzKy6v9PVZ4utPs0VWzntX2X76sn9V9t8pWwsnKXvqU5TKbiqsgPs
dlX1HVZ0gdgqc1x3r9R9FX2OMKsjdDJWtrOwVr+jojzlbqoOV3Xes4Cr5s92
W1V3g9t95ZhhdfaElc7CXLXPOOr3QtVUuMrfVXSB9wdbee1ePfXVu8+MTb5y
y7A6jDXZWx3PMPL34Imrrv7bYpKrlHtA9R0rbHV+ttnq01y1lZuv3v23T341
w1jd1lJ3V/czUfOUs6lwlYarsNX5wVZ5u1eTfdWx466UYeEsptJTk0yl2AHi
KlwVPRtt9WkUukH1uxmq8ivnDOupr7KMhbP8LfXUU3dMNTGrcneVwo4Vtro+
W231afBVTX7lmGF1GCvTWVjLw1JTTYWrdFxFZlUzm231aRR2r9R99e6zycFX
lcZycBbe0rJUhKcqTdWdVeEqXKU+2Op6djXxbgZ8pemrKmNhrVpHRXpK1VTq
rnpnK2VXsWOlP9tt9Wk27La7+Qpj9Ttruru6nmPk78MdV9393c/MqiI7wOl5
FTtWHoOtvjv4qtZXWRnWFmMpWEvdXt3PQ8lTVaZyz6pwFa6KGmz1/XHoBjf6
SjXDumusDc6K9lj3z6ngqWmm2uiqjrsW6AJ7Blt9f1x2rxR85dARbjWWs7Wc
J/O9VDaVQweIq3BV9WCrH5xNvjpjrCpfqWRYT42l6iys5WWpu56aYqpKV535
d6ZjD3i3C+z+Dp4y2OqHR2X3Cl/1ZViTjYW1NC31xFNPTeXoqjOfOw551d27
Ftix0h5s9fHgq/O2Ouur6I7QwVhPvisrnYW36h0V4amNporqAB1cxe6672Cr
48FXOcZSyLCccqwuZ003V+fzfPq7MM1UE1317jMbV80ebHU8GbtX+CrHV1UZ
loKxup3l5K7uZxPtqQ5TqbgqqgOcnFexu64z2Or14Kv+jlAxw1IxlqK1onzW
/TNN8pSzqXAVrnIcbPV+Ks8OVvgq4o4GZV+5GSvaWROs5TqR72HE71WlqTL2
qiI7wHeuOvPvTtUe8K6rsFXeYKtzM81XVflVdEdYkWF1GivDWVjLw1IbTOWa
VTnnVWRWPYOtzk/lbvuk/Mo1w+o2VpazsJaOoxQ8pWYqXIWrJgy2ujbT8qsI
X3V1hJuMlekszFXrqEhLdZnKIauqcpVqD4iregdbXZvq3fatvsrKsCYYq8pZ
G7xV+Rwzfg+quz+XrOqMq9TvWeCuBe/BVtcHX+l1hA7GynJWtbWc/NX9XJQ8
VWmqjKwqqgN0cBV5lf9gq3vj6KuIHfezn1tdGdZ2Y6lYa+tkvqcdnso0lWtW
hauYM4Ot7o+jr6ryq00Z1hNjVTgLa3la6qmpVHMqXHW/B+SuBZ/BVs/G0VfO
HaG6sRychbd0HdXtqTumcsiqqlz17rP5SV5FZuU12Or54CvtDMvRWNXOwls9
hlLxlJKpcBV51YTBVjGDr+ZlWN1dYbezNpir+7lG/G50uCqr/6vuABVcxY7V
zPlkK4ZhGIZhGCZu/h9J9mO1
  "], "Byte", ColorSpace -> "RGB", Interleaving -> True]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 136, 2, 
  5, "SlideShowNavigationBar", "ExpressionUUID" -> "f6ffeff0-126b-4ca8-8f01-
   f3cdae38cea0",
   CellTags->"SlideShowHeader"],
  Cell[1367, 46, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "f0580f1d-28a4-49d7-
   b263-6ef9faaa30e4",
   CellTags->"SlideShowHeader"],
  Cell[12412, 320, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "
   3f67613b-43ff-4a91-8cc7-440f146c392f",
   CellTags->"SlideShowHeader"],
  Cell[188014, 3417, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "9425fdc3-
   a227-4596-955c-59e1bd0105f5",
   CellTags->"SlideShowHeader"],
  Cell[802938, 13441, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "8d279e95-
   a63c-47a7-9bf6-7f32bac6c618",
   CellTags->"SlideShowHeader"],
  Cell[830265, 14163, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "fe63993c-cef8-438c-
   bfbc-48c4bc60cdae",
   CellTags->"SlideShowHeader"],
  Cell[937213, 16024, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "91e0cab1-9001-4d86-
   a1ec-4d79c51a8061",
   CellTags->"SlideShowHeader"],
  Cell[998924, 17460, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "3122510a-95ed-4290-8b10-
   c156d4feb9bd",
   CellTags->"SlideShowHeader"],
  Cell[1012692, 17839, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "00a429ee-9d6b-44fe-
   b72f-8b797a4fa16e",
   CellTags->"SlideShowHeader"],
  Cell[1030740, 18331, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "43459988-
   ab8d-47bc-9127-7c3aa1659152",
   CellTags->"SlideShowHeader"],
  Cell[1036808, 18493, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "
   7c81f184-928a-4b31-8b23-7e9ae53f19e0",
   CellTags->"SlideShowHeader"],
  Cell[1048725, 18811, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "91ca2122-493c-418c-8dfa-
   e7d608466d74",
   CellTags->"SlideShowHeader"],
  Cell[1055351, 18980, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "d046c1e5-4fb9-4612-9ea1-
   bbe1a96ebdb5",
   CellTags->"SlideShowHeader"],
  Cell[1077797, 19553, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "4b531018-72db-4618-
   be26-96ee684dc958",
   CellTags->"SlideShowHeader"],
  Cell[1097529, 20023, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "32502cc2-10f2-44aa-8bed-
   f675003f1fd7",
   CellTags->"SlideShowHeader"],
  Cell[1103501, 20190, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "b84bd5d2-b791-4bd5-a48f-
   ea1989a3a1a2",
   CellTags->"SlideShowHeader"],
  Cell[1128720, 20973, 122, 2, 
  1, "SlideShowNavigationBar", "ExpressionUUID" -> "fe77db7f-9273-447c-9cd6-
   ae670eae35df",
   CellTags->"SlideShowHeader"]},
 "Probability"->{
  Cell[793857, 13136, 628, 14, 
  47, "Input", "ExpressionUUID" -> "30c1aef0-91f2-4a3c-9e0e-eaeb54c8090f",
   CellTags->{"Probability", "BinomialDistribution"}],
  Cell[794488, 13152, 1773, 53, 
  74, "Output", "ExpressionUUID" -> "9fb82e53-1c29-403a-89c2-2b8d4efd499a",
   CellTags->{"Probability", "BinomialDistribution"}]},
 "BinomialDistribution"->{
  Cell[793857, 13136, 628, 14, 
  47, "Input", "ExpressionUUID" -> "30c1aef0-91f2-4a3c-9e0e-eaeb54c8090f",
   CellTags->{"Probability", "BinomialDistribution"}],
  Cell[794488, 13152, 1773, 53, 
  74, "Output", "ExpressionUUID" -> "9fb82e53-1c29-403a-89c2-2b8d4efd499a",
   CellTags->{"Probability", "BinomialDistribution"}]},
 "ZipfDistribution"->{
  Cell[796465, 13215, 380, 10, 
  55, "Input", "ExpressionUUID" -> "1209afc9-7cd7-49ea-b2e5-92923b99062b",
   CellTags->"ZipfDistribution"],
  Cell[796848, 13227, 1285, 41, 
  84, "Output", "ExpressionUUID" -> "a7b78227-a94f-4a7f-a9dc-38a37bdd52f2",
   CellTags->"ZipfDistribution"]},
 "PoissonDistribution"->{
  Cell[798337, 13278, 379, 12, 
  47, "Input", "ExpressionUUID" -> "76e70c28-94a2-455d-b711-d08cd28083da",
   CellTags->"PoissonDistribution"],
  Cell[798719, 13292, 509, 15, 
  70, "Output", "ExpressionUUID" -> "444d3466-e852-4170-9f81-07681bd7f4e2",
   CellTags->"PoissonDistribution"]},
 "DirichletDistribution"->{
  Cell[799438, 13317, 507, 15, 
  47, "Input", "ExpressionUUID" -> "a30f7f0f-2c2b-417e-b4db-db51cd91be94",
   CellTags->"DirichletDistribution"],
  Cell[799948, 13334, 188, 5, 
  70, "Output", "ExpressionUUID" -> "adfe4456-9548-4ebc-a1ac-160a5225136b",
   CellTags->"DirichletDistribution"]},
 "LaplaceDistribution"->{
  Cell[800345, 13349, 501, 15, 
  59, "Input", "ExpressionUUID" -> "55b83b20-2606-451f-906a-222f59abd93b",
   CellTags->"LaplaceDistribution"],
  Cell[800849, 13366, 200, 5, 
  70, "Output", "ExpressionUUID" -> "0ae20d34-d6c6-4bf0-959f-f835eed196b0",
   CellTags->"LaplaceDistribution"]},
 "NormalDistribution"->{
  Cell[801257, 13381, 393, 10, 
  47, "Input", "ExpressionUUID" -> "5a502ce7-2cde-4b57-a18f-ce6309b0aa61",
   CellTags->"NormalDistribution"],
  Cell[801653, 13393, 161, 3, 
  47, "Output", "ExpressionUUID" -> "c4f668fc-bddf-4d3b-8372-59f3a022f4f7",
   CellTags->"NormalDistribution"]},
 "ChiSquareDistribution"->{
  Cell[802034, 13406, 406, 11, 
  47, "Input", "ExpressionUUID" -> "c82760d6-7454-45bd-8312-bf8fdbd08a44",
   CellTags->"ChiSquareDistribution",
   CellID->117362026],
  Cell[802443, 13419, 422, 14, 
  72, "Output", "ExpressionUUID" -> "e05100df-5f70-4ae1-ba52-51a1ff3ffbf1",
   CellTags->"ChiSquareDistribution"]},
 "Manipulate"->{
  Cell[804689, 13496, 1331, 36, 
  108, "Input", "ExpressionUUID" -> "f63f7724-daf6-474b-81d7-c753466d47b9",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062],
  Cell[806023, 13534, 2159, 45, 
  442, "Output", "ExpressionUUID" -> "bb22c2cc-dd00-4c90-9f3b-c7703f72f87a",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"}]},
 "Plot"->{
  Cell[804689, 13496, 1331, 36, 
  108, "Input", "ExpressionUUID" -> "f63f7724-daf6-474b-81d7-c753466d47b9",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062],
  Cell[806023, 13534, 2159, 45, 
  442, "Output", "ExpressionUUID" -> "bb22c2cc-dd00-4c90-9f3b-c7703f72f87a",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"}]},
 "Table"->{
  Cell[804689, 13496, 1331, 36, 
  108, "Input", "ExpressionUUID" -> "f63f7724-daf6-474b-81d7-c753466d47b9",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062],
  Cell[806023, 13534, 2159, 45, 
  442, "Output", "ExpressionUUID" -> "bb22c2cc-dd00-4c90-9f3b-c7703f72f87a",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"}]},
 "Evaluate"->{
  Cell[804689, 13496, 1331, 36, 
  108, "Input", "ExpressionUUID" -> "f63f7724-daf6-474b-81d7-c753466d47b9",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062],
  Cell[806023, 13534, 2159, 45, 
  442, "Output", "ExpressionUUID" -> "bb22c2cc-dd00-4c90-9f3b-c7703f72f87a",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"}]},
 "Filling"->{
  Cell[804689, 13496, 1331, 36, 
  108, "Input", "ExpressionUUID" -> "f63f7724-daf6-474b-81d7-c753466d47b9",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062],
  Cell[806023, 13534, 2159, 45, 
  442, "Output", "ExpressionUUID" -> "bb22c2cc-dd00-4c90-9f3b-c7703f72f87a",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"}]},
 "Axis"->{
  Cell[804689, 13496, 1331, 36, 
  108, "Input", "ExpressionUUID" -> "f63f7724-daf6-474b-81d7-c753466d47b9",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062],
  Cell[806023, 13534, 2159, 45, 
  442, "Output", "ExpressionUUID" -> "bb22c2cc-dd00-4c90-9f3b-c7703f72f87a",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"}]},
 "PDF"->{
  Cell[804689, 13496, 1331, 36, 
  108, "Input", "ExpressionUUID" -> "f63f7724-daf6-474b-81d7-c753466d47b9",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062],
  Cell[806023, 13534, 2159, 45, 
  442, "Output", "ExpressionUUID" -> "bb22c2cc-dd00-4c90-9f3b-c7703f72f87a",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"}]},
 "CDF"->{
  Cell[804689, 13496, 1331, 36, 
  108, "Input", "ExpressionUUID" -> "f63f7724-daf6-474b-81d7-c753466d47b9",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062],
  Cell[806023, 13534, 2159, 45, 
  442, "Output", "ExpressionUUID" -> "bb22c2cc-dd00-4c90-9f3b-c7703f72f87a",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"}]},
 "SurvivalFunction"->{
  Cell[804689, 13496, 1331, 36, 
  108, "Input", "ExpressionUUID" -> "f63f7724-daf6-474b-81d7-c753466d47b9",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062],
  Cell[806023, 13534, 2159, 45, 
  442, "Output", "ExpressionUUID" -> "bb22c2cc-dd00-4c90-9f3b-c7703f72f87a",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"}]},
 "HazardFunction"->{
  Cell[804689, 13496, 1331, 36, 
  108, "Input", "ExpressionUUID" -> "f63f7724-daf6-474b-81d7-c753466d47b9",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062],
  Cell[806023, 13534, 2159, 45, 
  442, "Output", "ExpressionUUID" -> "bb22c2cc-dd00-4c90-9f3b-c7703f72f87a",
   CellTags->{
    "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", 
     "CDF", "SurvivalFunction", "HazardFunction"}]},
 "DiscretePlot"->{
  Cell[808387, 13589, 1148, 32, 
  138, "Input", "ExpressionUUID" -> "9b5bce40-4545-4894-819f-3b18afc4056b",
   CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"},
   CellID->1700090275],
  Cell[809538, 13623, 2108, 44, 
  444, "Output", "ExpressionUUID" -> "90a9699c-5e1f-4bc9-8941-3cce8354a6e3",
   CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"}]},
 "GeometricDistribution"->{
  Cell[808387, 13589, 1148, 32, 
  138, "Input", "ExpressionUUID" -> "9b5bce40-4545-4894-819f-3b18afc4056b",
   CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"},
   CellID->1700090275],
  Cell[809538, 13623, 2108, 44, 
  444, "Output", "ExpressionUUID" -> "90a9699c-5e1f-4bc9-8941-3cce8354a6e3",
   CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"}]},
 "ExtentSize"->{
  Cell[808387, 13589, 1148, 32, 
  138, "Input", "ExpressionUUID" -> "9b5bce40-4545-4894-819f-3b18afc4056b",
   CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"},
   CellID->1700090275],
  Cell[809538, 13623, 2108, 44, 
  444, "Output", "ExpressionUUID" -> "90a9699c-5e1f-4bc9-8941-3cce8354a6e3",
   CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"}]},
 "BinormalDistribution"->{
  Cell[811855, 13677, 1105, 31, 
  108, "Input", "ExpressionUUID" -> "f6fa0507-6ecc-4623-8b10-4d58f7eda994",
   CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}],
  Cell[812963, 13710, 2075, 42, 
  544, "Output", "ExpressionUUID" -> "b6a6843a-5d06-4c98-b4bb-a3a8e6095fcf",
   CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}]},
 "Plot3D"->{
  Cell[811855, 13677, 1105, 31, 
  108, "Input", "ExpressionUUID" -> "f6fa0507-6ecc-4623-8b10-4d58f7eda994",
   CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}],
  Cell[812963, 13710, 2075, 42, 
  544, "Output", "ExpressionUUID" -> "b6a6843a-5d06-4c98-b4bb-a3a8e6095fcf",
   CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}]},
 "PlotRange"->{
  Cell[811855, 13677, 1105, 31, 
  108, "Input", "ExpressionUUID" -> "f6fa0507-6ecc-4623-8b10-4d58f7eda994",
   CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}],
  Cell[812963, 13710, 2075, 42, 
  544, "Output", "ExpressionUUID" -> "b6a6843a-5d06-4c98-b4bb-a3a8e6095fcf",
   CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}]},
 "MaxRecursion"->{
  Cell[811855, 13677, 1105, 31, 
  108, "Input", "ExpressionUUID" -> "f6fa0507-6ecc-4623-8b10-4d58f7eda994",
   CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}],
  Cell[812963, 13710, 2075, 42, 
  544, "Output", "ExpressionUUID" -> "b6a6843a-5d06-4c98-b4bb-a3a8e6095fcf",
   CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}]},
 "DiscretePlot3D"->{
  Cell[815241, 13762, 1184, 34, 
  108, "Input", "ExpressionUUID" -> "8c914bbb-90b6-44ed-92fa-fe15eb202af5",
   CellTags->"DiscretePlot3D",
   CellID->2140205674],
  Cell[816428, 13798, 2053, 42, 
  518, "Output", "ExpressionUUID" -> "75d4e5b8-7562-45c5-ab9f-b00dc2fc1ac6",
   CellTags->"DiscretePlot3D"]},
 "GammaDistribution"->{
  Cell[819047, 13860, 381, 8, 
  47, "Input", "ExpressionUUID" -> "72e75e57-26b9-4cc2-8259-ac1ed4f8f27c",
   CellTags->"GammaDistribution"],
  Cell[819431, 13870, 7050, 199, 
  348, "Output", "ExpressionUUID" -> "a9d9de15-a296-4c2d-9cfb-2118b1433803",
   CellTags->"GammaDistribution"]},
 "RandomVariate"->{
  Cell[830904, 14183, 1010, 25, 
  138, "Input", "ExpressionUUID" -> "fd00e5f7-2e75-4107-b0e7-89e7b5905714",
   CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"},
   CellID->980116677],
  Cell[831917, 14210, 10611, 184, 
  307, "Output", "ExpressionUUID" -> "ec13953b-8d23-4d51-9a4a-006fea2840af",
   CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"}]},
 "Show"->{
  Cell[830904, 14183, 1010, 25, 
  138, "Input", "ExpressionUUID" -> "fd00e5f7-2e75-4107-b0e7-89e7b5905714",
   CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"},
   CellID->980116677],
  Cell[831917, 14210, 10611, 184, 
  307, "Output", "ExpressionUUID" -> "ec13953b-8d23-4d51-9a4a-006fea2840af",
   CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"}]},
 "PlotStyle"->{
  Cell[830904, 14183, 1010, 25, 
  138, "Input", "ExpressionUUID" -> "fd00e5f7-2e75-4107-b0e7-89e7b5905714",
   CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"},
   CellID->980116677],
  Cell[831917, 14210, 10611, 184, 
  307, "Output", "ExpressionUUID" -> "ec13953b-8d23-4d51-9a4a-006fea2840af",
   CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"}]},
 "Thick"->{
  Cell[830904, 14183, 1010, 25, 
  138, "Input", "ExpressionUUID" -> "fd00e5f7-2e75-4107-b0e7-89e7b5905714",
   CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"},
   CellID->980116677],
  Cell[831917, 14210, 10611, 184, 
  307, "Output", "ExpressionUUID" -> "ec13953b-8d23-4d51-9a4a-006fea2840af",
   CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"}]},
 "MultivariatePoissonDistribution"->{
  Cell[842732, 14404, 1550, 42, 
  138, "Input", "ExpressionUUID" -> "c5b5798c-4292-410e-9537-221e7c177958",
   CellTags->"MultivariatePoissonDistribution",
   CellID->1621417849],
  Cell[844285, 14448, 60921, 1015, 
  188, "Output", "ExpressionUUID" -> "8797af9f-23c7-4c5e-ad36-08e269b8c571",
   CellTags->"MultivariatePoissonDistribution"]},
 "MixtureDistribution"->{
  Cell[905408, 15473, 1217, 33, 
  108, "Input", "ExpressionUUID" -> "8d47320b-2919-4c84-aca8-4c5ffef44a31",
   CellTags->"MixtureDistribution",
   CellID->181972816],
  Cell[906628, 15508, 30524, 509, 
  298, "Output", "ExpressionUUID" -> "2cf43301-6531-4351-ae8a-6e5f9e91d038",
   CellTags->"MixtureDistribution"]},
 "Import"->{
  Cell[939309, 16079, 502, 14, 
  47, "Input", "ExpressionUUID" -> "a8679006-5664-4bc6-9d45-64aa64fecc22",
   CellTags->{"Import", "FileNameJoin", "NotebookDirectory"}]},
 "FileNameJoin"->{
  Cell[939309, 16079, 502, 14, 
  47, "Input", "ExpressionUUID" -> "a8679006-5664-4bc6-9d45-64aa64fecc22",
   CellTags->{"Import", "FileNameJoin", "NotebookDirectory"}]},
 "NotebookDirectory"->{
  Cell[939309, 16079, 502, 14, 
  47, "Input", "ExpressionUUID" -> "a8679006-5664-4bc6-9d45-64aa64fecc22",
   CellTags->{"Import", "FileNameJoin", "NotebookDirectory"}]},
 "GraphicsRow"->{
  Cell[940851, 16130, 1293, 30, 
  168, "Input", "ExpressionUUID" -> "46be293e-f274-4ffb-9fd4-2d44eba484a9",
   CellTags->{
    "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
     "QuantilePlot", "PlotLabel"}],
  Cell[942147, 16162, 38575, 847, 
  223, "Output", "ExpressionUUID" -> "6876c400-2067-45fc-a739-e16d39527bfb",
   CellTags->{
    "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
     "QuantilePlot", "PlotLabel"}],
  Cell[1003251, 17573, 936, 24, 
  97, "Input", "ExpressionUUID" -> "bd02f494-2991-482e-8692-8b74cc7f37d2",
   CellTags->{"GraphicsRow", "QuantityMagnitude", "ImageSize", "Large"}]},
 "Histogram"->{
  Cell[940851, 16130, 1293, 30, 
  168, "Input", "ExpressionUUID" -> "46be293e-f274-4ffb-9fd4-2d44eba484a9",
   CellTags->{
    "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
     "QuantilePlot", "PlotLabel"}],
  Cell[942147, 16162, 38575, 847, 
  223, "Output", "ExpressionUUID" -> "6876c400-2067-45fc-a739-e16d39527bfb",
   CellTags->{
    "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
     "QuantilePlot", "PlotLabel"}]},
 "DistributionChart"->{
  Cell[940851, 16130, 1293, 30, 
  168, "Input", "ExpressionUUID" -> "46be293e-f274-4ffb-9fd4-2d44eba484a9",
   CellTags->{
    "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
     "QuantilePlot", "PlotLabel"}],
  Cell[942147, 16162, 38575, 847, 
  223, "Output", "ExpressionUUID" -> "6876c400-2067-45fc-a739-e16d39527bfb",
   CellTags->{
    "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
     "QuantilePlot", "PlotLabel"}]},
 "BoxWhiskerChart"->{
  Cell[940851, 16130, 1293, 30, 
  168, "Input", "ExpressionUUID" -> "46be293e-f274-4ffb-9fd4-2d44eba484a9",
   CellTags->{
    "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
     "QuantilePlot", "PlotLabel"}],
  Cell[942147, 16162, 38575, 847, 
  223, "Output", "ExpressionUUID" -> "6876c400-2067-45fc-a739-e16d39527bfb",
   CellTags->{
    "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
     "QuantilePlot", "PlotLabel"}]},
 "QuantilePlot"->{
  Cell[940851, 16130, 1293, 30, 
  168, "Input", "ExpressionUUID" -> "46be293e-f274-4ffb-9fd4-2d44eba484a9",
   CellTags->{
    "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
     "QuantilePlot", "PlotLabel"}],
  Cell[942147, 16162, 38575, 847, 
  223, "Output", "ExpressionUUID" -> "6876c400-2067-45fc-a739-e16d39527bfb",
   CellTags->{
    "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
     "QuantilePlot", "PlotLabel"}]},
 "PlotLabel"->{
  Cell[940851, 16130, 1293, 30, 
  168, "Input", "ExpressionUUID" -> "46be293e-f274-4ffb-9fd4-2d44eba484a9",
   CellTags->{
    "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
     "QuantilePlot", "PlotLabel"}],
  Cell[942147, 16162, 38575, 847, 
  223, "Output", "ExpressionUUID" -> "6876c400-2067-45fc-a739-e16d39527bfb",
   CellTags->{
    "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
     "QuantilePlot", "PlotLabel"}]},
 "DistributionFitTest"->{
  Cell[981442, 17035, 399, 11, 
  47, "Input", "ExpressionUUID" -> "fc0b28c2-9cc1-4414-a1c8-be82a0db9e2d",
   CellTags->{"DistributionFitTest", "UniformDistribution"}],
  Cell[981844, 17048, 12235, 278, 
  91, "Output", "ExpressionUUID" -> "f495da2f-701e-4e75-b4ec-b6d9daf880cb",
   CellTags->{"DistributionFitTest", "UniformDistribution"}]},
 "UniformDistribution"->{
  Cell[981442, 17035, 399, 11, 
  47, "Input", "ExpressionUUID" -> "fc0b28c2-9cc1-4414-a1c8-be82a0db9e2d",
   CellTags->{"DistributionFitTest", "UniformDistribution"}],
  Cell[981844, 17048, 12235, 278, 
  91, "Output", "ExpressionUUID" -> "f495da2f-701e-4e75-b4ec-b6d9daf880cb",
   CellTags->{"DistributionFitTest", "UniformDistribution"}]},
 "Column"->{
  Cell[997180, 17405, 554, 16, 
  78, "Input", "ExpressionUUID" -> "e701f0a8-0a9a-42dd-adda-a82f1a2f6bbc",
   CellTags->{"Column", "Style", "Frame"}],
  Cell[997737, 17423, 1114, 29, 
  119, "Output", "ExpressionUUID" -> "86a51d96-8953-4a5a-a38b-4ad450c4dca8",
   CellTags->{"Column", "Style", "Frame"}]},
 "Style"->{
  Cell[997180, 17405, 554, 16, 
  78, "Input", "ExpressionUUID" -> "e701f0a8-0a9a-42dd-adda-a82f1a2f6bbc",
   CellTags->{"Column", "Style", "Frame"}],
  Cell[997737, 17423, 1114, 29, 
  119, "Output", "ExpressionUUID" -> "86a51d96-8953-4a5a-a38b-4ad450c4dca8",
   CellTags->{"Column", "Style", "Frame"}]},
 "Frame"->{
  Cell[997180, 17405, 554, 16, 
  78, "Input", "ExpressionUUID" -> "e701f0a8-0a9a-42dd-adda-a82f1a2f6bbc",
   CellTags->{"Column", "Style", "Frame"}],
  Cell[997737, 17423, 1114, 29, 
  119, "Output", "ExpressionUUID" -> "86a51d96-8953-4a5a-a38b-4ad450c4dca8",
   CellTags->{"Column", "Style", "Frame"}]},
 "TimeSeries"->{
  Cell[1002230, 17544, 802, 20, 
  58, "Input", "ExpressionUUID" -> "4bbffebe-26db-43e4-b8c5-8d3be287a281",
   CellTags->{"TimeSeries", "WeatherData", "Date"}]},
 "WeatherData"->{
  Cell[1002230, 17544, 802, 20, 
  58, "Input", "ExpressionUUID" -> "4bbffebe-26db-43e4-b8c5-8d3be287a281",
   CellTags->{"TimeSeries", "WeatherData", "Date"}]},
 "Date"->{
  Cell[1002230, 17544, 802, 20, 
  58, "Input", "ExpressionUUID" -> "4bbffebe-26db-43e4-b8c5-8d3be287a281",
   CellTags->{"TimeSeries", "WeatherData", "Date"}]},
 "QuantityMagnitude"->{
  Cell[1003251, 17573, 936, 24, 
  97, "Input", "ExpressionUUID" -> "bd02f494-2991-482e-8692-8b74cc7f37d2",
   CellTags->{"GraphicsRow", "QuantityMagnitude", "ImageSize", "Large"}]},
 "ImageSize"->{
  Cell[1003251, 17573, 936, 24, 
  97, "Input", "ExpressionUUID" -> "bd02f494-2991-482e-8692-8b74cc7f37d2",
   CellTags->{"GraphicsRow", "QuantityMagnitude", "ImageSize", "Large"}]},
 "Large"->{
  Cell[1003251, 17573, 936, 24, 
  97, "Input", "ExpressionUUID" -> "bd02f494-2991-482e-8692-8b74cc7f37d2",
   CellTags->{"GraphicsRow", "QuantityMagnitude", "ImageSize", "Large"}]},
 "SmoothKernelDistribution"->{
  Cell[1005018, 17622, 582, 15, 
  58, "Input", "ExpressionUUID" -> "2f9f9c99-f0bd-4c4d-b949-8487f25d1dbc",
   CellTags->{"SmoothKernelDistribution", "Cases", "Normal", "NumericQ"}]},
 "Cases"->{
  Cell[1005018, 17622, 582, 15, 
  58, "Input", "ExpressionUUID" -> "2f9f9c99-f0bd-4c4d-b949-8487f25d1dbc",
   CellTags->{"SmoothKernelDistribution", "Cases", "Normal", "NumericQ"}]},
 "Normal"->{
  Cell[1005018, 17622, 582, 15, 
  58, "Input", "ExpressionUUID" -> "2f9f9c99-f0bd-4c4d-b949-8487f25d1dbc",
   CellTags->{"SmoothKernelDistribution", "Cases", "Normal", "NumericQ"}]},
 "NumericQ"->{
  Cell[1005018, 17622, 582, 15, 
  58, "Input", "ExpressionUUID" -> "2f9f9c99-f0bd-4c4d-b949-8487f25d1dbc",
   CellTags->{"SmoothKernelDistribution", "Cases", "Normal", "NumericQ"}],
  Cell[1018347, 17996, 357, 8, 
  58, "Input", "ExpressionUUID" -> "31b2b37f-0384-40d5-b69c-eaf5c88518b9",
   CellTags->{"ListPlot", "NumericQ"}]},
 "FindDistribution"->{
  Cell[1008890, 17733, 685, 16, 
  65, "Input", "ExpressionUUID" -> "49f6bc1b-0894-4197-bea4-0eb8f54cc8f1",
   CellTags->"FindDistribution"]},
 "Length"->{
  Cell[1017382, 17969, 679, 17, 
  58, "Input", "ExpressionUUID" -> "929655d3-eae6-41ab-a6a1-047db4f861f5",
   CellTags->"Length"],
  Cell[1026941, 18231, 781, 21, 
  58, "Input", "ExpressionUUID" -> "497f99bc-b294-4af1-84b9-42a8fe383763",
   CellTags->"Length"]},
 "ListPlot"->{
  Cell[1018347, 17996, 357, 8, 
  58, "Input", "ExpressionUUID" -> "31b2b37f-0384-40d5-b69c-eaf5c88518b9",
   CellTags->{"ListPlot", "NumericQ"}]},
 "LinearModelFit"->{
  Cell[1019319, 18024, 341, 7, 
  58, "Input", "ExpressionUUID" -> "154b6dee-7213-477a-9a14-c29acd9f32a0",
   CellTags->"LinearModelFit"]},
 "Framed"->{
  Cell[1020725, 18062, 572, 14, 
  58, "Input", "ExpressionUUID" -> "6fc74155-8238-4d03-ab77-1123d3a11f7a",
   CellTags->{"Framed", "FrameMargins", "RoundingRadius"}]},
 "FrameMargins"->{
  Cell[1020725, 18062, 572, 14, 
  58, "Input", "ExpressionUUID" -> "6fc74155-8238-4d03-ab77-1123d3a11f7a",
   CellTags->{"Framed", "FrameMargins", "RoundingRadius"}]},
 "RoundingRadius"->{
  Cell[1020725, 18062, 572, 14, 
  58, "Input", "ExpressionUUID" -> "6fc74155-8238-4d03-ab77-1123d3a11f7a",
   CellTags->{"Framed", "FrameMargins", "RoundingRadius"}]},
 "AdjustedRSquared"->{
  Cell[1023658, 18145, 207, 4, 
  58, "Input", "ExpressionUUID" -> "c7ec3570-121f-4b5c-986c-6b497b342980",
   CellTags->"AdjustedRSquared"]},
 "AIC"->{
  Cell[1023868, 18151, 178, 3, 
  58, "Input", "ExpressionUUID" -> "76d82340-4cd3-42c0-ad31-4c5c4b19fb91",
   CellTags->"AIC"]},
 "Residuals"->{
  Cell[1029400, 18296, 1279, 28, 
  135, "Input", "ExpressionUUID" -> "2b93b195-d959-4def-b423-0d77e1564810",
   CellTags->{"Residuals", "Cook's Distances"}]},
 "Cook's Distances"->{
  Cell[1029400, 18296, 1279, 28, 
  135, "Input", "ExpressionUUID" -> "2b93b195-d959-4def-b423-0d77e1564810",
   CellTags->{"Residuals", "Cook's Distances"}]},
 "NonlinearModelFit"->{
  Cell[1033137, 18390, 732, 21, 
  107, "Input", "ExpressionUUID" -> "f1d7a573-827c-4f83-94f1-ec12b178794e",
   CellTags->"NonlinearModelFit"]},
 "BestFit"->{
  Cell[1033872, 18413, 149, 2, 
  58, "Input", "ExpressionUUID" -> "90b18361-f2ea-4087-9aaa-97e2ccc426b4",
   CellTags->"BestFit"]},
 "ListLinePlot"->{
  Cell[1034204, 18422, 984, 23, 
  172, "Input", "ExpressionUUID" -> "51a7e33b-7669-416d-807e-9e366de41d9d",
   CellTags->{"ListLinePlot", "PlotMarkers"}]},
 "PlotMarkers"->{
  Cell[1034204, 18422, 984, 23, 
  172, "Input", "ExpressionUUID" -> "51a7e33b-7669-416d-807e-9e366de41d9d",
   CellTags->{"ListLinePlot", "PlotMarkers"}]},
 "ANOVATable"->{
  Cell[1036190, 18475, 557, 11, 
  58, "Input", "ExpressionUUID" -> "5b21b25c-e021-44e2-97df-f67950dbb91d",
   CellTags->{"ANOVATable", "FitCurvatureTable", "ParameterBias", "AICc"}]},
 "FitCurvatureTable"->{
  Cell[1036190, 18475, 557, 11, 
  58, "Input", "ExpressionUUID" -> "5b21b25c-e021-44e2-97df-f67950dbb91d",
   CellTags->{"ANOVATable", "FitCurvatureTable", "ParameterBias", "AICc"}]},
 "ParameterBias"->{
  Cell[1036190, 18475, 557, 11, 
  58, "Input", "ExpressionUUID" -> "5b21b25c-e021-44e2-97df-f67950dbb91d",
   CellTags->{"ANOVATable", "FitCurvatureTable", "ParameterBias", "AICc"}]},
 "AICc"->{
  Cell[1036190, 18475, 557, 11, 
  58, "Input", "ExpressionUUID" -> "5b21b25c-e021-44e2-97df-f67950dbb91d",
   CellTags->{"ANOVATable", "FitCurvatureTable", "ParameterBias", "AICc"}]},
 "GeneralizedLinearModelFit"->{
  Cell[1044288, 18689, 545, 13, 
  58, "Input", "ExpressionUUID" -> "8611a442-bb73-48b5-8e46-58f849585e39",
   CellTags->{"GeneralizedLinearModelFit", "ExponentialFamily", "Poisson"}]},
 "ExponentialFamily"->{
  Cell[1044288, 18689, 545, 13, 
  58, "Input", "ExpressionUUID" -> "8611a442-bb73-48b5-8e46-58f849585e39",
   CellTags->{"GeneralizedLinearModelFit", "ExponentialFamily", "Poisson"}]},
 "Poisson"->{
  Cell[1044288, 18689, 545, 13, 
  58, "Input", "ExpressionUUID" -> "8611a442-bb73-48b5-8e46-58f849585e39",
   CellTags->{"GeneralizedLinearModelFit", "ExponentialFamily", "Poisson"}]},
 "Binomial"->{
  Cell[1051598, 18888, 940, 18, 
  58, "Input", "ExpressionUUID" -> "e1c7d007-ac7e-423e-bd1e-be8689816120",
   CellTags->"Binomial"]},
 "LogitModelFit"->{
  Cell[1052931, 18917, 532, 14, 
  58, "Input", "ExpressionUUID" -> "0eb2344b-1be9-4a90-acb3-24c10d37cc8a",
   CellTags->"LogitModelFit"]},
 "ParameterTable"->{
  Cell[1053693, 18938, 1078, 23, 
  97, "Input", "ExpressionUUID" -> "2f45001c-ad78-4400-8a61-010b15d1e2e4",
   CellTags->{"ParameterTable", "FitResiduals"}]},
 "FitResiduals"->{
  Cell[1053693, 18938, 1078, 23, 
  97, "Input", "ExpressionUUID" -> "2f45001c-ad78-4400-8a61-010b15d1e2e4",
   CellTags->{"ParameterTable", "FitResiduals"}]},
 "LinkFunction"->{
  Cell[1067702, 19299, 1248, 27, 
  135, "Input", "ExpressionUUID" -> "418b44d6-d29e-402c-8afe-c2a3768f1101",
   CellTags->{"LinkFunction", "NegativeBinomialLink"}]},
 "NegativeBinomialLink"->{
  Cell[1067702, 19299, 1248, 27, 
  135, "Input", "ExpressionUUID" -> "418b44d6-d29e-402c-8afe-c2a3768f1101",
   CellTags->{"LinkFunction", "NegativeBinomialLink"}]},
 "BIC"->{
  Cell[1074319, 19460, 1544, 37, 
  247, "Input", "ExpressionUUID" -> "c2fbcee1-ceab-4725-8b53-75474bacc199",
   CellTags->{
    "BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", 
     "Gaussian"}]},
 "LikelihoodRatioIndex"->{
  Cell[1074319, 19460, 1544, 37, 
  247, "Input", "ExpressionUUID" -> "c2fbcee1-ceab-4725-8b53-75474bacc199",
   CellTags->{
    "BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", 
     "Gaussian"}]},
 "PearsonChiSquare"->{
  Cell[1074319, 19460, 1544, 37, 
  247, "Input", "ExpressionUUID" -> "c2fbcee1-ceab-4725-8b53-75474bacc199",
   CellTags->{
    "BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", 
     "Gaussian"}]},
 "Subsets"->{
  Cell[1074319, 19460, 1544, 37, 
  247, "Input", "ExpressionUUID" -> "c2fbcee1-ceab-4725-8b53-75474bacc199",
   CellTags->{
    "BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", 
     "Gaussian"}]},
 "Gaussian"->{
  Cell[1074319, 19460, 1544, 37, 
  247, "Input", "ExpressionUUID" -> "c2fbcee1-ceab-4725-8b53-75474bacc199",
   CellTags->{
    "BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", 
     "Gaussian"}]},
 "Grid"->{
  Cell[1076218, 19508, 1084, 27, 
  97, "Input", "ExpressionUUID" -> "c124816b-35d7-488d-bf59-760b5caf68ed",
   CellTags->{"Grid", "Join", "Take", "SortBy"}]},
 "Join"->{
  Cell[1076218, 19508, 1084, 27, 
  97, "Input", "ExpressionUUID" -> "c124816b-35d7-488d-bf59-760b5caf68ed",
   CellTags->{"Grid", "Join", "Take", "SortBy"}]},
 "Take"->{
  Cell[1076218, 19508, 1084, 27, 
  97, "Input", "ExpressionUUID" -> "c124816b-35d7-488d-bf59-760b5caf68ed",
   CellTags->{"Grid", "Join", "Take", "SortBy"}]},
 "SortBy"->{
  Cell[1076218, 19508, 1084, 27, 
  97, "Input", "ExpressionUUID" -> "c124816b-35d7-488d-bf59-760b5caf68ed",
   CellTags->{"Grid", "Join", "Take", "SortBy"}]},
 "TimeSeriesWindow"->{
  Cell[1094888, 19945, 582, 16, 
  78, "Input", "ExpressionUUID" -> "f3867716-5e08-44ea-a084-86ba31d48147",
   CellTags->"TimeSeriesWindow",
   CellID->35234274]},
 "TimeSeriesModelFit"->{
  Cell[1096222, 19983, 196, 4, 
  47, "Input", "ExpressionUUID" -> "7998d32b-0027-46ce-966b-893a2f1f6cf0",
   CellTags->"TimeSeriesModelFit"]},
 "DateRange"->{
  Cell[1096634, 19994, 846, 23, 
  138, "Input", "ExpressionUUID" -> "932122fe-f883-41e6-9f51-f518cc1a5c59",
   CellTags->"DateRange",
   CellID->643306091],
  Cell[1101549, 20132, 400, 11, 
  47, "Input", "ExpressionUUID" -> "0661170d-a077-41f5-b7c5-115fe357977c",
   CellTags->"DateRange",
   CellID->1486872]},
 "FindGeoLocation"->{
  Cell[1098338, 20044, 1543, 42, 
  198, "Input", "ExpressionUUID" -> "bb04d436-3af9-4ddf-ae22-dd0ec1769b55",
   CellTags->"FindGeoLocation",
   CellID->831135752]},
 "PredictionLimits"->{
  Cell[1101952, 20145, 430, 12, 
  78, "Input", "ExpressionUUID" -> "1f24a4c6-b056-4bce-b5bd-b68f90faf483",
   CellTags->"PredictionLimits",
   CellID->642359114]},
 "DatePlus"->{
  Cell[1639833, 31483, 55852, 1241, 
  670, "Input", "ExpressionUUID" -> "99bb3c26-716d-41f8-b66c-ef818dbd9ae5",
   InitializationCell->True,
   CellTags->{"DatePlus", "DateValue", "Today"}]},
 "DateValue"->{
  Cell[1639833, 31483, 55852, 1241, 
  670, "Input", "ExpressionUUID" -> "99bb3c26-716d-41f8-b66c-ef818dbd9ae5",
   InitializationCell->True,
   CellTags->{"DatePlus", "DateValue", "Today"}]},
 "Today"->{
  Cell[1639833, 31483, 55852, 1241, 
  670, "Input", "ExpressionUUID" -> "99bb3c26-716d-41f8-b66c-ef818dbd9ae5",
   InitializationCell->True,
   CellTags->{"DatePlus", "DateValue", "Today"}]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 1753402, 33908},
 {"Probability", 1756118, 33977},
 {"BinomialDistribution", 1756472, 33984},
 {"ZipfDistribution", 1756822, 33991},
 {"PoissonDistribution", 1757133, 33998},
 {"DirichletDistribution", 1757451, 34005},
 {"LaplaceDistribution", 1757770, 34012},
 {"NormalDistribution", 1758084, 34019},
 {"ChiSquareDistribution", 1758399, 34026},
 {"Manipulate", 1758732, 34034},
 {"Plot", 1759268, 34046},
 {"Table", 1759805, 34058},
 {"Evaluate", 1760345, 34070},
 {"Filling", 1760884, 34082},
 {"Axis", 1761420, 34094},
 {"PDF", 1761955, 34106},
 {"CDF", 1762490, 34118},
 {"SurvivalFunction", 1763038, 34130},
 {"HazardFunction", 1763584, 34142},
 {"DiscretePlot", 1764128, 34154},
 {"GeometricDistribution", 1764541, 34162},
 {"ExtentSize", 1764943, 34170},
 {"BinormalDistribution", 1765355, 34178},
 {"Plot3D", 1765746, 34185},
 {"PlotRange", 1766140, 34192},
 {"MaxRecursion", 1766537, 34199},
 {"DiscretePlot3D", 1766936, 34206},
 {"GammaDistribution", 1767267, 34214},
 {"RandomVariate", 1767575, 34221},
 {"Show", 1767956, 34229},
 {"PlotStyle", 1768342, 34237},
 {"Thick", 1768724, 34245},
 {"MultivariatePoissonDistribution", 1769132, 34253},
 {"MixtureDistribution", 1769502, 34261},
 {"Import", 1769833, 34269},
 {"FileNameJoin", 1770023, 34273},
 {"NotebookDirectory", 1770218, 34277},
 {"GraphicsRow", 1770407, 34281},
 {"Histogram", 1771075, 34295},
 {"DistributionChart", 1771569, 34306},
 {"BoxWhiskerChart", 1772061, 34317},
 {"QuantilePlot", 1772550, 34328},
 {"PlotLabel", 1773036, 34339},
 {"DistributionFitTest", 1773532, 34350},
 {"UniformDistribution", 1773901, 34357},
 {"Column", 1774257, 34364},
 {"Style", 1774575, 34371},
 {"Frame", 1774893, 34378},
 {"TimeSeries", 1775216, 34385},
 {"WeatherData", 1775396, 34389},
 {"Date", 1775569, 34393},
 {"QuantityMagnitude", 1775755, 34397},
 {"ImageSize", 1775954, 34401},
 {"Large", 1776149, 34405},
 {"SmoothKernelDistribution", 1776363, 34409},
 {"Cases", 1776559, 34413},
 {"Normal", 1776756, 34417},
 {"NumericQ", 1776955, 34421},
 {"FindDistribution", 1777309, 34428},
 {"Length", 1777465, 34432},
 {"ListPlot", 1777745, 34439},
 {"LinearModelFit", 1777914, 34443},
 {"Framed", 1778067, 34447},
 {"FrameMargins", 1778255, 34451},
 {"RoundingRadius", 1778445, 34455},
 {"AdjustedRSquared", 1778637, 34459},
 {"AIC", 1778789, 34463},
 {"Residuals", 1778934, 34467},
 {"Cook's Distances", 1779117, 34471},
 {"NonlinearModelFit", 1779301, 34475},
 {"BestFit", 1779460, 34479},
 {"ListLinePlot", 1779612, 34483},
 {"PlotMarkers", 1779787, 34487},
 {"ANOVATable", 1779961, 34491},
 {"FitCurvatureTable", 1780170, 34495},
 {"ParameterBias", 1780375, 34499},
 {"AICc", 1780571, 34503},
 {"GeneralizedLinearModelFit", 1780788, 34507},
 {"ExponentialFamily", 1780998, 34511},
 {"Poisson", 1781198, 34515},
 {"Binomial", 1781399, 34519},
 {"LogitModelFit", 1781554, 34523},
 {"ParameterTable", 1781715, 34527},
 {"FitResiduals", 1781894, 34531},
 {"LinkFunction", 1782073, 34535},
 {"NegativeBinomialLink", 1782267, 34539},
 {"BIC", 1782444, 34543},
 {"LikelihoodRatioIndex", 1782683, 34549},
 {"PearsonChiSquare", 1782918, 34555},
 {"Subsets", 1783144, 34561},
 {"Gaussian", 1783371, 34567},
 {"Grid", 1783594, 34573},
 {"Join", 1783765, 34577},
 {"Take", 1783936, 34581},
 {"SortBy", 1784109, 34585},
 {"TimeSeriesWindow", 1784292, 34589},
 {"TimeSeriesModelFit", 1784481, 34594},
 {"DateRange", 1784641, 34598},
 {"FindGeoLocation", 1784977, 34607},
 {"PredictionLimits", 1785166, 34612},
 {"DatePlus", 1785346, 34617},
 {"DateValue", 1785555, 34622},
 {"Today", 1785760, 34627}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 136, 2, 5, "SlideShowNavigationBar", "ExpressionUUID" -> \
"f6ffeff0-126b-4ca8-8f01-f3cdae38cea0",
 CellTags->"SlideShowHeader"],
Cell[719, 26, 252, 5, 266, "Title", "ExpressionUUID" -> \
"67f47d53-3d6f-4cee-a212-3ad46d9f08eb"],
Cell[974, 33, 166, 4, 86, "Subtitle", "ExpressionUUID" -> \
"cb02f574-7880-4ac3-8531-bc2feedd2545"],
Cell[1143, 39, 113, 0, 54, "Subsubtitle", "ExpressionUUID" -> \
"33bb0238-52c9-4981-aa0c-862f6bbd905c"],
Cell[1259, 41, 71, 0, 50, "Text", "ExpressionUUID" -> \
"78305ca3-ad64-4412-843c-d7618f129b2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1367, 46, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"f0580f1d-28a4-49d7-b263-6ef9faaa30e4",
 CellTags->"SlideShowHeader"],
Cell[1492, 50, 4859, 120, 114, InheritFromParent, "ExpressionUUID" -> \
"a8f69a95-1d2c-45fa-9487-afda58d6d061"],
Cell[CellGroupData[{
Cell[6376, 174, 337, 5, 70, "Subsection", "ExpressionUUID" -> \
"87d250b1-8319-4c95-aeaf-0528ab8babe7"],
Cell[6716, 181, 607, 10, 50, "Text", "ExpressionUUID" -> \
"c904a56e-bef5-4cc5-a656-ca8881fd3d5a"],
Cell[CellGroupData[{
Cell[7348, 195, 336, 5, 42, "Item", "ExpressionUUID" -> \
"a510ecd3-faed-4701-9004-90b1cb8d8903"],
Cell[7687, 202, 425, 6, 42, "Item", "ExpressionUUID" -> \
"09ffc371-5c9e-4749-8584-ef94ebba42c7"],
Cell[8115, 210, 495, 7, 42, "Item", "ExpressionUUID" -> \
"d6c73fa2-b936-4f35-9cf5-a72344ee530f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8659, 223, 298, 5, 70, "Subsection", "ExpressionUUID" -> \
"1d128d9c-d539-4d8e-9cdb-65f057dd0f4c"],
Cell[8960, 230, 460, 8, 50, "Text", "ExpressionUUID" -> \
"8bbb29bd-ff15-4094-879a-6ececba3fc3c"],
Cell[CellGroupData[{
Cell[9445, 242, 341, 6, 42, "Item", "ExpressionUUID" -> \
"04cf2fbf-34cf-475f-9f1a-3dfdcfc32c72"],
Cell[9789, 250, 239, 4, 42, "Item", "ExpressionUUID" -> \
"3b050c19-cec5-47a9-aeb9-d272aa4545ac"],
Cell[10031, 256, 237, 4, 42, "Item", "ExpressionUUID" -> \
"f8c7838f-807e-44cd-a661-2b81bf596e68"],
Cell[10271, 262, 238, 4, 42, "Item", "ExpressionUUID" -> \
"b3eb8497-a631-4d45-8a51-8ca3504abcd7"],
Cell[10512, 268, 282, 5, 42, "Item", "ExpressionUUID" -> \
"2d570863-e6d2-4bc0-b3e0-c011a2eff4b2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10843, 279, 320, 5, 70, "Subsection", "ExpressionUUID" -> \
"9397dac0-b039-4f0e-84bc-34e5151b9a4d"],
Cell[11166, 286, 499, 9, 50, "Text", "ExpressionUUID" -> \
"2ea5ac10-f26e-4a27-b2c3-185eba51a1e9"],
Cell[CellGroupData[{
Cell[11690, 299, 320, 6, 42, "Item", "ExpressionUUID" -> \
"e8bcbc10-1e57-4a1c-88a8-af717aaed157"],
Cell[12013, 307, 338, 6, 42, "Item", "ExpressionUUID" -> \
"1b1ac549-0dd5-4644-bacb-802cf250ef86"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12412, 320, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"3f67613b-43ff-4a91-8cc7-440f146c392f",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[12559, 326, 280, 4, 137, "Section", "ExpressionUUID" -> \
"fd7c281c-0ac6-41e7-8038-85540bc078aa"],
Cell[CellGroupData[{
Cell[12864, 334, 168, 3, 70, "Subsection", "ExpressionUUID" -> \
"bcf16611-48d3-463b-8455-795d16f6af90"],
Cell[13035, 339, 903, 16, 202, "Text", "ExpressionUUID" -> \
"3c0e49ad-e311-42d8-87f3-ee1807b13dbb"],
Cell[13941, 357, 103559, 1802, 306, "Output", "ExpressionUUID" -> \
"60e94397-03a8-47ad-8c08-5861de9949a9"]
}, Closed]],
Cell[CellGroupData[{
Cell[117537, 2164, 170, 3, 59, "Subsection", "ExpressionUUID" -> \
"7ec0b272-f438-4a4a-b524-fc11f269df9e"],
Cell[117710, 2169, 553, 10, 141, "Text", "ExpressionUUID" -> \
"e0e5d937-5c02-489e-9a1d-1d01509bdc81"],
Cell[118266, 2181, 69687, 1229, 322, "Output", "ExpressionUUID" -> \
"b77de0d2-89cc-40c6-9fe8-6cc4d69f0ad8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[188014, 3417, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"9425fdc3-a227-4596-955c-59e1bd0105f5",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[188161, 3423, 229, 4, 137, "Section", "ExpressionUUID" -> \
"dfb86b11-fb0a-4f8f-806d-83887d6b8019"],
Cell[188393, 3429, 1947, 46, 171, "Text", "ExpressionUUID" -> \
"693966f0-9bce-4be8-bbc8-66c9a7c5de98"],
Cell[190343, 3477, 602315, 9620, 331, "Text", "ExpressionUUID" -> \
"c45d4499-f7eb-4869-a539-85344616547c"],
Cell[792661, 13099, 460, 8, 52, "Text", "ExpressionUUID" -> \
"aecce6bf-e629-4e71-839a-aaa77cded470"],
Cell[CellGroupData[{
Cell[793146, 13111, 509, 16, 71, "Subsection", "ExpressionUUID" -> \
"f77e5897-8fb5-4cfb-b988-cc03de6b1aa6"],
Cell[793658, 13129, 174, 3, 50, "Text", "ExpressionUUID" -> \
"3e5695a3-5b0d-4c0c-967f-6e7460764655"],
Cell[CellGroupData[{
Cell[793857, 13136, 628, 14, 47, "Input", "ExpressionUUID" -> \
"30c1aef0-91f2-4a3c-9e0e-eaeb54c8090f",
 CellTags->{"Probability", "BinomialDistribution"}],
Cell[794488, 13152, 1773, 53, 74, "Output", "ExpressionUUID" -> \
"9fb82e53-1c29-403a-89c2-2b8d4efd499a",
 CellTags->{"Probability", "BinomialDistribution"}]
}, Open  ]],
Cell[796276, 13208, 164, 3, 50, "Text", "ExpressionUUID" -> \
"866657a5-be46-4a85-b0c1-3fbb1cd7ea41"],
Cell[CellGroupData[{
Cell[796465, 13215, 380, 10, 55, "Input", "ExpressionUUID" -> \
"1209afc9-7cd7-49ea-b2e5-92923b99062b",
 CellTags->"ZipfDistribution"],
Cell[796848, 13227, 1285, 41, 84, "Output", "ExpressionUUID" -> \
"a7b78227-a94f-4a7f-a9dc-38a37bdd52f2",
 CellTags->"ZipfDistribution"]
}, Open  ]],
Cell[798148, 13271, 164, 3, 50, "Text", "ExpressionUUID" -> \
"2f488a81-77bf-4667-a21e-0a4eae3b81e5"],
Cell[CellGroupData[{
Cell[798337, 13278, 379, 12, 47, "Input", "ExpressionUUID" -> \
"76e70c28-94a2-455d-b711-d08cd28083da",
 CellTags->"PoissonDistribution"],
Cell[798719, 13292, 509, 15, 70, "Output", "ExpressionUUID" -> \
"444d3466-e852-4170-9f81-07681bd7f4e2",
 CellTags->"PoissonDistribution"]
}, Open  ]],
Cell[799243, 13310, 170, 3, 50, "Text", "ExpressionUUID" -> \
"311cdf8f-b621-4ca5-bda8-bae1f8e5e7fc"],
Cell[CellGroupData[{
Cell[799438, 13317, 507, 15, 47, "Input", "ExpressionUUID" -> \
"a30f7f0f-2c2b-417e-b4db-db51cd91be94",
 CellTags->"DirichletDistribution"],
Cell[799948, 13334, 188, 5, 70, "Output", "ExpressionUUID" -> \
"adfe4456-9548-4ebc-a1ac-160a5225136b",
 CellTags->"DirichletDistribution"]
}, Open  ]],
Cell[800151, 13342, 169, 3, 50, "Text", "ExpressionUUID" -> \
"a4dce36d-1478-4115-ac5a-21ba09051351"],
Cell[CellGroupData[{
Cell[800345, 13349, 501, 15, 59, "Input", "ExpressionUUID" -> \
"55b83b20-2606-451f-906a-222f59abd93b",
 CellTags->"LaplaceDistribution"],
Cell[800849, 13366, 200, 5, 70, "Output", "ExpressionUUID" -> \
"0ae20d34-d6c6-4bf0-959f-f835eed196b0",
 CellTags->"LaplaceDistribution"]
}, Open  ]],
Cell[801064, 13374, 168, 3, 50, "Text", "ExpressionUUID" -> \
"4cbf08f6-c62f-4258-893a-91dda5f7ba92"],
Cell[CellGroupData[{
Cell[801257, 13381, 393, 10, 47, "Input", "ExpressionUUID" -> \
"5a502ce7-2cde-4b57-a18f-ce6309b0aa61",
 CellTags->"NormalDistribution"],
Cell[801653, 13393, 161, 3, 47, "Output", "ExpressionUUID" -> \
"c4f668fc-bddf-4d3b-8372-59f3a022f4f7",
 CellTags->"NormalDistribution"]
}, Open  ]],
Cell[801829, 13399, 180, 3, 50, "Text", "ExpressionUUID" -> \
"33cd7635-5930-45ec-be9e-80d67803b874"],
Cell[CellGroupData[{
Cell[802034, 13406, 406, 11, 47, "Input", "ExpressionUUID" -> \
"c82760d6-7454-45bd-8312-bf8fdbd08a44",
 CellTags->"ChiSquareDistribution",
 CellID->117362026],
Cell[802443, 13419, 422, 14, 72, "Output", "ExpressionUUID" -> \
"e05100df-5f70-4ae1-ba52-51a1ff3ffbf1",
 CellTags->"ChiSquareDistribution"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[802938, 13441, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"8d279e95-a63c-47a7-9bf6-7f32bac6c618",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[803085, 13447, 172, 3, 137, "Section", "ExpressionUUID" -> \
"a654f3e2-1a47-4484-bc73-3d7c4125f413"],
Cell[CellGroupData[{
Cell[803282, 13454, 1214, 33, 115, "Subsubsection", "ExpressionUUID" -> \
"533ff64a-25cf-463e-b10c-b8b48f0e6b8a"],
Cell[804499, 13489, 165, 3, 50, "Text", "ExpressionUUID" -> \
"a35fab62-a8cb-4bb5-a183-dcc348a4b204"],
Cell[CellGroupData[{
Cell[804689, 13496, 1331, 36, 108, "Input", "ExpressionUUID" -> \
"f63f7724-daf6-474b-81d7-c753466d47b9",
 CellTags->{
  "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", 
   "SurvivalFunction", "HazardFunction"},
 CellID->2002640062],
Cell[806023, 13534, 2159, 45, 442, "Output", "ExpressionUUID" -> \
"bb22c2cc-dd00-4c90-9f3b-c7703f72f87a",
 CellTags->{
  "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", 
   "SurvivalFunction", "HazardFunction"}]
}, Open  ]],
Cell[808197, 13582, 165, 3, 50, "Text", "ExpressionUUID" -> \
"d107e0f1-2e57-49e7-a341-3be8a8a5e2c0"],
Cell[CellGroupData[{
Cell[808387, 13589, 1148, 32, 138, "Input", "ExpressionUUID" -> \
"9b5bce40-4545-4894-819f-3b18afc4056b",
 CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"},
 CellID->1700090275],
Cell[809538, 13623, 2108, 44, 444, "Output", "ExpressionUUID" -> \
"90a9699c-5e1f-4bc9-8941-3cce8354a6e3",
 CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"}]
}, Open  ]],
Cell[811661, 13670, 169, 3, 50, "Text", "ExpressionUUID" -> \
"2989fe66-1865-440e-bf0d-cbfe834f1c91"],
Cell[CellGroupData[{
Cell[811855, 13677, 1105, 31, 108, "Input", "ExpressionUUID" -> \
"f6fa0507-6ecc-4623-8b10-4d58f7eda994",
 CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}],
Cell[812963, 13710, 2075, 42, 544, "Output", "ExpressionUUID" -> \
"b6a6843a-5d06-4c98-b4bb-a3a8e6095fcf",
 CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}]
}, Open  ]],
Cell[815053, 13755, 163, 3, 50, "Text", "ExpressionUUID" -> \
"57713ac1-a45b-44c0-b92d-9eadd2e29f28"],
Cell[CellGroupData[{
Cell[815241, 13762, 1184, 34, 108, "Input", "ExpressionUUID" -> \
"8c914bbb-90b6-44ed-92fa-fe15eb202af5",
 CellTags->"DiscretePlot3D",
 CellID->2140205674],
Cell[816428, 13798, 2053, 42, 518, "Output", "ExpressionUUID" -> \
"75d4e5b8-7562-45c5-ab9f-b00dc2fc1ac6",
 CellTags->"DiscretePlot3D"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[818530, 13846, 251, 4, 49, "Subsubsection", "ExpressionUUID" -> \
"5aa3e3bf-8f35-4c05-8ed4-aee78b9d5e79"],
Cell[818784, 13852, 238, 4, 50, "Text", "ExpressionUUID" -> \
"76f3987d-02f2-4f97-bed3-40d8c25455a6"],
Cell[CellGroupData[{
Cell[819047, 13860, 381, 8, 47, "Input", "ExpressionUUID" -> \
"72e75e57-26b9-4cc2-8259-ac1ed4f8f27c",
 CellTags->"GammaDistribution"],
Cell[819431, 13870, 7050, 199, 348, "Output", "ExpressionUUID" -> \
"a9d9de15-a296-4c2d-9cfb-2118b1433803",
 CellTags->"GammaDistribution"]
}, Open  ]],
Cell[826496, 14072, 246, 4, 50, "Text", "ExpressionUUID" -> \
"1fa2323e-8f84-4567-9b58-8ba7b5f48f7e"],
Cell[CellGroupData[{
Cell[826767, 14080, 1224, 29, 168, "Input", "ExpressionUUID" -> \
"8e5673d6-51d6-44cf-b12a-10b289caada3"],
Cell[827994, 14111, 2201, 44, 178, "Output", "ExpressionUUID" -> \
"72ea40b0-7d2e-4537-834e-d45787172db3"]
}, {2}]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[830265, 14163, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"fe63993c-cef8-438c-bfbc-48c4bc60cdae",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[830412, 14169, 251, 4, 137, "Section", "ExpressionUUID" -> \
"4699d872-d462-41f5-a559-84cd490b557c"],
Cell[830666, 14175, 213, 4, 50, "Text", "ExpressionUUID" -> \
"36de5f6a-a300-4ae3-b6b9-2de2b1d3cdcf"],
Cell[CellGroupData[{
Cell[830904, 14183, 1010, 25, 138, "Input", "ExpressionUUID" -> \
"fd00e5f7-2e75-4107-b0e7-89e7b5905714",
 CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"},
 CellID->980116677],
Cell[831917, 14210, 10611, 184, 307, "Output", "ExpressionUUID" -> \
"ec13953b-8d23-4d51-9a4a-006fea2840af",
 CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"}]
}, Open  ]],
Cell[842543, 14397, 164, 3, 50, "Text", "ExpressionUUID" -> \
"814243d4-0b8c-4fa1-9b90-eb0e8b978788"],
Cell[CellGroupData[{
Cell[842732, 14404, 1550, 42, 138, "Input", "ExpressionUUID" -> \
"c5b5798c-4292-410e-9537-221e7c177958",
 CellTags->"MultivariatePoissonDistribution",
 CellID->1621417849],
Cell[844285, 14448, 60921, 1015, 188, "Output", "ExpressionUUID" -> \
"8797af9f-23c7-4c5e-ad36-08e269b8c571",
 CellTags->"MultivariatePoissonDistribution"]
}, Open  ]],
Cell[905221, 15466, 162, 3, 50, "Text", "ExpressionUUID" -> \
"d16d7fca-dd5d-4f47-8c22-edee87429350"],
Cell[CellGroupData[{
Cell[905408, 15473, 1217, 33, 108, "Input", "ExpressionUUID" -> \
"8d47320b-2919-4c84-aca8-4c5ffef44a31",
 CellTags->"MixtureDistribution",
 CellID->181972816],
Cell[906628, 15508, 30524, 509, 298, "Output", "ExpressionUUID" -> \
"2cf43301-6531-4351-ae8a-6e5f9e91d038",
 CellTags->"MixtureDistribution"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[937213, 16024, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"91e0cab1-9001-4d86-a1ec-4d79c51a8061",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[937360, 16030, 511, 7, 137, "Section", "ExpressionUUID" -> \
"3bfa1cb5-8548-45c7-9f7a-38ceaabb2dd3"],
Cell[937874, 16039, 811, 17, 111, "Text", "ExpressionUUID" -> \
"27969aa5-2585-4c67-8377-d9e19aba5077"],
Cell[CellGroupData[{
Cell[938710, 16060, 214, 4, 70, "Subsection", "ExpressionUUID" -> \
"be549b52-c9c3-47c1-9ff0-7e479db79b73"],
Cell[938927, 16066, 379, 11, 50, "Text", "ExpressionUUID" -> \
"900be852-1e60-4519-84f6-24261acb52d8"],
Cell[939309, 16079, 502, 14, 47, "Input", "ExpressionUUID" -> \
"a8679006-5664-4bc6-9d45-64aa64fecc22",
 CellTags->{"Import", "FileNameJoin", "NotebookDirectory"}],
Cell[939814, 16095, 1012, 31, 81, "Text", "ExpressionUUID" -> \
"f8610a88-07a4-4cd8-a66f-4e786aae30ff"],
Cell[CellGroupData[{
Cell[940851, 16130, 1293, 30, 168, "Input", "ExpressionUUID" -> \
"46be293e-f274-4ffb-9fd4-2d44eba484a9",
 CellTags->{
  "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
   "QuantilePlot", "PlotLabel"}],
Cell[942147, 16162, 38575, 847, 223, "Output", "ExpressionUUID" -> \
"6876c400-2067-45fc-a739-e16d39527bfb",
 CellTags->{
  "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
   "QuantilePlot", "PlotLabel"}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[980771, 17015, 197, 3, 59, "Subsection", "ExpressionUUID" -> \
"6575cd52-546a-4f41-b6cc-ca7d80a2458b"],
Cell[980971, 17020, 446, 11, 81, "Text", "ExpressionUUID" -> \
"f4919ee7-bbe1-46bd-bbc6-6e723f37017d"],
Cell[CellGroupData[{
Cell[981442, 17035, 399, 11, 47, "Input", "ExpressionUUID" -> \
"fc0b28c2-9cc1-4414-a1c8-be82a0db9e2d",
 CellTags->{"DistributionFitTest", "UniformDistribution"}],
Cell[981844, 17048, 12235, 278, 91, "Output", "ExpressionUUID" -> \
"f495da2f-701e-4e75-b4ec-b6d9daf880cb",
 CellTags->{"DistributionFitTest", "UniformDistribution"}]
}, Open  ]],
Cell[994094, 17329, 168, 3, 50, "Text", "ExpressionUUID" -> \
"aa3ecdfe-60f3-4d2e-93e6-9a905128f41e"],
Cell[CellGroupData[{
Cell[994287, 17336, 130, 1, 47, "Input", "ExpressionUUID" -> \
"b1d4adbb-13fe-4c6e-946e-bef1f752ebad"],
Cell[994420, 17339, 1144, 20, 198, "Output", "ExpressionUUID" -> \
"9411ab7f-1bb7-407a-a487-6b197cb7f8ef"]
}, Open  ]],
Cell[995579, 17362, 222, 3, 50, "Text", "ExpressionUUID" -> \
"1d0a1bdb-21f7-4d10-a62f-d94319d47630"],
Cell[CellGroupData[{
Cell[995826, 17369, 231, 5, 47, "Input", "ExpressionUUID" -> \
"3016993c-2456-4636-a8b0-bfb3727fbe20"],
Cell[996060, 17376, 1083, 24, 127, "Output", "ExpressionUUID" -> \
"6894c0de-feba-44b3-95c4-80ecd0b1c5dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[997180, 17405, 554, 16, 78, "Input", "ExpressionUUID" -> \
"e701f0a8-0a9a-42dd-adda-a82f1a2f6bbc",
 CellTags->{"Column", "Style", "Frame"}],
Cell[997737, 17423, 1114, 29, 119, "Output", "ExpressionUUID" -> \
"86a51d96-8953-4a5a-a38b-4ad450c4dca8",
 CellTags->{"Column", "Style", "Frame"}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[998924, 17460, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"3122510a-95ed-4290-8b10-c156d4feb9bd",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[999071, 17466, 355, 5, 137, "Section", "ExpressionUUID" -> \
"83946ca4-bee7-4547-b20b-9c96c060dbd9"],
Cell[999429, 17473, 777, 14, 81, "Text", "ExpressionUUID" -> \
"c8181add-1a61-4eac-922e-ccb6078f4cd1"],
Cell[1000209, 17489, 766, 19, 66, "Input", "ExpressionUUID" -> \
"c38b315d-6946-4209-a103-99c9e39c25db"],
Cell[1000978, 17510, 398, 8, 81, "Text", "ExpressionUUID" -> \
"5a3fc795-4b85-4a01-ae61-02fbf2391066"],
Cell[CellGroupData[{
Cell[1001401, 17522, 184, 3, 70, "Subsection", "ExpressionUUID" -> \
"4944f52c-8eaa-4180-a2f8-5fef7519212c"],
Cell[1001588, 17527, 639, 15, 62, "Text", "ExpressionUUID" -> \
"eba5df7d-dfa3-4cfc-92c0-a60739cd1faf"],
Cell[1002230, 17544, 802, 20, 58, "Input", "ExpressionUUID" -> \
"4bbffebe-26db-43e4-b8c5-8d3be287a281",
 CellTags->{"TimeSeries", "WeatherData", "Date"}],
Cell[1003035, 17566, 213, 5, 62, "Text", "ExpressionUUID" -> \
"d6817264-2c6d-4db0-9b95-5b1f90d5eb4d"],
Cell[1003251, 17573, 936, 24, 97, "Input", "ExpressionUUID" -> \
"bd02f494-2991-482e-8692-8b74cc7f37d2",
 CellTags->{"GraphicsRow", "QuantityMagnitude", "ImageSize", "Large"}]
}, Closed]],
Cell[CellGroupData[{
Cell[1004224, 17602, 240, 4, 59, "Subsection", "ExpressionUUID" -> \
"71726a5c-3264-42ad-8957-14ef08306257"],
Cell[1004467, 17608, 548, 12, 101, "Text", "ExpressionUUID" -> \
"def20e05-93de-4f7d-bff8-47255a5ae6b9"],
Cell[1005018, 17622, 582, 15, 58, "Input", "ExpressionUUID" -> \
"2f9f9c99-f0bd-4c4d-b949-8487f25d1dbc",
 CellTags->{"SmoothKernelDistribution", "Cases", "Normal", "NumericQ"}],
Cell[1005603, 17639, 286, 7, 62, "Text", "ExpressionUUID" -> \
"2bfb6cff-720e-45cc-9d7a-d340b7ce76ab"],
Cell[1005892, 17648, 1534, 38, 285, "Input", "ExpressionUUID" -> \
"b32364df-e26c-4b3b-b67e-243c37b0254d"],
Cell[1007429, 17688, 728, 19, 97, "Input", "ExpressionUUID" -> \
"f5e5db8c-0993-41fa-868d-728d8c65e0e3"]
}, Closed]],
Cell[CellGroupData[{
Cell[1008194, 17712, 238, 4, 59, "Subsection", "ExpressionUUID" -> \
"ca2a8df5-f63b-4228-a443-436714aca099"],
Cell[1008435, 17718, 452, 13, 62, "Text", "ExpressionUUID" -> \
"14b91954-87cd-4abd-8db2-018746f74ec3"],
Cell[1008890, 17733, 685, 16, 65, "Input", "ExpressionUUID" -> \
"49f6bc1b-0894-4197-bea4-0eb8f54cc8f1",
 CellTags->"FindDistribution"],
Cell[1009578, 17751, 750, 19, 103, "Input", "ExpressionUUID" -> \
"a991fb35-cd1a-4fd2-b534-1b532d108331"],
Cell[1010331, 17772, 177, 3, 62, "Text", "ExpressionUUID" -> \
"7ddfd2b3-951f-465b-99b8-fb240db8ec3e"],
Cell[1010511, 17777, 1532, 38, 317, "Input", "ExpressionUUID" -> \
"3f48d237-cde1-4366-bad4-fe88eb79c43d"],
Cell[1012046, 17817, 334, 7, 62, "Text", "ExpressionUUID" -> \
"a0fd9327-9048-4789-966d-697ee6432b9e"],
Cell[1012383, 17826, 248, 6, 65, "Input", "ExpressionUUID" -> \
"c01b9a4a-fd9b-4142-b3c6-dd7da090a47f"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1012692, 17839, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"00a429ee-9d6b-44fe-b72f-8b797a4fa16e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1012839, 17845, 263, 4, 137, "Section", "ExpressionUUID" -> \
"2a2cecd0-0da5-4c4e-885b-3a4c8bb5957d"],
Cell[1013105, 17851, 1187, 35, 85, "Text", "ExpressionUUID" -> \
"a45bc7d5-9959-4e51-8ccb-f7d5c4772545"],
Cell[1014295, 17888, 459, 9, 81, "Text", "ExpressionUUID" -> \
"901ae659-ed63-4223-a42a-5ff2a0d4fba3"],
Cell[CellGroupData[{
Cell[1014779, 17901, 268, 4, 70, "Subsection", "ExpressionUUID" -> \
"1c4303d4-dec8-45bf-b28c-c2b15406b37a"],
Cell[1015050, 17907, 410, 8, 62, "Text", "ExpressionUUID" -> \
"a577a4b8-905d-4873-8c9b-0cd002370759"],
Cell[1015463, 17917, 1067, 26, 172, "Input", "ExpressionUUID" -> \
"47fb1c49-b14f-43d9-812f-0edc7c624989"],
Cell[1016533, 17945, 846, 22, 101, "Text", "ExpressionUUID" -> \
"e6c9ce74-9de5-4551-9632-1ce67cfeac70"],
Cell[1017382, 17969, 679, 17, 58, "Input", "ExpressionUUID" -> \
"929655d3-eae6-41ab-a6a1-047db4f861f5",
 CellTags->"Length"],
Cell[1018064, 17988, 280, 6, 62, "Text", "ExpressionUUID" -> \
"f41e7a78-405e-46bd-a49c-0d629dabcea3"],
Cell[1018347, 17996, 357, 8, 58, "Input", "ExpressionUUID" -> \
"31b2b37f-0384-40d5-b69c-eaf5c88518b9",
 CellTags->{"ListPlot", "NumericQ"}]
}, Closed]],
Cell[CellGroupData[{
Cell[1018741, 18009, 251, 4, 59, "Subsection", "ExpressionUUID" -> \
"f0196a9c-721e-46c4-a869-680661a2ca56"],
Cell[1018995, 18015, 321, 7, 62, "Text", "ExpressionUUID" -> \
"47cfea07-5c51-487e-a40f-220f20f7263d"],
Cell[1019319, 18024, 341, 7, 58, "Input", "ExpressionUUID" -> \
"154b6dee-7213-477a-9a14-c29acd9f32a0",
 CellTags->"LinearModelFit"],
Cell[1019663, 18033, 584, 16, 58, "Input", "ExpressionUUID" -> \
"ee2c32ff-85d1-42c1-b82e-a8054415cb84"],
Cell[1020250, 18051, 472, 9, 62, "Text", "ExpressionUUID" -> \
"6e01e5fa-035c-4e96-966b-ebd6b93adac9"],
Cell[1020725, 18062, 572, 14, 58, "Input", "ExpressionUUID" -> \
"6fc74155-8238-4d03-ab77-1123d3a11f7a",
 CellTags->{"Framed", "FrameMargins", "RoundingRadius"}],
Cell[1021300, 18078, 359, 7, 58, "Input", "ExpressionUUID" -> \
"72d1f9f3-2ea7-4d8d-8483-8ff909255d46"]
}, Closed]],
Cell[CellGroupData[{
Cell[1021696, 18090, 175, 3, 59, "Subsection", "ExpressionUUID" -> \
"641b1668-8434-454a-8cf8-b70cd05fd1ba"],
Cell[1021874, 18095, 356, 7, 62, "Text", "ExpressionUUID" -> \
"5290ff33-26de-42b5-84e3-d5fe2b69ed39"],
Cell[1022233, 18104, 1037, 29, 68, "Input", "ExpressionUUID" -> \
"c4f1bbb5-20d1-4e70-bda7-48e4c560ca2d"],
Cell[1023273, 18135, 382, 8, 62, "Text", "ExpressionUUID" -> \
"12a92061-3a46-4e6f-9f56-9eb3321a44cf"],
Cell[1023658, 18145, 207, 4, 58, "Input", "ExpressionUUID" -> \
"c7ec3570-121f-4b5c-986c-6b497b342980",
 CellTags->"AdjustedRSquared"],
Cell[1023868, 18151, 178, 3, 58, "Input", "ExpressionUUID" -> \
"76d82340-4cd3-42c0-ad31-4c5c4b19fb91",
 CellTags->"AIC"]
}, Closed]],
Cell[CellGroupData[{
Cell[1024083, 18159, 217, 4, 59, "Subsection", "ExpressionUUID" -> \
"815e079a-66a8-4a7f-9c2b-e20150b2840e"],
Cell[1024303, 18165, 329, 7, 62, "Text", "ExpressionUUID" -> \
"143727c0-b8e1-4501-a434-37177ebf4afd"],
Cell[1024635, 18174, 2303, 55, 322, "Input", "ExpressionUUID" -> \
"9ab88302-2e5f-4278-bdde-01d73de3cfe2"],
Cell[1026941, 18231, 781, 21, 58, "Input", "ExpressionUUID" -> \
"497f99bc-b294-4af1-84b9-42a8fe383763",
 CellTags->"Length"],
Cell[1027725, 18254, 393, 9, 68, "Input", "ExpressionUUID" -> \
"a1cbfeee-1cb4-49c3-8bb9-8dc2e49ae549"],
Cell[1028121, 18265, 201, 3, 62, "Text", "ExpressionUUID" -> \
"23ebd654-0740-4a6b-a9e0-8d22d4cec718"],
Cell[1028325, 18270, 730, 16, 58, "Input", "ExpressionUUID" -> \
"819cedf5-4850-470b-86d6-555f5ba29039"],
Cell[1029058, 18288, 339, 6, 62, "Text", "ExpressionUUID" -> \
"309ccbaa-da24-4274-9944-50e423242184"],
Cell[1029400, 18296, 1279, 28, 135, "Input", "ExpressionUUID" -> \
"2b93b195-d959-4def-b423-0d77e1564810",
 CellTags->{"Residuals", "Cook's Distances"}]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1030740, 18331, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"43459988-ab8d-47bc-9127-7c3aa1659152",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1030887, 18337, 166, 3, 137, "Section", "ExpressionUUID" -> \
"cf8f0ae4-5f04-45ae-b699-5a0685192a45"],
Cell[1031056, 18342, 505, 9, 111, "Text", "ExpressionUUID" -> \
"8d12d5be-f194-40a2-8e96-ec8ffb408264"],
Cell[1031564, 18353, 766, 13, 141, "Text", "ExpressionUUID" -> \
"096837a7-f6cf-40e5-86ba-2120b18ac7d1"],
Cell[CellGroupData[{
Cell[1032355, 18370, 306, 5, 70, "Subsection", "ExpressionUUID" -> \
"0f0bf8c7-a1fa-488e-af61-7bd325e23fbe"],
Cell[1032664, 18377, 211, 3, 62, "Text", "ExpressionUUID" -> \
"aa6f2b5b-374d-415f-8b9b-17aac9bd682c"],
Cell[1032878, 18382, 256, 6, 58, "Input", "ExpressionUUID" -> \
"c765c27a-c341-4a8b-862a-635a00a8951e"],
Cell[1033137, 18390, 732, 21, 107, "Input", "ExpressionUUID" -> \
"f1d7a573-827c-4f83-94f1-ec12b178794e",
 CellTags->"NonlinearModelFit"],
Cell[1033872, 18413, 149, 2, 58, "Input", "ExpressionUUID" -> \
"90b18361-f2ea-4087-9aaa-97e2ccc426b4",
 CellTags->"BestFit"],
Cell[1034024, 18417, 177, 3, 62, "Text", "ExpressionUUID" -> \
"990061cb-cfec-4483-8722-9dfa904b049e"],
Cell[1034204, 18422, 984, 23, 172, "Input", "ExpressionUUID" -> \
"51a7e33b-7669-416d-807e-9e366de41d9d",
 CellTags->{"ListLinePlot", "PlotMarkers"}],
Cell[1035191, 18447, 579, 14, 62, "Text", "ExpressionUUID" -> \
"b276549d-4be3-446a-afb1-f8b967e3f720"],
Cell[1035773, 18463, 414, 10, 58, "Input", "ExpressionUUID" -> \
"a25a6d00-5668-45d3-b981-72c1b6721c1f"],
Cell[1036190, 18475, 557, 11, 58, "Input", "ExpressionUUID" -> \
"5b21b25c-e021-44e2-97df-f67950dbb91d",
 CellTags->{"ANOVATable", "FitCurvatureTable", "ParameterBias", "AICc"}]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1036808, 18493, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"7c81f184-928a-4b31-8b23-7e9ae53f19e0",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1036955, 18499, 174, 3, 137, "Section", "ExpressionUUID" -> \
"e5bc71a7-117d-4891-9e79-95d8ebc80eba"],
Cell[1037132, 18504, 4657, 121, 671, "Text", "ExpressionUUID" -> \
"1ea7de91-842c-4cb5-8ea7-b0b1b2b240fd"],
Cell[1041792, 18627, 321, 6, 52, "Text", "ExpressionUUID" -> \
"511a9988-acf1-439a-ba7d-67dcf23a4e5f"],
Cell[CellGroupData[{
Cell[1042138, 18637, 170, 3, 70, "Subsection", "ExpressionUUID" -> \
"0db756f3-3f84-4f46-bd00-93c7456fba5a"],
Cell[1042311, 18642, 508, 10, 62, "Text", "ExpressionUUID" -> \
"6fbf5dd8-9b46-41bf-ba71-b40e8627137e"],
Cell[1042822, 18654, 464, 11, 58, "Input", "ExpressionUUID" -> \
"a0448766-bc71-498d-bd3f-8d8d16dd76ad"],
Cell[1043289, 18667, 996, 20, 101, "Text", "ExpressionUUID" -> \
"b5b2e17b-945b-4f5f-8138-0564c49c937f"],
Cell[1044288, 18689, 545, 13, 58, "Input", "ExpressionUUID" -> \
"8611a442-bb73-48b5-8e46-58f849585e39",
 CellTags->{"GeneralizedLinearModelFit", "ExponentialFamily", "Poisson"}],
Cell[1044836, 18704, 623, 14, 58, "Input", "ExpressionUUID" -> \
"79a8b13d-d05b-4a1c-aa30-72046ceeb327"],
Cell[1045462, 18720, 379, 8, 62, "Text", "ExpressionUUID" -> \
"3a36ca70-935a-44bf-b2fe-1c3432f18ccb"],
Cell[1045844, 18730, 367, 10, 58, "Input", "ExpressionUUID" -> \
"77fa9420-4772-460e-92b9-9c3970736e91"],
Cell[1046214, 18742, 681, 12, 138, "Text", "ExpressionUUID" -> \
"02a26607-a719-4f0b-86e9-983ff5d64ecc"],
Cell[1046898, 18756, 455, 11, 58, "Input", "ExpressionUUID" -> \
"2c5bc403-e04f-4581-a56e-e902fdf2144c"],
Cell[1047356, 18769, 1308, 35, 135, "Input", "ExpressionUUID" -> \
"d5179941-f9ab-4b7b-8332-a327abfe62c5"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1048725, 18811, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"91ca2122-493c-418c-8dfa-e7d608466d74",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1048872, 18817, 244, 4, 137, "Section", "ExpressionUUID" -> \
"e8c8096c-558e-48ae-b396-d88be5b5b1ac"],
Cell[1049119, 18823, 740, 12, 141, "Text", "ExpressionUUID" -> \
"1bdbc1b9-495e-4081-8202-813d692fc53a"],
Cell[CellGroupData[{
Cell[1049884, 18839, 229, 4, 70, "Subsection", "ExpressionUUID" -> \
"d7af9807-bfc1-411c-a9a8-565728359d55"],
Cell[1050116, 18845, 452, 12, 58, "Input", "ExpressionUUID" -> \
"f6f89a67-2a69-46ec-9ebb-33ab91040ee7"],
Cell[1050571, 18859, 359, 7, 62, "Text", "ExpressionUUID" -> \
"69dd64c2-95dc-43c2-a3b9-6ae8ad3c30b6"],
Cell[1050933, 18868, 270, 8, 58, "Input", "ExpressionUUID" -> \
"18dc82dd-6d40-4976-a20f-4f600714c225"]
}, Closed]],
Cell[CellGroupData[{
Cell[1051240, 18881, 355, 5, 59, "Subsection", "ExpressionUUID" -> \
"7083cfee-85d4-4300-a890-3ece5ba0ebfb"],
Cell[1051598, 18888, 940, 18, 58, "Input", "ExpressionUUID" -> \
"e1c7d007-ac7e-423e-bd1e-be8689816120",
 CellTags->"Binomial"],
Cell[1052541, 18908, 387, 7, 62, "Text", "ExpressionUUID" -> \
"a608e5f7-c60d-4449-97df-3a2e2df303e1"],
Cell[1052931, 18917, 532, 14, 58, "Input", "ExpressionUUID" -> \
"0eb2344b-1be9-4a90-acb3-24c10d37cc8a",
 CellTags->"LogitModelFit"],
Cell[1053466, 18933, 224, 3, 62, "Text", "ExpressionUUID" -> \
"40fa79e2-c1c9-444f-b892-ca76831e0bd2"],
Cell[1053693, 18938, 1078, 23, 97, "Input", "ExpressionUUID" -> \
"2f45001c-ad78-4400-8a61-010b15d1e2e4",
 CellTags->{"ParameterTable", "FitResiduals"}],
Cell[1054774, 18963, 516, 10, 47, "Text", "ExpressionUUID" -> \
"5ccf1b0c-cadf-46e4-a53d-7fe7967eacde"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1055351, 18980, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"d046c1e5-4fb9-4612-9ea1-bbe1a96ebdb5",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1055498, 18986, 337, 5, 137, "Section", "ExpressionUUID" -> \
"83b7f2f2-2d17-4a5b-a020-2e6b81566e60"],
Cell[1055838, 18993, 7890, 198, 777, "Text", "ExpressionUUID" -> \
"8877ec59-3c6c-4b93-b378-e87574d31fe6"],
Cell[1063731, 19193, 340, 7, 52, "Text", "ExpressionUUID" -> \
"a61d6c64-fe45-4a43-92b8-49f41a84a7a1"],
Cell[CellGroupData[{
Cell[1064096, 19204, 217, 4, 70, "Subsection", "ExpressionUUID" -> \
"9d19bfec-96f1-4c91-bfc2-e53c10cd7f0d"],
Cell[1064316, 19210, 783, 13, 138, "Text", "ExpressionUUID" -> \
"0c1d4dda-5fcc-4df6-b149-0c3f33eac17c"],
Cell[1065102, 19225, 452, 12, 58, "Input", "ExpressionUUID" -> \
"c4c6a205-e194-4959-bb5c-f54c098c81df"],
Cell[1065557, 19239, 279, 4, 62, "Text", "ExpressionUUID" -> \
"16b579f8-87b4-4f05-bc04-dfeebe37ce32"],
Cell[1065839, 19245, 217, 6, 58, "Input", "ExpressionUUID" -> \
"365681fd-ee9e-4907-8ee7-33c42ef3825e"]
}, Closed]],
Cell[CellGroupData[{
Cell[1066093, 19256, 272, 6, 59, "Subsection", "ExpressionUUID" -> \
"b91702b2-3a9e-497a-ad6c-01ba64bcc8c2"],
Cell[1066368, 19264, 470, 9, 101, "Text", "ExpressionUUID" -> \
"64fbee3c-ef72-4fc2-8c70-d8157f731dba"],
Cell[1066841, 19275, 858, 22, 135, "Input", "ExpressionUUID" -> \
"70d5ee34-3058-41de-a7a7-97419954afc7"],
Cell[1067702, 19299, 1248, 27, 135, "Input", "ExpressionUUID" -> \
"418b44d6-d29e-402c-8afe-c2a3768f1101",
 CellTags->{"LinkFunction", "NegativeBinomialLink"}],
Cell[1068953, 19328, 827, 19, 97, "Input", "ExpressionUUID" -> \
"e423c71f-5ada-4538-a69b-6e120b12554e"]
}, Closed]],
Cell[CellGroupData[{
Cell[1069817, 19352, 231, 4, 59, "Subsection", "ExpressionUUID" -> \
"769b1571-95e8-4197-a602-35c53e97527b"],
Cell[1070051, 19358, 377, 8, 62, "Text", "ExpressionUUID" -> \
"30cf6791-60a9-43ee-9b28-cc4e9abba6e4"],
Cell[1070431, 19368, 906, 22, 135, "Input", "ExpressionUUID" -> \
"2486ac45-8d32-4c03-88d3-9aac92d3d882"],
Cell[1071340, 19392, 225, 3, 62, "Text", "ExpressionUUID" -> \
"8e5a7112-2c5a-484d-8180-8e233b1ecc43"],
Cell[1071568, 19397, 1253, 26, 135, "Input", "ExpressionUUID" -> \
"f5790836-2dfd-466a-9cc3-be44b549eccc"],
Cell[1072824, 19425, 927, 21, 97, "Input", "ExpressionUUID" -> \
"922a567d-df6a-459c-818c-f128060257fd"],
Cell[1073754, 19448, 562, 10, 98, "Text", "ExpressionUUID" -> \
"2b0c1fd8-8753-467a-b737-b27280249845"],
Cell[1074319, 19460, 1544, 37, 247, "Input", "ExpressionUUID" -> \
"c2fbcee1-ceab-4725-8b53-75474bacc199",
 CellTags->{
  "BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", "Gaussian"}],
Cell[1075866, 19499, 349, 7, 62, "Text", "ExpressionUUID" -> \
"22f98df9-c782-4682-9733-7071aee718e8"],
Cell[1076218, 19508, 1084, 27, 97, "Input", "ExpressionUUID" -> \
"c124816b-35d7-488d-bf59-760b5caf68ed",
 CellTags->{"Grid", "Join", "Take", "SortBy"}],
Cell[1077305, 19537, 431, 9, 52, "Text", "ExpressionUUID" -> \
"562a9e50-734d-4bbd-b021-0ed9ec117f8c"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1077797, 19553, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"4b531018-72db-4618-be26-96ee684dc958",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1077944, 19559, 240, 4, 137, "Section", "ExpressionUUID" -> \
"b03469b5-e00d-48ba-b188-b9b7102f134b"],
Cell[1078187, 19565, 731, 12, 171, "Text", "ExpressionUUID" -> \
"2cf35c0f-4130-4d2f-a9bd-10d949204400"],
Cell[1078921, 19579, 253, 4, 50, "Text", "ExpressionUUID" -> \
"9b942fb5-f01c-4845-a8bb-2819b10db3a5"],
Cell[1079177, 19585, 1264, 29, 408, "Output", "ExpressionUUID" -> \
"291ebfdb-0d28-48ee-9cc1-cd1dc3efcb24"],
Cell[1080444, 19616, 580, 10, 111, "Text", "ExpressionUUID" -> \
"b0dd330f-01f7-4fa5-a901-b071b88cd4e0"],
Cell[1081027, 19628, 13678, 310, 91, "Input", "ExpressionUUID" -> \
"4422e681-fb2a-426f-b5d9-99f5752b10d8",
 CellID->26079817],
Cell[1094708, 19940, 177, 3, 50, "Text", "ExpressionUUID" -> \
"57754c61-c411-4657-93d9-631aec374798"],
Cell[1094888, 19945, 582, 16, 78, "Input", "ExpressionUUID" -> \
"f3867716-5e08-44ea-a084-86ba31d48147",
 CellTags->"TimeSeriesWindow",
 CellID->35234274],
Cell[1095473, 19963, 507, 12, 78, "Input", "ExpressionUUID" -> \
"ce3b2b54-a042-49d4-a3db-057e10178689",
 CellID->76320772],
Cell[1095983, 19977, 236, 4, 50, "Text", "ExpressionUUID" -> \
"bbd6a60d-4a28-4f8f-bdaf-15e7a349b1e5"],
Cell[1096222, 19983, 196, 4, 47, "Input", "ExpressionUUID" -> \
"7998d32b-0027-46ce-966b-893a2f1f6cf0",
 CellTags->"TimeSeriesModelFit"],
Cell[1096421, 19989, 210, 3, 50, "Text", "ExpressionUUID" -> \
"93b5a1a0-0fe6-4a0b-b06c-d3e235e36160"],
Cell[1096634, 19994, 846, 23, 138, "Input", "ExpressionUUID" -> \
"932122fe-f883-41e6-9f51-f518cc1a5c59",
 CellTags->"DateRange",
 CellID->643306091]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1097529, 20023, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"32502cc2-10f2-44aa-8bed-f675003f1fd7",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1097676, 20029, 379, 5, 219, "Section", "ExpressionUUID" -> \
"32a75ae1-4c9d-4966-81f1-11cdef347ba3"],
Cell[1098058, 20036, 277, 6, 50, "Text", "ExpressionUUID" -> \
"8a2836a1-f7cc-429b-abdc-ed4bd16dda81"],
Cell[1098338, 20044, 1543, 42, 198, "Input", "ExpressionUUID" -> \
"bb04d436-3af9-4ddf-ae22-dd0ec1769b55",
 CellTags->"FindGeoLocation",
 CellID->831135752],
Cell[1099884, 20088, 256, 6, 47, "Input", "ExpressionUUID" -> \
"b849a6cb-149d-4196-b568-b03392d53149"],
Cell[1100143, 20096, 201, 3, 50, "Text", "ExpressionUUID" -> \
"d4407a38-a9f6-44d9-80d2-c8eca935ee69"],
Cell[1100347, 20101, 400, 8, 47, "Input", "ExpressionUUID" -> \
"aa424378-7a01-40ef-8a03-96db1254f0c1",
 CellID->373022908],
Cell[1100750, 20111, 251, 4, 50, "Text", "ExpressionUUID" -> \
"da8a9994-87e8-4d4e-8040-57188d069277"],
Cell[1101004, 20117, 174, 3, 47, "Input", "ExpressionUUID" -> \
"09b6cb3f-aca0-4dad-997c-fd2303f79c15",
 CellID->193739114],
Cell[1101181, 20122, 365, 8, 81, "Text", "ExpressionUUID" -> \
"b3a6fed6-ce58-4768-b1fd-3c2fdf440b73"],
Cell[1101549, 20132, 400, 11, 47, "Input", "ExpressionUUID" -> \
"0661170d-a077-41f5-b7c5-115fe357977c",
 CellTags->"DateRange",
 CellID->1486872],
Cell[1101952, 20145, 430, 12, 78, "Input", "ExpressionUUID" -> \
"1f24a4c6-b056-4bce-b5bd-b68f90faf483",
 CellTags->"PredictionLimits",
 CellID->642359114],
Cell[1102385, 20159, 1067, 25, 78, "Input", "ExpressionUUID" -> \
"65bacd4e-a685-45a7-abd2-361ba0a688a0",
 CellID->75358596]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1103501, 20190, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"b84bd5d2-b791-4bd5-a48f-ea1989a3a1a2",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1103648, 20196, 153, 3, 137, "Section", "ExpressionUUID" -> \
"fab2e504-14a0-4424-b93b-5470d98434c4"],
Cell[1103804, 20201, 24867, 766, 625, "Output", "ExpressionUUID" -> \
"48b2b06e-698b-40de-b631-08031b55fb25"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1128720, 20973, 122, 2, 1, "SlideShowNavigationBar", "ExpressionUUID" -> \
"fe77db7f-9273-447c-9cd6-ae670eae35df",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1128867, 20979, 165, 3, 137, "Section", "ExpressionUUID" -> \
"3926c5da-6f0b-4361-a7e0-bf5c7b571e88"],
Cell[CellGroupData[{
Cell[1129057, 20986, 167, 3, 70, "Subsection", "ExpressionUUID" -> \
"c5b66729-3bc4-44d0-ac4f-95219bc2b266"],
Cell[1129227, 20991, 4357, 117, 548, "Input", "ExpressionUUID" -> \
"99fbddae-6f57-48d6-8cbb-972cb86c23d3",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1133621, 21113, 154, 3, 59, "Subsection", "ExpressionUUID" -> \
"d03e69ea-728e-4cc6-a076-05ff7ad91f52"],
Cell[1133778, 21118, 8121, 232, 878, "Input", "ExpressionUUID" -> \
"2c02205e-1dcb-449d-a7a5-6adaa56d3818",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1141936, 21355, 171, 3, 59, "Subsection", "ExpressionUUID" -> \
"4ed51ec6-9aa0-4b18-9ce9-b5969cab5a71"],
Cell[1142110, 21360, 830, 13, 141, "Text", "ExpressionUUID" -> \
"af951f61-6eb0-48e4-ae76-85fd1756620f"],
Cell[1142943, 21375, 2121, 64, 222, "Input", "ExpressionUUID" -> \
"359ceb4a-5769-4658-bd82-5d3977de27f0",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1145101, 21444, 221, 4, 59, "Subsection", "ExpressionUUID" -> \
"c16b6f52-7791-47ee-b4ac-7b590b33b83e"],
Cell[1145325, 21450, 61152, 1476, 2826, "Input", "ExpressionUUID" -> \
"3cec2939-a17a-4ec7-b7b3-da9ce5c991ca",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1206514, 22931, 162, 3, 59, "Subsection", "ExpressionUUID" -> \
"fefd771a-670f-4480-af0b-0fa34dc03c5c"],
Cell[1206679, 22936, 59962, 1468, 2886, "Input", "ExpressionUUID" -> \
"dc7e9e7e-3932-4d1f-a1e8-123e4bd1097d",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1266678, 24409, 162, 3, 59, "Subsection", "ExpressionUUID" -> \
"65101648-3e1b-4174-baad-49fb1a7a4951"],
Cell[1266843, 24414, 626, 18, 98, "Input", "ExpressionUUID" -> \
"e76bdc5c-28b1-4f62-bcee-fa4069b2a96a",
 InitializationCell->True],
Cell[1267472, 24434, 372358, 7047, 176, "Input", "ExpressionUUID" -> \
"24553297-6fe5-47cd-bbb6-1d21d38a38ee",
 InitializationCell->True],
Cell[1639833, 31483, 55852, 1241, 670, "Input", "ExpressionUUID" -> \
"99bb3c26-716d-41f8-b66c-ef818dbd9ae5",
 InitializationCell->True,
 CellTags->{"DatePlus", "DateValue", "Today"}]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

