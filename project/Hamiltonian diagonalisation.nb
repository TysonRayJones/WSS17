(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1266230,      26343]
NotebookOptionsPosition[   1257234,      26128]
NotebookOutlinePosition[   1257606,      26144]
CellTagsIndexPosition[   1257563,      26141]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Numerical Diagonalisation of an arbitrary* Hamiltonian", "Title",
 CellChangeTimes->{{3.7074311443022237`*^9, 3.707431150958149*^9}, {
  3.7075759231896653`*^9, 
  3.7075759326341047`*^9}},ExpressionUUID->"82d16c13-a4eb-4dff-88b1-\
256f342d7961"],

Cell[CellGroupData[{

Cell["TODO", "Section",
 CellChangeTimes->{{3.707582005568508*^9, 
  3.707582005876551*^9}},ExpressionUUID->"77808365-ac56-4e41-b3a4-\
9d2faff72675"],

Cell["\<\
\[Bullet] evolve in time (to prove eigenstate)
\[Bullet] compare diag speed to wick rotation\
\>", "Text",
 CellChangeTimes->{{3.707582015645981*^9, 
  3.7075820416922083`*^9}},ExpressionUUID->"7fd90cdf-b232-46cf-96ee-\
4b07d16bfe7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialisation", "Section",
 CellChangeTimes->{{3.7074728833753977`*^9, 
  3.7074728851626635`*^9}},ExpressionUUID->"84fa818c-6a8a-4d1c-be9c-\
f9313f98a286"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Code",
 CellChangeTimes->{
  3.707401573738562*^9},ExpressionUUID->"7d33919b-3482-4426-ba8e-\
615f4ccc7d13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], " ", ":=", " ", "\n", "  ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$FrontEnd", " ", "=!=", " ", "$Failed"}], ",", " ", "\n", "   ", 
    RowBox[{
     RowBox[{"SelectionMove", "[", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "All", ",", " ", 
       "GeneratedCell"}], "]"}], ";", "\n", "   ", 
     RowBox[{
     "FrontEndTokenExecute", "[", "\"\<SelectionCloseUnselectedCells\>\"", 
      "]"}]}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.7072503647797594`*^9, 3.707250380426972*^9}, {
  3.7072504113361893`*^9, 3.7072504116593933`*^9}, {3.7077455381282835`*^9, 
  3.7077455384164276`*^9}},ExpressionUUID->"3b9864b8-9385-42c2-a2a9-\
10c61c6f1a20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"colorBarNorm", "[", "title_", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"BarLegend", "[", "\n", "\t\t", 
    RowBox[{"\"\<Rainbow\>\"", ",", " ", "\n", "\t\t", 
     RowBox[{"LegendLabel", " ", "\[Rule]", " ", "title"}]}], "\n", "\t", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"plotContinuous\[Psi]DEP", "[", 
   RowBox[{"psi_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"r_", ",", " ", "range__"}], "}"}], ",", " ", 
    RowBox[{"showbar_:", "True"}], ",", " ", 
    RowBox[{"title_:", 
     SuperscriptBox[
      RowBox[{"Abs", "[", "\[Psi]", "]"}], "2"]}], ",", " ", 
    RowBox[{"legendpsi_:", "\[Psi]"}], ",", " ", 
    RowBox[{"plotrange_:", "All"}]}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"ReplaceAll", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"Plot", "[", "\n", "\t\t\t", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", "psi", "]"}], "2"], ",", " ", 
      RowBox[{"{", 
       RowBox[{"r", ",", " ", "range"}], "}"}], ",", " ", "\n", "\t\t\t", 
      RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"r", ",", " ", "title"}], "}"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"PlotRange", " ", "\[Rule]", " ", "plotrange"}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"ColorFunction", " ", "\[Rule]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
          RowBox[{"Rescale", "[", 
           RowBox[{
            RowBox[{"Arg", "[", 
             RowBox[{"psi", " ", "/.", " ", 
              RowBox[{"r", " ", "\[Rule]", " ", "#"}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "]"}], 
          "]"}], " ", "&"}], ")"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"ColorFunctionScaling", " ", "\[Rule]", " ", "False"}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}], ",", "\n", "\t\t\t", 
      RowBox[{"PlotLegends", " ", "\[Rule]", " ", 
       RowBox[{"If", "[", 
        RowBox[{"showbar", ",", " ", 
         RowBox[{"colorBarNorm", "[", 
          RowBox[{"\"\<arg[\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "legendpsi", "]"}], " ", "<>", " ", 
           "\"\<] / 2\[Pi]\>\""}], "]"}], ",", " ", "None"}], "]"}]}]}], "\n",
      "\t\t", "]"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"pts_", ",", " ", "_"}], "]"}], " ", "\[RuleDelayed]", " ", 
     RowBox[{"{", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"Line", "[", "pts", "]"}]}], "}"}]}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.707748869513037*^9, 3.7077488799070845`*^9}, {
  3.707748921098575*^9, 3.7077489560165963`*^9}, {3.7077493536993227`*^9, 
  3.707749357177925*^9}, {3.7077739588029547`*^9, 
  3.7077739590026317`*^9}},ExpressionUUID->"5a1afa65-fae2-4695-94eb-\
d351bcd050ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotContinuous\[Psi]NEW", "[", 
   RowBox[{"psi_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"xL_", ",", " ", "xR_"}], "}"}], ",", " ", 
    RowBox[{"showbar_:", "True"}], ",", " ", 
    RowBox[{"title_:", 
     SuperscriptBox[
      RowBox[{"Abs", "[", "\[Psi]", "]"}], "2"]}], ",", " ", 
    RowBox[{"legendpsi_:", "\[Psi]"}], ",", " ", 
    RowBox[{"plotrange_:", "All"}]}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"ReplaceAll", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"Plot", "[", "\n", "\t\t\t", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"psi", "[", "x", "]"}], "]"}], "2"], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "xL", ",", " ", "xR"}], "}"}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "title"}], "}"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"PlotRange", " ", "\[Rule]", " ", "plotrange"}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"ColorFunction", " ", "\[Rule]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
          RowBox[{"Rescale", "[", 
           RowBox[{
            RowBox[{"Arg", "[", 
             RowBox[{"psi", " ", "/.", " ", 
              RowBox[{"r", " ", "\[Rule]", " ", "#"}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "]"}], 
          "]"}], " ", "&"}], ")"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"ColorFunctionScaling", " ", "\[Rule]", " ", "False"}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}], ",", "\n", "\t\t\t", 
      RowBox[{"PlotLegends", " ", "\[Rule]", " ", 
       RowBox[{"If", "[", 
        RowBox[{"showbar", ",", " ", 
         RowBox[{"colorBarNorm", "[", 
          RowBox[{"\"\<arg[\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "legendpsi", "]"}], " ", "<>", " ", 
           "\"\<] / 2\[Pi]\>\""}], "]"}], ",", " ", "None"}], "]"}]}]}], "\n",
      "\t\t", "]"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"pts_", ",", " ", "_"}], "]"}], " ", "\[RuleDelayed]", " ", 
     RowBox[{"{", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"Line", "[", "pts", "]"}]}], "}"}]}]}], "\n", "\t", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.7077739524428263`*^9, 3.7077740402747045`*^9}, {
  3.7077742306812024`*^9, 
  3.707774284592965*^9}},ExpressionUUID->"32bf0459-0d20-40ec-8787-\
9baedb45c4a6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"colorBar", "[", 
    RowBox[{"title_:", "\"\<arg[\[Psi]]\>\""}], "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"BarLegend", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Rainbow\>\"", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}], ",", 
     " ", "\n", "\t\t", 
     RowBox[{"LegendLabel", " ", "\[Rule]", " ", "title"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Ticks\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.14"}], ",", " ", 
        RowBox[{
         RowBox[{"-", "3.14"}], "/", "2"}], ",", " ", "0", ",", " ", 
        RowBox[{"3.14", "/", "2"}], ",", " ", "3.14"}], "}"}]}], ",", " ", 
     "\n", "\t\t", 
     RowBox[{"\"\<TickLabels\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<-\[Pi]\>\"", ",", " ", "\"\<-\[Pi]/2\>\"", ",", " ", "\"\<0\>\"", 
        ",", " ", "\"\<\[Pi]/2\>\"", ",", " ", "\"\<\[Pi]\>\""}], "}"}]}]}], 
    "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotDiscrete\[Psi]", "[", 
    RowBox[{"psi_", ",", " ", "grid_", ",", " ", 
     RowBox[{"range_:", "All"}]}], "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"phases", " ", "=", " ", 
       RowBox[{"<|", " ", 
        RowBox[{"MapThread", "[", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#1", " ", "\[Rule]", " ", "#2"}], " ", "&"}], ")"}], ",",
           " ", 
          RowBox[{"{", 
           RowBox[{"grid", ",", " ", 
            RowBox[{"Arg", "[", "psi", "]"}]}], "}"}]}], "]"}], " ", "|>"}]}],
       "}"}], ",", "\n", "\t\t", "\n", "\t\t", 
     RowBox[{"ReplaceAll", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", " ", "#2"}], "}"}], "&"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"grid", ",", " ", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "psi", "]"}], "2"]}], "}"}]}], "]"}], ",", 
         "\n", "\t\t\t\t", 
         RowBox[{"ColorFunctionScaling", " ", "\[Rule]", " ", "False"}], ",", 
         "\n", "\t\t\t\t", 
         RowBox[{"ColorFunction", " ", "\[Rule]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
             RowBox[{"Rescale", "[", 
              RowBox[{
               RowBox[{"phases", "[", "#1", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "]"}], 
             "]"}], "&"}], ")"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"PlotRange", " ", "\[Rule]", " ", "range"}], ",", "\n", 
         "\t\t\t\t", 
         RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}], ",", "\n", 
         "\t\t\t\t", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[Phi]", "[", "x", "]"}], "]"}], "2"]}], "}"}]}]}], 
        "\n", "\t\t\t", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"pts_", ",", " ", "_"}], "]"}], " ", "\[RuleDelayed]", " ", 
        RowBox[{"{", 
         RowBox[{"Black", ",", " ", 
          RowBox[{"Line", "[", "pts", "]"}]}], "}"}]}]}], "\n", "\t\t", 
      "]"}]}], "\n", "\t", "]"}]}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"normaliseDiscrete", "[", 
   RowBox[{"psi_", ",", " ", "grid_"}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"psi", " ", "/", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", 
       RowBox[{"grid", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}], 
     RowBox[{"Total", "[", 
      SuperscriptBox[
       RowBox[{"Abs", "[", "psi", "]"}], "2"], "]"}]}]]}]}]}], "Code",
 CellChangeTimes->{
  3.707490564170638*^9, {3.7074953623544397`*^9, 3.7074953783647165`*^9}, {
   3.7074956667253313`*^9, 3.707495702819068*^9}, {3.707495898330764*^9, 
   3.707495948888586*^9}, {3.707496390782692*^9, 3.707496391283904*^9}, {
   3.707518889650643*^9, 3.70751889080446*^9}, {3.707573641225773*^9, 
   3.707573648292172*^9}, {3.707573728943305*^9, 3.7075737431609683`*^9}, {
   3.7077488620727143`*^9, 3.7077488673924503`*^9}, {3.7077489594156513`*^9, 
   3.7077489604375954`*^9}},ExpressionUUID->"97d3a635-4009-4785-b9d2-\
854a53bb30b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotDiscreteSpectrum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eigvals_", ",", " ", "eigfuncs_"}], "}"}], ",", " ", "grid_", 
    ",", " ", 
    RowBox[{"range_:", "All"}], ",", " ", 
    RowBox[{"potential_:", 
     RowBox[{"(", 
      RowBox[{"0", " ", "&"}], ")"}]}], ",", " ", 
    RowBox[{"potentialScaling_:", "1"}]}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Legended", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"Manipulate", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Overlay", "[", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Show", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"plotDiscrete\[Psi]", "[", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"eigfuncs", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", " ", "\n", "\t\t\t\t\t\t", 
             "grid", ",", "\n", "\t\t\t\t\t\t", "range"}], "\n", "\t\t\t\t\t",
             "]"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"ListLinePlot", "[", " ", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#1", ",", " ", 
                   RowBox[{"#2", "/", "potentialScaling"}]}], "}"}], "&"}], 
                ")"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"grid", ",", " ", "potential"}], "}"}]}], "]"}], ",", 
             "\n", "\t\t\t\t\t\t", 
             RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", " ", "Red"}], "}"}]}]}], "\n", 
            "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}], ",", "\n", 
         "\t\t\t\t", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<E = \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"eigvals", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}]}], "]"}]}], "\n", "\t\t\t",
         "}"}], "]"}], ",", "\n", "\t\t\t", 
      RowBox[{"{", 
       RowBox[{"n", ",", " ", "1", ",", " ", 
        RowBox[{"Length", "[", "eigvals", "]"}], ",", " ", "1"}], "}"}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\n", "\t\t", "]"}], 
    ",", "\n", "\t\t", 
    RowBox[{"colorBar", "[", 
     RowBox[{"Arg", "[", "\[Phi]", "]"}], "]"}]}], "\n", "\t", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.707574092754528*^9, 3.707574153354516*^9}, {
  3.7075741834196763`*^9, 3.7075742228600082`*^9}, {3.707574379362855*^9, 
  3.707574409533834*^9}, {3.7075745948717065`*^9, 3.7075746415700045`*^9}, {
  3.7075756368640428`*^9, 3.707575652218113*^9}, {3.7077455009209785`*^9, 
  3.7077455024463367`*^9}, {3.707756552182372*^9, 
  3.707756554926626*^9}},ExpressionUUID->"692459af-107a-4740-9740-\
70a46aeae1cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"presentSpectrum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x_", ",", " ", "xL_", ",", " ", "xR_", ",", " ", "\[CapitalDelta]x_"}], 
     "}"}], ",", " ", "V_", ",", " ", 
    RowBox[{"range_:", "All"}], ",", " ", 
    RowBox[{"numModes_:", "10"}], ",", " ", 
    RowBox[{"vScaling_:", "1"}]}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "grid", ",", " ", "potential", ",", " ", "eigfuncs", ",", " ", 
      "eigvals"}], "}"}], ",", "\n", "\t\t\t", "\n", "\t\t", 
    RowBox[{
     RowBox[{"grid", " ", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"xL", ",", " ", "xR", ",", " ", "\[CapitalDelta]x"}], "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"potential", " ", "=", " ", 
      RowBox[{"If", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"V", " ", "===", " ", "0"}], ",", "\n", "\t\t\t", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"Length", "[", "grid", "]"}]}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"V", " ", "/.", " ", 
            RowBox[{"x", " ", "\[Rule]", " ", "#1"}]}], " ", "&"}], ")"}], 
         " ", "@", " ", "grid"}]}], "\n", "\t\t", "]"}]}], ";", "\n", "\t\t", 
     "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
        "add", " ", "very", " ", "high", " ", "potential", " ", "to", " ", 
         "end"}], "-", 
        RowBox[{"points", " ", "to", " ", "improve", " ", "stability"}]}], 
       ";", " ", 
       RowBox[{"finite", " ", 
        RowBox[{"differences", " ", ":", 
         RowBox[{"'", "c"}]}]}]}], "  ", "*)"}], "\n", "\t\t", 
     RowBox[{
      RowBox[{"potential", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"potential", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], " ", "=", " ", 
       SuperscriptBox["10", "4"]}]}], ";", "\n", "\t\t", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eigvals", ",", " ", "eigfuncs"}], "}"}], " ", "=", " ", 
      RowBox[{"getEigenmodes", "[", 
       RowBox[{"potential", ",", " ", "grid", ",", " ", "numModes"}], "]"}]}],
      ";", "\n", "\t\t", 
     RowBox[{"plotDiscreteSpectrum", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eigvals", ",", " ", "eigfuncs"}], "}"}], ",", " ", "grid", 
       ",", " ", "range", ",", " ", "potential", ",", " ", "vScaling"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.7075752763197775`*^9, 3.7075754780228624`*^9}, {
  3.707575511578424*^9, 3.707575521055635*^9}, {3.7075756844092674`*^9, 
  3.7075756979472046`*^9}, {3.707576536189417*^9, 3.7075765747258673`*^9}, {
  3.707576613716812*^9, 3.7075766387192855`*^9}, {3.707745455116782*^9, 
  3.7077454588736973`*^9}, {3.7077475474937077`*^9, 3.7077476369019094`*^9}, {
  3.707747812496081*^9, 3.7077478544161844`*^9}, {3.7077478845489006`*^9, 
  3.707747951166548*^9}},ExpressionUUID->"2752d239-f0c8-4662-8af7-\
2e731b925971"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical diagonalisation", "Section",
 CellChangeTimes->{{3.7074734549918985`*^9, 3.707473466909192*^9}, {
   3.707490618516533*^9, 3.707490627752905*^9}, 
   3.7075738362948904`*^9},ExpressionUUID->"8135c2d1-014e-4cbc-bbe8-\
11e8350b6fbd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getLaplacianMatrix", "[", "gridsize_", "]"}], " ", ":=", "\n", 
   "\t", 
   RowBox[{"SparseArray", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "i_"}], "}"}], " ", "\[RuleDelayed]", " ", 
        RowBox[{
         RowBox[{"-", "5"}], "/", "2"}]}], ",", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"https", ":"}], "//", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
             "questions"}], "/", "114953"}], "/", "fast"}], "-", 
          "eigensystem", "-", "calculation"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
        RowBox[{
         RowBox[{"4", "/", "3"}], "   ", "/;", " ", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"i", "-", "j"}], "]"}], " ", "\[Equal]", " ", "1"}]}]}], 
       ",", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "12"}], " ", "/;", " ", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"i", "-", "j"}], "]"}], " ", "\[Equal]", " ", "2"}]}]}]}], 
      "\[IndentingNewLine]", "\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"gridsize", ",", " ", "gridsize"}], "}"}]}], "\n", "\t", 
    "]"}]}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getPotentialMatrix", "[", 
    RowBox[{"potential_", ",", " ", "gridsize_"}], "]"}], " ", ":=", "\n", 
   "\t", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i_", ",", " ", "i_"}], "}"}], " ", "\[RuleDelayed]", " ", 
      RowBox[{"potential", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"gridsize", ",", " ", "gridsize"}], "}"}]}], "]"}]}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getHamiltonianMatrix", "[", 
    RowBox[{"potential_", ",", " ", "gridsize_", ",", " ", "gridspace_"}], 
    "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"getPotentialMatrix", "[", 
     RowBox[{"potential", ",", " ", "gridsize"}], "]"}], " ", "-", " ", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{
      RowBox[{"getLaplacianMatrix", "[", "gridsize", "]"}], " ", "/", " ", 
      SuperscriptBox["gridspace", "2"]}]}]}]}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getEigenmodes", "::", "usage"}], " ", "=", " ", 
    "\"\<getEigenmodes[discreteV, grid, numModes] returns numModes many \
{eigvals, eigmodes}\>\""}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"getEigenmodes", "[", 
   RowBox[{"potential_", ",", " ", "grid_", ",", " ", 
    RowBox[{"numModes_:", "10"}]}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"H", ",", " ", "V", ",", " ", "\[Phi]", ",", " ", "\[Lambda]"}], 
     "}"}], ",", "\n", "\t\t", "\n", "\t\t", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"let", "'"}], "s", " ", "repair", " ", "potential", " ", 
       "here", " ", "too"}], ",", " ", 
      RowBox[{"just", " ", "to", " ", "be", " ", "safe"}]}], " ", "*)"}], 
    "\n", "\t\t", 
    RowBox[{
     RowBox[{"V", " ", "=", " ", "potential"}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"V", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], " ", "=", " ", 
       SuperscriptBox["10", "4"]}]}], ";", "\n", "\t\t", "\n", "\t\t", 
     RowBox[{"H", " ", "=", " ", 
      RowBox[{"getHamiltonianMatrix", "[", 
       RowBox[{"V", ",", " ", 
        RowBox[{"Length", "[", "grid", "]"}], ",", " ", 
        RowBox[{
         RowBox[{"grid", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", 
         RowBox[{"grid", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", " ", "\[Phi]"}], "}"}], " ", "=", " ", 
      RowBox[{"N", "[", 
       RowBox[{"Eigensystem", "[", 
        RowBox[{"H", ",", " ", 
         RowBox[{"-", "numModes"}]}], "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", " ", "\[Phi]"}], "}"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Lambda]", "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
          RowBox[{"\[Phi]", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "&"}], " ", "@", " ", 
       RowBox[{"Ordering", "[", "\[Lambda]", "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", " ", "\[Phi]"}], "}"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"normaliseDiscrete", "[", 
           RowBox[{"#", ",", " ", "grid"}], "]"}], "&"}], " ", "/@", " ", 
         "\[Phi]"}]}], "}"}]}]}]}], "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{{3.707491392946805*^9, 3.70749139684997*^9}, {
   3.707491453042949*^9, 3.707491508461833*^9}, {3.707491875714814*^9, 
   3.7074918826545334`*^9}, {3.7074921951892557`*^9, 3.707492208333993*^9}, {
   3.7074929151449757`*^9, 3.7074929200360346`*^9}, {3.7074932294642467`*^9, 
   3.707493239757969*^9}, {3.707493700878008*^9, 3.707493714147694*^9}, {
   3.707494021024288*^9, 3.7074940218772135`*^9}, 3.7074941575219817`*^9, {
   3.707494229626363*^9, 3.7074942303272395`*^9}, {3.707494355879289*^9, 
   3.7074943984499245`*^9}, {3.707494478653663*^9, 3.70749448366038*^9}, {
   3.7074949945621896`*^9, 3.707495116280264*^9}, {3.7074957268839455`*^9, 
   3.7074957691262984`*^9}, {3.7074959711064243`*^9, 
   3.7074959979466743`*^9}, {3.707496049549443*^9, 3.707496161894627*^9}, {
   3.707496603245179*^9, 3.7074966103671837`*^9}, {3.70757298740592*^9, 
   3.7075730130630245`*^9}, {3.7075730979728947`*^9, 
   3.7075730984571743`*^9}, {3.7075731288799295`*^9, 
   3.7075731290427666`*^9}, {3.7075752646003675`*^9, 3.707575268800392*^9}, {
   3.707749466384047*^9, 3.707749551608574*^9}, {3.7077495954115243`*^9, 
   3.707749618152692*^9}, {3.7077497427857256`*^9, 3.7077498039047565`*^9}, {
   3.707749845935193*^9, 3.707749847775428*^9}, {3.707750007090394*^9, 
   3.707750022743168*^9}, {3.7077563123712234`*^9, 3.7077563126132603`*^9}, {
   3.707758745310027*^9, 3.70775874778074*^9}, {3.707758823910656*^9, 
   3.707758829780693*^9}, {3.7077588766370487`*^9, 3.707758906390902*^9}, {
   3.707759040569167*^9, 
   3.7077590479070263`*^9}},ExpressionUUID->"64722c90-46a9-4d8e-8fdb-\
45c3bda6434b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7077497800710444`*^9, 
  3.7077497809518824`*^9}},ExpressionUUID->"c335a339-e76d-49bf-81e4-\
b12d1464b404"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing on a harmonic potential", "Section",
 CellChangeTimes->{{3.70747289850778*^9, 3.7074728991652346`*^9}, {
  3.707495247457139*^9, 3.707495260755706*^9}, {3.707573833154251*^9, 
  3.707573834878553*^9}},ExpressionUUID->"44a491ca-d668-4cc9-a7dd-\
b131f90ad04f"],

Cell[TextData[{
 "Consider ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", " ", "=", " ", 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox["x", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d6ab638a-2938-4a0d-8cbd-1702e429d77a"]
}], "Text",
 CellChangeTimes->{{3.707431175243924*^9, 3.7074311768216867`*^9}, {
  3.7074952640061474`*^9, 
  3.7074952716668377`*^9}},ExpressionUUID->"ad3733f1-cd27-4603-8357-\
ad3da8c8893f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"presentSpectrum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "5"}], ",", " ", "5", ",", " ", "0.05"}], "}"}], ",", " ", 
    RowBox[{
     SuperscriptBox["x", "2"], "/", "2"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "0.6"}], "}"}], ",", " ", "10", ",", " ", "10"}], 
   "]"}], " ", "//", " ", "Timing"}]], "Code",
 CellChangeTimes->{{3.7074348714635115`*^9, 3.707434907113177*^9}, {
   3.7074371073170695`*^9, 3.70743717783509*^9}, {3.707439155025934*^9, 
   3.7074392213669977`*^9}, {3.7074392616167727`*^9, 3.707439352617267*^9}, {
   3.7074394208855076`*^9, 3.707439421931902*^9}, 3.7074396558887544`*^9, {
   3.7074405774243555`*^9, 3.7074405833628125`*^9}, {3.7074713535565357`*^9, 
   3.7074713556559224`*^9}, {3.707472256207985*^9, 3.7074722569924946`*^9}, 
   3.7074722872242064`*^9, {3.707472615888422*^9, 3.7074726165048113`*^9}, {
   3.707472744207652*^9, 3.7074727459097133`*^9}, {3.7074727835083804`*^9, 
   3.7074727836774783`*^9}, 3.7074911312940397`*^9, {3.707492892700503*^9, 
   3.707492893651311*^9}, {3.7074937959765916`*^9, 3.707493914096758*^9}, {
   3.7074940625404263`*^9, 3.7074940639272985`*^9}, {3.7074944520629435`*^9, 
   3.7074944539088073`*^9}, {3.707494490122008*^9, 3.7074944921236925`*^9}, {
   3.7074945600211673`*^9, 3.7074946764188375`*^9}, {3.7074947370281677`*^9, 
   3.707494739453047*^9}, {3.7074947894806614`*^9, 3.70749480150003*^9}, {
   3.7074948588520517`*^9, 3.7074948940895357`*^9}, {3.7074951295287156`*^9, 
   3.7074951346564684`*^9}, {3.7074954248197603`*^9, 
   3.7074954251896524`*^9}, {3.707495597687521*^9, 3.707495601436984*^9}, {
   3.7074957854623375`*^9, 3.7074957864795256`*^9}, 3.7075677421592913`*^9, {
   3.707567825687287*^9, 3.7075678533560658`*^9}, {3.707567908657791*^9, 
   3.707567911758642*^9}, {3.7075679536616526`*^9, 3.707567954615487*^9}, {
   3.707573120405833*^9, 3.7075731208754854`*^9}, {3.7075732918582525`*^9, 
   3.707573301116767*^9}, {3.7075733413395042`*^9, 3.707573372984503*^9}, {
   3.707573483008318*^9, 3.7075736165563965`*^9}, {3.7075736562332*^9, 
   3.707573692483039*^9}, {3.707573750495174*^9, 3.7075738075351286`*^9}, {
   3.7075739930449114`*^9, 3.7075740112873726`*^9}, {3.7075743541186576`*^9, 
   3.707574360757553*^9}, {3.707574454683902*^9, 3.707574509066532*^9}, {
   3.7075745427017636`*^9, 3.7075746127480335`*^9}, {3.7075746543413706`*^9, 
   3.7075746631756144`*^9}, {3.7075754936462708`*^9, 3.707575494728557*^9}, {
   3.7075755256596727`*^9, 3.707575587115351*^9}, {3.7075757096540556`*^9, 
   3.707575710269323*^9}, {3.707575741286643*^9, 3.707575775795111*^9}, {
   3.7077590027536125`*^9, 
   3.7077590038133717`*^9}},ExpressionUUID->"455e9eca-7dfe-40cf-84c4-\
7fd30829121a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.171875`", ",", 
   TemplateBox[{TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
         Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
         Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
         "\"untitled\"", Typeset`specs$$ = {{
            Hold[$CellContext`n$$], 1, 10, 1}}, 
         Typeset`size$$ = {432., {147., 154.}}, Typeset`update$$ = 0, 
         Typeset`initDone$$, Typeset`skipInitDone$$ = 
         False, $CellContext`n$4869$$ = 0}, 
        DynamicBox[
         Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
          "ControllerVariables" :> {
            Hold[$CellContext`n$$, $CellContext`n$4869$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Overlay[{
             Show[
              $CellContext`plotDiscrete\[Psi][
               Part[CompressedData["
1:eJw1l3c8le8bxzW/SpJECUlmQ4O2ciElo6lUStGWlWQmq2GUHQpJshpEIiEX
Zcuex7GOEQ2VRKXh5zz3/fvj/PG8zvPcz3Vdn8/nfZ0jddxq76mJPDw808c/
peMf4Vtme/U9juVOu1cQ5Lg3I3fpqyoHVbfiXJfu/+LUomtz2zz43Lf4teTu
/Hhj5rxRTm6X9kNDnvi+XK3rDX2rgz7nutm9C4rxHspNU1EfES7+mSu7uVH4
z+ax3LM7Q3+4RkxC3Tt1gUlXeZE3s2Woym8meh6t+6TyZzaGtx4wWnp9LnL0
/V8kC0rgtrpd0mXvpXDqGf28lVPk0DDhUv/g2BIUM6nY98pjJd5ZM9H5qMxq
3JDpqRfvsR7jD73etDNvMwp9TrnVNFEDlVfNDMjP24rVR+93t67WQV+t/ncr
XHahf7vAcbnOvbjKrlPqU6ABCntO7Ln50RAdHmT9jp1kjCXOgxqmE05gs2B2
aLnrabxn9GhBQOA5tFmm0vBM1wrlh9P6So9fwEtKNsGBN23RrL2z49oqR5TT
VJloaXIZJU9f6i0TcUcZx2Zlq/orOOfQzfXvhq5jeeEnPW03H0zeN1/m5jU/
nJf4qFHVKxDfORjNOTH3Fq47Uj7Z+kco+lbVRs9YGY7zA65qbyi9iwct22MS
e6Nx5tJnFy9LPsAM9+3RvqFxyKOTJXBiVyLG+cvkhex8jJ6fpQTzbydjqOtf
lopoKi79JLJQbFYa8qhO3LxEOR1X5VU9dbr6Audqu834PSULTwjN/GnxMgfD
b+1G42jE2Vu/1cw6mo+9N1XGWqa+wa+jfcv6ywrwSFilwYlHRWgdGG6tGVeC
tk8C+nWzy/DcSlHLfx/f4sbsf2vvr63CCX3rjohVVKOu73qe3Om1aBtecMxG
vw4teVxn7I2vx8UmrnJ6ExtRbHlR/IrTTWji8lU2oboZE/9qyqioteDj3cqN
+mls1Etdbqei0IbXt9jOl7rbjoZx1lNm8naigfn6kjDsRLme7HD5ixxsKchI
T5XpwtJCZU356i68Z6s31dG2G/UCpgiEC/Xgs+iwYI+HPcinW56vtLYX2Qvv
BKVn9uKH6F++0ivf4UT5ootxEe9wZntmod3oO3yZxCPUr9uHiqGXF5j496GY
m3/a8YI+XLrPdK3Xhz40miDQ5TWhHx/7uz1dP60fD9Frefq9CL1fnj6fQc8T
oOdPpu8boO/n0HqEaH1ZtN4DtP5E2k8T7W+A9ruR9m9J52FH55NL53WNzq+P
zrODzvc2nbcenb8x1SOa6hNL9bpA9ZOjenpQfVOo3ulU/yfUD0HUH9K/iV8E
fYl/NlA/dVJ/JVO/HaX+s6Z+3ET9eYz6tZj6l0X9/Iv624D6/Tf1/yGahyCa
jziaF95qkp9YmidVR5Ivf5q3o/tJ/tSKSB4TaD4jaF7daX6LaZ4ndZB8z1Am
eX9J879GkfDA5SjhQ8Rswot5LoQfo5Qnml6EL5kOhDfSHYQ/1dqERxwTwidv
ZcKr918IvxYfJTwzyyJ8y1EhvLtA+df7mPAw2orwsZXy8vsOws/HvYSnB04Q
vr6+Q3irGUb460l5/Fmc8PkMR43h9Tknwu/lSHi+riiR4XvPHcL7k5emM/wX
TOJl9sGNwkpmP5xXJfuiof7bHu7+ONeRfLM7xkf1yvaauGutXarGc9si1KqG
VL9u1N2zUmtM9SrPxYCfilMhNn7NaFIDP/yYXyU72UkI+thuUS0/5oGsVIWC
dLQk/DNbFnWlVRq+3Z0lGF6mALcKlfUXlC+HOQW36qr5lMG7C+7/dVwH+0/d
+/SraROM/Mx8tv2ROhSZsJerBW8FVOjKfLtNB97/M7aa/GEXPF6oFDmgrw+z
Q60iBg8egPleA7v8Fh4BjbV5Yum9xiAZEKR+Ek7C9V22VR5KZyHX/pbNjCZz
iJq11WeqjDXUpI/ofNtzcbyOo1u3TnWAUEHhLf36ziDyPvVYf4Ib2EodWuDv
dQXkzJeKhzdfh361kvK+OB/I7amSuTHmBxHawV/6RgOhNjZVUaLiFhhfvrQ+
fywMbt8JXVwQGQEnuzcY3U++B29O/me8eGEM9J5c8/NeciyM2V0yveWVAGV3
hGKmPH8EThqnKyesS4b4c8rfS/lSQXJgWK1JMQ3Oui3t8r6aDjNfKhy4OzsT
1LYY199uyQLT05K7sP0VfK+ZusY1IA/Ss9astdzzGlSEL+U8UyqA9v0bF91c
XQRKIy667w1KwMChdeTonTLg3DfdueD3W8h5pzjw0akKfGf4ldzgq4HlsrqG
WadrYelOablHFXVwfbXBEKo2QPGXkdVimY1gHiS8P2RdMxTx7/7vdRYLImMX
ZX9VZcPJvkSNFfmtMN1yUu4O1XawnrOzsftZB1i7ecY/9u2EiZUrvgxu4MC9
yRfW7m3lwE+Bm2mVF8ZF3tEid/J3Fxx7Gigx62I3iIQvi2lq6YbiD8IalYo9
MNm2dIeEWQ/M/Jy2hi+wByJPP+2eGNUD3bNlv4QH9MCnJRlekWd6wN2199e0
RT0gyYkKkcFuqPJL+WGt2g3VPQds8u51QdE7TvCSbg58Oc8bKjqNA7M3iRRu
m90JcgteH7Afa4N3jlYLYuLYoFr9zPDQfBa8Uwj2umTSCGntJyvPu9ZB1sbM
45KO1VA/3z8pO6EMigQivxctKYCLInwmrTOzobuP87BL4TEcPcDzxH39+02h
Pcw1sucw3+PITOZ+nEmeR2NyHu4n56MXeR9+qGLejyGkHuyRYOrDYRWmXmwk
9WMS6QeLSX9YSvpF2j9eJ/PAv2Q+OETmhS/J/FCezBPFyXyxk8wbl5D5ozXR
A18SfXDyLEYvfEr0QwGiJ14i+qI90Rulif5oR/yAicQfWEb8gheIf7Cc+Amp
v3Ax8RsqEf9hIPEjVhN/YhfxK5oS/+JW4mf8SvyNB4nfsYD4H6fWMnlAP5IP
NCV5wTkkP3iN5AmXknzhK5I3tCb5ww6SR6T5xA6SV0wk+UUZkmcMIflGNZJ3
jCf5xwDCA9xP+IA3CC8wzIzhB5oRnuAMwhcMJLzB/wh/8PNzhkcoRfiEww4M
r9BtB8MvtPBneIYKaxi+4ffrDO/QLYjhH5rKMDxE9i+Gj3hIiuElRhky/ETx
EYanOPs0w1f8WcPwFg++ZviLiuEMjzEilOEznj3L8BrdB95y+Y0sZHiO3zYy
fMekPIb3aHDDhst/zHVk9kHuAjFmP+TyPaji7ovcMP5s7v7I5WyT0PGb/VQ1
LTo+S+zfFHBMa29jT58L8nI+N9IXLIKird/y3vgvhkClZImDc1ZBdsnvLDWp
tVDgbhZcsXAT/Cq9+V0+Xh1CT9qv6fi2FW5tzu5+KK4L3TNzntQm7IYsadEK
y2P74NWzY0PxtQehNnvbV0fpoyB3UFPn8qbjMMTrkzg8dgouSq/vTbE9B6U3
vDwys6zAdoqK4MiPC+N7Q5RX8a4dDI9dTCjnOIH3bNl709tcofTBrPtH6j1A
+NA1qdSV1+HGpexba4R8oDMr5KiIrx9AoXukW3MgWIzxPwkuvQUSenHnImVu
wzbpF3OWDUdAdaudeL50NNh5Je9QvRUDoj/6w/P2xgHv8hL2ytOJsDpmyq+I
hsfQm518UCLxKWRbl8Yd/5YKQy77H2/Wfg5J0uukP7MzgGPhwuuT9BKiFI7W
sfJy4LFhXfbCGXngcCSkvq4lHxyXjdUpVryBEue+787dhaB5unRyokQJdHde
3bzwUhksOJyhXTf6Fu5nlhRKRFTBnh51vY5lNXD68P3XvXdqoSy672nd7HqQ
nd0idzmkAXxXLlY3kGwCdmX3V+ukZuCtXefosakFNljey2WXsEF81bw79jvb
oKPjhe6fknaodR+82yXaCY4Pqn+PFHTCtVzh4hUnOLCpbuK8r4Mc0FHycAmy
7IJWj7MfLzR2gZOBuOsvuW6QXndvXrxRN9w2/2cv7tANGrtScOX4XtBOCRP9
vqsbDt4NVs2f1g0HLrwL3x7dBZ82hhVFzB7fI67n/1tvPH6+bnCQgHcnrLZ/
eWORWAdMfbp/qVFbK0i9rujOPdwCW8wV2FrhTXBS49WfqVH1cFB3sZmQRQ1M
ywm8NkFifB6qC3dFzimELdZJHWpx2eCSXPUlJfEhiNgt/ZMz1R1THJ02lwik
onjZC7GUt4hup7T9Q4SLMVMnse3iWAW6fdmgJapVi/MPbxM/ZdCAHuF/3idI
N6OpUcOvmLgWTCvicf9R14qlsefbdRPaUfnrdf2MGZ342WDq8edBnSj1dpSn
vrsTlcR5iv/+68SF9PoL/X4tvb+MPv+CnneRnh9M37eCvj+A1jNA68ui9TrS
+mWdSD+ejqQ/pyTS79PzpP+TdB5vs8l8NtF57aHzW0znOYHOtz2ZzJufzl+e
6nGT6tNA9VKn+mlSPVdSfZdTvT2p/vzUD6epPwqpX9ZR/8hRP12k/jKnfiuk
/qulfuSj/lxB/TqZ+pdF/exD/a1A/V5P/W9K82BE85FC87KZ5mcih+TJlObr
Hc3bPZq/SJrHIprPNppXIUuS3yaa53muJN8smnfJHJJ/K8oDJcoHDcqLa5Qf
I5QnrpQvcylv8il/TlEeTc8mfEqlvNpD+dVLeXZSiPDtDeVdDuWfO+XhGspH
FuVl7jTCzwMHCE+lKV9PPSe8fbuI8HdsBuGxJOWz0VnC68xiwm8ne8Jzl3LC
96yVhPdW+oT/zjPJPniTSfbDQATZFw47pZn9EX1hUr919dtcmyrdeV7HZTCs
Z5XKuZ1r0CZM8vK+FDU8s0TN48k5LSy7baDEEd6FFksORMX91sfEugfpGYqH
8GRtlgVb9xiWxMj2CG45ge1GObctvM+glu+kGxlh5ri2uClv73ZrjI4YLHhe
cRFDq6bN4v/mgAJCqupClZdRv6Ty29Ncd9RaMj99p8A11B28G8R674UjMdnL
vhv7IhapK7lqBmL5aAov/6Zb6NKjtm/OgzB8p2Rx99j1CHyoZXzTc+genp9c
YHDeOQavcqy6U/bG4fJZ07+qXU1E/2nPQqaKPkGTwGOTnWekYP43+a9/tz7D
pZ1Dg5yc57jvdM6Cmosvxn8fTfJcZp2FWH9O89vzV3igT+7Xrvt5eKa0/uw0
v9cobfHml9L9AswY+8+6r6UI0wZPP83ZWIoZR/NtU7EcHxh9chA7W4nT9vUu
KL9djROMJ8c4zqjFyMtFvCK+dVg8/PnI0nkNON3oeH7lo0Z0Xl4hc1e9Ga3P
KspmN7MwEedbN5mx8cjqVQMrRlqRHRbacudCOzZLi63wZXega8nIvTshnbj1
cvLpHEUODh+48FwwjYMT6nz4bBd1oenKR04lDl0YpaVcMimtCxNPBOVqVnbh
v8SAfZ3FXehfqnfs4t0ufP9c0+qXXhfe95lvVV/PwYjM0cA+ZQ7m120SjTHt
xGndHz+If2rHKsWNfjlprei4qfpm37IWlPPK06g+3IR8F/vqxbfVo2HKZ/fe
b9VY97cT9zeU4RCP9UFPyzd4ysBdmNf/BS60EB+dUHgP403vij2XvAdTJYTm
qZ16AZrNnpWvDN7AkvJJs5XTyuDPTH4t+4Zq8D0wed+rWfVwTGZKaMnfRog3
SfJv8meB2XoHv73ZbPBKtd05y64N0lMOaIW8aIfyM5v6dR07QPHRFbnnGR1w
Ren9Fy+LDpCSVtzecrcdkhXPS4jptEH7e/0li+zZUHa+2l9iGQumFkgpOF5o
BCu70IEX++ugdIf+Ho+iKng8XMPW3Fcyvq8nXfe3zQMWX5BUcngKLC0T1NZw
b9r0cTpzjSmCzPe4gdyPZ8jzqE7Ow+43zPkYS96H6eT96EvqwbmkPnQm9eIS
Uj9WkX6wjPSHj0m/eIv0j+1kHhhL5oN1ZF6oJcDMD5+ReWI9mS9OW8DMG69b
MPPHVaaMHmCwn9EHbhO9wIroN74/GD3hnQ2jL/ATveEI0R/KiB9gOvEHFBO/
QALxDzwifoJR4i9IIX6DeQ8Z/0EJ8SPkE3/CDeJXkCX+BYmDjJ/BkvgbEojf
YbkM43+A20weII/kA/jzmLwAm+QHukmewIbkC+RHmLzBFBcmf3CM5BHOkHyC
/lEmr2B0jMkv6Hxj8gzreXi5+YbbJO/QRPIPzwgPwKqB4QN4xDC8gE+EHxBM
eALLhxi+QBrhDcB0hj/QQHgEc7sYPkE64RW83s7wC/yUGZ7Byl6Gb7DjN8M7
sC9m+Af/CA9B+xvDR9BYyvAS9EsZfsL6OQxPQbGa4StsusvwFnIJf+F4IMNj
+O8Yw2cofsDwGhKbGH5DYyPDc1CXZ/gOgqEM76FNmeE/rLvF7AOoJvsBjL4y
+wI2rJrI3R+qCr2H/0jav1P1nNWsEFMI8MclsuZgwG7oYO+a7d58CIodbtV8
4D0OtWqfP7QWn4FZCwoPuu+3hIKdZ+9Ufb0AE1V7KoV328PL7xX/ppxyhoU+
Sw5Zy7tD9zrDeVNvXwXd+9olUmFeUCKzIPb8Bl8QnVC7GXUCIVf45LtOk1vw
0Ehg7c4vYdDVKz0oPyESVP5za1+vHw3bwg7Yu/yIgT+vkibHDccB/3HLjysM
HsLgnASvcqkkKM3YZxaakgISnvmqtjPTINprtUdCcjqkDiz+JxiSCXs8PYRU
CrNhxaaws4s1EIIWBT2X9MwHL925o94hb+C3xcojsW8LoUuu1GbFshJ4vXiZ
z9Zxru2LK47QNK6A449C3I/Mq4bupGNZsQE1UGI05UqtSB1cdjebsjGxHuad
/m9XvHojaPueZe3vaILUl6aFv5xZ8M3h3OpMYTawvrVIK8W2QsS2KTK+i9ph
vreosrtPB5haOTmkn+uE6YcdpVf964RekYK8Jc4cOGHx5fAcDgcERI5Gmi/u
gtLj2ttq94z/zn/RuEH0QBe8LBf1N17bBYZ27YcWD4zft/qMr4XjeG4bis9k
sDphvv7v3FX8neBZp8xzQ74dBv3aD6i3ssFXO2p9kAoLfISGi3R0GsExWWnb
ZIE6CCosXaotUwWlojGLErKLoTE1wivoB4KZoDn//b9PwTXNJ3uWgB4eOxT9
s8siBR/EHYrirMjDbt0rSed7irFXwLCoelUVDiXDrbLRWtza92ua6n+NCCIf
U6KSm7EwWUb1SVcLNnh+nPg5tBWnrLZ7PCu/DdduEPi38dD473fzDWUGhu3o
bXL1nO7rNlylsMlTPqgV63xeL1lf2YLJft+e8rk043S1A5HHnjRglvBegV+n
a7H4C1uy2rkCuytxl8WNQjTt2WMnvD0LjTnn2S+r76Ncg+igy577EDYc4GE0
LQua4+wWlpkVQoVEZWfvoQqIv3FyUsHuWjim8yVD/2YDLPJv/czWa4b5Kg8a
dni0gI5t+beXkq1w4smIc6xYGwxE8lhsOd8GzvTajn5/hN7vTZ9vpectv0nO
/76AvG9WAnm/zE9Sz64WUh9fK6m3lUPqv1dB+on8TPpbTPv1BdL/NjoPFzqf
z/JkXofo/MLoPOXpfP8/7z46/y6qhyXVx4XqpfKU6HdzFtHzrh7R1z6e6C13
mOj/J+oG44c0fuKPCSnEL83ziH+eFBA/TaX+kqB+W039d4f6cR3158he4tc2
6t8fysTPOtTfqdTv/dT/FTQPQjQfVjQvv2l+pGiertN8HaJ5Y9H8zR4ieVzi
SPL5geb1Ms2vOs3zPZrvdzTvf2j+7SkPHCgfWigvflN+CFgSnoRQvtynvFlG
+XOI8iiJ8uk+5dVUyq/nlGf1lG9fTAjv3lP+raU8XEz5eJvy0oLyM4PyVIDy
1ZbyVoLyt4zyuNmb8Ll/iPD692bC7/W7CM9DxQnfB1QJ75fZE/4vaCP7wIru
h1l8ZF98KiP7o4blJLtn57/cGarfrySY7ceHS5r0CrVOY7GJ6laD3dbYpesv
KMjrgENn0oUlHF3RLDz30N33VzBfymOteKwXpui/LoOpfvhU5fPlTuEgPOC9
PpnnTgjaftirPjPyDnbHbQ++sCIK9097tED52X1UL/xjZx4fi08+y6yK/5uA
3uidsTv/MSrxwoSPo0/x6/rPjZ8OPUNbYdH28NHnuOEC+3hp9wvMUuTbfVQ0
G/eMlu3MiMrFZA7Py80q+fjHceviTXveoOqF3rnPAwtROtDa4vifYgy10X2u
HVCGFzKqLG/rVuDjXaqzSoSr8Ye58cDa0BpMPn0u4pFMHZbX3TGSzK3Hp68K
jIaPNqK9ZXvvp4nNGLJ011fZOBZ+Gku4La3GxiVTlg7UVbSistHToEitdrzf
uCLMPL4DJSsrWabWnbj4doqv/2gnzjhU2vfqHAeVX/9cIJDLwYufLhi/+MrB
7cqlKyTGOCjcfsRpqJeD/VvONOyL4WCJ4jWNjlWc8f9vIa+qgjoxceWg+wav
DrxptTRT4kYbWgq4s56sYKPSoJ+AimMzpqw8or7EogGFbbfN/zW7Fo8Mtxr6
9L9F2fk5aZc3FOLdDNuwdWez0K/D0mRV2wMMxJHDm5vCYR6L/a9Z5QVkVqbx
HHz8BoyNrwu/PFwOZUajs3BLDRQ8VH8xcqUehqKPPJtzZPx3aGdMjXg2Cyr+
VoTzBrHhss/2ds36VkgZ/ndD1qENFkXyherat4H/zYiWn5Wt8GRQ6/hONza0
3nXNtg5ggYfcldZQ3ibwrFDP/DRcB3NdGgLNTKtBw/WY5PQvJTD0/ISspVUe
fFp64cP8hcmg6VlRLj7ihSpPWL+3bUhHK7mmS3kn36Dz6mf8bknl+GZpzAmv
ezUY/1fDrPZbPT7enH/v8ssmlLWLce/pYKGx3/sBJwM2en4JSdo9uxXffNI8
Y8PfiltNWxYs02LjdZtXwcIFLNxtKz17ul8TTpx16UF/Wj2eUY3qV9KuwbOL
0t1nlJfh7xktuv1ar/HHlDcKv72e4e4Gce843w85uyYz17CRfA8ZUsz9IEie
h0IB5jwQI+fDSfI+WEXeDwWkHggh9YELqReOkPrhO+kH/pL+YMUypl+wWMP0
DxbyzDxAJZmZD3DCmHlBpTwzPxxJY+aJe1yY+eLjy8y8UZbMH1cTPfAR0Qe9
iV7oRPRDWaInlhJ9MYXojUL/GP0xg/gBDe8z/sBljxi/oPZRxj941ITxE+ZX
Mf7CFWzGb1hazPgPo9mMHyHtOeNP2CrK+BU8vjP+hZSLjJ/hIPE3fPzK+B2W
EP+DPskDuJB8gCrJC+SS/ADNE4iSfMEekjdwJfkDTZJHmE/yCUokr6BI8gsp
JM+gQvINy0ne4QvJP/gRHoAt4QPEEF5APuEHxBOewFfCF4gkvAF9wh/wIDwC
XsInWEN4BcOEXxBFeAbKhG+QRngHMoR/YEp4CF2Ej8BDeAkHCD8hgPAUlhG+
gjrhLdwk/AURwmPgJXyG84TXcIbwG4oJz+Ex4TsYn2V4DxzCfzAm+wD0FjP7
AaQ3MfsCHhcw+0N1ZFNRTsOwIAiWG8yPNDYFz1s7Fozsc4KMlmBNG5OrcG79
wzS5RTfhcu3hskrdILjLr+3kNhIKm1xT7YvlImHaLQsl5V/RsNteuDl2XSzM
2VA9ks1KgBLBp5J2Hx7Dd6nIJIONKXAubnW0ff4zkGUduBDrnw7LUYx15WEm
JOxofbpOKAcsXC68Vqoe/zlbPNp7dTAfSr2dF0bLFcD6DIEWL88iaPzTeD5S
qBQytjk3G5aWQ6q2TYd2fCUIymvUmtdVw16387GyJ2oh97nc1R1jdeC8z9d5
XWwDfKg37762owmgwsREYaQZtt8c2H30dgsU8JvNy1Uc/3/MfiCk8bQNdBZe
9Dks3AH/JOdOm7qsEw5s9S72eNEJ5+4pWfQrjPu0y8P87yUOXPCwKX7whAPs
BCuV4QwOdNYM+pmEcaDXPeZwpQ4HHni03nhR2QlTCv9E75LqBKMF/y5uvtIO
4g75zqrHWiErN+1d0vj/8C2r85IahxpBLXbp6LEXdbDcf8Kzw8uqoWueUIx3
TgmsO3w8sSk9D6T/WzT+pyEFeCcZ/1qwbgvu2dge/3NOKsrP+Wju0JSHM3xH
7jRWluCDJMFIg0XVeFfA0KL6eh3GB0Qq8bs1YtHkyXVvRpvx+FWfw5W9LRi1
waOwUKkVn5yZpBbc2IqJyp36g6WteGV2jWHTtFZ8tX21RFlYC0ppzR2b4dSM
4T9Hhp5mN+Ac5cyL9ua1eEpV5+0G9Qp8pMtvUdlZgMNW957YtL9AmxeGe2V3
hGCgVsgv1exH0GPOF5CXhGBu6KQve6MEhnV7lwttrYYpQa/Wbiivg0VL+g/u
z2mE76JayzN4xn8XTjXxv3KtBT6/7T1rv5kNCV+lDc2l2DB3d+Sd7JUt4Grp
pHzKuhkM8YXf2JcG4LtbvdwCa+H06S3haV8r4GPgpYWTrQvhy0n+/xQ9M2Hu
w5sGssEhoG4Ukytb9xh7gvlc3h/Pw8PSjVo7dUqxVvLXyfsp1XjzAdpoKtXj
ot6P0rUzmjDra2qzhQILB8JudVnatOCBf4VJf8Z/x4/Q60r6vSq9P5U+P0bP
K6LnH7lF3qd1jLy/OZbUwz5B6rOk9f48RepnRZJ+ltP+TtJ+/+wi/YfSeXyj
83Gh85oyn8xvO52nPJ2viB6Zdxqdv70F0ePldqKPWzrRy+r/+lE9lai+Y0pE
7+tU/1nUD7nUH07UL//3z2Pqp0jqLwvqt1bqvwLqxzfUn1XUr+epfwOonzer
EH9LXyJ+XzGV+P+lIcmDBc3HkB/Jy3SaH36aJ2+ary/2JG/raf4GCkgevWk+
i2he82l+c2ietWm+keZdneZ/FeVBPeXDsCThRX4L4Ycz5cmvG4QvP98S3iT9
nz+UR9conyQpr/rkCL9OUZ7ZUL4FUd5NpPzzpTxsLSJ8FKe8PEr52ZFLePqt
mfBVk/K2mvI3hPL403rC502U15xgwu83LoTn3pTvapT30pT/31lkH6jT/XCj
jOyLHiOyP058e/lfN2sRDvTHbMi454TvU6f/rva7gXPsN667pDr+v6JoXceb
xXexuc285nxDDKp4GItMtE5Ao8UyhUV2T/Cv/NIvLqMp+PllYpz5nzRU+KG4
U0HrBQ4NPDIc7MhCsxk1H6TLczE4+t3pKdfzUf/FmZz9tW/wflCEX5FOEf7n
3COd+7kE14bbH4nPKUcRl4bMitRK7E+6XCXTW42/L40GW7jV4uS9kV/N5OvR
9aXL5BmNDZgfOPLF1rMJP5WqsWasZeEdg1ViNuwWnCfCNr51vhWPL3x4JGOg
DRUKnz0K0OlA59g9i9ZCJ0ZfDzsim9eJl89M8fWR5qA3j7rs+5Mc/J1cMOmb
KwfhxLaG2PMcbMy1ibdR5mBBuUT5mcJOtC0vEtKSGf/fsdFc8/zdduz9ITa3
1KsVdzTYv1w+Y5wzmx/PTFrahKv8re0+DtRh1sIfzhpHqpF9wbf88pRSLHG8
HCnZmYdzZAJCHBpS0KSy3T5u6BD8fOh23CsmFbrazPwHIR8mVzmsSN1dCik/
XmfVjP9+XxVo86nibR3s2v3dpSirEd4p53B4JFkQmXzpum5fCyQ9XGb1fHIr
bPZdtEvJvBXuFnlM2zC3FVa+anBXmswGOc3YZQ1rWTAj1Oz23sxGgJlC6ofC
6mB0ULrkbVUVCP47bfz2WjE8UjGd5SPyCnKjrukKecXC8sdJ7XzZ9zF5y9kt
m19m47Itt1WUWotwFd+XpJfSVbhosdLKt2vrsLNKW/z85kaMqMncz/ZpRk9Z
az2c1oLv+cWPHnjcgtYhDfskz7bgmbz4Yl01Fha99ZjzV6UJN4WYKiuY1WO7
kM9l5XGdJ5YoLQ4MKMXvdwMc8Xwe/tnaHmb89RGWGaluqEm+AxWLZSSC52SB
nkm+ocPpIpgeNfxEYqgSTto5u7WuqIPNa8a+Nis1wr43OmqBp5pBAtkGYc9Y
8OHZ3MvvZozn2uXSHbvzLBBdm/TTrqsJMuvez1O0boD3KUFF9sq14BupYT7s
/xZmu8ZOHU54Aw/PLk2o+e85LFnVHHJXqTnH15S5xpvke3xM7sc68jx+JOfh
e3I+znZj3odX05j3Y2ouUw9ufM3UhxtXM/Viny1TPzrcZfpBcWOmPyyWZfrF
DbuY/tFiOzMPsCTzAfliZl5wgcwPkm4x84Q35cx84WsuM2+oC2bmD9dmMHpA
sAyjDywnesE3oh+8IXrCXn5GX2BvZfQGH21Gf1DPZPwARwIYf+DAasYvuPQP
4x90+cb4CV0FGH+hXxjjNzy3lfEfqucyfsSeYsafWOzH+BUFHjP+Re2njJ9x
xmrG33iZ+B1biP/R5SeTB+Qj+UApNpMXtIlm8oNfzrRy84STlzL5AgdnJm8A
dkz+YJo0k0cwDmTyCSWqTF5BvJ7JL0gNM3kGvnVMvmFJGZN3eFHG5B+ev2J4
AJOPM3wAccIL8Cf8gLNnGZ5AtSfDF1CNY3gDBYQ/ICLF8Ah+zmX4BFqHGF7B
QDnDL3hPeAaQyfAN3u1meAfSzgz/QOQpw0OY58bwEcQIL6HDkeEnvPBneArp
zxm+gnkUw1sw42X4C6s+MDwG+e8Mn6HvBcNrCJRj+A3f5BiewxZ3hu9wpJPh
PbTXMfwHHW9mH4BkHbMfYHT2A+6+gIumD7n7A3qEit55h66CZa9gnVi9F2Ql
Php4H3MHjJvlZpUmPwCVkJyZO9ofgU/i2ck+G1Nh9m8XrS6NdKj1K/iPL+Al
yDroK+9UyAUh1RMPFnrlw0Xr+VZ6sgVga/pMa/RjERiaRObvZZfCe/ERtQ2D
b8G7Ytf8ueP/9zb+TQ26k1cDKyTUFVn2dZBZLfsrfW0DPHq/c9Wan40geGD6
CreMZggqWzL9/bkW4B1Z1TDM3wqH2zbp2YS1wWa/iw/9/7VDqLzBrDHxThC9
ci9GMLoTJKJSFOImcUC//ZvdoAYHPhVpHT5xiAMPJ4zFvR6/Xmm/4pHh706w
+fpGUcatE3Y/KRHpuNsBEyNUlotVtMGSaDfDj75s8Mhhna3saoZnkVGh02oa
QErnQXqlcS0IG1eevLuxAm79HH57bnEhJLG3u640fgmOrwcEBVLugaPI7p0X
TjzA5p2lCiGi2WjwIV3RfKgQHQ/vSOJnVaCAON9G/mu1KNhX9NzwUQNOLdrv
p7y1GY+qJOW8V2vBntYr4co32XjGkN0/LNqKWaUuG35y2DiJLfXBidOCjp/m
acWLsfB9sMe28juN2O6aFmhlVocGy4cvqelVYfrmPxsEy4owKK7LVVkqG+/z
WSxO0riH80Tnq9W5JUB6QK7E14FcSKkUOrrYuwQcdtr6i5+ohoqOG9aWg3Xw
ebLf8qmVjTDnXMjx/tZm+Km5fFE3bwtYZ7msu63ZMv7/IPGDxg0W8CRcClXk
NMGfsw5rK/XHf2fJY8TVXzUwpKFaO8gphztX445tzHsNExPcDU6Vp4LGwYen
zGuvoqHG9X9PezNQ8L/s1V9lCjEwYI6fMk8lgonPNuP6WnzmLinO09eAXawY
V9G5zdgl0pD6Qo+FUS8/7RtxZOHnyS7XXkU0Y+iVrZxp45zhn2ufl9VXh6zP
30+/U6/GS0cblG3aipG3hkcpwyoH/b2OaG6pvIdw6n3epJyH4OlSHXY2KA9W
aDo61U4sg2M/PKI+L6uBviyXR2ZR9TAoEKl9eGUTSNZ/TkktagbnKdMOz9vN
Ap8qcu3JR77vyyb3p4+R53MPk/MEA8j55Wbkfdrvyfulh0g9kWakvqIhUq+u
BKmfz5f085uf9NeeQ/rNECT9b64i8zCxp/MxJPNq8ybzu/U3i5lnuQSZr87c
RGbeMk/J/GstiR5ui4g+mxYRvYQciH7b84ieN4yIvg7JRO9b8kR/ld3ED5a/
fRl//GwnfrHXJP6xDyd+yltE/NU1IMr47aKZGeO/2784jB+nf//N+FNtCvHr
XBvi3ylXiJ/9moi/F1YSv2dVEv+PWpI8pA6RfPBpk7wUlpL8bP1I8iS9lOQr
Npjk7bBiBpO/2yUkj/w1JJ/C+InJ6+kMkt+qHyTPJQ4k3x6nSd6zS0j+XYcI
D+RbCB8qqwgv+BsIP6T/EJ48dyB8kRj9x/BmUhbhz1gV4ZF3AOGTji3h1a25
hF8zTQnPNDIJ36wbCe8whfBPfRPh4bwSwkenx4SXX3gIP2N/EJ6OdhG+si0I
byflEf5KviU8Tu4kfA7NJ7xWCtjH8LvdsZDh+eUrrgzfW0sI719bEv6rFZN9
sHXeY2Y/uFirMftiRdO6fu7++Lfv7XXU3oxtUj3Vzx7ewrKtR6ZJb4/DOfo1
r+5sTcEYs+yOJOEMXOPlnHVbIgfnzFOtn6SUjwWL3V9q2xWgpu3EVeXsYtwW
ZpLIY1KOZxLfbgmbOO6P0M9Pk4xq0OVB2i4hjTp0+qH634fFDfipfqFtlEAT
as0K1on+1IwTt2vNtnjZgrNfSXJiLFqR10u+T4ynHTf9HYwWOtOBFQ/uCC7V
68QzG1g1OQWd2Lxj0b9Z8zhYWTz2Qk6dg6JNVq/2qXBwwwXdEbuJHDxR7DBx
QXAnep6XyHdp6MCvOd18pQLt+LtuwdzkejY2layu9Zdj4VC4mFrH9EaUsGk7
reNTixPWFF9IMKnAgcQQqyixQjSKKTzIW5WJd/6OWSh4RGDmwej0HWfj4dvi
PbF5U19Bp/YjxYdzimE+dNfHCFdBkdmalavk6yBxwT69CM1GyM296K1X1gwV
AW/Kg2JaoOhgjeTrbDZ8EnOLnDetFep4jdddv8KGId175TuWtIDeze/rbSc1
Q6KDfMpvsQbQGX39t9KzBkxFRN8Mvy4DgSaN0wuD8yFXrFpIdvlTMGCVTOWf
FIQNhRPCWq0yUcnYA7TyClFUyk2wxbUSe2KzTgzOqsMBGUXD38sa0Ulo8FSa
TTOuX5m1ReEtC/XkWPnz5Vqw4njTjVEnFgZu1pG9WtmEDwO+VAwtb0Dd1RNM
C5/XYOueU+J/J5Wjj/W+puke+ehgNe3O6XlJuGnZVp9SiXAIkS99JLYvG5be
F/o8/1Ix/GoakW2RqQZ9qz9/pVh1sKej/kTO00Z46/5Sbp1nM+yT3BzKp82C
v/o1N1o/NMPR+14nllg1gYZmsOT53np4sStDJNa0BkJG9jlv2lYGzWYTPrGv
5UFkgtHN6/yJEHtr/uYPcx9guE90rWlSLtYK9GwfXVmKjk+mCOp/qcYmduo7
p0v12JQn9LpOsAnnRrEao4Oa0Xlr2U2Zj80Y6WLzPVKkGaP6L+kFL2jEhoq/
kxznj/+vqi52WWpUiU8PX6uIm1OICkITC96FpWN9ipWeyJSbrxKzf70ZvwZt
YXfu91DnVMS9H3i2/eM+D7eNnLjnwfeTFtzzwYP3Nfd94Hm2gft+iHg1l1sP
+EZkc+uDuu8zufXCWcfP3PqhJzCZ2w8kvNLm9gcdp0S4/aK4yLeP4/3j9apd
3HngzIRM7nzwxpEw7rzw4Exf7vwQdzRx54mva7Zx54tf44u488aT/V3c+eMU
Bd5/43pgf+I/rj54tkyUqxdecn/N1Q9/cNje43rikwEjrr4gdtmSqzcM6Llz
9YeFTrO4fgDdrjGuP6Bp8SGuX+D78w6uf2Dm9Saun+DexBSuv2D3xh6u3yCz
VIrrP+iJSOH6Eb6cOsv1JzSZn+b6FSqVq0LH/QsSs/dz/Qx8+V1cf6PCRC2u
39HtlDTX/7gruYSbB4ywluPmA83293PzgsMPfLj5wZNmutw8YW38eW6+cI9l
ITdvWK+Rzs0fVrgc5+YRR0K2cPOJMftXcvOKu1VHufnFgW1sbp7xm3IeN984
edAoYzzvODU633w8/9D97AKXBzC8/RyXD6BVmsjlBdgBww+oW7eEyxOoMdnO
5Quk3VjG5Q3MtfzA5Q84X5Tl8gjqTd25fIKxlQe4vIKqdgcuv2C35YTMcZ5B
6fYFXL7BNPsGLu9g8otwLv8g2P83l4ewyXsFl4/g93kBl5fw5/dmLj9h3f7r
XJ5C+Jc5XL5CTOFqLm/BeNojLn9hVnQvl8dwpeAVl88g22zA5TVUzB5dOc5v
MJjuxOU5NGpu5PIdfmZc4fIeonbUc/kPjS7fufsAuu7d5e4HcDZYVzO+L+D6
J5lt4/sD/gdw2e9j
                "], $CellContext`n$$], CompressedData["
1:eJw91MFKHDEcx/HM7Ozs7Ozs7CTxAfQNpO2ht+QZfIJSaOmtfYQ+Qo+19NCr
j+ApA14UbBGEgtCDooiiyNauuuqqxfy/+r8M+/t/MpOEZBfeflx6lyilNtRT
zbU/Nx/Ltt+WH8u272PZ9mUs24qzOIMzOIMzOIPTOI3TOI3TuAbX4Bpcg3vq
j8hHbRy2WeNrXI0b4oa4ClfhKtwAN8CVuBJX4vq4Pq7AFbiijWy5h+uxrhyX
43JcF9flfRkuw2W4Dq6DS3EpLsUluASncAqn2hex/xAkvw9f47i7IH4WhM2C
uFvcDe4aN8VNcVe4S9wFboKb4P7hznF/cWPcOHyI/bOwHvPTsBjHneCPcUe4
Q9wBbh+3h9sNW7H/J3yJ+U54E8f9xm/jtsLn2N8I8zFf4/cqz5XwfEXiQVhx
suGrzot3P2S8433k2+6TfI/+jmM+uF3yPfda5k//wLE+3BHuGHeCO8Wd4cbk
Y/dd9pf+uXsl+4+b4Ca4C9wl7go3xU1x17gb3C1uhpvh7nD3uAec8pIr/0vO
p5d+4uV+JZ7zjEtxKa6D6+AyXIbLcF1cF5fjclyO6+F6uAJXeO43ru9lXX1c
iStxJW6AG+AqXIWrcEPcEFfjalyNG+FGuIa88fw/Mv+GdTU4jdM4jdM4jTM4
w/cNzuAMzuIszuIszuLm/H9vuZBa
               "], {0, 0.6}], 
              ListLinePlot[
               MapThread[{#, #2/10}& , {CompressedData["
1:eJw91MFKHDEcx/HM7Ozs7Ozs7CTxAfQNpO2ht+QZfIJSaOmtfYQ+Qo+19NCr
j+ApA14UbBGEgtCDooiiyNauuuqqxfy/+r8M+/t/MpOEZBfeflx6lyilNtRT
zbU/Nx/Ltt+WH8u272PZ9mUs24qzOIMzOIMzOIPTOI3TOI3TuAbX4Bpcg3vq
j8hHbRy2WeNrXI0b4oa4ClfhKtwAN8CVuBJX4vq4Pq7AFbiijWy5h+uxrhyX
43JcF9flfRkuw2W4Dq6DS3EpLsUluASncAqn2hex/xAkvw9f47i7IH4WhM2C
uFvcDe4aN8VNcVe4S9wFboKb4P7hznF/cWPcOHyI/bOwHvPTsBjHneCPcUe4
Q9wBbh+3h9sNW7H/J3yJ+U54E8f9xm/jtsLn2N8I8zFf4/cqz5XwfEXiQVhx
suGrzot3P2S8433k2+6TfI/+jmM+uF3yPfda5k//wLE+3BHuGHeCO8Wd4cbk
Y/dd9pf+uXsl+4+b4Ca4C9wl7go3xU1x17gb3C1uhpvh7nD3uAec8pIr/0vO
p5d+4uV+JZ7zjEtxKa6D6+AyXIbLcF1cF5fjclyO6+F6uAJXeO43ru9lXX1c
iStxJW6AG+AqXIWrcEPcEFfjalyNG+FGuIa88fw/Mv+GdTU4jdM4jdM4jTM4
w/cNzuAMzuIszuIszuLm/H9vuZBa
                 "], {
                 10000, 12.25125, 12.005000000000003`, 11.761249999999999`, 
                  11.52, 11.28125, 11.045000000000002`, 10.811250000000001`, 
                  10.579999999999998`, 10.351249999999999`, 10.125, 
                  9.901250000000001, 9.680000000000001, 9.461249999999998, 
                  9.245, 9.03125, 8.82, 8.611250000000002, 8.405, 8.20125, 8.,
                   7.8012500000000005`, 7.6049999999999995`, 
                  7.411249999999999, 7.22, 7.03125, 6.845000000000001, 
                  6.66125, 6.479999999999999, 6.30125, 6.125, 
                  5.951250000000001, 5.779999999999999, 5.611249999999999, 
                  5.444999999999999, 5.28125, 5.120000000000001, 4.96125, 
                  4.804999999999999, 4.651249999999999, 4.5, 
                  4.351249999999999, 4.205, 4.06125, 3.9199999999999995`, 
                  3.78125, 3.644999999999999, 3.51125, 3.379999999999999, 
                  3.2512499999999998`, 3.125, 3.0012499999999993`, 2.88, 
                  2.761249999999999, 2.6449999999999996`, 2.53125, 
                  2.4199999999999995`, 2.31125, 2.204999999999999, 2.10125, 
                  2., 1.9012499999999994`, 1.805, 1.7112499999999993`, 
                  1.6199999999999997`, 1.53125, 1.4449999999999996`, 
                  1.3612499999999998`, 1.2799999999999994`, 
                  1.2012499999999997`, 1.125, 1.0512499999999996`, 
                  0.9799999999999999, 0.9112499999999996, 0.8449999999999998, 
                  0.78125, 0.7199999999999996, 0.6612499999999999, 
                  0.6049999999999996, 0.5512499999999998, 0.5, 
                  0.45125000000000015`, 0.4049999999999995, 
                  0.3612499999999997, 0.31999999999999984`, 0.28125, 
                  0.24500000000000013`, 0.21124999999999966`, 
                  0.1799999999999998, 0.1512499999999999, 0.125, 
                  0.10125000000000008`, 0.0799999999999998, 
                  0.061249999999999874`, 0.04499999999999995, 0.03125, 
                  0.019999999999999858`, 0.01124999999999992, 
                  0.0049999999999999645`, 0.0012499999999999911`, 0., 
                  0.0012500000000000356`, 0.005000000000000053, 
                  0.011250000000000053`, 0.020000000000000035`, 0.03125, 
                  0.04500000000000021, 0.061250000000000186`, 
                  0.08000000000000014, 0.10125000000000008`, 0.125, 
                  0.15125000000000038`, 0.18000000000000033`, 
                  0.21125000000000024`, 0.24500000000000013`, 0.28125, 
                  0.32000000000000056`, 0.36125000000000046`, 
                  0.4050000000000003, 0.45125000000000015`, 0.5, 
                  0.5512500000000008, 0.6050000000000005, 0.6612500000000004, 
                  0.7200000000000002, 0.78125, 0.845000000000001, 
                  0.9112500000000007, 0.9800000000000005, 1.0512500000000002`,
                   1.125, 1.201250000000001, 1.280000000000001, 
                  1.3612500000000005`, 1.4450000000000003`, 1.53125, 
                  1.6200000000000012`, 1.711250000000001, 1.8050000000000006`,
                   1.9012500000000003`, 2., 2.1012500000000016`, 
                  2.205000000000001, 2.3112500000000007`, 2.4200000000000004`,
                   2.53125, 2.645000000000002, 2.7612500000000013`, 
                  2.880000000000001, 3.0012500000000006`, 3.125, 
                  3.251250000000002, 3.3800000000000012`, 3.511250000000001, 
                  3.6450000000000005`, 3.78125, 3.920000000000002, 
                  4.061250000000001, 4.205000000000001, 4.35125, 4.5, 
                  4.651250000000002, 4.804999999999999, 4.9612500000000015`, 
                  5.120000000000004, 5.28125, 5.445000000000002, 
                  5.611249999999999, 5.780000000000001, 5.9512500000000035`, 
                  6.125, 6.301250000000002, 6.479999999999999, 
                  6.661250000000002, 6.845000000000004, 7.03125, 
                  7.220000000000002, 7.411249999999999, 7.605000000000001, 
                  7.801250000000004, 8., 8.201250000000003, 8.405, 
                  8.611250000000002, 8.820000000000004, 9.03125, 
                  9.245000000000003, 9.461249999999998, 9.680000000000001, 
                  9.901250000000005, 10.125, 10.351250000000004`, 
                  10.580000000000007`, 10.811250000000001`, 
                  11.045000000000005`, 11.28125, 11.520000000000003`, 
                  11.761250000000008`, 12.005000000000003`, 
                  12.251250000000006`, 10000}}], Filling -> Axis, 
               PlotStyle -> {Thick, Red}]], 
             Text[
              StringJoin["E = ", 
               ToString[
                
                Part[{0.4999999350254297, 1.4999995484956818`, 
                 2.4999984605982553`, 3.4999971553885496`, 4.500004536594657, 
                 5.500085760992935, 6.500589369407409, 7.502941254532952, 
                 8.511593046258781, 9.53698406374112}, $CellContext`n$$]]]]}],
           "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, 
          "Options" :> {}, "DefaultOptions" :> {}], 
         ImageSizeCache -> {489., {200., 207.}}, SingleEvaluation -> True], 
        Deinitialization :> None, DynamicModuleValues :> {}, 
        Initialization :> ({$CellContext`plotDiscrete\[Psi][
             Pattern[$CellContext`psi, 
              Blank[]], 
             Pattern[$CellContext`grid, 
              Blank[]], 
             Optional[
              Pattern[$CellContext`range, 
               Blank[]], All]] := With[{$CellContext`phases = Association[
                MapThread[# -> #2& , {$CellContext`grid, 
                  Arg[$CellContext`psi]}]]}, 
             ReplaceAll[
              ListLinePlot[
               
               MapThread[{#, #2}& , {$CellContext`grid, 
                 Abs[$CellContext`psi]^2}], ColorFunctionScaling -> False, 
               ColorFunction -> (ColorData["Rainbow"][
                 Rescale[
                  $CellContext`phases[#], {-Pi, Pi}]]& ), 
               PlotRange -> $CellContext`range, Filling -> Axis, 
               AxesLabel -> {$CellContext`x, Abs[
                   $CellContext`\[Phi][$CellContext`x]]^2}], Line[
                Pattern[$CellContext`pts, 
                 Blank[]], 
                Blank[]] :> {Black, 
                Line[$CellContext`pts]}]]}; Typeset`initDone$$ = True), 
        SynchronousInitialization -> True, 
        UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
        UnsavedVariables :> {Typeset`initDone$$}, 
        UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
       True, StripOnInput -> False], 
      Manipulate`InterpretManipulate[1]],FormBox[
      TemplateBox[{
        FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 RowBox[{"arg", "(", "\[Phi]", ")"}], {FontFamily -> "Arial"},
                  Background -> Automatic, StripOnInput -> False]}, {
                GraphicsBox[{{}, {}, 
                  RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
                   "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                   CapForm[None], {}}, {Antialiasing -> False, 
                   StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
       InterpretationFunction :> (RowBox[{"BarLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"Rainbow\"", ",", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"LegendLabel", "\[Rule]", 
              RowBox[{"Arg", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"\"Ticks\"", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "3.14`"}], ",", 
                  RowBox[{"-", "1.57`"}], ",", "0", ",", "1.57`", ",", 
                  "3.14`"}], "}"}]}], ",", 
            RowBox[{"\"TickLabels\"", "\[Rule]", 
              RowBox[{"{", 
                
                RowBox[{
                 "\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                  "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}]}], "]"}]& )], 
      TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.7075765991649694`*^9, 3.70757664255022*^9}, 
   3.7076087067046432`*^9, 3.7076087671873617`*^9, 3.707745208877721*^9, 
   3.7077452871817303`*^9, 3.7077565238405304`*^9, 3.7077568372577367`*^9, 
   3.707758856098099*^9, 3.7077589288473005`*^9, {3.707759004726738*^9, 
   3.7077590653586197`*^9}, 3.7077711794142656`*^9, 3.707771876601435*^9, 
   3.707773857194567*^9, {3.707774385820434*^9, 
   3.707774401041007*^9}},ExpressionUUID->"d7997559-9702-48f9-9acd-\
fa6ba5ce6afe"]
}, Open  ]],

Cell[TextData[{
 "N[] in matrix: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "10"], "=", "9.53698"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9dd17dc6-1cc5-4998-b918-8e50db799e99"],
 "  in 0.16s"
}], "Text",
 CellChangeTimes->{{3.70775894467708*^9, 
  3.7077590334044113`*^9}},ExpressionUUID->"9e281638-30d2-4a2c-ab59-\
e17ed4078937"],

Cell["no change without N[]", "Text",
 CellChangeTimes->{{3.7077590601910105`*^9, 
  3.7077590631722403`*^9}},ExpressionUUID->"8b1b6e70-2262-435c-a8ab-\
6bd719da2839"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing on an infinite potential well", "Section",
 CellChangeTimes->{{3.707747275891855*^9, 3.7077472788816037`*^9}, {
  3.7077475054481554`*^9, 
  3.7077475056514235`*^9}},ExpressionUUID->"9e01e211-cf8c-4559-af49-\
433cd7ad09d6"],

Cell["\<\
Why is this so expensive? Boundary acts like an infinite potential well!\
\>", "Text",
 CellChangeTimes->{{3.7076088368723173`*^9, 
  3.7076088469073243`*^9}},ExpressionUUID->"4a714243-0ab0-4b78-a32f-\
a698ca5714a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"presentSpectrum", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "0.01"}], "}"}], ",", " ", 
   "\n", "\t", "0", ",", " ", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3"}], ",", " ", "2"}], "}"}], ",", " ", "\n", "\t", "10",
    ",", " ", "\n", "\t", "1"}], "\n", "]"}]], "Code",
 CellChangeTimes->{{3.7076086942462506`*^9, 3.7076087020127497`*^9}, {
   3.707608778785597*^9, 3.7076087790377216`*^9}, {3.707745262031457*^9, 
   3.707745265581277*^9}, {3.7077460951765957`*^9, 3.707746096370332*^9}, {
   3.7077461897197084`*^9, 3.707746190024*^9}, {3.707746986571501*^9, 
   3.7077469911436844`*^9}, 3.707747024433487*^9, {3.707747089159088*^9, 
   3.707747200365397*^9}, {3.7077472317300777`*^9, 3.707747248840953*^9}, 
   3.7077476461093593`*^9, {3.707747697321102*^9, 3.7077477068178835`*^9}, {
   3.707747764168457*^9, 3.7077477644062223`*^9}, 
   3.7077479636428967`*^9},ExpressionUUID->"6d758bb6-b14c-4c1f-875d-\
d7d3228c4e80"],

Cell[BoxData[
 TemplateBox[{TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
       Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`n$$], 1, 10, 1}}, 
       Typeset`size$$ = {432., {137., 144.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       False, $CellContext`n$5031$$ = 0}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
        "ControllerVariables" :> {
          Hold[$CellContext`n$$, $CellContext`n$5031$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Overlay[{
           Show[
            $CellContext`plotDiscrete\[Psi][
             Part[CompressedData["
1:eJw1mXk8Vd0XxlMpCY3SpJIGpYFo0GAhJRJNUhpNFZWiNGmUSCkRGoyJEplK
obAK0YBMGTLP7nhKKhVvv3PP3r/38+mP87n37rP3Ws/z3evxqtgc3mjfv1+/
frLsv/fsv+ArSfUyFa7gVRh6e2hqAFwdaHcs0SISIu7obp1lEQspD3dtT5+V
DL4ZMjZFM5/Db9eGe77T0kFHJycyY3ImpFa8Tr/q8xr63Q8YPfdKNngPyLsQ
7Z4Lj3p/zi93y4O2+nP77x59ByWq+70+O3wAz4GH+jvsKoDmK10O2huKQO/H
hYVyKsWwXzGi8/TYEqisd86tUCiF3lGb1w8fWAa+6Q3Tx/aUwbm4xm/1/HL4
2rvW1aL2M6wbvdDzYEEFpB99M1zxVSW8nTRhrF5MFbRdt06tv1UNE1XuTm0+
+wWG9r/7aNneGvi991dCrWktDFbrznihWQcut61dXo2uB/8b167X/qiHwfcn
CoZ+boCyZxdylLc1wi5+VFZCXiN81/eQXqDVBOf+3s6PCGuCZdUvVnXLNMPr
wIul012aYfiKotJ5X5qhZs/ILBn9FnBRKZgU/7AFXg7k+ysObQXXAM2CZU6t
wMuMujmuuBWyBW0vYzTaILf83tIW3zaw7CkcnSNqg305ZnYGJu0w3HK41fbo
djgj8Fwh868dBr0fcGilZQdcLhm2a3BCB+QE5IaaDeiE+zzVklGWnWAw2On5
hsedoDP2+JQBfzrhk8GPfqrGPBBOqd31JIgHHpGR2+818yDLImhB5xw+vBk2
U8fPlQ9rvmk23Mzgw6Zsk8RmKQGERQwwd18lgIq/C84f8BKAf83iiffyBfDc
cfkk2UFCKM05fjfVQAgtf/ZlhZ0Vwt/d4768eiGElb8stwwVCyFsqjjdW1UE
xqdqYrQsRRDy/mqrtLcIthkMMu1LE8F8nFU7pkMEWxaVJZqPEsORlSP6Ra8Q
w/BC82mj94phQ7a7/z0fMewRmTUsTBZDXJVGVkuZGJbl3peK7BZDa8zSYKdR
DEw2+hxspMGAGcRpqa9lIF/z6FMlOwautLp5DXVjQObQW33pm+zzjrE3Bzxg
wFw0Xl86hYHy+XYrh+QwMGXR9WiFYgYal+sFja5hIK54ld34VgZMGN9zkwUM
OKiuPKb6lYGVwZnd078zkLwk5NOMbgZW0+ej9POt9PvZ9Pd/6Hq6dP1u+r5j
9P1P6H7m0f09pPuto/u3oedZSM/3k57XmJ7/Oa2HI63PLlqvMbR+LrSe22l9
/1/vjbT+wbQfQPsTSPulRfvXSvv5gfY3nvb7Cu2/LdVDFNWHLdWLItXPv69E
Tyepvk5TvS2h+ouierxM9SlWInr9MYjodzvVszvVtzHVe+47on9D6ofqLcQf
i6hfZlP/hFI/hVJ/faR+20b9F0z9uIX6M5P6tXs58W809fNk6m8b6vdK6n99
yoMXlA+lEYQX1pQfRpQnLTMJX6oobxqlCH96phAeZVI+hVBe3ab8Uqc8e0f5
tp3yzoHyr5LyMI3y0ZDycgLlZwzl6VrK17uUt0mUv66Ux9aUz1URhNeBlN9D
KM9zKd+tKe99KP996H2wj94Pm+l9sYTeH4+zf33QrriMZge2Ng99EYXjXC6q
Pt/4FPce6deqZ/oS93xZvbB88husmV+rBIpvseFrQ9Au6ff4YsJxjYVMAbbl
aoe27C9G1SdWzvJbSnH3zWbtEN1ytLs9T0NxagW6W4Z2/fevEq1uyDo3VVZj
hu5P1dWPazDoqMn0tKN1GDk7bV3uogYs618a03uyES9hofjoxiZMz5y+zW9m
M66727N7ck8zKq8Kj+DltOBqv8/8jKut2PcqcN0+0zZsLXmgmibTjg9T306+
gO3Y/2PUVr8jHdgwactmnNCJkYc8RzW87sTXXasn5u/m4WLXkx7mPTy0bCv5
u+EqHyNlLnx+rChAs/fbR2jfE6BWdYrdJyUhqrokGOy4IcQn4+e0ZvQJcZez
qflnexH6Kh/ZdS1PhDyVj3l5k8VoyD83ydlZjDE+y5pdX4kRyvaezu4To1Ru
PqxewuDzU8/Pdzky6Kj/7vzLQAbHD5O7eCuNwbNuz7KPlTFYHmriYdnOoIa2
w+DF3xg8Ed9yc3g3g0/zTzu0iBk8cHtIfVITg4uEmnCmgEG9mV6NJokMXkpf
rDTtKoN/whcuGbGTwZBN9YHKagz65k49u0Ugxn5KGgs+PhSjVc9doY+VGMd6
DC5LGCRGh0Lbn6viRHhz5S1ThzUinLcqMVazXoj9LN5npR8UYtTFxUMmdQsw
J+HA5zPHBOjuY7ngp4iPc2fs5sft4aOcQu3pNwU8VF2jNXTHAh7O1rxgG+nX
iXfSK5oz+B14YN9k188rOvBDrO8VpWvtOGP2m/5JpW2YneO4sHB0G3aPyyoN
29CKNwMPNll4t+D5pi1J0zKacc4v3ntdfhNu7JzTUTWqCX0fujer6TRiwZLV
mz+m1OPsv6F2N5hazLx2qUhOtQbbaz6seGlejYq1QaPljlei3/66daeCPmPY
ZY/dp5PLcPKhKRO980vwuHyKmv7TT2jyQ/brqcKP+HFVk+hFUz7G7mk26GZy
UC2GN3V3F6IMf8iZT72pOHZ+304dqST8r0lpwfIBEfiP/S/6WP8VFwXcM+Ro
cZ/DTTH3fQh6wv0ehDbcevDdiFsfPH5x74O0Ydz7QdeJ2w+keHL7g6sO3H5B
to7bP9TVcueBSB/ufNC/lzsv3NHhzg9iUg94RurDrs/VC4pJ/aCW1BOWjefq
CwNyuXrDVlJ/GBzH9QPCSH8gi/QLTEj/QI/0E6aQ/oIG6TdcIP2HdKIH8Cf6
AN5mTi8gR/QD+4ieYCnRF7Re4vQGc4j+4P0YTo+wm+gT7IheIY/oF0yJnkGW
6BvkiN5Bh+gffIgfYCvxBygRv0Aa8Q84Ej+BHPEX7CR+g3vEfyDK4fwI2sSf
cJv4FRYS/0IF8TO4E3/DGuJ38CX+BxnCAxhP+ADahBdwlfADjAhPYA7hCyQS
3kAA4Q8UER7Bjw8cnyCc8AqKCb+gk/AMtAnfQIbwDpYQ/kEs4SE4Ez5CFuEl
nCf8hNOEpxBJ+AorCG/BkfAXjAmPYS3hM4wgvIZywm+4R3gORYTvkE94D4aE
/2BI7gPoR+4HkCX3BUSS+wM0DeB4/Z6bcF3a09dfIRFOX+jICTv2CqZv1/03
PCEHRgXYxMjdfg9TRouS7zh/gpZpfuoaoaWgcO37/GEnPoOusb24wLAKfDGk
sGxgDTjOCugOfF4H1vt9FfNnN4L5O4FVhHMT2LttHxOW0AyyP3jT5ZtaIN5U
uEtPpg0mR9YyN1XZuWJqeNauBR3Qb+/f7OHanQBySjsV1XgwJuH1o2Z5PpTE
78j72cqH6kqjeVVPBDBgh6dA0V4IPuZ3Go3kRTD1obnUsGgRFFl7XlGcI4bg
8CC1YZFiOKF8alH6IAa21Th/+rKNgf0+C38bBjMwOMk1o/QDA4fNc3UcOhl4
cSsn7Rc7b5qH30k+IWLg3caQYmE5A9adRt12sQzU+u2a3nOIgS+eW73fTWZA
U0PJvP9rMXy2FAXWmImh5dQQ84ACEVw7t2nccR0R3FxTqlQeKISk4KRs2WYB
pLT9fXp+kgB6ji51uL+WD5aXfyt0OPAg3/24VvGpTnh60PtSq1sH1C/5febZ
kXYIOWavXL61Ddb0dfm0arfCGhlhrrd0Cxz6c3nB4Y9NsDZLastqr0bol/wy
w+doPZwrCrtkmV8DHRNvPDw8tBqSerfG7tGvYOdBGJXlWAZdRfwLU72LoSHn
tc/O5R9hX76od4TlW4gJ1nZ1+pgFL9W1+jZUPoVjwl5bsAmGORurEg1iAjBa
z29M3qxklHbu8Hs3ORMHnVBsjnXPxXFbYP0Xhw/oO7bZVEGlGAc0zxg/cmAZ
Gvzc8m1L7WdUKHVarR9ThQ8v+F5ZvrcGSxNCB2WMrsfo4hcd7DyH5knn8th5
D33uTYln50G8XOphzM6L2PIyz4ydJ1G5w79C36Qd2xZ1ZBlYdmCNVL+B7LyK
qhdhzFRjHsqI6tU75vBxr+qyG01SAhTO9Gu+ky/AUHspp9CzQmyDZ5uvqIoQ
jH6U/U0TYdhinRMPVohxw6dCI+1kMZZ5Lvt1cBSDTkvmDBxjx6B33btqqQcM
dj1048kVM/i3eTAqCxjMthAqTGfv9R/0WUQ/96TfP0l/30LXs6frJ9D3GdP3
19D9BNL9NdD9bqT7H0PPo0jPV0LPK6Lnl6X1qKL1OUrr5UXrZ0jrGUnrm0br
7UPrzy8h/ZhC+/NfE+nXKdo/ZdrPvuOkvxFHSL97gPS/ypzoYS3VRzrVSw/V
TwTVk3ou0deQT0RvFlR/VVSPispEn3FUrxpUvy5Uz5eovm2o3k9R/RdSP8zS
If5op34Zfon4J4H6yeoY8Vcf9Zt8CPHfV+pHAfWn6Wni18VbiX9vUj/rehF/
6/gTv2dQ/8/bRHjwkvJhWgDhRSnlx3HKkxLKlyeUN2LKnz7Ko7k2hE9ulFed
lF/bKc+0qgjfxiYQ3jlS/nlTHi6mfHSgvNxO+dlIebqU8jWM8vYs5e81yuMc
ymcR5bUr5bcm5bnKdMJ3d8p7V8r/GfQ+KKT3g+wgcl800/vDNU/FsLUiEMO2
Vw2Xf5qCG/udcyxanY3VyVEuSWofsDFEtMK6pxinKtvG2nwsx4hW++kXvasw
wcW49/e8WrTa8OaialoDLra7pZt2swnDDR7UpGu1oMaPu8+dc1rRRabD2Ey3
HRUGzB9SFtmBR0/4fr7LdOKzekvHzap8NG8pjCtcLkDPirg6/lIhNh5UwScT
RbjfTeeaRpMI589+UJvkxfq/4PdRz2EMemjlNqidZOf1THfp+W8Y9HcxuGbO
ZzBVda2K9XcG/a6HxVnVMhj3ftLaTdEMjm7euNrdjEGFmsYS3Soxhv/uTvtn
wPp8pbjNyleEzmPefRyYxfpasSrp0ycBrrkSVBP7lo9hq1dF3o/gYVbi3l1f
rDvxp9XIVYGyHSjtvX66ekgblu5HebmxrTh5bP2XzPPN2JV5JPFLeSOeX6SQ
PGlBPXq891yhFfIFv42bJn9dUIHj/dT6N6mW4Z0qHd2ffkVYeaL1oGtmHv7V
/zV+aVQmyni9XOa5Ow7LvTrS791yhxjL4oTN7L1vuu2mRQc7D1TUub49ws4J
WY+bBgnZ+SFw2wj+A3au0Dz3QSTdrwp+rszZY8rOIXHSonfv2fnEy+6WyXF2
btlge3SbCjvPhN+b4p7Fzjk75zpsS2fnnwW3xs/zZ+eiTcoHrkrmpQm+CuGS
OWq0oneQZL6C7AOfiti5a6hYt/cVO49V6f6eeZWd0z5k9YUeZue3aV2pKa/Z
ue7UAdnTX9l5LyCmWc+PnQNl+9sNs2DnQ68By0Ty7NyodvHDiAR2ntwnPbDL
iJ0zw5Lr5iqw8+ec+Sd3bmLn0sK3M7O82Xm1WPQMDdg5Nve+nss8dr4dPu/Y
5/Hs3Jurem3Id3YeHrFmtm0WOycvy6yxCWfn514lfb9Sdq6OPztZP56dt+vU
Ly8JYefwQUV7DKay8/mB+D+PK9i5PUbqycp8dp73CJ89fwg758s1ThbJsPP/
xWFJz0+wueDhqX5flrN54Yl1d9wzNkfkmRzItWLzhd+F7DmL2dzRJwkkRtnL
jcgzRpLPMZF8HzPI7/EsWQ9Hk/WRvg9jyfvRkewHpcn+sInsF+n+sYecB7XJ
+XAwOS8+J+fHgaQemErqgx9IvfAlqR8qk3riDVJfNCH1xmGk/niE9AP5Ulx/
8AzpF1qS/mHvN66fGEH6i89Jv7FGxPUfhxI9YPVoTh9YfYPTC8oT/aDQn9MT
jiX6wg1Eb/jPhtMfLiV6xFFEn+hE9IoxZzn94jiiZ7Qk+savtZze8d5WTv/o
vIXzA0ac4/yBht6cXyDWgPMPDD/J+QmeEn+BCvEbVBP/gSPxI2wg/oQi4lf4
pcT5F+4RP0PZFc7fkEL8DkeJ/8GC8AAEXhwfwIPwAoYSfsB6whNYSvgC8V84
3sDTJo4/sIrwCFQJn8CE8AqUCb9gJeEZSBO+QfNHjneQNIvjH3w/zfEQ7Agf
YQzhJXxp5vgJBoSnIE/4Co/6c7yFUYS/UN7N8RjMCJ/hqy3Ha/iwnuM3LCQ8
h5WE7/BuIsd7uEX4D/vJfQDS5H6AOeS+gBnk/oAFZbuu668LxocP3V1LvqTj
LJWV8jsL8zC67vKPwjXF6HnXvfDxiM84rv66mlt6NfpGBdSLl9Sj7kKvL6cN
m3DYv0d37De0YPm2s93/oA0jk7M/6Mt34JmnlWstX3SiXb/rB6KX8DHAqelX
oZ8AlXv01z9DIXZ4nUh1ey3Cv2VyywL8WR9khao/02bnwn4aU7+w/F+3wcHX
so3BlKsapfld7LwXOrBcsYjBnD+jZrudYFB8vvHleUaMcll9nT2LxOiktcRQ
xlyEFl0LcsbpCDE0zfBK008+3k8ZvXDbVR7m89VKMn504MwNK9d4LWvHMYsU
PJ12teJwe62Fu62bsTj3qtpJo0Z82TVTIKtWi+Fzyn1/BlSixptwQWNtKa6y
tDxlq1CAl+dm7/tvUTYmpwq0ZTyTcPT5R7kl9dcg3HXdtFUnU8GjraJd9Ogt
XK3zCc9k73ORwqUP4y+Xg8rtX56qmtWwTaVlfhQ7D7jomfRmSzeBUsCOsD7F
FmgKSxyzip0nuscvPHutuh3yq1am/PTshNFi0+ZWdh5Zl7/q1tcDAlhTuNat
O0wIPwcHlyuw88z5ab6bos6IofyK3BObaQzEx+2IMmDnoecxy596NzIwtSVw
8kdWry57FJ93svPUcbUg3kgPBmJWjg56J8VAYkL4vAp2HnMI9bq4+aAIdC4+
/+/hdiFsMBF4n2Lnuf1T1tdkvuBBmI6DS8yMTqjZv2ZKPDsP3jy0a57b7Vbo
6Pkz83doM5QVjVmnx86Tyd/GHpgfXwuXMt5srZ9UBc3C7UHP2Hk0aPidkyoa
hTCuqcteYWcOJDXYm2iy82xO63mr+AAXlPIod+6e+RynTmy8/5ydhw01Xt3Q
31CEuvL9Fyr3lKH8EV7kSnaeHhZhlZemWYcezsMHJeY1ov9sIxvJPD48yvLw
2OJWvF4suLktuh2vbEPHEew8v2OHit3tZh7uTO8uO7dKgMuHPCi6x+aBYy1D
bkp5izBg9OAzw/ayOnojSnJg88QgzZqZ/W4yWDsucPewGgYrr23yVWH5W0yf
v2mQz7+/Jt93pL9fTdeTpevPoO8bR98/l+5nFt1f7AOy3wl0/0Ppef6FkfN9
dSLnHSlHzl88l9QjahypT+M5Ui+tW6R+wlZSz6gWUt8po0i9p4pJ/TMzST8E
XaQ/9p9Iv078Jv0b6UT6ucOB9HfUUtLvctr/JKoHT6qPx1QvAqqfCqqnAKqv
61RvmlR/WVSPqVSfFVSv/9fvX6pnoPo2pnofSfX/lvqhi/qjivplKPWPE/WT
OfWXDPVbEfXfFurHldSfGtSvY92IfzXTiJ8/UX9fp37fQv3/jvKgmfKhifJC
nfJjIeXJSsoXIeVNFuVPFuWRE+XTOcqrCZRffynPPlC+/Z938ZR/+pSHZykf
h1FedlJ+tlGeKlC+nqG8taD8daE8vkb5nEt5LU35vYjy/CjluxTlvRPl/316
HyjR++EavS+EpeT+6JU//0PaJgJqv924P0YKYQ5Y73Q3/QiHsw4P0nUpA5Q2
V48eWQ0KLyf8PnS6HhTGTp+dUNQEb/qVBfEXt8KZxb8/nTraDq9qd9xef6YT
Pup1Glas48Oh9fFqTIsAPo0qKpVeJoK7pybNGbVeDPsXa66LnsJAj//2gW1s
XpQLXPjfXTYnLnir6TWXzYfb7UY2xt1jYOu/pVNzpRl41zwxJW+2GPInLt8Q
OVQEod0XnzTECmBibfqL4KF8+BM3M+iCZifsDxy/O3NKO1xu04jorWsBLfVH
lducmqBJanBZXEIdpJjusA5cUQW8ORNvvAoshSEbx1394PUesqfe02za/AqS
st9OcWm5CmMbTN1DHqSgWqmC3aWledg14pbNBTaPLTo8WH1/fAU6Hgm9P3p+
LUZ9lr9+Na0RMwz09+Sy+SvIak9qyKU2TFfff+ELm7u6/0mdeOrDw8w3436X
sHmr5orww/5EIZ5aez5Fk81ZrgsHt536JEaPWP+hM9l8VTdnrlJGNYNaz7Nv
7WBzleG9WSFFuQz+bBLtcGPzlMvFFzOc/MT4ZNPOkRvZHPVorMJyJxMhdq77
GhrB5qdrX/8GWg7koadO8PSrbG7q3RTSm1Dbip2OibZP2bxkPd9lacW3BtxU
tCBuIpuTbJeanVkl+xmzW/q//sjmI+lFZZ9732fj1zV190W74nDDfulS0aMo
2Lxm+JvBU95A9zzTKlumALKNdLKS2BzkOCNL4XtlNZiHyPBK2fyzQX7/5Nsz
m0FrRITaGzb3PF03vNod20F5ifqGRjbvrLKw/Cj5+/FJPdmqQjbnHP526kyp
vQgcio0nH2LzzeeLppr6Sxg4Pdb80nU219ipNi7X+MbmGoVJBx6zeeb05bcq
E68ykFPapW7G5hjtlcbrHg4SQ7usi9IsNr+kvBy3/dgxAdx9laabzuaWir0X
ZZ7zO2DK2qy4GDavBFm+mGPu3QK1SQVfS9mcckUoNcODqYU5e6wSBrD5RH5Y
apJ7fgkM+jFbP4HNJeMSvTPzelNBi//637+jVcu3J3DP+K6b+xz7k+/jEvJ7
tCbrIZ+sj2HkfUjfjyVkPxhM9ofZZL/IkP2jOjkPZpHz4WFyXvQm58cDpB54
itQHv5J6oROpHx4j9UR3Ul/UI/VGNVJ/pP3AWaQ/aEX6hUakf6hL+omRpL8o
PZ/rNyqS/uP9fZwecJ0Jpw9wJnqBg62cfiCD6AnuEn3BC6I30DzA6Q9gM6dH
aCL6hEqiV1hpxukXuoieoZfoG9qJ3mFbM6d/iCR+gGjiDzZXc36BH8Q/8I34
CdqJv2CTN+c3UMzm/AdW/fpL/Aiyczh/Qh3xK3wn/oU3xM/wlvgbdhG/g/xI
zv9gSXgAV+s5PsC69xwvcPE0jh94k/AEdeZyfEGpdRxvcEV/jj+4n/AIswif
MITwCk2ecPxCB8Iz/Ev4huOUOd7hzBaOf3iP8BBTCR/xGuEl7ib8RPNbHE/x
GeErdhHe4vjRHH8xh/AYR+lzfMYBdRyvMZfwG/8RnqM24TtaEd7jjEEc/zGS
3AfoTu4HDOzi7gtUUODuD9y3udD2ifIDeOq1xGbeyGzY0zLlWn72J6jbdVVw
6UYFqEtnj0j5WQuOVbq8r+5N8Ojr3Pqnm1vhj2dsQ3dHO8xTCTEo0OZBQeTp
qhnaApgXqxrT2CCE+5FDiioWiGHYOYvVv9QYODdA68g6ZHNc3UfVod0M5Cb1
hxt5DBx+UX/bZjEDk4LizPTWiOH90F8eg3qFYBcT5/10iwBchQcCN+3kwY3D
Tcv/KnbAtu3F72K9WmGuonH8ipdNsMl5S27kwTrAINciC9lKcJthd1Xbuhhs
cx9edx6aA5v/qYnS9kXBdAdmn1dRMk4LN6sdw96nka9q/9u/qBSXbNz82Lio
CptPTIjpHNeAD1YNLfnh3oxTNZxGD9Nrw/ygnMryVx04YUbPwygxD79uCN6a
USJA1+j75Wa7RRjrl88LZOeBAqXsP437GPSZP3lLRC2Ddn0/FQ8xDGZu1Dks
H8Hg0beWtq7svBGlObs0p4HNTbeH/Vh2TIgfYy0slyXzMWVFhuOckE6UjrNo
cmXnme7Irn97g1rw6Y3b01WeN2Lcpsn3+vRqEL+2x37NKUelHYsCJ7Dz0kvl
ToV5ZzJQbse/lJP+e3BriMYoyd8vLbVMz6T4fATFe7dOaLPzmFu9TvDvgTVQ
YNZ6vvJOIxQcKn8850wLhI0PdgtWbYezK9Yb/2XnPenfZeHdYXywPXW+Qsle
CJYDjaq+lokgf+fpDqUOMaxTuKcG7DwZKx3xYbmYgSM/LsaPaGAgJMrNRXiI
gduLXgjVQsQQPEK6ey07r6a4+D782ySAaU+0Nbul+PA3b4b+75IOUP3v9Nrc
rW2g+mJWE8POw2/9R4e93tQADq9MH2waWg3VZfZbea6lIBCIm86a58P5Q7O2
9mPn7a7zoeYfLSJRVz3ezexKNqrkzs8cq1KMMknaJccKKtDE2qX4JTvPD/79
I1vy/wtman0r1nFqxfJ5yw8N/NeOh9KMPZWNeZiqXL7Djc0Ly2ISZwwQC7HR
eVBZ8Aox8hNNX6zQYPD4jNei/7IZ1Ji2c/NENo+cpM9d9PM++n0b+vt2ut59
ur7MfPI+e/r+VXQ/BXR/1+h+fen+TeeQ82RcIucLP0DO+5tPzu9C69H3ktTn
IK3XAFq/wbSeNbS+g2i9H9H6+9J+BNH+XKf9Okj7F077aUb7W0D7vZX2//96
+L8+/q+XSKqfMqqnSqqv21RvS6n+3lA96oYSfS7XI3r1m0j0e3E70fMxqm8L
qvdLVP9I/VAQS/xxkvrFl/pHmfppP/UXUL95Uf9NoH7cQv3pQ/3qTP1rSP2c
Rv3dOZ34PYD6XzCf8MCZ8sGL8oK3gfDDmvKkMIzwRY7yppzyR5/yyJ7yKYzy
SoXyS5HybBnlmy3l3TrKPy3KwzDKx55AwsvllJ++lKc/aglfrShvBWcJf90o
j4dTPmdSXo+n/G6kPA+mfN9JeT+e8j+X3gfG9H54SO+Lk/T+WHd9QlxYdTQ+
LZ8/ZGRkLj5yKp25Q6kU4zqEqZeCq/G/u3sGP9nRiCqYYSh63IKzumVL9GLa
0abN3SZyLQ/1Xlz6d9pbgDdS/ul/3CrCT6/eHjF/KsY13kNjQtj8n+i2+c6i
rwzqJk3zCP3EYPO9jYab5zN4qPvT0voRYuydNWP5czchOjlOu7P4KB+TS2q9
b/TrxARlH9frc9vwpz3vxFXpZgxT3f7BenYdGs7rqg0p/4yn3jW2O5kVoJT/
nk2yA9Pxp7BO/KE1GA6VbxiicygH8r7VzGe8SkD174hjLWyeSjrdZ3h3YiMc
V7cuG324BY7VdwTdYHNUPzujBp4yD7YsNEw7aiuApdWva+TZ/FSw2mntplAx
XEzU+veczekHf8/SDGRzk9GaONHaCgaq1vSPXwwMiHhLa1+weWnc2Z9Wk0OF
cFdwaHR8CB92qp/5vZ/NST+XTX0tY98Gfm2/efkGzWBxdsQOVzYf8RO+/Fi0
pwJWrzI+Yn6kEAafyuiRY3PRl7wlJjV3/DHyqLx/5+psLCkpt37C5qEdY39M
eutdhYV/dUfsTmvAvPF2I8vYHLR715QnNrrtaPTqyJLHTCfyTpj1VbL5R9Pz
rvTTiSJcHda1MNlLjBsfyV+YxuaeDI2Vr1bz2flFLj5vHeunl+eGpTmzeWds
SvofgYEYlSa2WYszhWg0znGjP5tz3Kx3G7227kTNUbxRw0PYfry6bx3J5pvV
4VZynZr1mF59Ls9SUIEvZac43GRzTblq7Vm3B5m4e/7yZPm77jBYSUp2IZtn
ZOMfBck7FMOMW3Pfq/SrAvMqzdgGNscMVXZbPqunGVI2OWtkybTD+AuP9zex
+eXYwPbwGEUBPKgbY5fWJwT7kwHRDmxuURqc7tTpyMD16T5r1razvDt7TxzJ
5pU3om8j++9kYMeZMaPOWolBuFk5XIXNKc7ah4+1i/iwd9/FQ7f8OiFJOmR1
JJtPFv0aEjg2oxl8+a9GpqbUg+KCnB29rpXAM/NPVn/6CS5lyu007kJwGfPs
T4ljW8Y05J6xzJz7HIPI93GIgPs92pP1sJmsj7fI+zCQvB8HW3D7wQNkf/ie
7BfzyP7RjZwHRYO486E2OS86kPOjIakH1p/n6oNnSL2wYCJXP8yp5OqJt/y5
+uLRJ1y9sUGRqz+umMj1A41ncP2B10O5fsGqL1z/oJD0E7QyuP7CAdJviCf9
h31EDzCf6ANmE71ABtEPmBE9QRzRF5gQvcFKoj+YRvQIlUSfoEH0CiZEv5BG
9AyPib5hO9E7vCT6Bw/iB0jJ5/wBzic5v6As8Q8i8RNOIv7Cg8Rv+Jn4D+cS
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
              "], $CellContext`n$$], CompressedData["
1:eJw1lD1MFFEUhdfOEAsLa9QOrYxaWIinxFKJJZWJxk7sDFpYgC0UFmqMMYFC
mw0mJEJiuIAYxQAB+VlEwJn9nd2d3aXBWJq57+M1m9k5c+/5zrvvnb/7sP/e
iVwut5Q7XoeW74uHzuQ7NjC6cNQz0LGuwvhgb1fHprtHmren23bfV9vOuLBt
mWp0oWWPejNly85msu6WrSxnK7UnLkztghdMzcsVmuaykaZd8dW0rGtf3DBv
O9qwG964YanL6vb6VbbqdtOFdfubtT1KbCIrN55YvxtMLHAkcNTgqMFRg6MK
RxWOKhwV83KDFXNZd8UcY7kMRxmOMhwlOEpwlOAo2pgXLMJRhCOGI4YjhiOC
I4IjgiPC/x98H+D3AJ/7+NszL9OzZ8Pu57cVvfwu/Xfp+4t+O/TZIacC+RTI
ZZs8tshhy7zc0KZtu2zDLjvvBpw/4VuHax2eNTjW8L+K7xX8LlvkhX/YS/e3
ZLdc+N1Oup9vNuc+vtpT779oV73vF/rN02eO+rPU/Uy9Gep8ssf+/ZQl/t1H
m3R93sZc98Ge+fsJm/P/3/L8gt9hOz4hPIv3Qs/zhN6Fevyf12Hox/spnQ5+
0M3oUvCLflbvAw/fzeta4FXwvyjyEPmIvER+Ik+Rr8hb5C/2Q+yP2C+xf2I/
FXLe0E7Yb4X8N3UuzIMWw3zoQZgXnQrzo8kwT7oT5kv/wrzpTZg/XQ/ziM9d
Ma/43RPzjO99Me/4PxDnAY5InBd4InGe4IrFeYMvFucRzqLCOSnCW9LzcJ7h
LuliOO/wl7Ua7gNyqOCzIu4P/FbF/YLvqrh/8F8T9xMcCRwJHAkcCRx1OOpw
1OFowNGAowFHE44mHE04UjhSOFI4WnC04GjB0YajDUcbjg4cHTg6cBzqPxSs
TfM=
             "], {-0.3, 2}], 
            ListLinePlot[
             MapThread[{#, #2/1}& , {CompressedData["
1:eJw1lD1MFFEUhdfOEAsLa9QOrYxaWIinxFKJJZWJxk7sDFpYgC0UFmqMMYFC
mw0mJEJiuIAYxQAB+VlEwJn9nd2d3aXBWJq57+M1m9k5c+/5zrvvnb/7sP/e
iVwut5Q7XoeW74uHzuQ7NjC6cNQz0LGuwvhgb1fHprtHmren23bfV9vOuLBt
mWp0oWWPejNly85msu6WrSxnK7UnLkztghdMzcsVmuaykaZd8dW0rGtf3DBv
O9qwG964YanL6vb6VbbqdtOFdfubtT1KbCIrN55YvxtMLHAkcNTgqMFRg6MK
RxWOKhwV83KDFXNZd8UcY7kMRxmOMhwlOEpwlOAo2pgXLMJRhCOGI4YjhiOC
I4IjgiPC/x98H+D3AJ/7+NszL9OzZ8Pu57cVvfwu/Xfp+4t+O/TZIacC+RTI
ZZs8tshhy7zc0KZtu2zDLjvvBpw/4VuHax2eNTjW8L+K7xX8LlvkhX/YS/e3
ZLdc+N1Oup9vNuc+vtpT779oV73vF/rN02eO+rPU/Uy9Gep8ssf+/ZQl/t1H
m3R93sZc98Ge+fsJm/P/3/L8gt9hOz4hPIv3Qs/zhN6Fevyf12Hox/spnQ5+
0M3oUvCLflbvAw/fzeta4FXwvyjyEPmIvER+Ik+Rr8hb5C/2Q+yP2C+xf2I/
FXLe0E7Yb4X8N3UuzIMWw3zoQZgXnQrzo8kwT7oT5kv/wrzpTZg/XQ/ziM9d
Ma/43RPzjO99Me/4PxDnAY5InBd4InGe4IrFeYMvFucRzqLCOSnCW9LzcJ7h
LuliOO/wl7Ua7gNyqOCzIu4P/FbF/YLvqrh/8F8T9xMcCRwJHAkcCRx1OOpw
1OFowNGAowFHE44mHE04UjhSOFI4WnC04GjB0YajDUcbjg4cHTg6cBzqPxSs
TfM=
               "], CompressedData["
1:eJxTTMoPymNkYGA4CcQC6gyjYBSMAhwAlD8Ak6sC6w==
               "]}], Filling -> Axis, PlotStyle -> {Thick, Red}]], 
           Text[
            StringJoin["E = ", 
             ToString[
              
              Part[{1.2265789732795331`, 4.906313789538045, 
               11.039197845937522`, 19.625219164403884`, 30.66435893288399, 
               44.15658946564377, 60.101871585140614`, 78.50015142872532, 
               99.35135668414563, 
               122.65539225853009`}, $CellContext`n$$]]]]}], 
        "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
        "DefaultOptions" :> {}], ImageSizeCache -> {489., {190., 197.}}, 
       SingleEvaluation -> True], Deinitialization :> None, 
      DynamicModuleValues :> {}, 
      Initialization :> ({$CellContext`plotDiscrete\[Psi][
           Pattern[$CellContext`psi, 
            Blank[]], 
           Pattern[$CellContext`grid, 
            Blank[]], 
           Optional[
            Pattern[$CellContext`range, 
             Blank[]], All]] := With[{$CellContext`phases = Association[
              MapThread[# -> #2& , {$CellContext`grid, 
                Arg[$CellContext`psi]}]]}, 
           ReplaceAll[
            ListLinePlot[
             
             MapThread[{#, #2}& , {$CellContext`grid, 
               Abs[$CellContext`psi]^2}], ColorFunctionScaling -> False, 
             ColorFunction -> (ColorData["Rainbow"][
               Rescale[
                $CellContext`phases[#], {-Pi, Pi}]]& ), 
             PlotRange -> $CellContext`range, Filling -> Axis, 
             AxesLabel -> {$CellContext`x, Abs[
                 $CellContext`\[Phi][$CellContext`x]]^2}], Line[
              Pattern[$CellContext`pts, 
               Blank[]], 
              Blank[]] :> {Black, 
              Line[$CellContext`pts]}]]}; Typeset`initDone$$ = True), 
      SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> True,
      StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]],FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               RowBox[{"arg", "(", "\[Phi]", ")"}], {FontFamily -> "Arial"}, 
               Background -> Automatic, StripOnInput -> False]}, {
              GraphicsBox[{{}, {}, 
                RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
                 "], {{
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}}], {Antialiasing -> False, 
                 AbsoluteThickness[0.1], 
                 Directive[
                  Opacity[0.3], 
                  GrayLevel[0]], 
                 LineBox[
                  NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                   7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                   112.5}, {7.5, -112.5}}]]}, {
                 CapForm[None], {}}, {Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
               Scaled[0.02], PlotRange -> All, Frame -> True, 
               FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
               Opacity[0], FrameTicksStyle -> Opacity[0], 
               ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
     "BarLegend", DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"Rainbow\"", ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", 
            RowBox[{"Arg", "[", "\[Phi]", "]"}]}], ",", 
          RowBox[{"\"Ticks\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"-", "3.14`"}], ",", 
                RowBox[{"-", "1.57`"}], ",", "0", ",", "1.57`", ",", 
                "3.14`"}], "}"}]}], ",", 
          RowBox[{"\"TickLabels\"", "\[Rule]", 
            RowBox[{"{", 
              
              RowBox[{"\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7077477650794506`*^9, 3.707747964264666*^9, 3.707756524185541*^9, 
   3.7077568376386147`*^9, 3.7077590742305036`*^9, 3.707771179803672*^9, 
   3.7077718769860153`*^9, 3.7077738575316205`*^9, {3.7077743863094463`*^9, 
   3.7077744014250603`*^9}},ExpressionUUID->"8ce7f97e-a0f8-459c-b4d6-\
9016efc668a7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\t\t", 
  RowBox[{
   RowBox[{
    RowBox[{"grid", " ", "=", " ", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "0.01"}], "]"}]}], ";"}], 
   "\n", "\t\t", 
   RowBox[{
    RowBox[{"potential", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"0", " ", "x"}], " ", "/.", " ", 
         RowBox[{"x", " ", "\[Rule]", " ", "#1"}]}], " ", "&"}], ")"}], " ", 
      "@", " ", "grid"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7077477247358456`*^9, 
  3.7077477521609993`*^9}},ExpressionUUID->"debfb850-e1a0-4f5d-b737-\
2e927de75d20"],

Cell[CellGroupData[{

Cell[BoxData["potential"], "Input",
 CellChangeTimes->{{3.707747735140704*^9, 
  3.7077477357240553`*^9}},ExpressionUUID->"ae9012af-b77c-4133-acd0-\
ab1be3ced72a"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7077477359825816`*^9, 3.7077477545548177`*^9}, 
   3.707756524350565*^9, 3.707756837802136*^9, 3.7077711799811907`*^9, 
   3.7077738576706324`*^9, 
   3.707774401615093*^9},ExpressionUUID->"4e30d6f1-a633-4d40-9557-\
b834c96776c4"]
}, Open  ]],

Cell["\<\
Adding very high potential either side before the boundary seems to improve \
numerics (speed and accuracy)\
\>", "Text",
 CellChangeTimes->{{3.707747305934343*^9, 
  3.7077473278302813`*^9}},ExpressionUUID->"1b32fb37-a580-413a-8f8b-\
6bd34b505f00"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing on other junk", "Section",
 CellChangeTimes->{{3.70747289850778*^9, 3.7074728991652346`*^9}, {
  3.707495247457139*^9, 3.707495260755706*^9}, {3.707573828488742*^9, 
  3.7075738303908615`*^9}},ExpressionUUID->"4e17d6ab-b9fb-44f5-b687-\
e232b4f3069f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"presentSpectrum", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5", ",", " ", "0.01"}], "}"}], ",", " ", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"9999", " ", 
     RowBox[{"UnitStep", "[", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"x", "+", "2"}], ")"}]}], "]"}]}], " ", "+", " ", 
    RowBox[{"10", " ", 
     RowBox[{"UnitStep", "[", 
      RowBox[{"x", "-", "2"}], "]"}]}], " ", "-", " ", 
    RowBox[{"10", " ", 
     RowBox[{"UnitStep", "[", 
      RowBox[{"x", "-", "3"}], "]"}]}]}], ",", " ", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3"}], ",", " ", "2"}], "}"}], ",", " ", "\n", "\t", "10",
    ",", " ", "\n", "\t", "10"}], "\n", "]"}]], "Code",
 CellChangeTimes->{
  3.707582213864502*^9, {3.7075832709865055`*^9, 3.707583300441403*^9}, {
   3.7075860417769585`*^9, 3.7075860423598804`*^9}, 
   3.7076088728969717`*^9},ExpressionUUID->"de7f7cea-f073-4791-8279-\
8150365f1619"],

Cell[BoxData[
 TemplateBox[{TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
       Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`n$$], 1, 10, 1}}, 
       Typeset`size$$ = {432., {138., 145.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       False, $CellContext`n$5197$$ = 0}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
        "ControllerVariables" :> {
          Hold[$CellContext`n$$, $CellContext`n$5197$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Overlay[{
           Show[
            $CellContext`plotDiscrete\[Psi][
             Part[CompressedData["
1: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
OTn5Bvi83apuLKYRXldcdlGfbIKPvtGlVF5rgafy2Msxg1ZorF5t3ZffBnkZ
awP1/2uH3VQ+bWG3OuHyYQs9YtwFJfOqtLRzu+FvStJq3FwPPHJukCm71AdD
LjznwN/qh96KI5Qkzf3wS347Nbf2AFSkL7fX2B2Ar5KNYv0jBqHsvk5/DucQ
DHuhl/IFHYJeLJOOCcrDUIjFdE8TG4aKXi/rNx1HIMmp035KZ0Zh/nXfM9ZJ
o/A99+QtmVtjMDDyY3d/+RhkIHpvkUqMQ+k1q8Kh7nG4E6t5WUxtArqX+XqI
zE7A4drVa3WGk5BVqN+geWkS+pFRNUlaTsEti5BuoY0p+OewkiPeahoyHBJC
Xq1Pw7+l3/oczWdgvIb13OrCDOzOy6gt1p2FJmRCAej4LPQ3vvjujOIc1Gqw
aopsmoNDv8/scrDMQwrWbaFklXk48CJx60boPPx8ypvsR8M8dO1tVtLZnYdR
dMLDNHdwMIg8MapFBwdr5spTvKJxsEIyi1G0GQdN+gdu7e3goBemeKmIHQ97
0qf5dFTw0GPtYu9Jbzwsmit8lfkVD99Rmzy7M4GHFLeteT6SE6BkpUYazV0C
ZJlQFdV9SYBS0pJtSW7Hds3/yKqzCTBd+KCtpo0AJ6jl/2WsECCTxWKaAQ0R
DpbeLjrBS4Tn4zA5byUifJNlnzxmRYRDa1NjJ8OJkKl5/jllIRGm67K+IrQS
YRLKZxCBI8Ic/U+rZ/8Qoa28mK8GIwbb2mdbHW5jcNsYNdEVx6D8ugH3+ZcY
nJPrxcebYBBE29jjXDDo+UdpbCcUgwxzVEz9KRisqViRtP2MQekrm3GTlRic
7JmTPN2MwYks2ayD3mO/YYlnv49jcDruwsFtHAa1eg/Wjf/DYLLkWx/jdQyS
bdtpcW1jkL5Q+NHX38fz/7T9t7WHQSVGoacH+xj8lZL+uOkYyWJZcM+P7bnX
+4STf2GwR3PG6tPmcVxXzKHTKgZj65JtqRaO450MXNCdxWDtGYkQ5xEMvo9v
nX3ZhcE7/PsOvyEGGQtSdjVLj/fnL3khMA+Dp5pV053iMWjsvPqWLwCDkc6z
b0rsMfiSJMf9UA+DR69kx+kUMFgSaPLhpzAGNXZo+lJZMfjz4vf581QYjOK/
cEF3iwgt/sqOO48f823ikWJUS4QleiRL7FnHeci6rFHtS4QEzzNJ7EZEGDnc
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
SvzSQvAJiZ7hyp8ghxTPZ7ubThEqUxudX9pTCdvrYfuL9AfIMungA7eWn9/q
or6lmzZDctWk1ucPLxFX5xu37bd4RbQLtJ72Tsgk7MPF4wQdRsm286Y7YuSW
iL+ZF752NR8hOveaCmya/0febm/7eDB5mqhvWb91XrKe+Fuo+9bN/DvptPvE
6jOs74QBn/A9191jpLBCYbnYWjq5LsWft11vngjpqFlb+3KSbGdIW/hOficc
hLMVN12aJK2ST/j4pXOqCW+PN/HlGSW/ifj/fPe2i/ypUe204eAwWSL134sg
jUXCzEdGjq1wgGivi7vgc3KQdLje/1ZX7BvpIXfo79elSUJ8VdK9uySVPJPj
dwqOjhG7brl2NO2bIw92DL6mHmdT43igulpDa4kUqdbneyg9RLSh4uqB1Szi
z6UJRaPsGfJoXtQ7xy3txLGgj19Ms4eIkqivCT5r/pGOtNH9N9S/E84ZvNOJ
wmUE3/WYsdSNv0htv+G9BaO/CPfnLV1jl4bJyarzW0TP/SKZz6br3q1mU3O2
1qnwcGQv7pdWdC18z66WZ+Xz5UfdHNkfYer8qmuQoFWuC1CkfiVPcBxUP+/b
T1BcZbSzVvwkwlZeFHSXXCKvmjVXZGI1wecr7V5x9Qdx1/DGrjWsBfJQN5Nn
twibWp2Mju9FSbZiwa2lPTML7cSOjAXb3VYMYnC7UNHO3dOkTuJ39uG7i8Tl
efGP6mFsxd2CW/O+/XhFhpPxtCqbISLryXz09Isy4sOXG4xo3SqCfffhJ2n3
JkjeW4Jb0rxaSL/6/ieUD+xq/9X1CXDVfyMdU2MKHdorCUpztf9q7W5in3TX
3JHLzWTl6AEnBXKCsGxUptHY58mDKh4O7BG/CWu3dOviVcNkb/PCr3OOyQTn
xuBJlfwSsvRG8+SPb/0kwz9vovEZlezWNHe6sOoXccDBn6NPZ56kdFLepLxp
IZqzt94SK1okMgrl2RWcp8mkidmte+W+k7JqyoqSmX8JTp8Z1SPkNHmaLUsh
uX2eaPCI+ePznkqSL93DfY17SUPPdFfF4jSClbwQ4ShVTvQ8OUzRODNO3HI4
YlrQdYvo2iV1lnZ4jmS2ca3wyl8gHH6Fv7hwcZGkbD3xH88ii9DhK3LuV6SS
OnETNWbbvhNjNFmppaw28g9Me7+N5ijWVJ24T8xMEoXx+vU1BkWkgV7HW/2o
WWLspu3UsZcrio/dFIZrhvOEENv6+ifnJklrTo+ADU//EnwJZ+gvdnAVj/yT
O/A8co5Ibtx93bmvlxhv6zTWv8YgVQ9WG0p5R5InjARCa6IGiX1uHA02n4cI
rvRd+YUHmsmGJ4onH5TXEnnrfM8Z+VYTVasjkjMzqOT1UOsfFQeziFD5EIET
nmUEx5v1t2/VPyPp76lfd2SXE5X2qlEbvgWRshH2A3mMf2Tu4dTFN5sXCZW9
nDsl3IeJVzwzL7k1h8iuON+r9HdzZPtR4T5/nwUiP0D7mKzsT7KrM0M+OX2S
aHg09v2Z01+S8F4cEPLjUIudr8lnDv8lBwN6+VZrDZAb4d2DsYu/CJ39Ihgq
PEVczFP1djw1RjqAi3La+wkSine8zzv2jxj54+iztnKSVD/3d52ByigRFutz
Zdauj7xl0uFg8vMrwVN4VjprFZUIitWmfXs0RhZserOYwNVM5HN6bg/NGiQd
vxWb+xVxqSXOMVw7jDiLo/yqfWRD6onbPg6M+IBxwmS0QrYlZZg0e8LnHKPZ
Q+wNsrj1rauGaPP8JvTbi71YfFHu0cc/EwQzWjE2dlUtQfl1K0PidBPpIJ4z
nZGRSAjKvFZjfzxDvqEav5CcpxEReDfm57YS4l9LQ9LVKzPk8WNF2biXTlhs
VWmg0EaJplPt0g7SLaRLpbprzSiLlFjr63S7Z5Z0DqMY6jzkUdPiiJPOspwi
N0zPyhusHCLj/Y7efbK7jBjhPs4d4zlNPN9/maeoPIPcccV0eHfTEtn7Fw48
+9JFrPbew1+axSDWu5cqi1xqIIl6cfmV9kwykfVkZdGFaYLPr4oxf/wXueVQ
9kFHs88kVXnv2mHaD3JPusX2F0PsagdtDYm8mSUyqqOTtudCH8E/o/Px0Ksi
4lOGunSzYwO5OsF9AzW8nNy5Wknm38lJUjDl/kCLzx/ikVyugloXR7FVxgrF
pf+41HaOWnjwwR9yq7YXa3xrKzE41qL44hgSRcW+6rpm40TTkaX0/7rmSRvN
zsrjjN+ES/w7zmiPEuLmqtkNr9OWyJf70rh0h7nUJLNSv1l8GSNHWcocnF0D
RFNHu4SHYykpd11piMttlLy9scPUb2iOSHyrYBB9Ppr0TQr5kHl6mnzFCM0e
OPaboLm5P72XvEhGrvDZeijkJ7H9bOTwyS9tRKmpDIeqSi3pdJIr/OqTKnIo
cZ3s2qND5NnP+TcpYQyi0Jyi+0i8hNxQxa3aYDRM+Lk5qII2gwz/slMhutCO
DFNJcM+uGyDw2q5mDXa24h0jzi7nW7nUOqW3h8UaLPv3WTCYXF1PqBYTzq6q
LIKp1fBoijZHctYv+OWqzhGR7y/wOwrVES1Pj5pcD6WRKytzeaSVaMQGo43l
B/Ae4SStfpt5bJjcvIsW/SrpD9HQLnuV/dV3sp5RcjtItZ8smG+4qT7eT6Re
eXLHOLKSWKMfk6O+haN4R9vTqKLINcUvA+31C+KUilev14mrGDMunlJTZQxR
3IodGWpZYa/fFaeqbFN/EVpUHC+hJ9abSyuedOSdVPdkw2A2I6d1CZIYfiT5
oXjjETT8a6C0ucACW/O9Rve1P8Rd8ZJP6q2iUWlb2MPTjp/QJcbZ1Dc/B+Vq
trT5yBahQg8372ntUtTwvPxy1LYCB/1P4lPfatz2zveEamAdavx+eEPwSSNm
nGf3DVFqwX+N+l6GH1rRUtBAgPWnDVfZ++tb6nVgwqUP39mDO/HnI76GsVoK
Dj52fWw22YWjjWGMd6upmFyScWpCuAetOcdO56/pxYG1D2bPzPTiZ+f5fbL1
fbg5KP5wUWA/apiwD/sBDZnsoRMS/TTcMhGkJ2E1gD8OEGZ7+gdwnrgYcn8r
Hb05m2rlten4xuRGyeOrdFx5XM/d1ZmOttWeQTOedOThLdD840bHn+887jy3
pWN1stznjLN0PFZVL+q2j45JE4GWs1x0DHqiSL6MGEBKo/Tt/zYO4LF9v8V+
P6KhxwGuG9b9/Vjb7XedKdmP2W222wbO9uHX42y2tNu9GH14p6fDgx7cqQcR
sveoeLtYsT7Xrhs/uZYfR90ufKZRp7gkTsH+Pdf4FPo6kNYifEg6qB3PCucE
Ziq3oU4tvTSlvQVt/sqWjtU24avZC/enuutxwWt3z0lKDapNvRNjlFfirtnZ
17GxZajicb1J4mcxcqSKGho/zMcD4WudFnkycfal8w0TjgSM31Y3cawhGFdc
u/yNOegOpde02ZpNo5b7fCet/1YaHBip49uskgNHjwgon07/Amybb+f+Xu6T
vf7k9Tt7KkA7unv9f8erwf17KW2lYR246SfIKOk1QoWVGi9LvAXUSnoO3/Zt
BfG5/8SZg22w0LlfyuhAB8wfDHSb9OgEcL5s9D2TAp0Py+O9+rrA5obS3eHZ
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
6Ka34MchpaDn4A7/A2SIICc=
              "], $CellContext`n$$], CompressedData["
1:eJw12DuMZ1UdB/D/+/24jzWxQuzQyqiFhXhvpyUQCwuKjYnGztXKoMUWYOyk
sBBjDAkU2hBMSITEeK6AAQ2QRd6IOLvssrPvmdl5P90958O/2czOmfv7fn73
/s6dM1/8/o8f+kG71Wpd6bZ8TjXb9z386xe3yub6g8/f89i1sjn/yKlnvn2+
bN576sz9k/fK5vXX7n7K5qWtuwvL5u6qB58vmzuL7qwsm6fvLnuqbH73xN1P
2dy52J2FZXN31T2Plc3P717ukbL5yd1lZ8rmh/FTNg/HhWXzULxg2XwnFi6b
uOz+svla/JTNl+LCsvlCvGDZxMudKpu4bFI2yVFyFBwFR8FRcBQcBUfBUXAU
HAVHwVFwFBwFR8FRcBQcBUfBUXAUHAVHwVFwFBw5R86Rc+QceRPjvZhz5Bw5
R86Rc+QcOUfOkXPkHDlHzpFz5Bw5R86Rc+QcOUfOkXFkHBlHxpFxZBwZR8aR
cWQcGUfGkXFkHBlHxpFxZBwZR8aRcWQcGUfG8Vn+pdxLeZdyLuVbyrVsYuwz
SzmW6i/VXTaRec9SnaU+LfRn0cS2vLbQj4U+LJrHY+EF94J3wblovhUvuOBa
8Cw4FhxzjjnHnGPOMeeYc8w55hxzjjnHnGPOMeOYccw4ZhwzjhnHjGPGMeOY
ccw4ZhwzjinHlGPKMeWYckw5phxTjinHlGPKMeWYcEw4JhwTjgnHhGPCMeGY
cEw4JhwTjgnHmGPMMeYYc4w5xhxjjjHHmGPMMeYYc4w4RhwjjhHHiGPEMeIY
cYw4RhwjjhHHqInxrg05hhxDjiHHkGNoXoccQ44hx9A8DjmGHAOOgX1jwDHg
GNgfBhwDjgHHwPwPOAYcA44BR5+jz9Hn6DeR8USfo8/R5+hz9Dn6HH2OPkeP
o8fR4+hx9Dh6HD2OHkePo8fR4+hx9Di6HF2OLkeXo8vR5ehydDm6HF2OLkeX
o8PR4ehwdDg6HB2ODkeHo8PR4ehwdDg6HG2ONkebo83R5mhztDnaHG2ONkeb
o83R4mhxtDhaHC2OFkeLo8XR4mhxtDhaHK3m3Zj/JKTcJ+HRmPckpJwn4asx
30lIuU7CSsxzHFKO45Dm8zikuschzeNxSHWOQ9pHjkLqz1FI83YU0n5xFFIf
jkLaH45Cch+GtB8chuQ8DLHsI4chuQ5DXHbfYUiMw5AcBxwHHAccBxwHHAcc
+xz7HPsc+xz7HPscexx7HHscexx7HHscuxy7HLscuxy7HLscuxw7HDscOxw7
HDscOxzbHNsc2xzbHNsc2xxbHFscWxxbHFscWxybHJscmxybHJscmxybHLc5
bnPc5rjNcZvjNscGxwbHBscGxwbHBsc6xzrHOsc6xzrHOscaxxrHGscaxxrH
GsdaeDbmvxW+F3PfCqOY95acN8OPYr6bIYu5boYm5rkhx41wb6x/I5yLda+H
n8V619W5Ht6PfboWfpU2lPCV2Jdr+nFVH66GOvqvhtW47Er4bfRe4bwSduMF
V8OTsfBqeCAGXOVY5bjMcZnjMsenHJ9yfMpxieMSx6XwanRc5LjIcZHjE45P
OD7huMBxgeMCx3mO8xznOVY4VjhWOFbC6Zj/f+HZmPtjeT+W87/6/FG4N+b6
KJyNef4jx4fqfxgej3U/CGux3vvqvK9P74UsbezhdOzLu/rxjj68E85G/9vh
XFz2Fu9bnP8Oa9H3Zqij602ecxznQvqF6I1wOuZ+Xd7X5PxXeDLm+2eoY65X
QyvmeUWOf6j/crg31n0prMR6f1encf2/hTpe96/hbLzeC67zFz//XGjFB//P
4Wxc/4x1f/L9p0Mrvpj+EFrx69/499Hw2Qnd11Xrc/H7lfWVn69cz/8/U6nn
+89V8lTphflCJW8lf8VT8VV18vr5lyv9cJ1XqtOpX5X+VfpZ6W91NvXb9d+o
3A91zlUPpPtVuX+V+1m5v9VKut/qv115HuR4pzqTnpfK81N5nirPV+V5k++D
yvMo54eV57X6Snp+K89z5fmuPO/yf1yZB44VdVaqP6b5qcxTZb4q88Z3Xv0L
nBfkuFB9I81vZZ4r812Z98r8y3dRHy7JeUk/LlWfT/tJZX+p7DeV/Uf+y/p0
mWOVY5VjlWOV4wrHFY4rHFc5rnJc5bjGcY3jGsd1jusc1zlucNzguMFxk+Mm
x02OWxy3OG5xrKmzVn03vV+qX6T3TeX9U3kf8a2pv865Lsd69fv0fqteTu+7
yvuv8j7k35BvQx825NzQj41qlt631dfT+7fyPq68n+W/rU+3OTY5Njk2OTY5
Njk2OTY5tji2OLY4tji2OLY4tjm2ObY5tjm2ObY5djh2OHY4djh2OHY4djl2
OXY5djl2OXY5djn2OPY49jj2OPY49jj2OfY59jn2OfY59jkOOA44DjgOOA44
DjgOOQ45DjkOOQ45DjkOOY44jjiOOI44jjiOOI45jjmOOY45jjmOOU44TjhO
OE44TjhOOFq180j95XQ+qdPvea3a+aV2nqmTr1Wn+q3a+ad2HqrfSOej+kI6
L9XOT7XzVJ387Trla9fOX7XzWJ360a5/mc5rdfp9sl07z9XOd3XK365Tn9q1
8yBHh6PD0eHocHQ4Ohwdjg5Hh6PD0eHocHQ5uhxdji5Hl6PL0eXocnQ5uhxd
ji5Hj6PH0ePocfQ4ehw9jh5Hj6PH0ePocfQ4+hx9jj5Hn6PP0efoc/Q5+hx9
jj5Hn2PAMeAYcAw4BhwDjgHHgGPAMeAYcAw4BhxDjiHHkGPIMax/mv6exDHk
GHIMOYYcQ44hx4hjVKd5H9XfTH/vqtPcj+o0lyOOEceIY8Qxqv19rU7zOqrT
vjCq09yOOcYcY44xx9j9GNdpnsd1ev+O6zTX4zrtH2OOMceYY8Ix4ZhwTDgm
HBOOCceEY8Ix4ZhwTDgmHFOOKceUY8ox5ZhyTDmmHFOOKceUY8ox45hxzDhm
HDOOGceMY8Yx45hxzDhmHDOOOcecY84x55hzzDnmddrH5xxzjjnHnGPOseBY
cCw4FhwLjgXHgmPBseBYcCw4FhwLjiXHkmPJseRYciw5lhxLjiXHkmPJseTI
zGHGk9XpvJ+Z+0zdzPxn6mf2gUyOzH6QyZNxZ+Y248/Mb6YPmTnO9CMzz5l9
I5M7s39k8mf2kYwj58g5co6cI+fIOXKOnCPnyDlyjpwj58g5co6cI+fIOXKO
nCPnyDlyjpwj5yg4Co6Co+AoOAqOgqPgKDgKjoKj4Cg4Co6Co+AoOAqOgqPg
KDgKjoKj4Cg4So6So+QoOUqOkqPkKDlKjpKj5Cg5So6So+QoOUqOkqPkKDlK
jpKj5Cg5So5T9f8BDvqpWA==
             "], {-0.3, 2}], 
            ListLinePlot[
             MapThread[{#, #2/10}& , {CompressedData["
1:eJw12DuMZ1UdB/D/+/24jzWxQuzQyqiFhXhvpyUQCwuKjYnGztXKoMUWYOyk
sBBjDAkU2hBMSITEeK6AAQ2QRd6IOLvssrPvmdl5P90958O/2czOmfv7fn73
/s6dM1/8/o8f+kG71Wpd6bZ8TjXb9z386xe3yub6g8/f89i1sjn/yKlnvn2+
bN576sz9k/fK5vXX7n7K5qWtuwvL5u6qB58vmzuL7qwsm6fvLnuqbH73xN1P
2dy52J2FZXN31T2Plc3P717ukbL5yd1lZ8rmh/FTNg/HhWXzULxg2XwnFi6b
uOz+svla/JTNl+LCsvlCvGDZxMudKpu4bFI2yVFyFBwFR8FRcBQcBUfBUXAU
HAVHwVFwFBwFR8FRcBQcBUfBUXAUHAVHwVFwFBw5R86Rc+QceRPjvZhz5Bw5
R86Rc+QcOUfOkXPkHDlHzpFz5Bw5R86Rc+QcOUfOkXFkHBlHxpFxZBwZR8aR
cWQcGUfGkXFkHBlHxpFxZBwZR8aRcWQcGUfG8Vn+pdxLeZdyLuVbyrVsYuwz
SzmW6i/VXTaRec9SnaU+LfRn0cS2vLbQj4U+LJrHY+EF94J3wblovhUvuOBa
8Cw4FhxzjjnHnGPOMeeYc8w55hxzjjnHnGPOMeOYccw4ZhwzjhnHjGPGMeOY
ccw4ZhwzjinHlGPKMeWYckw5phxTjinHlGPKMeWYcEw4JhwTjgnHhGPCMeGY
cEw4JhwTjgnHmGPMMeYYc4w5xhxjjjHHmGPMMeYYc4w4RhwjjhHHiGPEMeIY
cYw4RhwjjhHHqInxrg05hhxDjiHHkGNoXoccQ44hx9A8DjmGHAOOgX1jwDHg
GNgfBhwDjgHHwPwPOAYcA44BR5+jz9Hn6DeR8USfo8/R5+hz9Dn6HH2OPkeP
o8fR4+hx9Dh6HD2OHkePo8fR4+hx9Di6HF2OLkeXo8vR5ehydDm6HF2OLkeX
o8PR4ehwdDg6HB2ODkeHo8PR4ehwdDg6HG2ONkebo83R5mhztDnaHG2ONkeb
o83R4mhxtDhaHC2OFkeLo8XR4mhxtDhaHK3m3Zj/JKTcJ+HRmPckpJwn4asx
30lIuU7CSsxzHFKO45Dm8zikuschzeNxSHWOQ9pHjkLqz1FI83YU0n5xFFIf
jkLaH45Cch+GtB8chuQ8DLHsI4chuQ5DXHbfYUiMw5AcBxwHHAccBxwHHAcc
+xz7HPsc+xz7HPscexx7HHscexx7HHscuxy7HLscuxy7HLscuxw7HDscOxw7
HDscOxzbHNsc2xzbHNsc2xxbHFscWxxbHFscWxybHJscmxybHJscmxybHLc5
bnPc5rjNcZvjNscGxwbHBscGxwbHBsc6xzrHOsc6xzrHOscaxxrHGscaxxrH
GsdaeDbmvxW+F3PfCqOY95acN8OPYr6bIYu5boYm5rkhx41wb6x/I5yLda+H
n8V619W5Ht6PfboWfpU2lPCV2Jdr+nFVH66GOvqvhtW47Er4bfRe4bwSduMF
V8OTsfBqeCAGXOVY5bjMcZnjMsenHJ9yfMpxieMSx6XwanRc5LjIcZHjE45P
OD7huMBxgeMCx3mO8xznOVY4VjhWOFbC6Zj/f+HZmPtjeT+W87/6/FG4N+b6
KJyNef4jx4fqfxgej3U/CGux3vvqvK9P74UsbezhdOzLu/rxjj68E85G/9vh
XFz2Fu9bnP8Oa9H3Zqij602ecxznQvqF6I1wOuZ+Xd7X5PxXeDLm+2eoY65X
QyvmeUWOf6j/crg31n0prMR6f1encf2/hTpe96/hbLzeC67zFz//XGjFB//P
4Wxc/4x1f/L9p0Mrvpj+EFrx69/499Hw2Qnd11Xrc/H7lfWVn69cz/8/U6nn
+89V8lTphflCJW8lf8VT8VV18vr5lyv9cJ1XqtOpX5X+VfpZ6W91NvXb9d+o
3A91zlUPpPtVuX+V+1m5v9VKut/qv115HuR4pzqTnpfK81N5nirPV+V5k++D
yvMo54eV57X6Snp+K89z5fmuPO/yf1yZB44VdVaqP6b5qcxTZb4q88Z3Xv0L
nBfkuFB9I81vZZ4r812Z98r8y3dRHy7JeUk/LlWfT/tJZX+p7DeV/Uf+y/p0
mWOVY5VjlWOV4wrHFY4rHFc5rnJc5bjGcY3jGsd1jusc1zlucNzguMFxk+Mm
x02OWxy3OG5xrKmzVn03vV+qX6T3TeX9U3kf8a2pv865Lsd69fv0fqteTu+7
yvuv8j7k35BvQx825NzQj41qlt631dfT+7fyPq68n+W/rU+3OTY5Njk2OTY5
Njk2OTY5tji2OLY4tji2OLY4tjm2ObY5tjm2ObY5djh2OHY4djh2OHY4djl2
OXY5djl2OXY5djn2OPY49jj2OPY49jj2OfY59jn2OfY59jkOOA44DjgOOA44
DjgOOQ45DjkOOQ45DjkOOY44jjiOOI44jjiOOI45jjmOOY45jjmOOU44TjhO
OE44TjhOOFq180j95XQ+qdPvea3a+aV2nqmTr1Wn+q3a+ad2HqrfSOej+kI6
L9XOT7XzVJ387Trla9fOX7XzWJ360a5/mc5rdfp9sl07z9XOd3XK365Tn9q1
8yBHh6PD0eHocHQ4Ohwdjg5Hh6PD0eHocHQ5uhxdji5Hl6PL0eXocnQ5uhxd
ji5Hj6PH0ePocfQ4ehw9jh5Hj6PH0ePocfQ4+hx9jj5Hn6PP0efoc/Q5+hx9
jj5Hn2PAMeAYcAw4BhwDjgHHgGPAMeAYcAw4BhxDjiHHkGPIMax/mv6exDHk
GHIMOYYcQ44hx4hjVKd5H9XfTH/vqtPcj+o0lyOOEceIY8Qxqv19rU7zOqrT
vjCq09yOOcYcY44xx9j9GNdpnsd1ev+O6zTX4zrtH2OOMceYY8Ix4ZhwTDgm
HBOOCceEY8Ix4ZhwTDgmHFOOKceUY8ox5ZhyTDmmHFOOKceUY8ox45hxzDhm
HDOOGceMY8Yx45hxzDhmHDOOOcecY84x55hzzDnmddrH5xxzjjnHnGPOseBY
cCw4FhwLjgXHgmPBseBYcCw4FhwLjiXHkmPJseRYciw5lhxLjiXHkmPJseTI
zGHGk9XpvJ+Z+0zdzPxn6mf2gUyOzH6QyZNxZ+Y248/Mb6YPmTnO9CMzz5l9
I5M7s39k8mf2kYwj58g5co6cI+fIOXKOnCPnyDlyjpwj58g5co6cI+fIOXKO
nCPnyDlyjpwj5yg4Co6Co+AoOAqOgqPgKDgKjoKj4Cg4Co6Co+AoOAqOgqPg
KDgKjoKj4Cg4So6So+QoOUqOkqPkKDlKjpKj5Cg5So6So+QoOUqOkqPkKDlK
jpKj5Cg5So5T9f8BDvqpWA==
               "], CompressedData["
1:eJxTTMoPymNkYGB4yczAIKDOwMA/ikfxKB7FQwSPglEwCkbBKBgFpAKuUTyo
8CgYBaMANwD1zwHUsEY+
               "]}], Filling -> Axis, PlotStyle -> {Thick, Red}]], 
           Text[
            StringJoin["E = ", 
             ToString[
              
              Part[{0.27671578646959205`, 0.987365433992714, 
               1.1052974151653003`, 2.4793131873761913`, 3.8995934246085246`, 
               4.388413334278867, 6.793827070358159, 8.471882156992272, 
               9.666487211162238, 
               12.403590936166449`}, $CellContext`n$$]]]]}], 
        "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
        "DefaultOptions" :> {}], ImageSizeCache -> {489., {191., 198.}}, 
       SingleEvaluation -> True], Deinitialization :> None, 
      DynamicModuleValues :> {}, 
      Initialization :> ({$CellContext`plotDiscrete\[Psi][
           Pattern[$CellContext`psi, 
            Blank[]], 
           Pattern[$CellContext`grid, 
            Blank[]], 
           Optional[
            Pattern[$CellContext`range, 
             Blank[]], All]] := With[{$CellContext`phases = Association[
              MapThread[# -> #2& , {$CellContext`grid, 
                Arg[$CellContext`psi]}]]}, 
           ReplaceAll[
            ListLinePlot[
             
             MapThread[{#, #2}& , {$CellContext`grid, 
               Abs[$CellContext`psi]^2}], ColorFunctionScaling -> False, 
             ColorFunction -> (ColorData["Rainbow"][
               Rescale[
                $CellContext`phases[#], {-Pi, Pi}]]& ), 
             PlotRange -> $CellContext`range, Filling -> Axis, 
             AxesLabel -> {$CellContext`x, Abs[
                 $CellContext`\[Phi][$CellContext`x]]^2}], Line[
              Pattern[$CellContext`pts, 
               Blank[]], 
              Blank[]] :> {Black, 
              Line[$CellContext`pts]}]], $CellContext`grid = CompressedData["
1:eJw1lD1MFFEUhdfOEAsLa9QOrYxaWIinxFKJJZWJxk7sDFpYgC0UFmqMMYFC
mw0mJEJiuIAYxQAB+VlEwJn9nd2d3aXBWJq57+M1m9k5c+/5zrvvnb/7sP/e
iVwut5Q7XoeW74uHzuQ7NjC6cNQz0LGuwvhgb1fHprtHmren23bfV9vOuLBt
mWp0oWWPejNly85msu6WrSxnK7UnLkztghdMzcsVmuaykaZd8dW0rGtf3DBv
O9qwG964YanL6vb6VbbqdtOFdfubtT1KbCIrN55YvxtMLHAkcNTgqMFRg6MK
RxWOKhwV83KDFXNZd8UcY7kMRxmOMhwlOEpwlOAo2pgXLMJRhCOGI4YjhiOC
I4IjgiPC/x98H+D3AJ/7+NszL9OzZ8Pu57cVvfwu/Xfp+4t+O/TZIacC+RTI
ZZs8tshhy7zc0KZtu2zDLjvvBpw/4VuHax2eNTjW8L+K7xX8LlvkhX/YS/e3
ZLdc+N1Oup9vNuc+vtpT779oV73vF/rN02eO+rPU/Uy9Gep8ssf+/ZQl/t1H
m3R93sZc98Ge+fsJm/P/3/L8gt9hOz4hPIv3Qs/zhN6Fevyf12Hox/spnQ5+
0M3oUvCLflbvAw/fzeta4FXwvyjyEPmIvER+Ik+Rr8hb5C/2Q+yP2C+xf2I/
FXLe0E7Yb4X8N3UuzIMWw3zoQZgXnQrzo8kwT7oT5kv/wrzpTZg/XQ/ziM9d
Ma/43RPzjO99Me/4PxDnAY5InBd4InGe4IrFeYMvFucRzqLCOSnCW9LzcJ7h
LuliOO/wl7Ua7gNyqOCzIu4P/FbF/YLvqrh/8F8T9xMcCRwJHAkcCRx1OOpw
1OFowNGAowFHE44mHE04UjhSOFI4WnC04GjB0YajDUcbjg4cHTg6cBzqPxSs
TfM=
          "]}; Typeset`initDone$$ = True), SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> True,
      StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]],FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               RowBox[{"arg", "(", "\[Phi]", ")"}], {FontFamily -> "Arial"}, 
               Background -> Automatic, StripOnInput -> False]}, {
              GraphicsBox[{{}, {}, 
                RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
                 "], {{
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}}], {Antialiasing -> False, 
                 AbsoluteThickness[0.1], 
                 Directive[
                  Opacity[0.3], 
                  GrayLevel[0]], 
                 LineBox[
                  NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                   7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                   112.5}, {7.5, -112.5}}]]}, {
                 CapForm[None], {}}, {Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
               Scaled[0.02], PlotRange -> All, Frame -> True, 
               FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
               Opacity[0], FrameTicksStyle -> Opacity[0], 
               ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
            False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
     "BarLegend", DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"Rainbow\"", ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", 
            RowBox[{"Arg", "[", "\[Phi]", "]"}]}], ",", 
          RowBox[{"\"Ticks\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"-", "3.14`"}], ",", 
                RowBox[{"-", "1.57`"}], ",", "0", ",", "1.57`", ",", 
                "3.14`"}], "}"}]}], ",", 
          RowBox[{"\"TickLabels\"", "\[Rule]", 
            RowBox[{"{", 
              
              RowBox[{"\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7075822185380387`*^9, {3.7075832759165263`*^9, 3.7075833053546715`*^9}, 
   3.707586049531313*^9, 3.7075860893672333`*^9, {3.7076088606380157`*^9, 
   3.7076088789369273`*^9}, {3.7077452759744234`*^9, 3.7077452912710943`*^9}, 
   3.707747974779812*^9, 3.7077565284923306`*^9, 3.707756841921561*^9, 
   3.7077588674230394`*^9, 3.7077589200436096`*^9, 3.707759083228606*^9, 
   3.7077711842411036`*^9, 3.7077718811269464`*^9, 3.7077738617356377`*^9, {
   3.7077743907420692`*^9, 
   3.7077744057743287`*^9}},ExpressionUUID->"410c194f-9031-4217-91ba-\
836aac448334"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"n", " ", "=", " ", "10"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "256b0b7e-19ef-4e1f-a53a-3595c8ca3daa"],
 " is an interesting state of above, where a maximum appears ",
 StyleBox["within",
  FontSlant->"Italic"],
 " a region of greater potential. This may be the threshold where this \
becomes more energetically favourable than \[OpenCurlyDoubleQuote]cramming\
\[CloseCurlyDoubleQuote] more lobes into the region of lesser potential, \
analogous to oscillator modes of higher energy. That is; gradients (through \
the Laplacian) are energetic in the Schrodinger equation!"
}], "Text",
 CellChangeTimes->{{3.707583214154013*^9, 3.707583264191316*^9}, {
  3.7075833124132566`*^9, 
  3.7075833827555103`*^9}},ExpressionUUID->"5f164725-f67f-47cc-b5f8-\
a00111ecfab3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"presentSpectrum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5", ",", " ", "0.01"}], "}"}], ",", " ", 
   RowBox[{
    RowBox[{"10", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], "]"}]}], " ", "+", " ", 
    RowBox[{
     SuperscriptBox["x", "4"], "/", "2"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", "10", ",", " ", "10"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.7075758070608263`*^9, 
  3.7075758714003515`*^9}},ExpressionUUID->"f71c7e62-78c3-4b85-a0ad-\
b3829c3f1495"],

Cell[BoxData[
 TemplateBox[{TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
       Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`n$$], 1, 10, 1}}, 
       Typeset`size$$ = {432., {147., 154.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       False, $CellContext`n$5364$$ = 0}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
        "ControllerVariables" :> {
          Hold[$CellContext`n$$, $CellContext`n$5364$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Overlay[{
           Show[
            $CellContext`plotDiscrete\[Psi][
             Part[CompressedData["
1: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
8K4XwST/mtUiedjMDpKPMQiRvKz8wf/52TmSpyU7kXwt/ocUwdsi15L8radx
O8Hj5rxJPsdf6UrwOqvv1QS/Oy1B8rxT4STf23ec5H0NP5sJ/vctgOSBUuwk
HzxBI3lhbs0Dgh/+2kjyROl4T4Iv/lxL8saO+yR/7BQgeaRyayzBJ4eMSV5p
Gkjyy+maEYJneg2cIPjmyyMk79ySR/LP1XckD2W06iD4qIg+yUsj9Ul++vpF
JsFTp/lIvmrbtkLw1tjJVwR/VXYmeezSFMlnG9eTvFacSvLb0x3WBM9NOUTy
3bYrAQTvvTlO8l8xg8MEDz79huTDFq2/CF5sXUDy44HJWIIn834n+XL8F5I3
Z8mJEPw53kyR4NFzOSSfXpJOJHg112aSX69haiF49n1vdYJvu9ZdI3j3onsG
wb+ltaYIHm4zPUbwcceALQQvP3pskuDnpUiB4OkfnnoRfD2gx4Dg7Zo5Bwn+
vs9EguDx+/YdJfi8bY0GwesVslMIfh/aJEvwfMOXAwTfTxeWJ3i/8b5igv+b
uukQ+4A/cj3EfuDCAhOxL6i40EXsDxQPDhP7hEPV04X0/cLmFEti31BXw0vs
H6SvPyb2ERXRLl/p+4lD44LEvmLUfkKKvr94DIvEPuNOljGx33Ad8ib2HS95
PhH7j4eq71Po+5AzWreH6PuRx4IVQfR9Sd74bm36/iSuhs2Ovk/x2mtD7Fda
rqqm0vctRSzOpfT9S8Pfeif6Puay1FZP+n7mlunbr/R9zTTjt7W7UhhwPd4s
K/o+5/eu1Df0/U6Xv6oHfd/jd3Fmmr7/cQl+v0DfB3UH+ObS90MavZMb166O
YLL7++zo+yNlzzeP6fukmN0XftL3S7rte/8pFrdiq08mP9H3T6rSa97S91Hb
pTRb6PsplePdqfR91RvJVSf6/qp/2H1DXXIRNtbZ909RPA+bNu+cpO+7Llif
P/QtIQPbv2FSK9c6BUvOTU1o5HiNXUE6b1ecErFHWjmbE8disL5gyxGjsUjs
7TvtISk8FNMcdOnefj4Y+3jJyrF/6DF2ZehzSKWwLxZ5ZudckuxD7DCFx9uQ
wQPTQll7Wt+6Yv+0k4LuUZ2wqXXhspYv7DHUwNbDcuIG5hn31TXtnCVWvy/c
v13WDDs++Mw/rskIsxXSYpDQ08Vk7FvgTp8WNnqAt1r5yAXsPeWMOcXkHNYx
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
cqtiEqlBji2xPIUba1Fn0Scu57laFOvPry/eX4eeMtfrtH2qR8tdQhd1qxpQ
7fzZc8mljYhDaJ4hq/QjCpC8NKpb9Ql98d+8vvJaE3r5UWVX2NcmlPWaceKx
SzPaxJlpHMXUgjb777yQEdSCLrOt08rf1Yp2FXg1JGS2ovo/W79fkm9DPTHG
pSXtbcjjXztXnc1n9MXgR4ze2naU3KvcfSm2Hb2t1ZZKku5AIXFiP/e3dqAE
k8aL1XadSNfowi1Tti70rqDbqTO1C1U90/bcpNqN/o6OlPdOd6P+gP2+Ik96
0H7t4xJ1B3tRNJeKdmJDL6q+L17hZ9uHfh0yCTPY3I/kTGvEFzL60b48URMx
jQHkV3vgWt/XAVTFMMf4XXkQHQ/aoMgcMYiufBx0jB0dRDqSMlcTJYeQjP7F
j8v3h9Ddru8X4hqGkIian9fNHcNo5z+/v3rmw8htbefF8+nDaI7J+PiRX8Oo
CUu1W6CMoHN306ceeI+g6/qWeGXtCFo3nYbS2EYRs/Ywg8CFUZS+K3aQM2QU
BXyQ47BrGkV3K9xF9m4eQ7kR8Tw7zo2hxbv9mvLeY+hT6Jn8QNoYKtsbkz4z
P4YOrg6LnBcZR+ZhRamxeuOIW9hMv8V/HGnqOi325I+jS8xqP9NGxhFD3TYH
GbYJVPnJ5qyD1ATCunLZNfQm0MSrWZGKOxPIRHRXbvWLCdSTop9xoXACST9V
7rvcNoGsOwVGWmYmENfaK7I40yQKTnynwMk1iQ4/8pFqFJ5ErRnnD01KTaKT
RmWHTeUmkXgEu8hxlUmUoKHUf1VjErErn2X5rjmJuMvPKX7WmkS7uHI2cv/3
Wnn2XlG+2iSSOyAWWaQ8iUaP8OGClEl0/YTT/sXDk+iBwpM3FIFJFC7c0/OX
fRKl7PI4Kb08gZ6MnFr5Oz6BGAJERTQ+TiDfrglHyvsJZNBuZ9AUPoGu/Q5n
5nSeQK+OC6ts1f7vujveR3dITKCuIt4tjhsnkJxFifrc4DhyHfUJNMkbR8a7
wx59+u+8mCfHbqoZ/Pc6OHVmSnQcyUQ84sxdHEM9e9J0oGIMha0d9OEJGkPJ
y7eK2nTGEKV2jy7T7jE0k72y8n70v+fHpuP1L3kUzW6OGZ2+MYpS95krhh0a
RbHMzn0bv46gXWjlr1H6CApmaf728sYIyh8bZPuyfwQt7OmOPTs2jLgcvrU3
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
FhwnXS/yMIXmISzCdfPFa5rj50DPRa8oWnTkj9r82Re0U692L2p/i6L9FCwz
3NQfQrPnHszf9j6Uprnn1lbjQF3axYMPeiJq7GUFjIaHFj9clN280zwfj/Ci
Xbt0P09Q3VI2qrKTQbnKk7bhA85x9t1l2arW889/M96iCVY+3VAjaE7LeO24
LumEp2zPXgtrPV5HWfO4WyfvjnjIWsnew5fKHWh/f7Fejqt9RpM68+Qla20C
TUru+oAXNY7GGVczPvTf9V+5i92Jc8qhmYfOu9Ydy6dtmxfZGmlXTKsN7w8P
TCqjjX6Mubn1bDUtUGHd96NijbSOa3ZvWpeaaWlBv1Kmw9ppci/HI9by9dKi
qz+pGFoP0Z4YrwtY+3yc5l3f73Fxywztla1njtXTOdoVndk1tnt+0WQPT/Hs
afxHe/j0psENPUbMUOCnsxK2DrMuSvW/zM6KnQ8Me/9wjB2TbUHdpjzbsQOX
XTwdT+3ECk+sv/JVZw/2ovKvrtQlIWxeZ+TFT8oB7JaXZvmYgQRmZxK1pdLp
KLZbjpLBvkcGcxXjHp3to2DXX2x4FOcqjzVsZVl3sk0ZK/rjqRImfh5zkHSM
STK7iOXWtZ5VuXkJ6xVKY5gz18cMWKzfr5c1wQryhNxzf5hjYk1BYRc8rTC3
77Jnt2y5idnsfXJ0/IYDdj3Ewf1NoDPGEHXo/KGoO1j129NO7P2e2JsB5cd7
o7yx06XXkhb2+mPxKnEpQq8CMXWf0/v5k59hzdu8Fl6/j8CCevcXKke9wB5N
lSdWliVg6wW4109fTsIE3AVoC8nJGJ+ntu/OgXTMZql1zU3OHOzHEkemfk8u
ViogoJ51rQgrLU3jZx0A7IrRr9xU6XKMMeliVKRINRZk2Bf3fqAe80x/6XOy
vAmbtvkpVSjUhtUc4byhI9GJFaQUvlu3pg9T3qOvVWE2hH1O0DtKax7Fph0e
PymenMRcjr2lVFXNYk46MUuSNXOYvNCVr6oyP7Gfxs6Hfpz/g8Wsa5bqEFzB
Rtjfuo9/Y8TLP4oIftZehw/3iFW81N2Iv1AQ6DrPvRlfH761uapzK471q2o3
CW/Hd+hqPOLYxIOP79J/GvKSH9dXuHtL3Xsvvm1H+3o8Swh//hxMeG/sx8ff
hhrL1ovhmtaVFyx/Hca3VVBm534fxS06Th/tuiuNv//EovYq+hR+YZ49nPeY
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
xXwrcy/mXbOvMP8y48c8rHQQ8zFlQczL7NkwP8vfi3ma5GbM10IVMG/buwbz
txtBmMflrMR8blgM8zrNjZjfLTfEPM96J+Z7B/4GId4XN8//9EcwD1Rlx3yw
f0YO8UKnEcwPcwHmib6JmC/OqmDeyJaL+eNTScwjLcQwn+R8jnnl9SzML/to
zDOFuTHfVHnriXingD/mn6mzgoiHZl99ifioAPM+4qUHBDA/XZt/HPFUzu9e
iK9mlTxEvLVMwBHx1/rdaojH6kWaIz7bJox5bX8Y5reiFZjnXpjAfDfzajni
vVqXVyD+65RPIh7cXZqL+HADdyfixTuWOCN+7DW0DPFkSrAX8eWVe/cg3vzj
EObPqYsxj/7RhPn091LMqwVmXyN+vSfNDfHsR+IWiG8zZeMQ714vifk3qME8
/Ja+DOLjYfaYl0+Vv0P8XNHZBvH0LYK+iK97bdBCvL2fi0D83WypOuLxvk9M
EZ+/87wC8foXEkKI3++bPYp4/r8SLcT3c0yLEO/XNo1A/H+rlQjqA0TuR6J+
QD3uNuoL/EY0UH9woCkY9QnZw7aoX+ic/K3M6hsie9ZbsvqHRVuuoD7iiH3J
AVY/oZ1VY87qK0Iv+Fiz+gvjpWcUWH1Ga6mZDavfMDR29mD1HUO8n3VY/ccC
o2qa1YfwLz25FfUjhtpKrL6kIsDuPqs/4b63SI/Vp4hJlu1h9StbBu6OsfqW
ib+UDqt/MXntacrqY9hq7pmx+pkZ0nsZq6+R3ex/mtXfXKib9GL1Of/+8dux
+h3Bg32qrL7n2aF4yOp/4OaSPFYfdHtgdw6rH9pBqkmy+qLfD0VOsfqjj0qN
6qw+6bbIOwdWv2T5bQmXttIkJa51V3dX9Rjlb24cxuqjDrw1/83qp5x9u9tY
fVVPxdwNVn9lnXLOjtVnKTSL5Rpub6d8lD4yiiSaqdXX4oKVXtdT3uqNNdl9
b6kW2Z5fd6WrKC6/lZsyFV9T/vKl40v7IOXiIz6afbqEEu99Kcnq176MqRY5
r8yl3jO/B/H3PaU+1T3+MJ6eTtX3LpD7YPiI4vf7O0yVJVLpurUzZEwcZcgh
vyYlL4p69e542Mb0CCouYFmucspt6u5AQsBC8WBqb8j3mWMxV6kukRID7l5/
qudr7z6eGB/K7UVOlO1tD6q4+C3HFkc3KvbF8aJIbhfq35IQa/HL9pTjj2eB
78atKTliv7H6Pguqj0NseZq1MWVX9uODpIsBJSudPTZrpUeVu2Qp/d6mTfUu
rXDQbjxILZ82Hz3gqUZte5++MbmToOISO7XWiipR8msnJB+e30Vxm3hP3zTa
Ts3p1Ja775WhWmDeSmUNCSok4GuFoe4GKjlEdfXfLUIUY9a62GxuFXUlVfz6
jQ5eqt1i8EjHBBe1Wi3xWUPoQkr6/IpHflsXUGv8T56fCZ1h+D0N1NT7McmY
/eY0pHlujNF8mL7wKegLQ70B8g0afWCItXSXi20fYNQf2ZLobdbFqPUWPXhb
u4VxO63C7/K6Bkbkcd3JW+1vGJK1Yds9PV8zSLlbus9uQUYG08GjyLqAof1o
tVZicA4DrqwV/CWQwQi8VDq0tSSFcQXYyDj5pDO6g/ZyHIxPZVi23jr361Ui
41JXH2PoQQTj0E6Te76NkYzGv6OaRkZWDMu/05m3RXwY8g7NW+bSbJSdamd/
WMq7MZh7dhZ92hClfOD0J8t29kjl5d5MHq7kFOXzC/bsCgxIUd71XkvNKSJO
uUv98BjHWIzyixv3xXOa85VbtZ5fXfLzhXKJhX44rVqoXFut/aSglFamJyXV
PWWrlM3Yn6/yjHmjLGPtAIdc65WZAs5FIdPNyv4KCwe3q3Up9zYkfg9aOqDM
E/XhVGPJsPKZ6jUy8j1flBd4LD7I3flDOVJJizwWNam8x/DW3w7dGeWtmeWT
wVNsxIUYi4RTcgsJr0HVfsk0LuLhm1VZZ2J5iUQxufuSzFXE+/HV9pyrhYj3
i/e/sVDcQFyIelNjd0iC+GrlVnZbXoaIWKaWn6G/negqrtmpGLCLcHCTbYRy
SkTDt3ucMuwkIduuAnzvqREFp0P6nnEcIsZfRhmnXdQm+Gx+G8pE6RHy5r/b
214YENpFaxf1VRsTbKZuW3suWxB8S19OlOvYEFX8xSvT/tgTxw7vXEjnuhDy
K9vanNvcCOdNnkSv8EXiRuSqF0J6voTaIIMr0CCAGOF/OuGy6xqRPpJKrBsJ
Jjy3LsoGSWHE6CZrOc3DkYTSrP3d3oD7RGGEutn0g3ji6G/FPA37JMJv1Cih
RjqV+DqcnDeTnUHA2dhoR5lsInKH/z13Zi7xeu+p9n29hUSYnojJu8yXROaT
XcYvi14RGyuW1L+XKydKXsze/3uqmtAhuE9vtagjMg/7nBnNaSCi4qM8Nh5u
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
vjTz6CC4dnOFy4q0QXDLhj/a488g2PnrsvCQ1hDobK7kPxk7BJRVCvjah4dA
qpLYGpttwyDhcsNVNvdhIPv96ZLnhcMgbA0Z6/VrGBgk+54x2/UB6NgvbLZ2
/gCivqWcvP3oA+DVOhTObP8AWlUs1tlyfQQtg0/ThPZ8BOUvfasX234EnJym
fHK3P4IXR7UnY/M/greBDpWa7R/BWN/ap6rTH0GQc3bidcERoDiVaCGyawQE
XNrjskh7BKyual6kYTUCkkJS1g1dGAH2/tMmPddHQJCl1EqFeyPg1adOtR+J
I2DkilA4d+YIsDlVohGWMwJ4zF1OeOSPAO7zNtqvC0bApBn+etf89zPmf95+
/u+vm/+8scv484Xmf9/FSvz7W3zx9fj8wtdX5ISvd9X89Q8E4PspO4Lvj4sD
3y+jBN9/GRM/Dwrg5zOiiZ+X1Sh+fgKn8fNckYSfLymIn3fzKH7+qn74fZCK
+P00kfh9nWvC76/yJ36f663x++UJxu/bxwa/f00OPA/yj/F8aG/A83LACc/P
D0k8Tx3v8XwZBuF5i5TD83fdB8/jcS08n/VNeF7XVeD5/QDxPGvewPMt8xHP
+1ofPP/8Bvg83J/A56OMDZ+XJTL4/Micw+fJKgGfr/dZ+LxdMMfnL1sLn8c1
B/H53LQMn9eFivj8ri3A53mTJz7fLsn4vKtcw+f/AC/WA+vv3kgfGsbWI734
88kY6cfUb6wnz0ywvtzci/VmbTDWnyvHsB51AaxPNW+wXhl+x/oVvgzrWYAB
1reAp1jvmMew/hVVYj1kpGJ9vFOF9bJ8I9bPSxewnpZswPqa9QTr7eN5/S2e
1+PX8/rcNq/XgnewfivWYz0/N6/vn+b1vmRe/yvn94Hd/H74Fof3ReMOvD+C
5/fJvfn9smp+3xT34v0TPr+Pxprxfkozx/tKY35/TS3B+8xkfr9NfcT7zqQU
778j8/vQeRHej4rz+9JWDO/PSjG8T6v/4P16/w/et545eP+26+B9LJeA93Pz
dryv32vh/b3uH97njCS83xUt8b7vj8P7//xh7AeYodgfWFzAfmFZEfYPi6Kw
nzipjf2F4xT2G3fWYv8R/Qv7kcWT2J9I7sV+hYML+xfB69jPXLuC/c3raex3
ahKw/5G5hP2QuyT2R7c+YL9ktxv7J0Mm9lOFC7G/ilfEfivrDfZfYrHYj0k/
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
MMb4/Za3OY+gWtcpwWNcaVCpNpR9n8djqLayOnHHZDqM124Q7Q3KhB8feKV+
25YFZ+pHBpZ/eQrjB71dmYxs+JgUyAxpzIGnVmikb2p8DseS1dNjenKhVHON
8bbJPOhRl3BMfm0BPBWRk/ZLsxD+x5KZh9XURWE8YwjRQKNIA0VSFNU5K6TB
XKQQKSoyK8ocISqpEJoJUZmTUveu5lI0z+OdEqKiSCp9393n/uXpUfees/da
73rf3+oJuR7M8nuL/l5y4iUVqTjy32vbvdrvsNTa7MWHkHRM9xqZqzuWhcuM
Ale+v8LG4zGLad7ETEzw13N92JSJbvePzcDXWWhecHHYJDQbbzcp9s/xzsH4
e5TMVZdclJihsdhxax52h29rfrw5H5W2z+jcsbUAUw+c3HfMpRCjE5aZNnq9
x6XTDUedDCnCCd9TWItfFWPL4rnJ3+o/YFlWkK7XuBK0nHhyfTxVip5X+G4P
TMowSu710eDmMpx8uUDc63w5TjS379efU4FuqUsjYsorcPU0qeSgM5VoNenb
4QrtKtTdtWHbkqYqLJglaeMfVI0xz1svBi2vwSb+0FHxPzX47drnb6+f1eIB
+d3y613rsInLPRM8ox7/nHGfMK+2Hq+nacytuN6Agnmx5QssG1HcvjSmc7gR
J30Z35Wc0oQPt3L+qO9vRp29v/u4Ki1Y19+87nJ5C94f6nv11KcVNdY+ne89
jfN/fzXK/3TnoNiGyKtBLA6GJtw/NW0yF1UUJs+yceDiHsVb/8Y95mLlHx/J
kT+4eOPanq+jDHkonxXWXnWCh1IVY62M03hoPLll11AvD6eoWxZz5/HRpfnO
6ec7+ZgYfWOiTjAf5f+mVKun85G/YI/mTi4fL4bVHYsfKcB1Zaf9C2YI8Ftr
R/K1xQKkvP4OFJoLsN6qbd0qGwFG5m1LEdgJcM8W40sH/v93v2vRlYwNApRV
WbYkaYUAfX8c4MvrCtDk6XJOm+z/v7dj+tueXj7mNB1aq/WRjwfWTpX0jOaj
mO1iWdzDxyNHnqwe0uajXeeTG2qfeZg0w0qgE8VD9+FFexRW83C+wvM7X/5/
T89jgbZxIVwcDpT9a6PFxSnvYg+Oy+BgpGyuQZ05B6uPDfWl3GpF60zvuTuD
W/DCHz3JH2ea0WBFnGzqjiY0vuc/PFG/Eddcn1K9YaAeDU80FH1/W4c7+ZKz
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
5NdTBpfKTl3eUE1p1WpR2pHlVOG7OYanpD5SRoFjJdL7C6hB21xLmawcak+c
nXbr8kxq48ov84zwHTU5YP9Tpb9vqJh+ucbTE15Rx9s/jIq7/ZTa/W1Joy08
pswKfZKO1MdRnT25e78ax1KTZqf13vILp446VVyc+fgWZZIu5RP9JISSUt46
z7UwkKoZs+qs0kE/Smm8R4DkZF/K5N8R9/zfZ6mHL4+stFU9Qc3OSvi7zNmT
SpbrWBPse5jSl/12Sj7DnRosUrA/Fe1Cbbqnuhi8nChxiZRfbxc6UF3lYwbK
0jdTM2N2bZGwtqFcrT/Uzzm5ltr1xPbmrtcWVLWzWMKYCSuo5ityzy9doymp
TuP7tWeXUFbBS6sDI/Sp096yhndcF1DBA8n8u9PnUt0KL7ovj1ejWsNCPnO7
VajKoV1LE67LUyO2v+ppXiFDGTfPsaZ0plArx1HRK2LGU9NyzFQjLo+mmnQC
ysYbilGKVUvyZ6f0myxavNnyekKvSbTlmNxPM7pN9lqOPX537RcTL9V7Dvun
C0x6mi+WKFa2mGwaG5a3dmWdics/+xdTzlaY/Fh+KN1V7oNJFPX96GHbbBO5
kORV4bvZJmJb5ygkP3lpos9653KU/cikxeRlg4WYt8lSgz7X8N2PTX5va7fc
bJtpgnTlp54HH01mjCk8+PxLlQmn0nQW7dlkUmx+88KP+zyTVv0/JYGHPpsU
3loSeeHpd5P3v+dqvx/4aVLe4KTz8NIfE+dYW6ejTf9MnHbMyDi/ZRRlkmLj
PfrFOMrJYuGIBk1Jyj1rqGztG2nK0zRJ7kSNHLVol9eo8ztUqOAGzXtu72ZT
lav54xKy5lBDj2o0J6ovoJZd3Hj41xl9qqdVWsBzWUIV9cdq8a/QVGPVJVu+
9Arq4NzikxPKLSi5nAdxyqlrKYkJEx+2XbCh1r8+9M97oh3VfFDR70+iA5Vt
/SzrUYkTlRMpV2ir6EqF27osX+S+j3q7sbPT7e9h6ryUh8f2UccoZ/nOvLq/
JyhNmW2TUiV8qKjlczb++OBLKZ/fau649wrl6j7tkOHUIGpWoNKvB+dCqaS2
un+PWGEUL8qykf89gnrmFpzmonqPKp7kMvav2EPKfq1adW/qE8qvxuhts/dz
Slf92SXa5DXV32R/JfzMW+pJ2CvexCcZ1LGbjzakemVRfT9WSiWszKO2Sx0f
vsJ9Ty3pvzUq6Fgp5TtxyZ5ZCpXUoZgme9n5tdTTFqe5VdObKKV7cwfej+RS
O7Sw4ddNAdVl475Zl/uZmvsghD19YieVsNGx4P7Mn5TJhAuSZg2/KK7edotU
67+U9LcfiT6Jw1Tlj1unPMaPorX37VcNax5Lp0jufnvqsARd83r6k6GjU+hT
e33S9ZOl6aixixfW3pxO4wWXt5v0lOg3n/ewHtfOpJdJ5gVaKKjRQX1zLvX/
0aTD4uxXN1+fR3+7OGl+37AuraS7ZeCL4SLa/eP4m25jl9BgfcGk/ZIJHZyz
xTDxqykt5XfAdM9EM3pA//bipSwL+qH8gavxsmvopQH8T7PubqBT9x28Pjt8
I+3x8oyGxiw7+srEu9NCzbbRo19dXaEnuZOWK36zfvsnZ9ra7vz2JUtd6cKz
ZUu/KbrTXWH5E3IfHqRrzGQbyv8cofteqllaSB6j81ObnWc+9qYp5ydZnbWn
6f7DtxfNb/ShtfXyhy2f+9KLJC73Cvou0/A1V+ZTvj8dPe1o0Efd6/TnK2vW
+WuE0pb6QTNWKd6ivybfHD906Q7tMPPzGA3vSPreJ0/l1guxdOESK8Vc1Tj6
yhu1pylzHtEhrb3rPeKe0DLf3w2lxj2llTvvHVw54yXdd0a7PiPrNe2wlPXj
ZGEKPcv/yllb03f0l+h3tT+XsOmdQdF2I5yz6HlLL0Ww/+bQsnZ7H/b+yKfZ
kTGatpuK6Ey9nhXauiU0uPg/zVtVTvfrPP+zoriSvlvSNzUlroYePF8jd7a1
nh4Yu2XjjoBmeplWmm5ZA4c2Tx+tO9OQT9ttL5wbxG+jF4daKMl8/Ux7rNG/
Xmn7jW6W+3YgXL6b1n4UkTza8id9yWtdYB2rl770xC/knm8fffgq37b5/l+6
tCgrXlrjH22do3vOe+IIaNLSvLvQbBQ86xq/2SFrDJh0BylwA8bBrRi7D6eS
JKBFxu1+6TxJqOMbW7ADpsLlwjPzFDOkwVdvRV7n/Gkw7oCkytrPcuBz3O30
4E9FUApIKb+4WQW+zJVcODNoFiSWxuQZxM+GTWMi2mcOqsOo5dLThkPngHvD
zj0XjmpDi/21GX/u6YBvL/YlyCwE0y+LguLG6cN24+1zohYuhiWe1VqpNw3h
SrRE2SVDI1A1Ouc4ZSYFI8NnfjuiZQoz25KuBHQuAyue3hMtzgpoyZqv7znK
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
7L38tgCqreOWaM4shkFpKua0VwlsXWMZm9FcBgcy485OOVYBLxAU88SqIPia
8dmuc9VwoqtP+vmPGlj0+IOOjm0duDWfOHP/ST38aFY4vrazAainB96cVm0C
u+ANNv4rm+Fr4G715s0tsH1F+egvtq1woFn+5PRZHOg0c3sQfY0DO6dLcu26
OWA7z6d4uhUXfNSr0tNuc6Ex0SZbpYkLF60fRulN44GE9+dE7koefBQvqlHd
x4Ohmq8nf17iwdYN6as2hvFg+lLJ+esieSC+K376z9s8uBT9s23jVR6s2WU1
L+gwD+J2fxHPWsuDbTF9HVNn8SDMtWxf4lcubPT/PpKVwIWgrwkNJ524kP1g
YZCyJBcGr5V/477mwJ16yfRx//c9befUllTwf9+XDY/SaG0B5beGstLtzbAK
R5tO4TTB3CZqIhY1QruZNicvvgFezhh/rtSrHo4N8q/4G9fB0RMGg497aqBA
4klaa2w1WOSum/BpRRU8nvV6zrHmCpByHfvR4mD5/z/vOKHfWQp7fcTS1/34
ANyMiLtb29/DGXrWr9LyfFg2xj9E41UOaL7YuKPqaiYcPNN97W7yO3jweoa8
2KpkmLPp+333p4ngvQBL1Y9Hwa3khbY75uyHb0Ea+v4HwtBZ9a3pQe3HmFHW
fmx6wCu09LCI+v4nFeVe7c586YD4K7du96/6bJz6L+309H95WB6xaHGo/Htc
rayZY6r9AXNozzdj9UqxWWzSlD3TynGJuzzH8loFDhtEB6oNVeKyjBHmZ12q
UWZi8evmvBoc1bjhb4lyHa6cVc7i7a/H63rqs5+9asCPTuYlRZ2NmOZc21Iz
sxl3nvj01dOyBTXnKP1Z7dKK0zNy03yN/9cDWbWbiWwO3p12Pbzv//6vnJ8g
Zvaai5rZXnKH1Hgo52KyZst1HqYEmsq19fDQ8N3F0X3WfEz8eyr62BM+5ie0
HrX6y8dF656JbzcTYJi2a02knwDHLwgw78sRoOX2y48d+gWoyOnQRc023LJP
v1dqfRtudPvOW3uoDc/2ncl3u9KGd8Nc6K3hbVgSo8ye+bANw95eC0h93IbZ
op8viP5/jej3pUV/Lyv6vIJW5vN5Dsz33dZhvl9J9DzP1zLPR4meV170/HfT
mPeRF73fod3M+57LYt5/pug8uLLM+SwWndeWdOb8YjWY86z0Ys53phNz3gt3
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
Q12L0oX7rMLGsnrhfktsZOcV4b6rsl2sT7j/SlQt/yzch3H4B9adPixBH0+m
ooX7ssjPmtHC/VmcyYE/wn0aN6UvRrhfC+1wuCTct93ZE/pVuH+z3x/6T25i
J3V8/dzlC7mfqZb2sGu/bwoote9JpkUjuZSelblNxfQmavWE+Suk59dSrqfa
xVUUKqnDtyLULx4rpXS3f7h/ifuekrS/kBO/Mo8S+7omNcMri0oUf16t9iSD
ivgcavf6zFuq070gb7vJa+oIp+zSrBPPKfw7o1s97QlVNdktW2bEQ4p9fi3X
U/UedUN7dfbn7xFUwq7A2KesMGoaN+38s3Oh1NHPjziyU4OoGuMVKxP3XqH+
VB//MuajL5WQvp9qkfChdP+xj+wcOEGNP/9rRu2oY9QmwZC85cBhatfsumXv
3PdR0TVtRRuVXamnvLmLOWVOFNsYvmx65kC92z2hvWyKHXX2aG3kcj8b6qTB
v/cS7LXUC6iYVVRtQV2p6p09SmkFJXMqWfA8hKbm1H8cUXJ4CeW5zenj1Qv6
1HKVqC0DBguoUW+K13+unEONOZm+YmT1bKo4o3TVDF8VyjDyrMcPSp6KopO3
uQ5KU92vhoyulUpSmztwb5LveEqWOj6PpzSaGv+2Tk79/bDJxJKSiBKDfpOf
dGXcT70ek+7RL271Lu80sVsz7WLZ408m9lpxfc/+N3cr47vO5p2tNeHt6Tnc
FVdh0m4bUvtCkGfyI27Z0BMZlsky57HSw1bBJmNbu/6OS6nOkNxl7yhhkZ8h
+Snt5FTb7xn3esa2Zm7pztB66Ot7sfFXxkLpj9MmPf6VsfjcyAsPH4xgvVi4
fZRe0GjWhB5Vznn1CSy66nIXd5cky/TRlPBKfWlWr/UZxzMB01l6J9kqrRoq
rK6yKerLElRZRQYHa5bVa7ICLjWMmFY6n+W0x8iFN16f5bn9zaOt4ktYzt99
d4x5Q7GcMh8PKX9Zztoy21bLJMCCZWkjNhQRtpY1q1TvxW9/G5b94uIzzbPs
WDuoyEdu+Q6sSbHB0tojnFkc/z9OPEdXllrnyqgVVftYzfJr2FPXH2GVTT9w
XeXQMdaWWfcyum6dZMVuiXtV5eXDmjXXQmePw0VWFfdTd6XOVdY2+XiHMKnr
rI1rHscPad1gaXVcuNYSdZuVp7TnY6d0FOuWkvKbN7x7rN1lXkcX/n3I+vnp
rVrOQAIrmK6KsA98waoWDzDtM09mnXx4bG9ZZSpr6oq3g7Hb2awG/Zkv865l
sx659Fcfe5TP+hmmgE6xxayjO2KSaqrKWLPOz4v3PFPFEojNyUnqqGMd6V8k
lmHRwkpp82tWcuKxHrgFHt256hNLzFbTXHdkB8vrEc7vt+9mlbOabzjl9bAy
Nlo9jOX3sXIO7ucl1QyybjR+KenbNYJd82y204He0ewv4X2rPy8dz9ZWOvxw
nt1k9vj6k8YPjaTYWw78jjvJk2UHnuR7VYEC+1HhKOWnnirsKG9F58AqVbaO
eu88ncsabE7AIVnJDi22usbyBX1TddmN/H71OG199ps+V3uNegN27RlfiZGL
jdmGhWPa1BeYssuCCqVfmaxgUwkL3xysM2dXfmzSMVZczR6xz4Y/ZeoG9vp2
jwPnxTeybYO7Vidd3Mx+tu/2hMCYrWyZgPZ9jUcd2QniguiqIGd2Re2ZuhE8
F7b+hKVzWwr2sjl1K67H2R9kT1mcn6pTd4TtuTf+EqvPk+3j9SH2XZQ3Ozt8
1HB+62n20OVu9t4OH/aki2dXlpT6sn3VPZPC5/uxxVdF76qcHsDWPeXhb/3g
Otve45CdzPFQ9kNHjfGTLt9iH9dXdw6Qusu2Kt2zcq9OFPus4wvP8L5Yttt7
E/GClDi2e9PB8ALeI7bWtWmV9wIS2HppelPDcp6x1cbe/ZFc+pJ9yWn8s+0R
yexllbKwoOIte+zrnR+cfdPZoRdd+4wykf3G4qWX6rps9lqVjNNl0/LY5Zy6
iCfmhWy+/Pusko5idrx4SqmcRBn71xjj8Z/2VbDVf70pOKhazXZqnXBzulEd
W+brBdfn2Mi+mO299G5WK/uv6p++QU0ee+78KV7H2AK2jod8h/2zdrbb//nt
38gO9pxDqy/Lvu9k/3rxWmmX3w+25N0cuutHD9sxyl32X9Jvtuqa4tGO2f3s
R/MjDw+aDLHXBXbZnb4phiPdRpR8ej8SJ57cf9zQfAxa/Eooejt1HOqt2T/v
1mIJlDJY+fl3+mQE5ZviEvZTkX/++n3t69J4qfabjf6EaXj8qGF3QpkcSllZ
b275qojTSsJavjupYP5A683umFn4vHLno+aC2XiB3bO0UEcDbW86+K1rnIOs
mNlrnldp497k7eK1qgswesU2CUO3hXjri1yrx2F9PJQnmGr1ajEaLhz3YKPe
ErzLnnHh+W8j7C2TkBgxlkZztlkwvjZF+ZgB3tmQ5eg/NOfx6VgzFFOVlrVu
M8cvcalhvbut8Fq5/6p8tTWY5r8pJ1RrPToeWHBtLW2NeU+NNEqmbMQPr/4e
3jfFFncmrDosscwO15/2GdnyaAu2D3ye6WTugJ/1nE1d1BwxBm59HjfbCRdd
L/nuWeeMA7Nvb9vzZjc6JJvvF2e54qzgF1sSf+5BwZ+P1YIt+3DSwI8rZ38f
wARZ3/fgehgdQ33HTu8+gtkrG3LGRXhgcOSk7JN7j+H93/N+/NruhT2szfc0
T53AuN8rE3g5p/DtjWi/mcZnsfVuvv6Ioz7YuzVE5gvnPJ4Zro0bsd8XD0fN
qJOXvYTSx8bDtJbLGDf+xtofhVewxdE/Nr3WH3erx2pHTryGOwKW2JbtvY5e
p279q/4TjLwVK1PWbAxFTSOzsMC8Gzi2y5jL2XAL07pPxMf8DsPq01J+c1Pv
4Lmu69u+hIXjF7/5TRtvRmLr+ijN9pfReK9MZ8Yt71gs6NuoU/PkHsLkSzoX
vt9H6RjnTjezB7hML1B/y/OHqPDWltZaEI+Gyxcsf5n7GF2c3cvzDiegTI2U
iemiJCydGMn9I/kMp324827XyBd4xGuFQtb4l7hC9uqVszNeYf1wjcvoZa8x
1N9+RNqRZDTtWCsv9vINUhPfbzIaTkHpZ79Sch1S8fkG5Yl/3qfhTfO4DXMs
0rFjzTKpB1UZuKy0vvj1UTY+/Doz+sOUTJQcWOJQ0J2J26I+muyqz8LZ5tU9
yUXZaBO59/CH3BzUO7brXHJBLuY81zxwtDIPU9vHxI/5nI9mecEObmMKsXXR
jln+2u/Rz+LB9S1bi3DN+fnf0kKKUXOl+ge/8g+ov30567Z8CYamN3S/2VuK
80cs+VWxswwXLFKTD5lSjo9P247tzCnHyUfmRbBOVmBPxaHKkkWVGBbzIqnj
RyX+6TacXP+yCldbfUze7FmND+3jVFWW1uA27dQb7cM1uHZ+72/Hwlq8t8n6
m15oHVbS1oVjttfjtq4xUd5zGjCC+m6p0duAEpyGgAfYiAZmc1Qv+jchX8/h
04ZNzZjkebw/RKkFtzmP+fme14LR59WkvB61opkYnX1Vn4Om1+aUTQjlYGGM
nYJ3JwcXhm46cNWSi6E/Nmr+iuHiUo+tew73cvFiednK5yt5eELGY4TLDR7+
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
oFqJxw0CM91INe2+1MyPLvRgosLHs6UTHa12Z4tN6kBf+ip8tc+0o/7fYfNe
i9uQmWb1gVNPWpDGSufjg6LN6Fz4HKkR3Ii8T7IfTpqpR8uXLFiofLQOHby+
jJSOqEHN7r5n/TOqkMFJe2lvgQq0RyHJpOpqKVqgX9wzkVeElNtvXl/2lYHy
+Vk5u3WyEbm6uENifyo6wH52+vfrSHSvd088W/AFSDEdtl69NBY26hoqdOx6
BQ+fvDom1pcDtY8F9addEPxqldRW8yiG+FVaHJ7KZWCjue8kfn59biBoWNn+
E0xXOYfwzdZAREylZEtmHWwZ9M+sNm6ANulbi//+aYRICyH98/7/9vGg+Q3h
Za3wearkzB73NlBWX+wxxmqHsoqoxcbynWA8+EfnvW0XmA/yLrGO6oaF8/ZH
jhn1gOTlOukLHT3g6rq0ddtxFnxI4802LGSB0bSDTcamXti/2X7BrFMvkCXZ
7VxlvfC5KfJzMlcfONjuC2Go9sGfQIMxsXN9oPg5IvzD7T5wOq3XGxrcB3Ky
AUU+kX3AdoH+sy9bJPXvGgz69xVS6f//c10U9XpXOHKo17d2pN8vZ5sj9f6S
v+nPw8ilP5/AS/rzju1zoD5/74k11Pfh0Jilvp+QZjT1fY9U0N/f1KeUuh6n
gs9Q16dvir5eG7rp60d43aeuZ/6Vj9T1HTztQl3v+7qPqesvJLefuh9cv+n7
8/WeFHW/xhLWU/ev6n4GdT/nMuj7q1pE32+eBiXq/j9qos8D1276fDh40edF
66ITdX7uZtPnSSGJPl/8dfR5eyt5jzp/twvo89huQ5/PYkSfV8cl89T5nYmk
z/PSd/T5bncLp877k32V1PlP1PKg5iHFuJKaj0SZB9S8jPrQ87P0KT1PhYie
L8ev9LxZmtDzl/qensfeKno+c5Tpea0zpue39SI9z2Fl9HxrpNLzbhVJz7/M
NJ0HQavofMg+T+eFiCudH/M2dJ58nKXzpec7nTeKg3T+nLxP59G6b5epfJr5
TOdV5lU6v7hW0nm2LZDON6lTdN41Of4//5zoPLxJ0Pn4c+QAlZeLciqp/JQT
oPO06xWi8nW8WJTKW+mQE1T+bhx8Q+VxlvcNKp/f/pmi8pp3jxmV37p7jlF5
LlRM53tagCCV9+MB8lT+5ynNUftgMIXeDyVqStS+6D9L74/cZSS1T9S20fuF
/zO9b5y3x1P7Z9cieh8dNqb3kyknva/SmPT+Mqmm99nO9fR+K2+n9939/fT+
u69P70O5SHo/xrjQ+3LPCnp/3rtL71NJTXq/Pu1dSO1bQT96/y6Yz6P2MXP8
D7WfdeTofd08tova3w3tW6l9/iWa3u/+X65R+16ya47a/x+ef6N4QH2ql+KD
MWOaFxrUaX4onI6meCJTm+aLi+40b8zeovlDdRvNI/sFoik++e0sSPGKvUQ5
xS/NJW8onnFQLKb45sSQEsU7pnI0/yTdNqB4yCCL5iNhS5qXFj78Pz+tpXlK
TYbmq3FtmrcCNWj+YujTPHbxLc1n+fnzY5jXVn+Ko/ht33qa55ZF0nyXe5Xm
vcjsMIr/HN/TPMhrTfPhkYkzFC8qEjQ/tu2geVKqrYniS4+OCYo3edrfUfz5
9ssvikefptB8KjIsR/HqKQ2aXwXP0DyrNttH8W3BbAnFu/tiaP49eJjm4Za5
KIqPC0malyvdaX4+20Lz9IMtPyi+/jhB87Z0Es3f0nY0j8ueTaL43NyP5vWf
pYji98ndohTPm67Wpvje9VI8xfvVs2EU/7PtG6D6gAoypPqBet5aqi84+a6j
+kPtor1Un4Clh6l+4SpuR/WNHIlEqn90mltQfeTOmUVUP3FW7KX6ypdvJNVf
bAcjqD7zJY3uN49C6L7zJ4PuP1IFdB8y1XWn+lGZFt2XUvzo/nToD92nrLdw
U/1KsYnuW8MFdP9a9Y3uY//olupnboN0X7PwoPub/wDd5yav0v3ul2YB1fc+
mtD9DxXQfbBtWSrVDyXT6b7oyPOF6o8LC+k+2cFjR/XLFE26b7ZL0P2T1Uz3
0TpDup9uWEr31fOKdH+d1KH7rJcq3W+PLnhC9V2rNrr/ti2j+/CkLd2P65h0
X7a9SPfn6DG6T6MJJtWvB/bTfXuskO7fyJTu41L8dD+36npP9XXVtXR/V24r
pfp8SuMY1e/zXOi+r/JtkOr/uWUPKR+gr0f7gd3+tC8oukL7g9U3aZ9wSYD2
C3oZtG/YR9L+4e2ANuUjYkxpP7HuHu0rju+j/cXNANpn1DrTfiOk9QDlOxb6
mVL+Q3I57UO63tdQfsRr2pnyJXoatD/5NEH7FJc42q/o36V9y8iyFMq/LGym
fYzNV9rPHF2TRfka10Ha3wgk0j4HfaH9juoY7Xvql62m/A+cpn1QbiXth9Jr
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
OPTmpRn2c+jVaYU91uVRyOaDIPZ3qNZacDTidRji3mSJ/R6SsVuJfR9SrrPH
/g8pWmZjH4jiskNGFjwJRI2W27AvRJdEpQNs5f0RYfyGLB73RZcT477qttxF
8do3omIGvRF3/erH2vxeyLLXb2bFZU+0RzXLrLTXHV1MvHUvf9gViSb9/Vyk
4YKm4w5/GG+5iU5sOcNTGOGIjFzrVrB87VHujRBh6Xg7tFLJC/tQZFwW/CJS
0xZNDWsNJzyxQbvDqrE/RQK+vLNVtlao6lRrgt+2c0hofTv2rSjPdMvsH8Uz
yOhgzA5dJzP0fWlKkmCVMTpjkoV9LbrKQuu2HjFA6x+lRUWPnEDvdrypjig+
hvSZ0aqeH3XRn8Fv80s5jqINZwhLv4+HUK52+lXObi10IV5G8cNODaTwcjzr
Uf0+5Mn1akty8l5Ue9r9HePNHsS36GfX4ACBPtlKPYnPU0HhAw5st7qUkeTQ
4oKRQ0ro4evl2avm5JHT8iCpmK+y6NZ2B4F44e3o/Sn9jbUVkkjIe4GvQvUW
1GnwI2C52GbUoPB93K5wIyp3Wrpp61MRlFe8wna33QYU7tNwvXi5ADpXzvtB
hHsderxAesHDU7yIPc8lE6ZXInltnoNWmcvRN9tClv0oN4oMbXRIDV2E6izc
kEncQsTJxZ/KxsGOzK6q+YhnLUDtZz4SQTp/mSGb4hKjMmaYynw9jchjihm5
aM3XoswfzGRTZtubXd+Zowc03sTxjzKNHPLHsg8MMzsc398Q+DrIzFUoXzUy
3cd0EIw90mLBYv6wbmwtV+tiuqZbqkQeamNWPfxRMtDUxMy9eo5Lu7aeaRHO
Y6u4vZapT05GHiquYlr+OaTBKixnXm6+cfHO/lLmn/NKelFEMXNWSErFN7KA
KW1Vd4Iz4R2TrIortUzLZbr++uR/HN4wObhd2pwOZDJF2ZweDFulM6cd2C99
+/WCWf8jlf3GxiTm3AjKm6+PZ/ZZ7pEJ/f2UyZtresOMJ5oZ9j4i06YxjLkn
/yCPp1Iwc24moSmLL4gZODEVU9H2gOl0uddfQeMeM3BgG1fl6TvMx5/v9gmy
32ZaJvm9MxJ3Z97Ja+z7beXMnC1oBgnCkbljScLNVa/smBbMoT8Vz22ZUleT
Nm2UsWb+SXr6UvDTeWZAitSSIj5L5n6rGUm5CTPmf10hWU2Bp5mlOqZNd5Ya
MLMGP6/zVDnOLH241PHtf7rMn4rP3NfcO8R0Doi/FP9Lg+nLH5T8ds0+ZkLh
eOnPqj3MucZTVnL8qswho7DF3FeUmcI63utehSswKw5mjxrpyDJ3cnywaZeR
Yr76IlZackucGfbTT2hl5kZms2GxeSlLiMmxpep+ygd+5uReB1dV1TXMnfb9
wyy3lUz/kpW/HK7yMI1X1P5KHOZiKnlObT2gzMFMcF28INxoAVN7W3JGjOwf
xk4j3qOPsqcYUnz+peqjEwx5qYPhW3tHGbmOYx+jjg4ztGSU7WbW9DN+fk90
l77HYhRLDHVmlrYxDK21BqyuNTIkozaskR2pYziaCW5XlatlaDo1vNG9U8r4
16b8HT0qGULzm9l6JfMYFratOV2Lixi5c2tjP06/ZfxS8+7bnPGOUfxEZfn3
PUxGs6Eyv8THTMbH38ppW0/lMdhqOJ7/2JPEiL2+fwN3ZCLj+4ElIs+2xjOm
QUPzx6w5Q2ap5ZqVqU8ZQhbrVV5OxRKT1w6ISBs7EruJn4pSFqnEHdGNEk0W
ocTJvtRJr59ZxIT8Gz0RVVviy59Qa0mFbEJac5uPdesNxtliRtGDviyiJXrL
EfKmMbG2cUdiW+NzwjrjUVf1pzji8/GbW7dF+BCS18ihLJmXxPnH0RrhMXHE
pfVylluIy8SaG+ahXlvSiANzqZMnM2KJhzZnOgrmM4j88r1jC7bGEfPTfObr
ZlKJNXsrjjWpeDM+XNyreV04nRDm7ot0Xu3D8D2dwnmDLY74H9P5FkE=
              "], $CellContext`n$$], CompressedData["
1:eJw12DuMZ1UdB/D/+/24jzWxQuzQyqiFhXhvpyUQCwuKjYnGztXKoMUWYOyk
sBBjDAkU2hBMSITEeK6AAQ2QRd6IOLvssrPvmdl5P90958O/2czOmfv7fn73
/s6dM1/8/o8f+kG71Wpd6bZ8TjXb9z386xe3yub6g8/f89i1sjn/yKlnvn2+
bN576sz9k/fK5vXX7n7K5qWtuwvL5u6qB58vmzuL7qwsm6fvLnuqbH73xN1P
2dy52J2FZXN31T2Plc3P717ukbL5yd1lZ8rmh/FTNg/HhWXzULxg2XwnFi6b
uOz+svla/JTNl+LCsvlCvGDZxMudKpu4bFI2yVFyFBwFR8FRcBQcBUfBUXAU
HAVHwVFwFBwFR8FRcBQcBUfBUXAUHAVHwVFwFBw5R86Rc+QceRPjvZhz5Bw5
R86Rc+QcOUfOkXPkHDlHzpFz5Bw5R86Rc+QcOUfOkXFkHBlHxpFxZBwZR8aR
cWQcGUfGkXFkHBlHxpFxZBwZR8aRcWQcGUfG8Vn+pdxLeZdyLuVbyrVsYuwz
SzmW6i/VXTaRec9SnaU+LfRn0cS2vLbQj4U+LJrHY+EF94J3wblovhUvuOBa
8Cw4FhxzjjnHnGPOMeeYc8w55hxzjjnHnGPOMeOYccw4ZhwzjhnHjGPGMeOY
ccw4ZhwzjinHlGPKMeWYckw5phxTjinHlGPKMeWYcEw4JhwTjgnHhGPCMeGY
cEw4JhwTjgnHmGPMMeYYc4w5xhxjjjHHmGPMMeYYc4w4RhwjjhHHiGPEMeIY
cYw4RhwjjhHHqInxrg05hhxDjiHHkGNoXoccQ44hx9A8DjmGHAOOgX1jwDHg
GNgfBhwDjgHHwPwPOAYcA44BR5+jz9Hn6DeR8USfo8/R5+hz9Dn6HH2OPkeP
o8fR4+hx9Dh6HD2OHkePo8fR4+hx9Di6HF2OLkeXo8vR5ehydDm6HF2OLkeX
o8PR4ehwdDg6HB2ODkeHo8PR4ehwdDg6HG2ONkebo83R5mhztDnaHG2ONkeb
o83R4mhxtDhaHC2OFkeLo8XR4mhxtDhaHK3m3Zj/JKTcJ+HRmPckpJwn4asx
30lIuU7CSsxzHFKO45Dm8zikuschzeNxSHWOQ9pHjkLqz1FI83YU0n5xFFIf
jkLaH45Cch+GtB8chuQ8DLHsI4chuQ5DXHbfYUiMw5AcBxwHHAccBxwHHAcc
+xz7HPsc+xz7HPscexx7HHscexx7HHscuxy7HLscuxy7HLscuxw7HDscOxw7
HDscOxzbHNsc2xzbHNsc2xxbHFscWxxbHFscWxybHJscmxybHJscmxybHLc5
bnPc5rjNcZvjNscGxwbHBscGxwbHBsc6xzrHOsc6xzrHOscaxxrHGscaxxrH
GsdaeDbmvxW+F3PfCqOY95acN8OPYr6bIYu5boYm5rkhx41wb6x/I5yLda+H
n8V619W5Ht6PfboWfpU2lPCV2Jdr+nFVH66GOvqvhtW47Er4bfRe4bwSduMF
V8OTsfBqeCAGXOVY5bjMcZnjMsenHJ9yfMpxieMSx6XwanRc5LjIcZHjE45P
OD7huMBxgeMCx3mO8xznOVY4VjhWOFbC6Zj/f+HZmPtjeT+W87/6/FG4N+b6
KJyNef4jx4fqfxgej3U/CGux3vvqvK9P74UsbezhdOzLu/rxjj68E85G/9vh
XFz2Fu9bnP8Oa9H3Zqij602ecxznQvqF6I1wOuZ+Xd7X5PxXeDLm+2eoY65X
QyvmeUWOf6j/crg31n0prMR6f1encf2/hTpe96/hbLzeC67zFz//XGjFB//P
4Wxc/4x1f/L9p0Mrvpj+EFrx69/499Hw2Qnd11Xrc/H7lfWVn69cz/8/U6nn
+89V8lTphflCJW8lf8VT8VV18vr5lyv9cJ1XqtOpX5X+VfpZ6W91NvXb9d+o
3A91zlUPpPtVuX+V+1m5v9VKut/qv115HuR4pzqTnpfK81N5nirPV+V5k++D
yvMo54eV57X6Snp+K89z5fmuPO/yf1yZB44VdVaqP6b5qcxTZb4q88Z3Xv0L
nBfkuFB9I81vZZ4r812Z98r8y3dRHy7JeUk/LlWfT/tJZX+p7DeV/Uf+y/p0
mWOVY5VjlWOV4wrHFY4rHFc5rnJc5bjGcY3jGsd1jusc1zlucNzguMFxk+Mm
x02OWxy3OG5xrKmzVn03vV+qX6T3TeX9U3kf8a2pv865Lsd69fv0fqteTu+7
yvuv8j7k35BvQx825NzQj41qlt631dfT+7fyPq68n+W/rU+3OTY5Njk2OTY5
Njk2OTY5tji2OLY4tji2OLY4tjm2ObY5tjm2ObY5djh2OHY4djh2OHY4djl2
OXY5djl2OXY5djn2OPY49jj2OPY49jj2OfY59jn2OfY59jkOOA44DjgOOA44
DjgOOQ45DjkOOQ45DjkOOY44jjiOOI44jjiOOI45jjmOOY45jjmOOU44TjhO
OE44TjhOOFq180j95XQ+qdPvea3a+aV2nqmTr1Wn+q3a+ad2HqrfSOej+kI6
L9XOT7XzVJ387Trla9fOX7XzWJ360a5/mc5rdfp9sl07z9XOd3XK365Tn9q1
8yBHh6PD0eHocHQ4Ohwdjg5Hh6PD0eHocHQ5uhxdji5Hl6PL0eXocnQ5uhxd
ji5Hj6PH0ePocfQ4ehw9jh5Hj6PH0ePocfQ4+hx9jj5Hn6PP0efoc/Q5+hx9
jj5Hn2PAMeAYcAw4BhwDjgHHgGPAMeAYcAw4BhxDjiHHkGPIMax/mv6exDHk
GHIMOYYcQ44hx4hjVKd5H9XfTH/vqtPcj+o0lyOOEceIY8Qxqv19rU7zOqrT
vjCq09yOOcYcY44xx9j9GNdpnsd1ev+O6zTX4zrtH2OOMceYY8Ix4ZhwTDgm
HBOOCceEY8Ix4ZhwTDgmHFOOKceUY8ox5ZhyTDmmHFOOKceUY8ox45hxzDhm
HDOOGceMY8Yx45hxzDhmHDOOOcecY84x55hzzDnmddrH5xxzjjnHnGPOseBY
cCw4FhwLjgXHgmPBseBYcCw4FhwLjiXHkmPJseRYciw5lhxLjiXHkmPJseTI
zGHGk9XpvJ+Z+0zdzPxn6mf2gUyOzH6QyZNxZ+Y248/Mb6YPmTnO9CMzz5l9
I5M7s39k8mf2kYwj58g5co6cI+fIOXKOnCPnyDlyjpwj58g5co6cI+fIOXKO
nCPnyDlyjpwj5yg4Co6Co+AoOAqOgqPgKDgKjoKj4Cg4Co6Co+AoOAqOgqPg
KDgKjoKj4Cg4So6So+QoOUqOkqPkKDlKjpKj5Cg5So6So+QoOUqOkqPkKDlK
jpKj5Cg5So5T9f8BDvqpWA==
             "], {0, 1}], 
            ListLinePlot[
             MapThread[{#, #2/10}& , {CompressedData["
1:eJw12DuMZ1UdB/D/+/24jzWxQuzQyqiFhXhvpyUQCwuKjYnGztXKoMUWYOyk
sBBjDAkU2hBMSITEeK6AAQ2QRd6IOLvssrPvmdl5P90958O/2czOmfv7fn73
/s6dM1/8/o8f+kG71Wpd6bZ8TjXb9z386xe3yub6g8/f89i1sjn/yKlnvn2+
bN576sz9k/fK5vXX7n7K5qWtuwvL5u6qB58vmzuL7qwsm6fvLnuqbH73xN1P
2dy52J2FZXN31T2Plc3P717ukbL5yd1lZ8rmh/FTNg/HhWXzULxg2XwnFi6b
uOz+svla/JTNl+LCsvlCvGDZxMudKpu4bFI2yVFyFBwFR8FRcBQcBUfBUXAU
HAVHwVFwFBwFR8FRcBQcBUfBUXAUHAVHwVFwFBw5R86Rc+QceRPjvZhz5Bw5
R86Rc+QcOUfOkXPkHDlHzpFz5Bw5R86Rc+QcOUfOkXFkHBlHxpFxZBwZR8aR
cWQcGUfGkXFkHBlHxpFxZBwZR8aRcWQcGUfG8Vn+pdxLeZdyLuVbyrVsYuwz
SzmW6i/VXTaRec9SnaU+LfRn0cS2vLbQj4U+LJrHY+EF94J3wblovhUvuOBa
8Cw4FhxzjjnHnGPOMeeYc8w55hxzjjnHnGPOMeOYccw4ZhwzjhnHjGPGMeOY
ccw4ZhwzjinHlGPKMeWYckw5phxTjinHlGPKMeWYcEw4JhwTjgnHhGPCMeGY
cEw4JhwTjgnHmGPMMeYYc4w5xhxjjjHHmGPMMeYYc4w4RhwjjhHHiGPEMeIY
cYw4RhwjjhHHqInxrg05hhxDjiHHkGNoXoccQ44hx9A8DjmGHAOOgX1jwDHg
GNgfBhwDjgHHwPwPOAYcA44BR5+jz9Hn6DeR8USfo8/R5+hz9Dn6HH2OPkeP
o8fR4+hx9Dh6HD2OHkePo8fR4+hx9Di6HF2OLkeXo8vR5ehydDm6HF2OLkeX
o8PR4ehwdDg6HB2ODkeHo8PR4ehwdDg6HG2ONkebo83R5mhztDnaHG2ONkeb
o83R4mhxtDhaHC2OFkeLo8XR4mhxtDhaHK3m3Zj/JKTcJ+HRmPckpJwn4asx
30lIuU7CSsxzHFKO45Dm8zikuschzeNxSHWOQ9pHjkLqz1FI83YU0n5xFFIf
jkLaH45Cch+GtB8chuQ8DLHsI4chuQ5DXHbfYUiMw5AcBxwHHAccBxwHHAcc
+xz7HPsc+xz7HPscexx7HHscexx7HHscuxy7HLscuxy7HLscuxw7HDscOxw7
HDscOxzbHNsc2xzbHNsc2xxbHFscWxxbHFscWxybHJscmxybHJscmxybHLc5
bnPc5rjNcZvjNscGxwbHBscGxwbHBsc6xzrHOsc6xzrHOscaxxrHGscaxxrH
GsdaeDbmvxW+F3PfCqOY95acN8OPYr6bIYu5boYm5rkhx41wb6x/I5yLda+H
n8V619W5Ht6PfboWfpU2lPCV2Jdr+nFVH66GOvqvhtW47Er4bfRe4bwSduMF
V8OTsfBqeCAGXOVY5bjMcZnjMsenHJ9yfMpxieMSx6XwanRc5LjIcZHjE45P
OD7huMBxgeMCx3mO8xznOVY4VjhWOFbC6Zj/f+HZmPtjeT+W87/6/FG4N+b6
KJyNef4jx4fqfxgej3U/CGux3vvqvK9P74UsbezhdOzLu/rxjj68E85G/9vh
XFz2Fu9bnP8Oa9H3Zqij602ecxznQvqF6I1wOuZ+Xd7X5PxXeDLm+2eoY65X
QyvmeUWOf6j/crg31n0prMR6f1encf2/hTpe96/hbLzeC67zFz//XGjFB//P
4Wxc/4x1f/L9p0Mrvpj+EFrx69/499Hw2Qnd11Xrc/H7lfWVn69cz/8/U6nn
+89V8lTphflCJW8lf8VT8VV18vr5lyv9cJ1XqtOpX5X+VfpZ6W91NvXb9d+o
3A91zlUPpPtVuX+V+1m5v9VKut/qv115HuR4pzqTnpfK81N5nirPV+V5k++D
yvMo54eV57X6Snp+K89z5fmuPO/yf1yZB44VdVaqP6b5qcxTZb4q88Z3Xv0L
nBfkuFB9I81vZZ4r812Z98r8y3dRHy7JeUk/LlWfT/tJZX+p7DeV/Uf+y/p0
mWOVY5VjlWOV4wrHFY4rHFc5rnJc5bjGcY3jGsd1jusc1zlucNzguMFxk+Mm
x02OWxy3OG5xrKmzVn03vV+qX6T3TeX9U3kf8a2pv865Lsd69fv0fqteTu+7
yvuv8j7k35BvQx825NzQj41qlt631dfT+7fyPq68n+W/rU+3OTY5Njk2OTY5
Njk2OTY5tji2OLY4tji2OLY4tjm2ObY5tjm2ObY5djh2OHY4djh2OHY4djl2
OXY5djl2OXY5djn2OPY49jj2OPY49jj2OfY59jn2OfY59jkOOA44DjgOOA44
DjgOOQ45DjkOOQ45DjkOOY44jjiOOI44jjiOOI45jjmOOY45jjmOOU44TjhO
OE44TjhOOFq180j95XQ+qdPvea3a+aV2nqmTr1Wn+q3a+ad2HqrfSOej+kI6
L9XOT7XzVJ387Trla9fOX7XzWJ360a5/mc5rdfp9sl07z9XOd3XK365Tn9q1
8yBHh6PD0eHocHQ4Ohwdjg5Hh6PD0eHocHQ5uhxdji5Hl6PL0eXocnQ5uhxd
ji5Hj6PH0ePocfQ4ehw9jh5Hj6PH0ePocfQ4+hx9jj5Hn6PP0efoc/Q5+hx9
jj5Hn2PAMeAYcAw4BhwDjgHHgGPAMeAYcAw4BhxDjiHHkGPIMax/mv6exDHk
GHIMOYYcQ44hx4hjVKd5H9XfTH/vqtPcj+o0lyOOEceIY8Qxqv19rU7zOqrT
vjCq09yOOcYcY44xx9j9GNdpnsd1ev+O6zTX4zrtH2OOMceYY8Ix4ZhwTDgm
HBOOCceEY8Ix4ZhwTDgmHFOOKceUY8ox5ZhyTDmmHFOOKceUY8ox45hxzDhm
HDOOGceMY8Yx45hxzDhmHDOOOcecY84x55hzzDnmddrH5xxzjjnHnGPOseBY
cCw4FhwLjgXHgmPBseBYcCw4FhwLjiXHkmPJseRYciw5lhxLjiXHkmPJseTI
zGHGk9XpvJ+Z+0zdzPxn6mf2gUyOzH6QyZNxZ+Y248/Mb6YPmTnO9CMzz5l9
I5M7s39k8mf2kYwj58g5co6cI+fIOXKOnCPnyDlyjpwj58g5co6cI+fIOXKO
nCPnyDlyjpwj5yg4Co6Co+AoOAqOgqPgKDgKjoKj4Cg4Co6Co+AoOAqOgqPg
KDgKjoKj4Cg4So6So+QoOUqOkqPkKDlKjpKj5Cg5So6So+QoOUqOkqPkKDlK
jpKj5Cg5So5T9f8BDvqpWA==
               "], {
               10000, 310.0074900051535, 307.52992008016963`, 
                305.0672304051872, 302.6193612802069, 300.1862531252284, 
                297.7678464802523, 295.3640820052782, 292.9749004803071, 
                290.60024280533884`, 288.24005000037386`, 285.8942632054121, 
                283.56282368045447`, 281.24567280550116`, 278.9427520805523, 
                276.6540031256085, 274.37936768067044`, 272.1187876057386, 
                269.8722048808134, 267.6395616058955, 265.42080000098593`, 
                263.2158624060852, 261.0246912811942, 258.8472292063137, 
                256.68341888144516`, 254.5332031265894, 252.39652488174764`, 
                250.2733272069213, 248.16355328211156`, 246.06714640732045`, 
                243.98405000254945`, 241.9142076078004, 239.8575628830754, 
                237.81405960837682`, 235.78364168370715`, 233.76625312906887`,
                 231.76183808446487`, 229.77034080989856`, 
                227.79170568537336`, 225.82587721089297`, 223.87280000646135`,
                 221.9324188120833, 220.00467848776367`, 218.08952401350757`, 
                216.18690048932078`, 214.29675313520974`, 212.41902729118138`,
                 210.553668417243, 208.70062209340253`, 206.8598340196692, 
                205.03125001605227`, 203.2148160225623, 201.41047809921042`, 
                199.61818242600896`, 197.83787530297144`, 196.06950315011215`,
                 194.31301250744676`, 192.56835003499253`, 
                190.83546251276798`, 189.11429684079295`, 187.40480003908942`,
                 185.70691924768084`, 184.02060172659301`, 
                182.34579485585363`, 180.6824461354927, 179.03050318554273`, 
                177.38991374603933`, 175.76062567702047`, 174.1425869585277, 
                172.53574569060555`, 170.94005009330286`, 169.3554485066719, 
                167.78188939076944`, 166.21932132565684`, 164.6676930114006, 
                163.1269532680724, 161.59705103574984`, 160.0779353745167, 
                158.56955546446335`, 157.07186060568787`, 155.58480021829578`,
                 154.108323842401, 152.64238113812672`, 151.1869218856058, 
                149.74189598498148`, 148.3072534564083, 146.88294444005285`, 
                145.46891919609516`, 144.0651281047288, 142.67152166616273`, 
                141.28805050062178`, 139.91466534834848`, 138.55131706960387`,
                 137.1979566446691, 135.85453517384656`, 134.5210038774623, 
                133.19731409586666`, 131.88341728943672`, 130.57926503857792`,
                 129.28480904372668`, 128.00000112535176`, 
                126.72479322395712`, 125.45913740008437`, 124.20298583431546`,
                 122.95629082727551`, 121.71900479963571`, 
                120.49108029211678`, 119.27246996549232`, 118.06312660059274`,
                 116.8630030983088, 115.672052479596, 114.49022788547934`, 
                113.31748257705773`, 112.15376993550913`, 110.99904346209604`,
                 109.85325677817131`, 108.71636362518421`, 
                107.58831786468687`, 106.46907347834131`, 105.35858456792683`,
                 104.25680535534781`, 103.16369018264207`, 
                102.07919351198969`, 101.0032699257224, 99.93587412633374, 
                98.87696093648941, 97.82648529903871, 96.78440227702635, 
                95.75066705370531, 94.72523493255021, 93.7080613372714, 
                92.69910181183025, 91.69831202045512, 90.70564774765842, 
                89.72106489825437, 88.74451949737806, 87.77596769050588, 
                86.81536574347659, 85.86267004251378, 84.91783709425005, 
                83.98082352575196, 83.05158608454703, 82.13008163865149, 
                81.21626717660054, 80.31009980747949, 79.41153676095725, 
                78.52053538732132, 77.6370531575148, 76.76104766317553, 
                75.89247661667743, 75.03129785117392, 74.17746932064371, 
                73.33094909993923, 72.49169538483764, 71.65966649209446, 
                70.8348208595, 70.0171170459389, 69.20651373145306, 
                68.40296971730717, 67.6064439260583, 66.81689540162871, 
                66.03428330938279, 65.25856693620742, 64.48970569059676, 
                63.727659102741256`, 62.97238682462119, 62.22384863010466, 
                61.48200441505064, 60.746814197417045`, 60.018238117374125`, 
                59.2962364374233, 58.580769542521914`, 57.87179794021369, 
                57.16928226076565, 56.473183257311625`, 55.78346180600223, 
                55.10007890616199, 54.42299568045382, 53.752173375051186`, 
                53.08757335981796, 52.42915712849644, 51.77688629890412, 
                51.130722613139206`, 50.49062793779521, 49.85656426418493, 
                49.228493708574554`, 48.60637851242793, 47.9901810426611, 
                47.3798637919081, 46.77538937879785, 46.176720548243004`, 
                45.58382017174066, 44.99665124768559, 44.415176901696654`, 
                43.83936038695621, 43.26916508456361, 42.70455450390272, 
                42.14549228302406, 41.5919421890422, 41.04386811854867, 
                40.50123409804087, 39.96400428436732, 39.43214296519025, 
                38.90561455946526, 38.38438361793918, 37.86841482366607, 
                37.35767299254247, 36.85212307386178, 36.351730150888606`, 
                35.85645944145366, 35.36627629856919, 34.881146211066294`, 
                34.40103480425367, 33.92590784059904, 33.45573122043323, 
                32.990470982677934`, 32.5300933055969, 32.07456450757184, 
                31.623851047902875`, 31.17791952763441, 30.73673669040654, 
                30.30026942333291, 29.86848475790477, 29.441349870922473`, 
                29.01883208545398, 28.60089887182155, 28.187517848616224`, 
                27.778656783741184`, 27.374283595483675`, 26.9743663536163, 
                26.57887328052755, 26.18777275238228, 25.801033300311804`, 
                25.418623611634313`, 25.040512531105602`, 24.66666906219995, 
                24.297062368421813`, 23.931661774647775`, 23.570436768499363`,
                 23.21335700174604, 22.86039229173905, 22.511512622875202`, 
                22.166688148091175`, 21.8258891903874, 21.489086244381927`, 
                21.156249977893292`, 20.82735123355256, 20.502361030443563`, 
                20.18125056577128, 19.863991216557316`, 19.550554541362278`, 
                19.240912282033783`, 18.935036365479856`, 18.632898905466263`,
                 18.33447220443734, 18.039728755358734`, 17.74864124358144, 
                17.46118254872542, 17.177325746581875`, 16.89704411103253, 
                16.620311115984443`, 16.347100437318883`, 16.07738595485235, 
                15.811141754308151`, 15.548342129296438`, 15.288961583300852`,
                 15.032974831669446`, 14.780356803607976`, 
                14.531082644172777`, 14.28512771626124, 14.042467602596906`, 
                13.803078107706813`, 13.566935259888037`, 13.334015313160746`,
                 13.104294749204499`, 12.877750279274858`, 
                12.654358846096795`, 12.434097625731807`, 12.216944029414856`,
                 12.002875705357912`, 11.791870540515928`, 
                11.583906662311803`, 11.37896244031594, 11.177016487876656`, 
                10.97804766369702, 10.782035073353796`, 10.588958070754236`, 
                10.398796259525934`, 10.211529494335311`, 10.027137882129812`,
                 9.84560178329915, 9.666901812750426, 9.49101884089235, 
                9.317933994523168, 9.147628657617396, 8.980084472005773, 
                8.815283337943345, 8.653207414560068, 8.49383912018861, 
                8.337161132563658, 8.183156388887342, 8.031808085754946, 
                7.883099678935484, 7.737014883001244, 7.593537670800803, 
                7.45265227276966, 7.314343176072934, 7.178595123574287, 
                7.045393112625588, 6.9147223936714886`, 6.786568468663504, 
                6.660917089277931, 6.537754254932169, 6.417066210594065, 
                6.2988394443789115`, 6.183060684928961, 6.0697168985702294`, 
                5.958795286241753, 5.850283280192288, 5.74416854043992, 
                5.640438950989869, 5.5390826158063025`, 5.440087854533821, 
                5.3434431979647865`, 5.249137383248607, 5.15715934883959, 
                5.06749822917994, 4.980143349115029, 4.895084218038052, 
                4.8123105237617345`, 4.7318121261148285`, 4.653579050261644, 
                4.57760147974303, 4.5038697492377, 4.432374337043045, 
                4.363105857275028, 4.2960550517870955`, 4.2312127818084315`, 
                4.168570019302366, 4.108117838046034, 4.049847404432999, 
                3.9937499680007953`, 3.939816851686038, 3.8880394418099504`, 
                3.8384091777979243`, 3.790917541636958, 3.7455560470755254`, 
                3.702316228570778, 3.661189629988632, 3.6221677930626983`, 
                3.5852422456186432`, 3.5504044895710285`, 3.5176459887002816`,
                 3.4869581562179337`, 3.4583323421288803`, 
                3.4317598203998996`, 3.407231775944279, 3.384739291432913, 
                3.364273333942818, 3.3458247414545323`, 3.32938420921045, 
                3.314942275946671, 3.3024893100114774`, 3.2920154953841125`, 
                3.2835108176080374`, 3.2769650496533926`, 3.272367737723867, 
                3.2697081870237152`, 3.268975447501134, 3.2701582995846783`, 
                3.2732452399298926`, 3.2782244671937413`, 3.2850838678548815`,
                 3.2938110020982263`, 3.30439308978264, 3.316816996510978, 
                3.331069219822054, 3.347135875524417, 3.365002684192169, 
                3.3846549578432863`, 3.4060775868212185`, 3.4292550269007083`,
                 3.454171286639043, 3.480809914994038, 3.509153989230289, 
                3.5391861031352416`, 3.570888355566769, 3.6042423393539984`, 
                3.6392291305730518`, 3.675829278219466, 3.7140227942988733`, 
                3.7537891443575333`, 3.795107238474071, 3.8379554227337085`, 
                3.8823114712059583`, 3.9281525784466074`, 3.9754553525444223`,
                 4.024195808732788, 4.074349363586014, 4.125890829819757, 
                4.178794411714423, 4.233033701180072, 4.288581674480693, 
                4.345410689635213, 4.403492484512047, 4.462798175633204, 
                4.523298257703445, 4.58496260387912, 4.647760466790731, 
                4.711660480332221, 4.776630662229409, 4.842638417398948, 
                4.909650542108337, 4.977633228946641, 5.046552072614455, 
                5.116372076540797, 5.187057660333462, 5.258572668068468, 
                5.330880377422892, 5.4039435096545265`, 5.477724240430487, 
                5.552184211505847, 5.627284543252071, 5.702985848033943, 
                5.779248244432351, 5.85603137230923, 5.933294408709438, 
                6.010996084593383, 6.0890947023927, 6.167548154380253, 
                6.246313941844159, 6.325349195054512, 6.404610694010033, 
                6.484054889950751, 6.563637927621297, 6.64331566826841, 
                6.7230437133547385`, 6.802777428970027, 6.882471970919248, 
                6.962082310466261, 7.041563260710314, 7.120869503571397, 
                7.199955617359575, 7.278776104901933, 7.357285422200042, 
                7.435438007589443, 7.513188311371956, 7.590490825890234, 
                7.667300116013364, 7.743570850001155, 7.819257830714049, 
                7.894316027134548, 7.96870060616547, 8.042366964669414, 
                8.11527076171332, 8.187367950981107, 8.258614813317035, 
                8.328967989361711, 8.398384512242334, 8.466821840278184, 
                8.534237889662117, 8.60059106707848, 8.66584030221766, 
                8.72994508014719, 8.79286547349931, 8.854562174434838, 
                8.914996526343089, 8.974130555237869, 9.03192700080942, 
                9.088349347092683, 9.143361852712282, 9.196929580665183, 
                9.249018427602106, 9.299595152569546, 9.348627405174488, 
                9.396083753134757, 9.441933709178356, 9.486147757256047, 
                9.52869737803211, 9.569555073619098, 9.608694391523231, 
                9.646089947768155, 9.681717449165628, 9.715553714702958, 
                9.747576696017939, 9.777765496933366, 9.806100392024284, 
                9.832562844192553, 9.85713552122443, 9.879802311308381, 
                9.900548337491681, 9.919359971055712, 9.93622484379149, 
                9.951131859158298, 9.964071202309935, 9.975034348974601, 
                9.984014073176063, 9.991004453785273, 9.996000879893344, 
                9.999000054998334, 10., 9.999000054998334, 9.996000879893344, 
                9.991004453785273, 9.984014073176063, 9.975034348974601, 
                9.964071202309933, 9.951131859158298, 9.93622484379149, 
                9.919359971055712, 9.90054833749168, 9.879802311308381, 
                9.85713552122443, 9.832562844192553, 9.806100392024284, 
                9.777765496933362, 9.747576696017939, 9.715553714702958, 
                9.681717449165628, 9.646089947768152, 9.608694391523231, 
                9.569555073619098, 9.52869737803211, 9.486147757256044, 
                9.441933709178356, 9.396083753134757, 9.348627405174488, 
                9.299595152569541, 9.249018427602106, 9.196929580665183, 
                9.143361852712282, 9.088349347092677, 9.03192700080942, 
                8.974130555237869, 8.914996526343089, 8.854562174434832, 
                8.79286547349931, 8.72994508014719, 8.66584030221766, 
                8.60059106707848, 8.534237889662112, 8.466821840278184, 
                8.398384512242334, 8.328967989361711, 8.25861481331703, 
                8.187367950981107, 8.11527076171332, 8.042366964669414, 
                7.968700606165465, 7.894316027134548, 7.819257830714049, 
                7.743570850001155, 7.667300116013357, 7.590490825890234, 
                7.513188311371956, 7.435438007589443, 7.357285422200035, 
                7.278776104901933, 7.199955617359575, 7.120869503571397, 
                7.041563260710306, 6.962082310466261, 6.882471970919248, 
                6.802777428970027, 6.7230437133547385`, 6.643315668268402, 
                6.563637927621297, 6.484054889950751, 6.404610694010033, 
                6.325349195054505, 6.246313941844159, 6.167548154380253, 
                6.0890947023927, 6.010996084593376, 5.933294408709438, 
                5.85603137230923, 5.779248244432351, 5.702985848033935, 
                5.627284543252071, 5.552184211505847, 5.477724240430487, 
                5.40394350965452, 5.330880377422892, 5.258572668068468, 
                5.187057660333462, 5.11637207654079, 5.046552072614455, 
                4.977633228946641, 4.909650542108337, 4.842638417398948, 
                4.776630662229409, 4.711660480332221, 4.647760466790731, 
                4.58496260387912, 4.5232982577034395`, 4.462798175633204, 
                4.403492484512047, 4.345410689635213, 4.288581674480689, 
                4.233033701180072, 4.178794411714423, 4.125890829819757, 
                4.074349363586012, 4.024195808732785, 3.9754553525444223`, 
                3.9281525784466074`, 3.882311471205956, 3.837955422733706, 
                3.795107238474071, 3.7537891443575333`, 3.714022794298872, 
                3.6758292782194646`, 3.6392291305730518`, 3.6042423393539984`,
                 3.5708883555667676`, 3.53918610313524, 3.509153989230289, 
                3.480809914994038, 3.454171286639043, 3.429255026900707, 
                3.406077586821217, 3.3846549578432863`, 3.365002684192169, 
                3.3471358755244163`, 3.3310692198220533`, 3.316816996510978, 
                3.30439308978264, 3.2938110020982263`, 3.2850838678548815`, 
                3.2782244671937413`, 3.2732452399298926`, 3.2701582995846783`,
                 3.268975447501134, 3.2697081870237152`, 3.272367737723867, 
                3.276965049653393, 3.2835108176080374`, 3.2920154953841125`, 
                3.3024893100114774`, 3.3149422759466716`, 3.3293842092104504`,
                 3.3458247414545323`, 3.364273333942818, 3.384739291432913, 
                3.40723177594428, 3.4317598203999005`, 3.4583323421288803`, 
                3.4869581562179337`, 3.517645988700283, 3.5504044895710303`, 
                3.5852422456186432`, 3.6221677930626983`, 3.661189629988634, 
                3.70231622857078, 3.7455560470755254`, 3.790917541636958, 
                3.8384091777979266`, 3.8880394418099526`, 3.939816851686038, 
                3.9937499680007953`, 4.049847404433001, 4.108117838046037, 
                4.168570019302366, 4.2312127818084315`, 4.296055051787098, 
                4.3631058572750305`, 4.432374337043045, 4.5038697492377, 
                4.57760147974303, 4.653579050261649, 4.731812126114832, 
                4.8123105237617345`, 4.895084218038052, 4.980143349115033, 
                5.067498229179945, 5.15715934883959, 5.249137383248607, 
                5.34344319796479, 5.440087854533826, 5.5390826158063025`, 
                5.640438950989869, 5.744168540439925, 5.8502832801922935`, 
                5.958795286241753, 6.0697168985702294`, 6.183060684928967, 
                6.298839444378917, 6.417066210594065, 6.537754254932169, 
                6.6609170892779375`, 6.786568468663508, 6.9147223936714886`, 
                7.045393112625588, 7.178595123574287, 7.31434317607294, 
                7.452652272769667, 7.593537670800803, 7.737014883001244, 
                7.8830996789354915`, 8.031808085754953, 8.183156388887342, 
                8.337161132563658, 8.493839120188618, 8.653207414560075, 
                8.815283337943345, 8.980084472005773, 9.147628657617405, 
                9.317933994523175, 9.49101884089235, 9.666901812750426, 
                9.845601783299157, 10.027137882129821`, 10.211529494335311`, 
                10.398796259525934`, 10.588958070754249`, 10.782035073353804`,
                 10.97804766369702, 11.177016487876656`, 11.378962440315933`, 
                11.583906662311811`, 11.791870540515937`, 12.002875705357912`,
                 12.216944029414856`, 12.434097625731816`, 
                12.654358846096804`, 12.877750279274858`, 13.104294749204499`,
                 13.334015313160759`, 13.566935259888046`, 
                13.803078107706813`, 14.042467602596906`, 14.285127716261254`,
                 14.531082644172788`, 14.780356803607976`, 
                15.032974831669446`, 15.28896158330086, 15.548342129296449`, 
                15.811141754308151`, 16.07738595485235, 16.3471004373189, 
                16.620311115984453`, 16.89704411103253, 17.177325746581875`, 
                17.46118254872541, 17.748641243581446`, 18.039728755358748`, 
                18.33447220443734, 18.632898905466263`, 18.935036365479867`, 
                19.240912282033793`, 19.550554541362278`, 19.863991216557316`,
                 20.181250565771293`, 20.502361030443573`, 20.82735123355256, 
                21.156249977893292`, 21.489086244381944`, 21.825889190387418`,
                 22.166688148091175`, 22.511512622875202`, 22.86039229173906, 
                23.213357001746058`, 23.570436768499363`, 23.931661774647775`,
                 24.29706236842183, 24.666669062199965`, 25.040512531105602`, 
                25.418623611634313`, 25.801033300311783`, 26.187772752382298`,
                 26.57887328052757, 26.9743663536163, 27.374283595483675`, 
                27.778656783741205`, 28.18751784861624, 28.60089887182155, 
                29.01883208545398, 29.441349870922494`, 29.86848475790479, 
                30.30026942333291, 30.73673669040654, 31.17791952763443, 
                31.623851047902896`, 32.07456450757184, 32.5300933055969, 
                32.99047098267795, 33.45573122043326, 33.92590784059904, 
                34.40103480425367, 34.88114621106632, 35.366276298569204`, 
                35.85645944145366, 36.351730150888606`, 36.8521230738618, 
                37.357672992542504`, 37.86841482366607, 38.38438361793918, 
                38.90561455946526, 39.43214296519029, 39.964004284367334`, 
                40.50123409804087, 41.04386811854867, 41.591942189042186`, 
                42.14549228302401, 42.70455450390277, 43.26916508456366, 
                43.83936038695624, 44.415176901696654`, 44.99665124768559, 
                45.58382017174066, 46.176720548243004`, 46.775389378797826`, 
                47.37986379190815, 47.99018104266115, 48.60637851242798, 
                49.22849370857459, 49.85656426418493, 50.49062793779521, 
                51.130722613139206`, 51.77688629890408, 52.429157128496364`, 
                53.087573359818016`, 53.75217337505126, 54.42299568045386, 
                55.10007890616199, 55.78346180600223, 56.473183257311625`, 
                57.16928226076563, 57.87179794021363, 58.58076954252199, 
                59.29623643742336, 60.018238117374146`, 60.746814197417045`, 
                61.48200441505064, 62.22384863010466, 62.97238682462119, 
                63.727659102741235`, 64.48970569059684, 65.2585669362075, 
                66.03428330938287, 66.81689540162876, 67.6064439260583, 
                68.40296971730717, 69.20651373145306, 70.01711704593889, 
                70.83482085949991, 71.65966649209453, 72.49169538483771, 
                73.33094909993928, 74.17746932064371, 75.03129785117392, 
                75.89247661667743, 76.7610476631755, 77.63705315751471, 
                78.52053538732139, 79.4115367609573, 80.31009980747953, 
                81.21626717660054, 82.13008163865149, 83.05158608454703, 
                83.98082352575196, 84.91783709425, 85.86267004251387, 
                86.81536574347665, 87.77596769050598, 88.74451949737812, 
                89.72106489825437, 90.70564774765842, 91.69831202045512, 
                92.69910181183019, 93.7080613372715, 94.72523493255031, 
                95.75066705370541, 96.7844022770264, 97.82648529903871, 
                98.87696093648941, 99.93587412633374, 101.00326992572238`, 
                102.07919351198962`, 103.16369018264217`, 104.25680535534788`,
                 105.35858456792687`, 106.46907347834131`, 
                107.58831786468687`, 108.71636362518421`, 109.85325677817131`,
                 110.999043462096, 112.15376993550925`, 113.31748257705783`, 
                114.49022788547946`, 115.67205247959606`, 116.8630030983088, 
                118.06312660059274`, 119.27246996549232`, 120.49108029211672`,
                 121.71900479963583`, 122.95629082727562`, 
                124.20298583431557`, 125.45913740008443`, 126.72479322395712`,
                 128.00000112535176`, 129.28480904372668`, 
                130.57926503857792`, 131.8834172894366, 133.19731409586677`, 
                134.52100387746242`, 135.85453517384667`, 137.1979566446691, 
                138.55131706960387`, 139.91466534834848`, 141.28805050062178`,
                 142.67152166616262`, 144.06512810472898`, 
                145.46891919609527`, 146.88294444005297`, 148.3072534564083, 
                149.74189598498148`, 151.1869218856058, 152.64238113812672`, 
                154.108323842401, 155.58480021829592`, 157.07186060568802`, 
                158.5695554644635, 160.0779353745167, 161.59705103574984`, 
                163.1269532680724, 164.6676930114006, 166.21932132565684`, 
                167.78188939076932`, 169.35544850667202`, 170.94005009330297`,
                 172.5357456906057, 174.1425869585277, 175.76062567702047`, 
                177.38991374603933`, 179.03050318554273`, 180.6824461354926, 
                182.34579485585377`, 184.02060172659316`, 185.706919247681, 
                187.40480003908942`, 189.11429684079295`, 190.83546251276798`,
                 192.56835003499253`, 194.31301250744676`, 196.0695031501123, 
                197.83787530297158`, 199.6181824260091, 201.41047809921042`, 
                203.2148160225623, 205.03125001605227`, 206.8598340196692, 
                208.70062209340253`, 210.55366841724285`, 212.41902729118158`,
                 214.29675313520997`, 216.18690048932092`, 
                218.08952401350757`, 220.00467848776367`, 221.9324188120833, 
                223.87280000646135`, 225.82587721089283`, 227.79170568537359`,
                 229.77034080989878`, 231.76183808446504`, 
                233.76625312906887`, 235.78364168370715`, 237.81405960837682`,
                 239.8575628830754, 241.91420760780025`, 243.9840500025496, 
                246.06714640732062`, 248.16355328211174`, 250.2733272069213, 
                252.39652488174764`, 254.5332031265894, 256.68341888144516`, 
                258.8472292063137, 261.02469128119407`, 263.2158624060854, 
                265.4208000009861, 267.6395616058958, 269.8722048808134, 
                272.1187876057386, 274.37936768067044`, 276.6540031256085, 
                278.9427520805521, 281.24567280550133`, 283.56282368045464`, 
                285.8942632054123, 288.24005000037386`, 290.60024280533884`, 
                292.9749004803071, 295.3640820052782, 297.767846480252, 
                300.1862531252287, 302.61936128020704`, 305.0672304051875, 
                307.52992008016963`, 310.0074900051535, 10000}}], Filling -> 
             Axis, PlotStyle -> {Thick, Red}]], 
           Text[
            StringJoin["E = ", 
             ToString[
              
              Part[{5.35892891446923, 5.396767247319809, 8.955601606636414, 
               9.58512914195829, 12.05596072784828, 14.010408215687107`, 
               16.480532240709977`, 19.068050525586138`, 21.837771766716852`, 
               24.744059793249097`}, $CellContext`n$$]]]]}], 
        "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
        "DefaultOptions" :> {}], ImageSizeCache -> {489., {200., 207.}}, 
       SingleEvaluation -> True], Deinitialization :> None, 
      DynamicModuleValues :> {}, 
      Initialization :> ({$CellContext`plotDiscrete\[Psi][
           Pattern[$CellContext`psi, 
            Blank[]], 
           Pattern[$CellContext`grid, 
            Blank[]], 
           Optional[
            Pattern[$CellContext`range, 
             Blank[]], All]] := With[{$CellContext`phases = Association[
              MapThread[# -> #2& , {$CellContext`grid, 
                Arg[$CellContext`psi]}]]}, 
           ReplaceAll[
            ListLinePlot[
             
             MapThread[{#, #2}& , {$CellContext`grid, 
               Abs[$CellContext`psi]^2}], ColorFunctionScaling -> False, 
             ColorFunction -> (ColorData["Rainbow"][
               Rescale[
                $CellContext`phases[#], {-Pi, Pi}]]& ), 
             PlotRange -> $CellContext`range, Filling -> Axis, 
             AxesLabel -> {$CellContext`x, Abs[
                 $CellContext`\[Phi][$CellContext`x]]^2}], Line[
              Pattern[$CellContext`pts, 
               Blank[]], 
              Blank[]] :> {Black, 
              Line[$CellContext`pts]}]], $CellContext`grid = CompressedData["
1:eJw1lD1MFFEUhdfOEAsLa9QOrYxaWIinxFKJJZWJxk7sDFpYgC0UFmqMMYFC
mw0mJEJiuIAYxQAB+VlEwJn9nd2d3aXBWJq57+M1m9k5c+/5zrvvnb/7sP/e
iVwut5Q7XoeW74uHzuQ7NjC6cNQz0LGuwvhgb1fHprtHmren23bfV9vOuLBt
mWp0oWWPejNly85msu6WrSxnK7UnLkztghdMzcsVmuaykaZd8dW0rGtf3DBv
O9qwG964YanL6vb6VbbqdtOFdfubtT1KbCIrN55YvxtMLHAkcNTgqMFRg6MK
RxWOKhwV83KDFXNZd8UcY7kMRxmOMhwlOEpwlOAo2pgXLMJRhCOGI4YjhiOC
I4IjgiPC/x98H+D3AJ/7+NszL9OzZ8Pu57cVvfwu/Xfp+4t+O/TZIacC+RTI
ZZs8tshhy7zc0KZtu2zDLjvvBpw/4VuHax2eNTjW8L+K7xX8LlvkhX/YS/e3
ZLdc+N1Oup9vNuc+vtpT779oV73vF/rN02eO+rPU/Uy9Gep8ssf+/ZQl/t1H
m3R93sZc98Ge+fsJm/P/3/L8gt9hOz4hPIv3Qs/zhN6Fevyf12Hox/spnQ5+
0M3oUvCLflbvAw/fzeta4FXwvyjyEPmIvER+Ik+Rr8hb5C/2Q+yP2C+xf2I/
FXLe0E7Yb4X8N3UuzIMWw3zoQZgXnQrzo8kwT7oT5kv/wrzpTZg/XQ/ziM9d
Ma/43RPzjO99Me/4PxDnAY5InBd4InGe4IrFeYMvFucRzqLCOSnCW9LzcJ7h
LuliOO/wl7Ua7gNyqOCzIu4P/FbF/YLvqrh/8F8T9xMcCRwJHAkcCRx1OOpw
1OFowNGAowFHE44mHE04UjhSOFI4WnC04GjB0YajDUcbjg4cHTg6cBzqPxSs
TfM=
          "]}; Typeset`initDone$$ = True), SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> True,
      StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]],FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               RowBox[{"arg", "(", "\[Phi]", ")"}], {FontFamily -> "Arial"}, 
               Background -> Automatic, StripOnInput -> False]}, {
              GraphicsBox[{{}, {}, 
                RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
                 "], {{
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}}], {Antialiasing -> False, 
                 AbsoluteThickness[0.1], 
                 Directive[
                  Opacity[0.3], 
                  GrayLevel[0]], 
                 LineBox[
                  NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                   7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                   112.5}, {7.5, -112.5}}]]}, {
                 CapForm[None], {}}, {Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
               Scaled[0.02], PlotRange -> All, Frame -> True, 
               FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
               Opacity[0], FrameTicksStyle -> Opacity[0], 
               ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
     "BarLegend", DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"Rainbow\"", ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", 
            RowBox[{"Arg", "[", "\[Phi]", "]"}]}], ",", 
          RowBox[{"\"Ticks\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"-", "3.14`"}], ",", 
                RowBox[{"-", "1.57`"}], ",", "0", ",", "1.57`", ",", 
                "3.14`"}], "}"}]}], ",", 
          RowBox[{"\"TickLabels\"", "\[Rule]", 
            RowBox[{"{", 
              
              RowBox[{"\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7075758167481203`*^9, 3.7075758757782636`*^9}, 
   3.7076088852824707`*^9, 3.7077452956210976`*^9, 3.70774798512438*^9, 
   3.7077565299447756`*^9, 3.7077568462253532`*^9, 3.707771188607443*^9, 
   3.707771885250553*^9, 3.7077738660838127`*^9, {3.707774395210622*^9, 
   3.7077744100773783`*^9}},ExpressionUUID->"09cd4efc-101d-47c6-8281-\
cb192eb04f4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"presentSpectrum", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5", ",", " ", "0.01"}], "}"}], ",", " ", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"6", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], "]"}]}], " ", "+", " ", 
    RowBox[{"4", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "1"}], ")"}], "2"]}], "]"}]}], " ", "-", " ", 
    RowBox[{"5", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}], "2"]}], "]"}]}], " ", "-", " ", 
    RowBox[{"7", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["10", "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "2"}], ")"}], "4"]}], "]"}]}], " ", "+", " ", 
    RowBox[{
     SuperscriptBox["x", "4"], "/", "2"}]}], ",", " ", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3"}], ",", " ", "2"}], "}"}], ",", " ", "\n", "\t", "10",
    ",", " ", "\n", "\t", "10"}], "\n", "]"}]], "Code",
 CellChangeTimes->{
  3.7075760123576207`*^9, {3.707576684106708*^9, 3.7075767004992414`*^9}, {
   3.707576732088643*^9, 3.707576766833877*^9}, {3.707576808282118*^9, 
   3.707576940328478*^9}},ExpressionUUID->"d92a4886-5736-481b-b691-\
27fb85be3cc1"],

Cell[BoxData[
 TemplateBox[{TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
       Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`n$$], 1, 10, 1}}, 
       Typeset`size$$ = {432., {138., 145.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       False, $CellContext`n$5531$$ = 0}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
        "ControllerVariables" :> {
          Hold[$CellContext`n$$, $CellContext`n$5531$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Overlay[{
           Show[
            $CellContext`plotDiscrete\[Psi][
             Part[CompressedData["
1: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
FbNyNwlO9FrCaLh8okeKZjELZRdiROYk9s0matFbYQyjiDAl6/01hPHT0y91
nurD7rede0XK1IUZ/1ZLZyxtw36PmTCe7G/Eaq5wTTZerMXyz//kyBCvxGiT
rt8x+g3YNdbg2/tvSjBmV0LA2OpPTOdKwZM63lzsq9/DX640mRhlpqaYTXcy
VsCbksnllojpOZaW8c/HYsTqxfOdY5FYNGNTwKnNcOzXWsuK2EQwdkHD4/sz
6o+YsCqPvLaLD9b+0l6VY9ETo+0eumt1wQ1DaWMdS6feYgo/pQU09+2xkrM/
Dqs0vsIuzQvXzWdbYropfWJMR59jzOuU/zpMDbGUtUIaxzg9rOO2epcZtS52
n5JameGIJsbfiR1amVTFLJ4lCF2mUsKECzN7K73lsHqz6nf3KKWxa34qRZSl
BCxURohy9rAopmruaG9zRhjz8L1y/ZCyAEa0P1qgIc2LyVRsPGg+fQGr7n+2
sT7HgbnMnHjuSsmCzfd1vz/FwoTdLBCXLbWjw0hZVUe+sVJjxxcMTcqWyTGF
P24yRHoybDyNrt5rZ4+oYm0zQ7e0SWSjFxQN/7ROdK5ZaKtZXiK6XE8wqDeZ
IVYtW8WKZI0SUXXSiQtk40RV1bLPp2g6iSW+5d94lzuJH/JOUZho1RCXBo/M
2K12EF+TyQ7uOOBEoaym27+/ZxMjegKys9TKiEPYs4E2vwiiti5JWMX7V8Rz
jI8zjXPCidli5B7Tlsni5fOX1F/rlxCTrmn+vqxKJJIk5hswROQQSzaq+k+p
xYuHzt2S2ruWSZyRynVs4swSf/r3d2m7SCyxicXX2Lg1QTzRWMyyYPij+Gc/
qhcfLHOIlt9Ijr7NSiOG3rhK41JTSsxde1W3xZdLpOChMvN48YUYadf1Xbct
RJzDxJ5WfLWMaMjg+fmkURmximnl70u+H8Qy++AJeZJCIs9fh7F1xQYiBZ6t
3dJeRUxO0Q5SzG4kSlAhXdFTHUS9+0N3dr0GiDRbfZkVx0aJglVCsn8JU8TO
aeO/82qLxE96PbfeUfwmhglFO+5sbhDjYzQXFjp3iHK/nf9kyJBgG4/HxgXu
HcbCr7E4edYdxW4kW3xpj6HFwh+uyGUKncQCciqtySVPYyL2F1eHhdkxzgQq
e5K08xj1yaPLGTo82G2lB8ydUlcwhWDyGKff1zCxJcWLAxY3MO3h5WANWgnM
x2A2gfOvFDZQeoJHWOEONum6/vB48F2Me+Jzn9pRVez4vlQnTvsAC5/5d7zk
rzYWes4m4du/pxjj8emJ1VwDbO7FCcUSUVOsPjUvqrTeAqOzZw54If8Ki1SW
jiy3sMeKNYmNWs5vMFlnb/W33a7YRZP0ucoIT2yvq+cDL58Pxk9UfM2HBWKJ
XK8NRcqCMarRIdfCgXDsZTUH6VpXJHYjQ69efDkWKwt86fwtNBErmhd6gR0k
Y7es9m6RamRiyizU4zf1czFPP89DojIF2EmW0Y/sayWYPFdIMrliGSZwlvuK
dEYlNqHokGAHtRjpdVmSpvgmTBtnbhlH7Zi2fiCLemUX1pH697rWdh+W/XBB
o5dkBKMaXO62IxvHvBy/LdJ8ncK41e9qS07MYZ/cO+1F/y1j2OBlBU/fNSzi
XpKa6aU/mBN5zIypww6Wy10XZxv6D/NyzYw81kmGGxU4+giak/+no+Jq3llU
uOTj5kr9Ulqcx85dLLafHlfeOHFRS48JfzvodIjD9wxuYHqG76ENO15s6PA6
IPoc3rcZlkNCwY1T/ow65XqUF38u7iF9vewKXuZkzlvLdQ3/JRX98KWhCM4d
KC7zRUgUFxSblDqWKoHb75gkp1pL4YtGvAJZLjL4KVJeYS86eVwQHOjcxO/h
u3p94tH+9/HLnLkix/XV8eHpVv3FTE389oSCMK2XDu748cWrc/v/Y7i6w7Fu
o3BCaYhkFkmRhCIj6/09UdJE2ZKI6COJ7GSvKJml7L2y93h/x957b+9rj8iI
MsrXX891rueM6zrnOfdz37p4rsGeozfzU3xFBTFLsD3DmfMMzI9+fo4nfWy9
0Bv3Ao/4pPeJLvUVzu8rcKRJ9zVObOG3yXOxwR11u/RmTzvgAVKhtg13nXDn
Jp4LvP6u+FlaA6tLqh54FvGpS7CnN875Kk60TdgPL3QonbU0+Yhbqj4ZKuMK
wh03uY5UzofgORyTQ6dPhuFk7vuZupXhOEkoNnz9RzQ+5rX5RFonDqfP3JLZ
YEnE1bfbIvdfTcHrEk49rqpLx0v2+/HL92Xh3w+WmV6TzsVH2oyDbozm4z/T
x57ODhfhIk9UPa5cL8NL4mZeJp8B3N3+wXZ+ZSXu++Ze2FWsBg+q04rRpKvH
r72j5MxHTfiRqIrX3MOtuKpfsp7lrw5cOoSkO3yjG19Mv8p8YKwXL7qVf+Fk
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
57OYsD7R5XDZdvbEIyLef1rY7Is6ka+eMZH12kOiwvlrFDf87hNtc5cS67oV
iKIJyzQ/pa4T55UjLnsdRERPx9iZW9SSRK9LylNnL4oShQiSjVXcQsRrUjaO
kdQXibpv59cGB7mJ7R91AxvjzhAdf8gab5efJKb8cX40qMdEZNq/Sd2tfJzI
cvgD9/Whw8SpVKnU5mhq4i5Lsr6FKgWxPtZ2Ilp9t1y4pqzvWcfP8oO65HMW
hmvlltD1l5SxWB7mstUiGTpbnvZRLTOjfKxcG8kc2hoZLdfdKiVvuw6WLw12
LZwR7SxPYyYdyt7uLNfoEzXxkGkrv6A/2ZykXlf+g2c18Ih2XfnqgZv/vXT5
UD5Wt2o8Jhcic1LL4+wR848yatoy/pYTWeXTsx3x/y2HyCS9emlTPpRT3lX1
d3kh2UdG1PgFFetqTPlG4t2NfmZ7Gd8i1r2ZmbTybaGK/fu9M8oPli5/jHQp
LW/vvn9xdLOknDyyFUElU1yusy/i+I/CovL7lJ9dQ3yby42CH0qSqTrKVbdY
/R/FtJfHvyt+8au0t/x7tIPl2eWx8tDKOee8JnL5i/Sp7YbmmXL/0ilh6o3v
5flJghtibWvlGY9zHuZ7/Spf9AiNjF77U14u/4X48gQl0e/o4v163YNEv4Af
vFMltEQab+zwUikDkfH0AlfxQxbiL1+TxkphDmIARXZhv/JZ4iN2ubSDneeJ
MTRG3mejBYi/ye128kPCxK9p2PshcXEi19rgeccyaaLk6+bAYClZYqCk/VaG
sTxRUFqWuiPqDpEy4NQ3PWdloksCx4cEC1Xi4d2zGoL3tYgPt0YUnBSfEE3U
TrjzaRoQSXxqD3rJxsS/eEnGaVsz4iXrlUkRXkvi+CdO1ipNG+ISZeilm45v
iBnpK7o9Ey7EbXbxFLcyD+KZsrExH7N3xFPxhl7xFz4Sz1k2hRYyBBO/S6up
Gqh+Jt5dMr9zyC2C+PxxBNO0USzx8K8z9L8kE4nNH7aCp0ZTiY56D+JPOGUR
KQjn1+7y5hGLDG89aLxZRHS6P2S6IVdObHFnskHclUT/Dq6WJ3U1xLjfmp5j
vI3Eg1L9AvUv24gaFe6syoZdRN3d979KxPqIS+pfxGebh4jnm098DD5PIi5Q
Hrrh+nqSmHHLibrceJZ471DpA+Vz34lkj74t1pkVohED05skhZ/EtysUfSPK
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
R5d52L2QbDhZ06Ry/G0OsI0HGa0dzoXDAhWewSkvQeH61ZgpwVegLfT3+Gx9
PlgzL/L5eL4GujN39OLUi8By9tR9PrESyE2UVqLbVwZN97gmuYXLYQKu8+up
V4DW909+9C6V8GN8O6I+qwpeC3Zbkt6/gaH5z5R5rRqY+pwRLFRUC2Uf/q/o
usOx/P6wrZARIcnIiCiR0Jf3+YgykzSszEJakuw9IhHKFgmZISsR3vfYe+/t
HVZJUYgSP7+/PtfzeZ7rXOec676f+77/OafiDK14FdBmXPm1VFwNN2N9D8jp
4WHgPa25xF8C3JIu04wwr4WVqljpbI06MJZ0u7GtVA9iIxqPcuUbIH644wf+
XCMQtL/l6mg1gVs0s4mhVTPUGn9RJge0wIVDWUmLBa0Q2E4yNCO1wc+uY0ES
gh3ATdRYkrHrBAVyU96lT12Qi6/G67P1QD1tir6/Ui80b8U7RC73wsaf7cn8
7D7Alq0WC273g4Cnj6WV6ADcip65G7U4AFMMMTb/igYhoVmt9o7nEPRffrcQ
vJe/P5jviu3nGYHnbh4JKYsjkKrhcmSuehTGPR31A16OAe2bq5H77cbhofHL
TTaVCTjoeDVA6OAkMHdfoatbmAStJlabxzX/P1d2ojA/ahomH5lrz1rNgGv1
BncTDxEcRQVeBfkQge5VJI0ViQj/sVyIYlInwdVJI5xsBgkYPC8d998hwedX
50rTjcggtf9PG1ZIBv/XmUK7O2SIynj65PklCggocw8GxVGANd50PWaMAuu/
c3wseWchwZzP7IXBLGi36B+rezoLkSri1lkls6DopL6fPDILHX1m3cK/Z2Hw
M+kFB9scjFyiKrMSnIN3dvN5dcfngPmXodrXvXpJkiIUu9evED0j5cM6B38+
jazfWZuFiPv40/x9s8Bl58J5J3MW6nEhLUccZoF9Lb6X89QseD3+9VhmlgIP
teg5DF9SYB/bkRhXOQqoUXlUPGsng9zGs/uhxmRoyHp52H+SBLRytSu+hiQQ
EU4ST20mghVznwzVyb39kVWYTeecgRSz/JHwqilg6ryRo6I/CWbnbE01+sch
3iQ45/KFsb19lF5nzR7Z+18dVbu+OQRS8Q82d5QHwfHQgxwap34oEo/Jsk3u
hddp1+QDnLqgkHJj3CupDezXelXkPjTBsw4lBpWyOmBKjM17a1gN+bHP0wPl
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
LXxCxiTlUpMw5j8rWfOxj4vwP0dFlv8=
              "], $CellContext`n$$], CompressedData["
1:eJw12DuMZ1UdB/D/+/24jzWxQuzQyqiFhXhvpyUQCwuKjYnGztXKoMUWYOyk
sBBjDAkU2hBMSITEeK6AAQ2QRd6IOLvssrPvmdl5P90958O/2czOmfv7fn73
/s6dM1/8/o8f+kG71Wpd6bZ8TjXb9z386xe3yub6g8/f89i1sjn/yKlnvn2+
bN576sz9k/fK5vXX7n7K5qWtuwvL5u6qB58vmzuL7qwsm6fvLnuqbH73xN1P
2dy52J2FZXN31T2Plc3P717ukbL5yd1lZ8rmh/FTNg/HhWXzULxg2XwnFi6b
uOz+svla/JTNl+LCsvlCvGDZxMudKpu4bFI2yVFyFBwFR8FRcBQcBUfBUXAU
HAVHwVFwFBwFR8FRcBQcBUfBUXAUHAVHwVFwFBw5R86Rc+QceRPjvZhz5Bw5
R86Rc+QcOUfOkXPkHDlHzpFz5Bw5R86Rc+QcOUfOkXFkHBlHxpFxZBwZR8aR
cWQcGUfGkXFkHBlHxpFxZBwZR8aRcWQcGUfG8Vn+pdxLeZdyLuVbyrVsYuwz
SzmW6i/VXTaRec9SnaU+LfRn0cS2vLbQj4U+LJrHY+EF94J3wblovhUvuOBa
8Cw4FhxzjjnHnGPOMeeYc8w55hxzjjnHnGPOMeOYccw4ZhwzjhnHjGPGMeOY
ccw4ZhwzjinHlGPKMeWYckw5phxTjinHlGPKMeWYcEw4JhwTjgnHhGPCMeGY
cEw4JhwTjgnHmGPMMeYYc4w5xhxjjjHHmGPMMeYYc4w4RhwjjhHHiGPEMeIY
cYw4RhwjjhHHqInxrg05hhxDjiHHkGNoXoccQ44hx9A8DjmGHAOOgX1jwDHg
GNgfBhwDjgHHwPwPOAYcA44BR5+jz9Hn6DeR8USfo8/R5+hz9Dn6HH2OPkeP
o8fR4+hx9Dh6HD2OHkePo8fR4+hx9Di6HF2OLkeXo8vR5ehydDm6HF2OLkeX
o8PR4ehwdDg6HB2ODkeHo8PR4ehwdDg6HG2ONkebo83R5mhztDnaHG2ONkeb
o83R4mhxtDhaHC2OFkeLo8XR4mhxtDhaHK3m3Zj/JKTcJ+HRmPckpJwn4asx
30lIuU7CSsxzHFKO45Dm8zikuschzeNxSHWOQ9pHjkLqz1FI83YU0n5xFFIf
jkLaH45Cch+GtB8chuQ8DLHsI4chuQ5DXHbfYUiMw5AcBxwHHAccBxwHHAcc
+xz7HPsc+xz7HPscexx7HHscexx7HHscuxy7HLscuxy7HLscuxw7HDscOxw7
HDscOxzbHNsc2xzbHNsc2xxbHFscWxxbHFscWxybHJscmxybHJscmxybHLc5
bnPc5rjNcZvjNscGxwbHBscGxwbHBsc6xzrHOsc6xzrHOscaxxrHGscaxxrH
GsdaeDbmvxW+F3PfCqOY95acN8OPYr6bIYu5boYm5rkhx41wb6x/I5yLda+H
n8V619W5Ht6PfboWfpU2lPCV2Jdr+nFVH66GOvqvhtW47Er4bfRe4bwSduMF
V8OTsfBqeCAGXOVY5bjMcZnjMsenHJ9yfMpxieMSx6XwanRc5LjIcZHjE45P
OD7huMBxgeMCx3mO8xznOVY4VjhWOFbC6Zj/f+HZmPtjeT+W87/6/FG4N+b6
KJyNef4jx4fqfxgej3U/CGux3vvqvK9P74UsbezhdOzLu/rxjj68E85G/9vh
XFz2Fu9bnP8Oa9H3Zqij602ecxznQvqF6I1wOuZ+Xd7X5PxXeDLm+2eoY65X
QyvmeUWOf6j/crg31n0prMR6f1encf2/hTpe96/hbLzeC67zFz//XGjFB//P
4Wxc/4x1f/L9p0Mrvpj+EFrx69/499Hw2Qnd11Xrc/H7lfWVn69cz/8/U6nn
+89V8lTphflCJW8lf8VT8VV18vr5lyv9cJ1XqtOpX5X+VfpZ6W91NvXb9d+o
3A91zlUPpPtVuX+V+1m5v9VKut/qv115HuR4pzqTnpfK81N5nirPV+V5k++D
yvMo54eV57X6Snp+K89z5fmuPO/yf1yZB44VdVaqP6b5qcxTZb4q88Z3Xv0L
nBfkuFB9I81vZZ4r812Z98r8y3dRHy7JeUk/LlWfT/tJZX+p7DeV/Uf+y/p0
mWOVY5VjlWOV4wrHFY4rHFc5rnJc5bjGcY3jGsd1jusc1zlucNzguMFxk+Mm
x02OWxy3OG5xrKmzVn03vV+qX6T3TeX9U3kf8a2pv865Lsd69fv0fqteTu+7
yvuv8j7k35BvQx825NzQj41qlt631dfT+7fyPq68n+W/rU+3OTY5Njk2OTY5
Njk2OTY5tji2OLY4tji2OLY4tjm2ObY5tjm2ObY5djh2OHY4djh2OHY4djl2
OXY5djl2OXY5djn2OPY49jj2OPY49jj2OfY59jn2OfY59jkOOA44DjgOOA44
DjgOOQ45DjkOOQ45DjkOOY44jjiOOI44jjiOOI45jjmOOY45jjmOOU44TjhO
OE44TjhOOFq180j95XQ+qdPvea3a+aV2nqmTr1Wn+q3a+ad2HqrfSOej+kI6
L9XOT7XzVJ387Trla9fOX7XzWJ360a5/mc5rdfp9sl07z9XOd3XK365Tn9q1
8yBHh6PD0eHocHQ4Ohwdjg5Hh6PD0eHocHQ5uhxdji5Hl6PL0eXocnQ5uhxd
ji5Hj6PH0ePocfQ4ehw9jh5Hj6PH0ePocfQ4+hx9jj5Hn6PP0efoc/Q5+hx9
jj5Hn2PAMeAYcAw4BhwDjgHHgGPAMeAYcAw4BhxDjiHHkGPIMax/mv6exDHk
GHIMOYYcQ44hx4hjVKd5H9XfTH/vqtPcj+o0lyOOEceIY8Qxqv19rU7zOqrT
vjCq09yOOcYcY44xx9j9GNdpnsd1ev+O6zTX4zrtH2OOMceYY8Ix4ZhwTDgm
HBOOCceEY8Ix4ZhwTDgmHFOOKceUY8ox5ZhyTDmmHFOOKceUY8ox45hxzDhm
HDOOGceMY8Yx45hxzDhmHDOOOcecY84x55hzzDnmddrH5xxzjjnHnGPOseBY
cCw4FhwLjgXHgmPBseBYcCw4FhwLjiXHkmPJseRYciw5lhxLjiXHkmPJseTI
zGHGk9XpvJ+Z+0zdzPxn6mf2gUyOzH6QyZNxZ+Y248/Mb6YPmTnO9CMzz5l9
I5M7s39k8mf2kYwj58g5co6cI+fIOXKOnCPnyDlyjpwj58g5co6cI+fIOXKO
nCPnyDlyjpwj5yg4Co6Co+AoOAqOgqPgKDgKjoKj4Cg4Co6Co+AoOAqOgqPg
KDgKjoKj4Cg4So6So+QoOUqOkqPkKDlKjpKj5Cg5So6So+QoOUqOkqPkKDlK
jpKj5Cg5So5T9f8BDvqpWA==
             "], {-0.3, 2}], 
            ListLinePlot[
             MapThread[{#, #2/10}& , {CompressedData["
1:eJw12DuMZ1UdB/D/+/24jzWxQuzQyqiFhXhvpyUQCwuKjYnGztXKoMUWYOyk
sBBjDAkU2hBMSITEeK6AAQ2QRd6IOLvssrPvmdl5P90958O/2czOmfv7fn73
/s6dM1/8/o8f+kG71Wpd6bZ8TjXb9z386xe3yub6g8/f89i1sjn/yKlnvn2+
bN576sz9k/fK5vXX7n7K5qWtuwvL5u6qB58vmzuL7qwsm6fvLnuqbH73xN1P
2dy52J2FZXN31T2Plc3P717ukbL5yd1lZ8rmh/FTNg/HhWXzULxg2XwnFi6b
uOz+svla/JTNl+LCsvlCvGDZxMudKpu4bFI2yVFyFBwFR8FRcBQcBUfBUXAU
HAVHwVFwFBwFR8FRcBQcBUfBUXAUHAVHwVFwFBw5R86Rc+QceRPjvZhz5Bw5
R86Rc+QcOUfOkXPkHDlHzpFz5Bw5R86Rc+QcOUfOkXFkHBlHxpFxZBwZR8aR
cWQcGUfGkXFkHBlHxpFxZBwZR8aRcWQcGUfG8Vn+pdxLeZdyLuVbyrVsYuwz
SzmW6i/VXTaRec9SnaU+LfRn0cS2vLbQj4U+LJrHY+EF94J3wblovhUvuOBa
8Cw4FhxzjjnHnGPOMeeYc8w55hxzjjnHnGPOMeOYccw4ZhwzjhnHjGPGMeOY
ccw4ZhwzjinHlGPKMeWYckw5phxTjinHlGPKMeWYcEw4JhwTjgnHhGPCMeGY
cEw4JhwTjgnHmGPMMeYYc4w5xhxjjjHHmGPMMeYYc4w4RhwjjhHHiGPEMeIY
cYw4RhwjjhHHqInxrg05hhxDjiHHkGNoXoccQ44hx9A8DjmGHAOOgX1jwDHg
GNgfBhwDjgHHwPwPOAYcA44BR5+jz9Hn6DeR8USfo8/R5+hz9Dn6HH2OPkeP
o8fR4+hx9Dh6HD2OHkePo8fR4+hx9Di6HF2OLkeXo8vR5ehydDm6HF2OLkeX
o8PR4ehwdDg6HB2ODkeHo8PR4ehwdDg6HG2ONkebo83R5mhztDnaHG2ONkeb
o83R4mhxtDhaHC2OFkeLo8XR4mhxtDhaHK3m3Zj/JKTcJ+HRmPckpJwn4asx
30lIuU7CSsxzHFKO45Dm8zikuschzeNxSHWOQ9pHjkLqz1FI83YU0n5xFFIf
jkLaH45Cch+GtB8chuQ8DLHsI4chuQ5DXHbfYUiMw5AcBxwHHAccBxwHHAcc
+xz7HPsc+xz7HPscexx7HHscexx7HHscuxy7HLscuxy7HLscuxw7HDscOxw7
HDscOxzbHNsc2xzbHNsc2xxbHFscWxxbHFscWxybHJscmxybHJscmxybHLc5
bnPc5rjNcZvjNscGxwbHBscGxwbHBsc6xzrHOsc6xzrHOscaxxrHGscaxxrH
GsdaeDbmvxW+F3PfCqOY95acN8OPYr6bIYu5boYm5rkhx41wb6x/I5yLda+H
n8V619W5Ht6PfboWfpU2lPCV2Jdr+nFVH66GOvqvhtW47Er4bfRe4bwSduMF
V8OTsfBqeCAGXOVY5bjMcZnjMsenHJ9yfMpxieMSx6XwanRc5LjIcZHjE45P
OD7huMBxgeMCx3mO8xznOVY4VjhWOFbC6Zj/f+HZmPtjeT+W87/6/FG4N+b6
KJyNef4jx4fqfxgej3U/CGux3vvqvK9P74UsbezhdOzLu/rxjj68E85G/9vh
XFz2Fu9bnP8Oa9H3Zqij602ecxznQvqF6I1wOuZ+Xd7X5PxXeDLm+2eoY65X
QyvmeUWOf6j/crg31n0prMR6f1encf2/hTpe96/hbLzeC67zFz//XGjFB//P
4Wxc/4x1f/L9p0Mrvpj+EFrx69/499Hw2Qnd11Xrc/H7lfWVn69cz/8/U6nn
+89V8lTphflCJW8lf8VT8VV18vr5lyv9cJ1XqtOpX5X+VfpZ6W91NvXb9d+o
3A91zlUPpPtVuX+V+1m5v9VKut/qv115HuR4pzqTnpfK81N5nirPV+V5k++D
yvMo54eV57X6Snp+K89z5fmuPO/yf1yZB44VdVaqP6b5qcxTZb4q88Z3Xv0L
nBfkuFB9I81vZZ4r812Z98r8y3dRHy7JeUk/LlWfT/tJZX+p7DeV/Uf+y/p0
mWOVY5VjlWOV4wrHFY4rHFc5rnJc5bjGcY3jGsd1jusc1zlucNzguMFxk+Mm
x02OWxy3OG5xrKmzVn03vV+qX6T3TeX9U3kf8a2pv865Lsd69fv0fqteTu+7
yvuv8j7k35BvQx825NzQj41qlt631dfT+7fyPq68n+W/rU+3OTY5Njk2OTY5
Njk2OTY5tji2OLY4tji2OLY4tjm2ObY5tjm2ObY5djh2OHY4djh2OHY4djl2
OXY5djl2OXY5djn2OPY49jj2OPY49jj2OfY59jn2OfY59jkOOA44DjgOOA44
DjgOOQ45DjkOOQ45DjkOOY44jjiOOI44jjiOOI45jjmOOY45jjmOOU44TjhO
OE44TjhOOFq180j95XQ+qdPvea3a+aV2nqmTr1Wn+q3a+ad2HqrfSOej+kI6
L9XOT7XzVJ387Trla9fOX7XzWJ360a5/mc5rdfp9sl07z9XOd3XK365Tn9q1
8yBHh6PD0eHocHQ4Ohwdjg5Hh6PD0eHocHQ5uhxdji5Hl6PL0eXocnQ5uhxd
ji5Hj6PH0ePocfQ4ehw9jh5Hj6PH0ePocfQ4+hx9jj5Hn6PP0efoc/Q5+hx9
jj5Hn2PAMeAYcAw4BhwDjgHHgGPAMeAYcAw4BhxDjiHHkGPIMax/mv6exDHk
GHIMOYYcQ44hx4hjVKd5H9XfTH/vqtPcj+o0lyOOEceIY8Qxqv19rU7zOqrT
vjCq09yOOcYcY44xx9j9GNdpnsd1ev+O6zTX4zrtH2OOMceYY8Ix4ZhwTDgm
HBOOCceEY8Ix4ZhwTDgmHFOOKceUY8ox5ZhyTDmmHFOOKceUY8ox45hxzDhm
HDOOGceMY8Yx45hxzDhmHDOOOcecY84x55hzzDnmddrH5xxzjjnHnGPOseBY
cCw4FhwLjgXHgmPBseBYcCw4FhwLjiXHkmPJseRYciw5lhxLjiXHkmPJseTI
zGHGk9XpvJ+Z+0zdzPxn6mf2gUyOzH6QyZNxZ+Y248/Mb6YPmTnO9CMzz5l9
I5M7s39k8mf2kYwj58g5co6cI+fIOXKOnCPnyDlyjpwj58g5co6cI+fIOXKO
nCPnyDlyjpwj5yg4Co6Co+AoOAqOgqPgKDgKjoKj4Cg4Co6Co+AoOAqOgqPg
KDgKjoKj4Cg4So6So+QoOUqOkqPkKDlKjpKj5Cg5So6So+QoOUqOkqPkKDlK
jpKj5Cg5So5T9f8BDvqpWA==
               "], {
               10000, 310.00748939561356`, 307.5299194200596, 
                305.06722969045455`, 302.6193605064864, 300.1862522878192, 
                297.76784557409303`, 295.36408102492067`, 292.9748994198879, 
                290.6002416585489, 288.24004876042636`, 285.89426186500754`, 
                283.5628222317438, 281.24567124004614`, 278.9427503892834, 
                276.6540012987794, 274.37936570781017`, 272.11878547559974`, 
                269.8722025813174, 267.63955912407386`, 265.4207973229177, 
                263.2158595168301, 261.0246881647217, 258.84722584542703`, 
                256.68341525770023`, 254.53319922020896`, 252.39652067152926`,
                 250.27332267013966`, 248.16354839441428`, 246.0671411426172, 
                243.98404433289406`, 241.91420150326516`, 239.85755631161766`,
                 237.8140525356969, 235.78363407309718`, 233.76624494125235`, 
                231.76182927742602`, 229.7703313387009, 227.7916955019672, 
                225.82586626391085`, 223.87278824100088`, 221.93240616947656`,
                 220.0046649053326, 218.08950942430442`, 216.18688482185286`, 
                214.29673631314736`, 212.41900923304837`, 210.55364903608861`,
                 208.70060129645395`, 206.85981170796305`, 205.0312260840447, 
                203.21479035771588`, 201.41045058155703`, 199.61815292768694`,
                 197.8378436877361, 196.06946927281783`, 194.31297621349913`, 
                192.56831115976956`, 190.8354208810079, 189.1142522659474, 
                187.40475232264018`, 185.70686817841803`, 184.02054707985317`,
                 182.345736392715, 180.68238360192632`, 179.0304363115165, 
                177.38984224457292`, 175.7605492431888, 174.14250526841016`, 
                172.5356584001785, 170.93995683727258`, 169.355348897245, 
                167.78178301635796`, 166.21920774951474`, 164.66757177018837`,
                 163.1268238703466, 161.5969129603737, 160.0777880689884, 
                158.56939834315827`, 157.07169304801027`, 155.58462156673647`,
                 154.10813340049654`, 152.6421781683153, 151.18670560697572`, 
                149.74166557090737`, 148.30700803206986`, 146.88268307983117`,
                 145.4686409208414, 144.06483187889972`, 142.671206394817, 
                141.28771502627177`, 139.91430844766114`, 138.55093744994434`,
                 137.1975529404806, 135.85410594286017`, 134.5205475967292, 
                133.1968291576058, 131.88290199669115`, 130.57871760067107`, 
                129.2842275715119, 127.99938362624617`, 126.724137596752, 
                125.45844142952332`, 124.20224718543155`, 122.95550703947845`,
                 121.71817328053976`, 120.49019831109969`, 
                119.27153464697581`, 118.06213491703417`, 116.861951862894, 
                115.6709383386225, 114.48904731041932`, 113.3162318562896, 
                112.15244516570638`, 110.9976405392619, 109.85177138830723`, 
                108.71479123458028`, 107.58665370982163`, 106.46731255537871`,
                 105.35672162179713`, 104.25483486839978`, 
                103.16160636285287`, 102.07699028071909`, 101.00094090499775`,
                 99.93341262565133, 98.87435993911863, 97.82373744781417, 
                96.78149985961369, 95.74760198732598, 94.72199874815014, 
                93.70464516311881, 92.69549635652714, 91.69450755534734, 
                90.70163408862864, 89.71683138688267, 88.74005498145439, 
                87.77126050387857, 86.8104036852215, 85.85744035540793, 
                84.91232644253417, 83.97501797216621, 83.04547106662396, 
                82.12364194425076, 81.20948691866964, 80.30296239802506, 
                79.40402488421162, 78.51263097208907, 77.6287373486843, 
                76.75230079238072, 75.88327817209547, 75.02162644644413, 
                74.16730266289423, 73.32026395690777, 72.48046755107305, 
                71.64787075422657, 70.82243096056548, 70.00410564875135, 
                69.19285238100616, 68.38862880220054, 67.59139263893591, 
                66.80110169862076, 66.01771386854257, 65.24118711493547, 
                64.47147948204544, 63.708549091193596`, 62.952354139839414`, 
                62.20285290064381, 61.46000372053461, 60.72376501977491, 
                59.9940952910361, 59.270953098476674`, 58.5542970768285, 
                57.84408593049198, 57.14027843264177, 56.442833424344975`, 
                55.75170981369288, 55.066866574948726`, 54.388262747713036`, 
                53.71585743610862, 53.049609807986975`, 52.38947909415822, 
                51.73542458764699, 51.087405642976265`, 50.44538167548112, 
                49.80931216065503, 49.17915663353112, 48.55487468810079, 
                47.93642597677176, 47.32377020986875, 46.71686715517888, 
                46.11567663754494, 45.52015853850858, 44.93027279600673, 
                44.34597940412403, 43.76723841290368, 43.194009928220204`, 
                42.62625411171662, 42.06393118080908, 41.507001408762214`, 
                40.95542512483805, 40.40916271452155, 39.86817461982575, 
                39.33242133968016, 38.80186343040472, 38.27646150627331, 
                37.7561762401691, 37.24096836433572, 36.73079867122688, 
                36.22562801445746, 35.725417309859964`, 35.23012753664817, 
                34.739719738692564`, 34.25415502590921, 33.77339457576604, 
                33.2973996349089, 32.82613152091082, 32.35955162414671, 
                31.897621409796976`, 31.440302419982096`, 30.987556276031412`,
                 30.539344680888107`, 30.09562942165342, 29.656372372271814`, 
                29.221535496360055`, 28.79108085018158, 28.364970585768898`, 
                27.943166954195235`, 27.525632308997732`, 27.11232910975331, 
                26.703219925808998`, 26.298267440167663`, 25.89743445353064, 
                25.50068388849763, 25.107978793925113`, 24.719282349443578`, 
                24.334557870133686`, 23.953768811361908`, 23.576878773775082`,
                 23.20385150845395, 22.834650922224622`, 22.469241083127734`, 
                22.10758622604353, 21.749650758472285`, 21.395399266467667`, 
                21.044796520721984`, 20.697807482800393`, 20.354397311522295`,
                 20.014531369486654`, 19.678175229738663`, 
                19.345294682574018`, 19.015855742477612`, 18.68982465519223, 
                18.367167904913465`, 18.04785222160585, 17.73184458843575, 
                17.41911224931528, 17.10962271655229, 16.80334377860003, 
                16.50024350790059, 16.200290268815568`, 15.903452725636933`, 
                15.609699850671122`, 15.319000932388642`, 15.031325583631538`,
                 14.746643749870353`, 14.4649257175023, 14.186142122181598`, 
                13.910263957173182`, 13.637262581719911`, 13.36710972941405, 
                13.09977751656252, 12.835238450535986`, 12.573465438090846`, 
                12.314431793653593`, 12.058111247556031`, 11.804477954210316`,
                 11.553506500211833`, 11.305171912358404`, 
                11.059449665573311`, 10.816315690720288`, 10.575746382297512`,
                 10.337718605998374`, 10.102209706125738`, 9.869197512847059, 
                9.638660349277032, 9.41057703837448, 9.184926909640334, 
                8.961689805603003, 8.740846088077898, 8.522376644187297, 
                8.306262892127265, 8.092486786667752, 7.881030824372614, 
                7.671878048525702, 7.465012053749941, 7.260416990305608, 
                7.058077568054884, 6.8579790600792645`, 6.66010730593704, 
                6.464448714547789, 6.27099026669154, 6.079719517109858, 
                5.890624596197048, 5.70369421126925, 5.51891764740013, 
                5.33628476781162, 5.155786013809029, 4.977412404249721, 
                4.801155534535433, 4.627007575118241, 4.454961269511072, 
                4.285009931793805, 4.117147443606604, 3.9513682506227314`, 
                3.7876673584934126`, 3.626040328258153, 3.4664832712141664`, 
                3.3089928432395546`, 3.153566238565077, 3.0002011829904522`, 
                2.8488959265412968`, 2.6996492355640203`, 2.552460384256165, 
                2.4073291456308907`, 2.2642557819145845`, 2.1232410343777577`,
                 1.984286112599733, 1.8473926831688017`, 1.7125628578199534`, 
                1.5797991810134344`, 1.4491046169578397`, 1.320482536082645, 
                1.193936700965517, 1.06947125172097, 0.9470906908574173, 
                0.8267998676107942, 0.7086039617636133, 0.5925084669591576, 
                0.47851917352153883`, 0.3666421507929054, 0.256883729000263, 
                0.14925048066486246`, 
                0.043749201568305196`, -0.05961310871003622, \
-0.1608292666684945, -0.25989192515522763`, -0.35679359401963895`, \
-0.4515266611252242, -0.5440834137049899, -0.6344560600400291, \
-0.7226367514409278, -0.8086176045111437, -0.8923907236706228, \
-0.9739482239174384, -1.0532822538043956`, -1.1303850186071203`, \
-1.205248803659373, -1.2778659978309408`, -1.3482291171227265`, \
-1.4163308283533613`, -1.4821639729110108`, -1.5457215905436827`, \
-1.6069969431610043`, -1.665983538619867, -1.7226751544662575`, \
-1.7770658616050434`, -1.829150047869445, -1.8789224414615158`, \
-1.92637813423492, -1.9715126047910365`, -2.014321741359442, \
-2.0548018644336214`, -2.092949749132909, -2.128762647261537, \
-2.1622383090358586`, -2.193375004450849, -2.2221715442572267`, \
-2.248627300520651, -2.2727422267348087`, -2.294516877460412, \
-2.3139524274625116`, -2.3310506903189308`, -2.345814136473013, \
-2.3582459107043925`, -2.368349848991989, -2.376130494744018, \
-2.3815931143703857`, -2.3847437121735036`, -2.3855890445342607`, \
-2.3841366333705865`, -2.380394778846856, -2.374372571313164, \
-2.3660799024543624`, -2.355527475629656, -2.3427268153844336`, \
-2.327690276117027, -2.3104310498840404`, -2.290963173328935, \
-2.2693015337196196`, -2.2454618740818475`, -2.219460797416409, \
-2.191315769989144, -2.161045123684062, -2.1286680574110104`, \
-2.0942046375604826`, -2.057675797499513, -2.0191033361037256`, \
-1.978509915321961, -1.9359190567710718`, -1.891355137359929, \
-1.8448433839427936`, -1.796409867003649, -1.746081493374345, \
-1.6938859979906666`, -1.6398519346919036`, -1.5840086660706187`, \
-1.5263863523808001`, -1.4670159395136972`, -1.4059291460521628`, \
-1.3431584494153916`, -1.2787370711073744`, -1.212698961083519, \
-1.1450787812512828`, -1.0759118881217418`, -1.0052343146303233`, \
-0.9330827511460047, -0.8594945256896045, -0.784507583382728, \
-0.7081604651502109, -0.6304922856997451, -0.551542710803714, \
-0.4713519339089726, -0.3899606521014768, -0.30741004145340406`, \
-0.22374173178154777`, -0.13899778084635916`, -0.05322064802197461, 
                0.03354683253179526, 0.12126147916366357`, 
                0.20987979045893118`, 0.29935797336833125`, 
                0.38965197170406557`, 0.4807174949689916, 0.5725100474842851, 
                0.6649849577806811, 0.7580974082178961, 0.8518024647967236, 
                0.9460551071277439, 1.0408102585207404`, 1.136022816158499, 
                1.231647681318862, 1.327639789608563, 1.4239541411727166`, 
                1.5205458308437065`, 1.6173700781935667`, 1.714382257453903, 
                1.8115379272679157`, 1.9087928602392255`, 2.006103072242741, 
                2.103424851463025, 2.2007147871262975`, 2.297929797892625, 
                2.395027159875564, 2.491964534256945, 2.5886999944654323`, 
                2.6851920528880586`, 2.7813996870847517`, 2.8772823654768307`,
                 2.9728000724810864`, 3.0679133330622284`, 
                3.1625832366772473`, 3.2567714605864793`, 3.350440292506866, 
                3.44355265258433, 3.5360721146630314`, 3.627962926830631, 
                3.7191900312196586`, 3.809719083046429, 3.8995164688700994`, 
                3.9885493240558487`, 4.076785549427182, 4.164193827093918, 
                4.250743635443549, 4.336405263285156, 4.421149823136148, 
                4.504949263643723, 4.587776381134051, 4.669604830283812, 
                4.750409133909709, 4.830164691873339, 4.908847789099854, 
                4.98643560271033, 5.0629062082691565`, 5.1382385851489, 
                5.212412621016625, 5.285409115446803, 5.3572097826673835`, 
                5.427797253446671, 5.49715507613007, 5.565267716836868, 
                5.632120558828557, 5.697699901061151, 5.76199295593528, 
                5.824987846258857, 5.886673601438246, 5.947040152914739, 
                6.00607832886436, 6.063779848179775, 6.120137313754151, 
                6.175144205087548, 6.228794870237339, 6.281084517134875, 
                6.332009204291466, 6.38156583091719, 6.429752126476966, 
                6.476566639708718, 6.522008727129004, 6.566078541052143, 
                6.608777017149013, 6.650105861572349, 6.690067537675526, 
                6.728665252352153, 6.76590294202401, 6.801785258304997, 
                6.836317553368928, 6.869505865049058, 6.90135690169715, 
                6.931878026829967, 6.961077243590904, 6.98896317905434, 
                7.015545068400087, 7.040832738985073, 7.064836594339098, 
                7.087567598111163, 7.109037257992439, 7.129257609641569, 
                7.1482412006374645`, 7.166001074484269, 7.182550754692556, 
                7.197904228960255, 7.212075933476168, 7.225080737368204, 
                7.236933927317822, 7.247651192361342, 7.257248608898095, 
                7.265742625924493, 7.273150050512335, 7.279488033548776, 
                7.284774055754484, 7.289025913995677, 7.292261707904727, 
                7.294499826823163, 7.295758937079886, 7.296057969616518, 
                7.295416107970739, 7.29385277662763, 7.291387629747874, 
                7.2880405402808695`, 7.28383158946966, 7.278781056753713, 
                7.272909410074532, 7.266237296588131, 7.258785533787431, 
                7.250575101036677, 7.24162713151902, 7.231962904597462, 
                7.221603838588492, 7.210571483946747, 7.198887516858271, 
                7.186573733238954, 7.173652043133994, 7.160144465513357, 
                7.146073123457436, 7.13146023972633, 7.116328132705489, 
                7.100699212719646, 7.0845959787064485`, 7.068041015240387, 
                7.051056989897176, 7.033666650947995, 7.015892825372649, 
                6.997758417180015, 6.979286406023841, 6.960499846101388, 
                6.941421865322137, 6.92207566473334, 6.902484518188931, 
                6.882671772247975, 6.862660846288689, 6.842475232823756, 
                6.822138498002566, 6.801674282285874, 6.781106301278241, 
                6.760458346703645, 6.7397542875095695`, 6.719018071084932, 
                6.698273724577252, 6.677545356294614, 6.656857157178008, 
                6.6362334023299026`, 6.615698452584983, 6.595276756109357, 
                6.574992850014639, 6.554871361973745, 6.534937011825407, 
                6.515214613154918, 6.49572907483885, 6.476505402541958, 
                6.457568700154864, 6.438944171161589, 6.420657119926421, 
                6.402732952890125, 6.385197179665949, 6.368075414026452, 
                6.351393374772655, 6.3351768864775915`, 6.319451880096842, 
                6.3042443934392765`, 6.289580571491708, 6.275486666591784, 
                6.261989038444056, 6.249114153974654, 6.236888587020714, 
                6.225339017851161, 6.214492232516151, 6.204375122022935, 
                6.195014681336463, 6.18643800820313, 6.178672301794826, 
                6.171744861164504, 6.165683083482763, 6.160514461955201, 
                6.156266583113255, 6.152967122600944, 6.15064383711379, 
                6.149324546629954, 6.149037093201998, 6.149809246139678, 
                6.151668491429052, 6.154641585365579, 6.158753655372493, 
                6.164026481174983, 6.170475378508561, 6.178103841390315, 
                6.186894809597266, 6.196797183400231, 6.2077061151122646`, 
                6.219435802876363, 6.231684133130659, 6.243989656357122, 
                6.255683030022073, 6.265837074472604, 6.273221654984258, 
                6.276271289745344, 6.2730742015739125`, 6.261391056560622, 
                6.2387096292703195`, 6.202338149651654, 6.149535490305326, 
                6.077671292516669, 5.984404417971296, 5.867864564650717, 
                5.726820146870599, 5.560815956284478, 5.370266670480596, 
                5.156496581486813, 4.921721331533174, 4.668973183900057, 
                4.401976647269629, 4.124985473821978, 3.8425947485821883`, 
                3.559542822453906, 3.2805172996507928`, 3.0099774487758246`, 
                2.752002660670671, 2.5101733616845694`, 2.2874875188801136`, 
                2.0863128806589497`, 1.9083726186698096`, 1.7547602043421175`,
                 1.6259781987993636`, 1.521995114152376, 1.4423145206943655`, 
                1.3860510035577622`, 1.3520082818710986`, 1.3387556697238399`,
                 1.3446999762714613`, 1.368150830734912, 1.4073782201552776`, 
                1.46066170954661, 1.526331360561099, 1.6028007755468296`, 
                1.6885929786820313`, 1.7823600206003114`, 1.882897276336661, 
                1.989153417679331, 2.100236997959283, 2.2154205054593117`, 
                2.3341426336624496`, 2.4560093922378394`, 2.5807945489977406`,
                 2.708439754688251, 2.8390545621304835`, 2.972916410254255, 
                3.1104705024759864`, 3.2523293678975804`, 3.3992717534574837`,
                 3.552240356794048, 3.712337775916936, 3.880819927460805, 
                4.059086077333358, 4.248664545720168, 4.451193105355842, 
                4.6683931032259345`, 4.902036419280246, 5.153904550468212, 
                5.425739393211899, 5.719185708197244, 6.035725797836832, 
                6.3766076085391425`, 6.742768272026366, 7.134755988365535, 
                7.552654071401248, 7.996011843549706, 8.463787776390925, 
                8.954310702536091, 9.465264940766977, 9.993704655693001, 
                10.536101618580673`, 11.088428703493541`, 11.646278975257847`,
                 12.205017232737928`, 12.759957598771306`, 13.30655753364325, 
                13.840615902850503`, 14.358460888445705`, 14.857112991527817`,
                 15.334409408375455`, 15.789078759983443`, 
                16.220759356588236`, 16.6299594693574, 17.01796382189743, 
                17.38669592926812, 17.73855021788048, 18.076210409459637`, 
                18.402471069114544`, 18.72007747902282, 19.031595450816663`, 
                19.339317978269797`, 19.64521057164003, 19.950892518524267`, 
                20.257647831598323`, 20.5664576400547, 20.878045306948046`, 
                21.192926372669376`, 21.511457111359352`, 21.83387755450321, 
                22.160346847804767`, 22.49097045674025, 22.825819874359176`, 
                23.164946105914243`, 23.508388400766655`, 23.85617960952495, 
                24.20834929977815, 24.564925474400656`, 24.925935470255368`, 
                25.29140640413037, 25.661365382942005`, 26.0358395982319, 
                26.414856367116865`, 26.798443149865157`, 27.18662755783496, 
                27.57943735763783, 27.976900473874316`, 28.379044991321717`, 
                28.785899156883932`, 29.197491381404934`, 29.61385024137821, 
                30.03500448056157, 30.46098301150124, 30.891814916965966`, 
                31.327529451293227`, 31.76815604164801, 32.21372428919638, 
                32.66426397019412, 33.11980503699269, 33.5803776189635, 
                34.046012023342485`, 34.5167387359962, 34.99258842211129, 
                35.47359192680892, 35.95978027568641, 36.45118467528702, 
                36.94783651350062, 37.4497673598963, 37.95700896598966, 
                38.46959326544607, 38.987552374221906`, 39.5109185906462, 
                40.03972439544384, 40.574002451703585`, 41.1137856047913, 
                41.65910688221175, 42.20999949342008, 42.76649682958569, 
                43.328632463309354`, 43.8964401482974, 44.469953818992735`, 
                45.04920759016635, 45.63423575647032, 46.22507279195455, 
                46.821753349549255`, 47.42431226051462, 48.0327845338595, 
                48.647205355732055`, 49.26761008878217, 49.89403427149905, 
                50.52651361752488, 51.16508401494649, 51.80978152556663, 
                52.46064238415628, 53.11770299769005, 53.78099994456503, 
                54.45056997380674, 55.12645000426102, 55.80867712377507, 
                56.497288588368455`, 57.19232182139522, 57.89381441269866, 
                58.601804117760004`, 59.31632885684136, 60.037426714126184`, 
                60.765135936855515`, 61.49949493446332, 62.240542277710894`, 
                62.98831669782163, 63.74285708561697, 64.50420249065459, 
                65.27239212036895, 66.04746533921686, 66.82946166782635, 
                67.61842078215153, 68.41438251263308, 69.21738684336569, 
                70.02747391127248, 70.84468400528735, 71.66905756554597, 
                72.50063518258466, 73.33945759655033, 74.18556569641864, 
                75.03900051922312, 75.89980324929476, 76.76801521751248, 
                77.64367790056475, 78.52683292022319, 79.4175220426268, 
                80.3157871775801, 81.22167037786153, 82.13521383854554, 
                83.0564598963366, 83.98545102891606, 84.92222985430195, 
                85.86683913022144, 86.81932175349583, 87.77972075943987, 
                88.74807932127247, 89.72444074954132, 90.70884849156033, 
                91.70134613086005, 92.70197738665081, 93.71078611329928, 
                94.72781629981652, 95.75311206936094, 96.78671767875174, 
                97.82867751799593, 98.87903610982757, 99.93783810925923, 
                101.00512830314548`, 102.08095160975857`, 103.16535307837592`,
                 104.2583778888784, 105.3600713513621, 106.47047890575926`, 
                107.58964612147159`, 108.71761869701405`, 109.85444245966966`,
                 111.00016336515475`, 112.15482749729468`, 
                113.31848106770896`, 114.49117041550812`, 115.67294200699845`,
                 116.86384243539733`, 118.06391842055753`, 
                119.27321680870094`, 120.49178457216092`, 121.71966880913378`,
                 122.95691674343766`, 124.20357572428183`, 125.459693226042, 
                126.72531684804447`, 128.00049431435795`, 129.28527347359264`,
                 130.57970229870676`, 131.88382888682017`, 
                133.19770145903473`, 134.52136836026094`, 135.85487805905254`,
                 137.19827914744582`, 138.55162034080556`, 
                139.91495047767734`, 141.28831851964497`, 142.67177355119387`,
                 144.06536477958008`, 145.46914153470303`, 
                146.88315326898618`, 148.30744955725967`, 149.7420800966492, 
                151.18709470646922`, 152.64254332812058`, 154.10847602499223`,
                 155.58494298236715`, 157.0719945073319, 158.5696810286913, 
                160.07805309688496`, 161.59716138390877`, 163.12705668323898`,
                 164.66778990976016`, 166.219412099696, 167.7819744105431, 
                169.35552812100852`, 170.940124630948, 172.53581546131025`, 
                174.1426522540809, 175.76068677223023`, 177.3899708996634, 
                179.03055664117224`, 180.68249612239038`, 182.34584158974954`,
                 184.0206454104376, 185.70696007236054`, 187.40483818410408`, 
                189.11433247489813`, 190.83549579458278`, 192.56838111357595`,
                 194.3130415228429, 196.06953023386683`, 197.83790057862024`, 
                199.61820600954007`, 201.41050009950152`, 203.21483654179448`,
                 205.03126915010057`, 206.85985185847215`, 208.7006387213114, 
                210.5536839133513, 212.4190417296373, 214.29676658550875`, 
                216.1869130165842, 218.0895356787446, 220.00468934811866`, 
                221.93242892106863`, 223.87280941417745`, 225.82588596423557`,
                 227.79171382822966`, 229.7703483833299, 231.76184512688138`, 
                233.7662596763925, 235.78364776952597`, 237.8140652640894, 
                239.8575681380272, 241.91421248941217`, 243.98405453643838`, 
                246.0671506174125, 248.16355719074917`, 250.27333083496333`, 
                252.39652824866403`, 254.53320625054937`, 256.6834217794006, 
                258.84723189407714`, 261.02469377351224`, 263.21586471670815`,
                 265.42080214273085`, 267.63956359070824`, 269.8722067198246, 
                272.1187893093179, 274.37936925847595`, 276.65400458663356`, 
                278.9427534331696, 281.2456740575045, 283.5628248390959, 
                285.8942642774392, 288.2400509920628, 290.6002437225268, 
                292.9749013284213, 295.3640827893638, 297.76784720499785`, 
                300.1862537949916, 302.6193618990345, 305.0672309768388, 
                307.52992060813557`, 310.00749049267495`, 10000}}], Filling -> 
             Axis, PlotStyle -> {Thick, Red}]], 
           Text[
            StringJoin["E = ", 
             ToString[
              
              Part[{-0.09941822137089933, 4.172425646909291, 
               5.781857948062869, 7.483337660206106, 9.148330456602515, 
               11.447933935191646`, 14.03128200801628, 16.783503184447024`, 
               19.648406318624144`, 
               22.67039145917183}, $CellContext`n$$]]]]}], 
        "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
        "DefaultOptions" :> {}], ImageSizeCache -> {489., {191., 198.}}, 
       SingleEvaluation -> True], Deinitialization :> None, 
      DynamicModuleValues :> {}, 
      Initialization :> ({$CellContext`plotDiscrete\[Psi][
           Pattern[$CellContext`psi, 
            Blank[]], 
           Pattern[$CellContext`grid, 
            Blank[]], 
           Optional[
            Pattern[$CellContext`range, 
             Blank[]], All]] := With[{$CellContext`phases = Association[
              MapThread[# -> #2& , {$CellContext`grid, 
                Arg[$CellContext`psi]}]]}, 
           ReplaceAll[
            ListLinePlot[
             
             MapThread[{#, #2}& , {$CellContext`grid, 
               Abs[$CellContext`psi]^2}], ColorFunctionScaling -> False, 
             ColorFunction -> (ColorData["Rainbow"][
               Rescale[
                $CellContext`phases[#], {-Pi, Pi}]]& ), 
             PlotRange -> $CellContext`range, Filling -> Axis, 
             AxesLabel -> {$CellContext`x, Abs[
                 $CellContext`\[Phi][$CellContext`x]]^2}], Line[
              Pattern[$CellContext`pts, 
               Blank[]], 
              Blank[]] :> {Black, 
              Line[$CellContext`pts]}]], $CellContext`grid = CompressedData["
1:eJw1lD1MFFEUhdfOEAsLa9QOrYxaWIinxFKJJZWJxk7sDFpYgC0UFmqMMYFC
mw0mJEJiuIAYxQAB+VlEwJn9nd2d3aXBWJq57+M1m9k5c+/5zrvvnb/7sP/e
iVwut5Q7XoeW74uHzuQ7NjC6cNQz0LGuwvhgb1fHprtHmren23bfV9vOuLBt
mWp0oWWPejNly85msu6WrSxnK7UnLkztghdMzcsVmuaykaZd8dW0rGtf3DBv
O9qwG964YanL6vb6VbbqdtOFdfubtT1KbCIrN55YvxtMLHAkcNTgqMFRg6MK
RxWOKhwV83KDFXNZd8UcY7kMRxmOMhwlOEpwlOAo2pgXLMJRhCOGI4YjhiOC
I4IjgiPC/x98H+D3AJ/7+NszL9OzZ8Pu57cVvfwu/Xfp+4t+O/TZIacC+RTI
ZZs8tshhy7zc0KZtu2zDLjvvBpw/4VuHax2eNTjW8L+K7xX8LlvkhX/YS/e3
ZLdc+N1Oup9vNuc+vtpT779oV73vF/rN02eO+rPU/Uy9Gep8ssf+/ZQl/t1H
m3R93sZc98Ge+fsJm/P/3/L8gt9hOz4hPIv3Qs/zhN6Fevyf12Hox/spnQ5+
0M3oUvCLflbvAw/fzeta4FXwvyjyEPmIvER+Ik+Rr8hb5C/2Q+yP2C+xf2I/
FXLe0E7Yb4X8N3UuzIMWw3zoQZgXnQrzo8kwT7oT5kv/wrzpTZg/XQ/ziM9d
Ma/43RPzjO99Me/4PxDnAY5InBd4InGe4IrFeYMvFucRzqLCOSnCW9LzcJ7h
LuliOO/wl7Ua7gNyqOCzIu4P/FbF/YLvqrh/8F8T9xMcCRwJHAkcCRx1OOpw
1OFowNGAowFHE44mHE04UjhSOFI4WnC04GjB0YajDUcbjg4cHTg6cBzqPxSs
TfM=
          "]}; Typeset`initDone$$ = True), SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> True,
      StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]],FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               RowBox[{"arg", "(", "\[Phi]", ")"}], {FontFamily -> "Arial"}, 
               Background -> Automatic, StripOnInput -> False]}, {
              GraphicsBox[{{}, {}, 
                RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
                 "], {{
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}}], {Antialiasing -> False, 
                 AbsoluteThickness[0.1], 
                 Directive[
                  Opacity[0.3], 
                  GrayLevel[0]], 
                 LineBox[
                  NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                   7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                   112.5}, {7.5, -112.5}}]]}, {
                 CapForm[None], {}}, {Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
               Scaled[0.02], PlotRange -> All, Frame -> True, 
               FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
               Opacity[0], FrameTicksStyle -> Opacity[0], 
               ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
     "BarLegend", DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"Rainbow\"", ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", 
            RowBox[{"Arg", "[", "\[Phi]", "]"}]}], ",", 
          RowBox[{"\"Ticks\"", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"-", "3.14`"}], ",", 
                RowBox[{"-", "1.57`"}], ",", "0", ",", "1.57`", ",", 
                "3.14`"}], "}"}]}], ",", 
          RowBox[{"\"TickLabels\"", "\[Rule]", 
            RowBox[{"{", 
              
              RowBox[{"\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7075764713187246`*^9, 3.707576705454943*^9, {3.707576748759345*^9, 
   3.707576771309926*^9}, {3.7075768129122624`*^9, 3.707576843468649*^9}, {
   3.7075768823167677`*^9, 3.7075769448555193`*^9}, 3.7075844644676504`*^9, 
   3.707608890893471*^9, 3.7077452999325714`*^9, 3.7077568505849056`*^9, 
   3.707771193021555*^9, 3.707771889405982*^9, 3.7077738703673887`*^9, {
   3.707774399544695*^9, 
   3.7077744149522066`*^9}},ExpressionUUID->"e883d720-6aba-43b8-9acc-\
89d0291fa481"]
}, Open  ]],

Cell["\<\
Accuracy can be tested by propagating these functions through time to observe \
static profile\
\>", "Text",
 CellChangeTimes->{{3.7075769724071064`*^9, 3.7075769866046443`*^9}, {
  3.707577046281477*^9, 
  3.7075770493671494`*^9}},ExpressionUUID->"1a8ee658-3f8f-40f5-b995-\
97a25a13bc71"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing Accuracy", "Section",
 CellChangeTimes->{{3.7077453510935125`*^9, 
  3.707745352929616*^9}},ExpressionUUID->"8aa0a0d4-6a0c-4926-8145-\
f356b8db5238"],

Cell["\<\
Remember that the smaller the energy eigenvalue, the slower the eigenfunction\
\[CloseCurlyQuote]s phase will evolve in time!\
\>", "Text",
 CellChangeTimes->{{3.70775154196348*^9, 
  3.707751569300905*^9}},ExpressionUUID->"39c285aa-e9d8-4f9d-9eec-\
943d61ef708a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"solveEvolution", "::", "usage"}], " ", "=", " ", 
    "\"\<returns an interpolator of the spacetime evolution of a continuous \
wavefunction\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"solveEvolution", "[", 
     RowBox[{"psi_", ",", " ", "potential_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"xL_", ",", " ", "xR_"}], "}"}], ",", " ", 
      RowBox[{"duration_:", "1"}]}], "]"}], " ", ":=", "\n", "\t", 
    RowBox[{"NDSolveValue", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"\[ImaginaryI]", 
          StyleBox[" ", "Code"], 
          StyleBox[
           RowBox[{
            SuperscriptBox["\[Psi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"x", ",", " ", "t"}], "]"}], "Code"]}], 
         StyleBox[" ", "Code"], 
         StyleBox["\[Equal]", "Code"], 
         StyleBox["  ", "Code"], 
         StyleBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SuperscriptBox["\[Psi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"2", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"x", ",", " ", "t"}], "]"}]}], " ", "/", " ", "2"}], 
           " ", "+", " ", 
           RowBox[{
            RowBox[{"\[Psi]", "[", 
             RowBox[{"x", ",", " ", "t"}], "]"}], " ", 
            RowBox[{"potential", "[", "x", "]"}]}]}], "Code"]}], 
        StyleBox[",", "Code"], 
        StyleBox["\n", "Code"], 
        StyleBox["\t\t\t", "Code"], 
        RowBox[{
         StyleBox[
          RowBox[{"\[Psi]", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "Code"], 
         StyleBox[" ", "Code"], 
         StyleBox["\[Equal]", "Code"], " ", 
         RowBox[{"psi", "[", "x", "]"}]}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{"xL", ",", " ", "t"}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{"xR", ",", " ", "t"}], "]"}], " ", "\[Equal]", " ", "0"}]}],
        "\n", "\t\t", "}"}], ",", "\n", "\t\t", "\[Psi]", ",", " ", "\n", 
      "\t\t", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "xL", ",", " ", "xR"}], "}"}], ",", "\n", 
      "\t\t", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "duration"}], "}"}]}], "\n", 
     "\t", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"solveDiscreteEvolution", "::", "usage"}], " ", "=", " ", 
    "\"\<returns an interpolator of the spacetime evolution a discrete \
wavefunction\>\""}], ";"}], "\n", "\t\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"solveDiscreteEvolution", "[", 
    RowBox[{"\[Phi]list_", ",", " ", "Vlist_", ",", " ", "grid_", ",", " ", 
     RowBox[{"duration_:", "1"}]}], "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xL", ",", " ", "xR", ",", " ", "psi", ",", " ", "\[Phi]clone", ",", 
       " ", "potential", ",", " ", "evol"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"xL", " ", "=", " ", 
       RowBox[{"grid", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"xR", " ", "=", " ", 
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], ";", "\n", "\t\t", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{"enforce", " ", "boundary", " ", "conditions"}], " ", "*)"}], 
      "\n", "\t\t", 
      RowBox[{"\[Phi]clone", " ", "=", " ", "\[Phi]list"}], ";", "\n", "\t\t",
       "\n", "\t\t", 
      RowBox[{"(*", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]clone", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"\[Phi]clone", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], " ", "=", " ", "0"}]}], ";"}], 
       "\n", "\t\t", "*)"}], "\n", "\t", "\n", "\t\t\t", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "build", " ", "continuous", " ", "functions", " ", "for", " ", 
        "evolution"}], " ", "*)"}], "\n", "\t\t", 
      RowBox[{"psi", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{"\[Phi]clone", ",", " ", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"xL", ",", " ", "xR"}], "}"}], "}"}], ",", " ", 
         RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Spline\>\""}]}], "]"}]}],
       ";", "\n", "\t\t", 
      RowBox[{"potential", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{"Vlist", ",", " ", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"xL", ",", " ", "xR"}], "}"}], "}"}], ",", " ", 
         RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Spline\>\""}]}], "]"}]}],
       ";", " ", "\n", "\t\t", 
      RowBox[{"solveEvolution", "[", 
       RowBox[{"psi", ",", " ", "potential", ",", " ", 
        RowBox[{"{", 
         RowBox[{"xL", ",", " ", "xR"}], "}"}], ",", " ", "duration"}], 
       "]"}]}]}], "\n", "\t", "]"}]}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"animateDiscreteEvolution", "::", "usage"}], " ", "=", " ", 
    "\"\<returns an animation of the spacetime evolution of a discrete \
wavefunction\>\""}], ";"}], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"animateDiscreteEvolution", "[", 
    RowBox[{"\[Phi]list_", ",", " ", "Vlist_", ",", " ", "grid_", ",", " ", 
     RowBox[{"duration_:", "1"}]}], "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"DynamicModule", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "evol", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"evol", " ", "=", " ", 
       RowBox[{"solveDiscreteEvolution", "[", 
        RowBox[{"\[Phi]list", ",", " ", "Vlist", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"grid", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{"grid", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
         "duration"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"Animate", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"plotContinuous\[Psi]", "[", 
         RowBox[{
          RowBox[{"evol", "[", 
           RowBox[{"x", ",", " ", "t"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", 
            RowBox[{"grid", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"grid", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", "False"}], 
         "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "0", ",", " ", "duration"}], "}"}]}], "\n", 
       "\t\t", "]"}]}]}], "\n", "\t", "]"}]}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"animateEigensystemEvolutionNEW", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eigvals_", ",", " ", "eigfuncs_"}], "}"}], ",", " ", "Vlist_", 
     ",", " ", "grid_", ",", " ", 
     RowBox[{"duration_:", "1"}]}], "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"DynamicModule", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "solutions", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"solutions", "[", "n_", "]"}], " ", ":=", " ", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"solutions", "[", "n", "]"}], " ", "=", " ", 
        RowBox[{"solveDiscreteEvolution", "[", 
         RowBox[{
          RowBox[{"eigfuncs", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", " ", "Vlist", ",", " ", 
          "grid", ",", " ", "duration"}], "]"}]}]}], ";", "\n", "\t\t", 
      RowBox[{"Manipulate", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"plotContinuous\[Psi]", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"solutions", "[", "n", "]"}], "[", 
           RowBox[{"x", ",", " ", "t"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", 
            RowBox[{"grid", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"grid", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", "False"}], 
         "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "0", ",", " ", "duration"}], "}"}], ",", "\n",
         "\t\t\t", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "1", ",", " ", 
          RowBox[{"Length", "[", "eigfuncs", "]"}], ",", " ", "1"}], "}"}], 
        ",", "\n", "\t\t\t", 
        RowBox[{"ContinuousAction", " ", "\[Rule]", " ", "False"}]}], "\n", 
       "\t\t", "]"}]}]}], "\n", "\t", "]"}]}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"animateEigensystemEvolution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eigvals_", ",", " ", "eigfuncs_"}], "}"}], ",", " ", "Vlist_", 
    ",", " ", "grid_", ",", " ", 
    RowBox[{"duration_:", "1"}]}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"DynamicModule", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "animFunc", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"animFunc", "[", "n_", "]"}], " ", ":=", " ", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"animFunc", "[", "n", "]"}], " ", "=", " ", 
       RowBox[{"animateDiscreteEvolution", "[", 
        RowBox[{
         RowBox[{"eigfuncs", "[", 
          RowBox[{"[", "n", "]"}], "]"}], ",", " ", "Vlist", ",", " ", "grid",
          ",", " ", "duration"}], "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"Manipulate", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"animFunc", "[", "n", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "[", "eigfuncs", "]"}], ",", " ", "1"}], "}"}], 
       ",", "\n", "\t\t\t", 
       RowBox[{"ContinuousAction", " ", "\[Rule]", " ", "False"}]}], "\n", 
      "\t\t", "]"}]}]}], "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{{3.707745597089021*^9, 3.7077456648171434`*^9}, {
   3.7077457022977667`*^9, 3.707745786369939*^9}, {3.7077480521436253`*^9, 
   3.7077482004292736`*^9}, {3.7077482464231052`*^9, 3.707748302461116*^9}, {
   3.707748335102894*^9, 3.7077483637519894`*^9}, {3.7077484093459797`*^9, 
   3.7077486157175207`*^9}, {3.707748672946224*^9, 3.7077486924971266`*^9}, {
   3.7077487307384534`*^9, 3.707748829554199*^9}, {3.707749196528694*^9, 
   3.7077492036321187`*^9}, {3.7077492408972187`*^9, 
   3.7077493403264093`*^9}, {3.707749376824896*^9, 3.7077494013602686`*^9}, 
   3.7077505204412146`*^9, {3.7077507887396965`*^9, 3.7077507935476427`*^9}, {
   3.7077511485837283`*^9, 3.7077511567355165`*^9}, {3.7077513036154957`*^9, 
   3.7077513048729086`*^9}, {3.7077513685451393`*^9, 3.707751383096575*^9}, {
   3.707751583383531*^9, 3.7077516621962776`*^9}, {3.7077516970787315`*^9, 
   3.707751735302374*^9}, {3.7077534494719133`*^9, 3.7077534546784945`*^9}, 
   3.707753667483102*^9, {3.7077537605830493`*^9, 3.7077537625442753`*^9}, {
   3.7077538224431305`*^9, 3.707753869863181*^9}, {3.707753907233263*^9, 
   3.70775392404807*^9}, {3.7077539733450856`*^9, 3.7077540202829123`*^9}, {
   3.707754071860353*^9, 3.7077541033419657`*^9}, {3.7077541501778927`*^9, 
   3.7077541618625307`*^9}, {3.707754194443331*^9, 3.7077542903761215`*^9}, {
   3.7077544583294888`*^9, 3.70775447031217*^9}, {3.7077545480722375`*^9, 
   3.7077545503691626`*^9}, {3.7077549237263937`*^9, 
   3.7077549273726087`*^9}, {3.7077549827041454`*^9, 
   3.7077549964828157`*^9}, {3.7077554847335367`*^9, 
   3.7077554893508797`*^9}, {3.707755530202724*^9, 3.7077555345350657`*^9}, {
   3.707755739063572*^9, 3.7077557413334775`*^9}, {3.7077563498164682`*^9, 
   3.7077564224227467`*^9}, {3.707756490844739*^9, 3.7077565096571674`*^9}, {
   3.707756602496789*^9, 3.707756613203624*^9}, {3.70775669574267*^9, 
   3.707756731837604*^9}, 3.707756824244568*^9, {3.7077575142198725`*^9, 
   3.7077575249379606`*^9}, {3.707757723919218*^9, 3.70775772502247*^9}, {
   3.7077579823342385`*^9, 3.7077580383795795`*^9}, {3.7077581892442017`*^9, 
   3.7077581921209154`*^9}, {3.7077705160703154`*^9, 
   3.7077705174536047`*^9}, {3.707771271776663*^9, 3.707771423568451*^9}, {
   3.7077721531064043`*^9, 3.7077721535286818`*^9}, {3.7077725934153996`*^9, 
   3.7077726039763355`*^9}, {3.7077727108142967`*^9, 
   3.7077727176304584`*^9}, {3.7077727665276833`*^9, 3.707772809781972*^9}, {
   3.7077732334611135`*^9, 3.707773244810606*^9}, {3.7077738308465185`*^9, 
   3.7077738312784705`*^9}, {3.707774637666922*^9, 
   3.7077746654795694`*^9}},ExpressionUUID->"b8a9d512-be86-4be1-b81d-\
5867eff2bd7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"animateSpectrum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x_", ",", " ", "xL_", ",", " ", "xR_", ",", " ", "\[CapitalDelta]x_"}], 
     "}"}], ",", " ", "V_", ",", " ", 
    RowBox[{"numModes_:", "4"}], ",", " ", 
    RowBox[{"duration_:", "1"}]}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"DynamicModule", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "grid", ",", " ", "potential", ",", " ", "eigfuncs", ",", " ", 
      "eigvals"}], "}"}], ",", "\n", "\t\t\t", "\n", "\t\t", 
    RowBox[{
     RowBox[{"grid", " ", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"xL", ",", " ", "xR", ",", " ", "\[CapitalDelta]x"}], "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"potential", " ", "=", " ", 
      RowBox[{"If", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"V", " ", "===", " ", "0"}], ",", "\n", "\t\t\t", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"Length", "[", "grid", "]"}]}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"V", " ", "/.", " ", 
            RowBox[{"x", " ", "\[Rule]", " ", "#1"}]}], " ", "&"}], ")"}], 
         " ", "@", " ", "grid"}]}], "\n", "\t\t", "]"}]}], ";", "\n", "\t\t", 
     "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
        "add", " ", "very", " ", "high", " ", "potential", " ", "to", " ", 
         "end"}], "-", 
        RowBox[{"points", " ", "to", " ", "improve", " ", "stability"}]}], 
       ";", " ", 
       RowBox[{"finite", " ", 
        RowBox[{"differences", " ", ":", 
         RowBox[{"'", "c"}]}]}]}], "  ", "*)"}], "\n", "\t\t", 
     RowBox[{
      RowBox[{"potential", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"potential", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], " ", "=", " ", 
       SuperscriptBox["10", "4"]}]}], ";", "\n", "\t\t", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eigvals", ",", " ", "eigfuncs"}], "}"}], " ", "=", " ", 
      RowBox[{"getEigenmodes", "[", 
       RowBox[{"potential", ",", " ", "grid", ",", " ", "numModes"}], "]"}]}],
      ";", "\n", "\t\t", 
     RowBox[{"animateEigensystemEvolutionNEW", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eigvals", ",", " ", "eigfuncs"}], "}"}], ",", " ", 
       "potential", ",", " ", "grid", ",", " ", "duration"}], "]"}]}]}], "\n",
    "]"}]}]], "Code",
 CellChangeTimes->{
  3.7077558632326317`*^9, {3.7077560768559923`*^9, 3.7077561437512097`*^9}, {
   3.70775625911913*^9, 3.70775626338828*^9}, {3.7077566501064672`*^9, 
   3.707756662365301*^9}, {3.7077567968838425`*^9, 3.7077567991818404`*^9}, {
   3.7077568321869106`*^9, 3.7077568325423*^9}, {3.7077581702777967`*^9, 
   3.707758171092746*^9}, 3.707770822724289*^9, {3.7077708978388104`*^9, 
   3.7077709011336794`*^9}, {3.7077714382543263`*^9, 
   3.707771438439131*^9}},ExpressionUUID->"969b1a4d-a0e9-4dbe-9e98-\
a5830560f3e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"animateSpectrum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5", ",", " ", "0.1"}], "}"}], ",", " ", 
   RowBox[{
    FractionBox["1", "2"], 
    SuperscriptBox["x", "2"]}], ",", " ", "20", ",", " ", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7077561526000624`*^9, 3.707756175414344*^9}, {
   3.707756210996087*^9, 3.7077562116730022`*^9}, 3.7077562664596386`*^9, {
   3.7077564479413595`*^9, 3.707756448358159*^9}, {3.7077566274910116`*^9, 
   3.7077566411092367`*^9}, {3.7077567846697073`*^9, 
   3.7077567852744403`*^9}, {3.7077706617203646`*^9, 3.707770661827383*^9}, {
   3.7077707210444713`*^9, 3.707770745948621*^9}, 3.7077710793075094`*^9, {
   3.7077712110297885`*^9, 
   3.707771211132794*^9}},ExpressionUUID->"4217e3ee-b177-4326-b1c6-\
4ba49502c4a7"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`grid$$ = CompressedData["
1:eJw10sFKAkEcx/FRV1111d1ZX6A3iOrQbeYZeoTA6NYr9AgdMzr0Gp5mjgUW
QSdvQRAIHYxEFEXC///r/7Ls/D7/mT87e3R5czGsGGOG5lCD+DDaVxlPpcr4
OtmXjVdSNqqzuAJX4HJcjsvJ+6z36OtG4ZMMl+E6uDauhUtxKa6Ja0Rhozou
wSW4Gq6Kq+AMzpDvgq5vw4n0bcK9+HVQtgrqlrgF7g/3i5uHZ8l/WJ+Fa+n7
Dsfiv3Cf4U7yKesf4VbeX3iOw+FGdPCxe9LcefW8Tx37uXPd33Ee+cy96zy4
uXvUed2Zzk++oG+JW+HWuA1ui9vhjH/T7+n1vipe86rXvprnPnAJro5r4Jq4
1HPfXs9v4dq4Di7DZbgurofr43LP/8j5OXnBHAXO0m9xFlfiStzA/wMmWEiV

  "], $CellContext`potential$$ = {
  10000, 12.005000000000003`, 11.52, 11.045000000000002`, 10.579999999999998`,
    10.125, 9.680000000000001, 9.245, 8.82, 8.405, 8., 7.6049999999999995`, 
   7.22, 6.845000000000001, 6.479999999999999, 6.125, 5.779999999999999, 
   5.444999999999999, 5.120000000000001, 4.804999999999999, 4.5, 4.205, 
   3.9199999999999995`, 3.644999999999999, 3.379999999999999, 3.125, 2.88, 
   2.6449999999999996`, 2.4199999999999995`, 2.204999999999999, 2., 1.805, 
   1.6199999999999997`, 1.4449999999999996`, 1.2799999999999994`, 1.125, 
   0.9799999999999999, 0.8449999999999998, 0.7199999999999996, 
   0.6049999999999996, 0.5, 0.4049999999999995, 0.31999999999999984`, 
   0.24500000000000013`, 0.1799999999999998, 0.125, 0.0799999999999998, 
   0.04499999999999995, 0.019999999999999858`, 0.0049999999999999645`, 0., 
   0.005000000000000053, 0.020000000000000035`, 0.04500000000000021, 
   0.08000000000000014, 0.125, 0.18000000000000033`, 0.24500000000000013`, 
   0.32000000000000056`, 0.4050000000000003, 0.5, 0.6050000000000005, 
   0.7200000000000002, 0.845000000000001, 0.9800000000000005, 1.125, 
   1.280000000000001, 1.4450000000000003`, 1.6200000000000012`, 
   1.8050000000000006`, 2., 2.205000000000001, 2.4200000000000004`, 
   2.645000000000002, 2.880000000000001, 3.125, 3.3800000000000012`, 
   3.6450000000000005`, 3.920000000000002, 4.205000000000001, 4.5, 
   4.804999999999999, 5.120000000000004, 5.445000000000002, 5.780000000000001,
    6.125, 6.479999999999999, 6.845000000000004, 7.220000000000002, 
   7.605000000000001, 8., 8.405, 8.820000000000004, 9.245000000000003, 
   9.680000000000001, 10.125, 10.580000000000007`, 11.045000000000005`, 
   11.520000000000003`, 12.005000000000003`, 
   10000}, $CellContext`eigfuncs$$ = CompressedData["
1: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
MozXeMbvSsazCuPbjvE+lPG/jM3DIweajwuVphPOPdGB1nWqB+DtU3C54vFW
JvINJCYPuRqwoxyslv5QeP2sBnIcfbdL+/OhKLAyb/HFwfeGZm7g79hmSLk6
jGuv2gLVFzfyF2c1Q2ro7F0ch0Y4dLzslJ0MD9YZDcvTzaiA1ZZz22IjsmDS
i5CC8+KBeNou4FWIwRvsXrk+N3NqFX6veyjvtZGHSopKW0fur0fuNy0byzeD
/iWGZZVZctDotYTa9IVlmCvaXZcy8zlqRpzuaTj6DHZF2b6F4lLYkpIzafbb
Wjg6x1N2iicfvp3Nrij34MHkYxPNlAbfa4o3+1v8OfkGzk63jgg654bS9e4e
UxfkYc3NsyPKHKuRv7Ip8IgmD3eHyT70e8fFM87j/APPVOGZX67RWcNf4/Ch
vItqimGwLdxy7OjoAkgTavIUM6oBLyF7n5bBPg8bdB8r2MsBZ9uZOc7u5aDI
jemQjHwBS9KL1drHpaC1Ya+0aHA5ysWPTfplxUE9Uflq+8F5uPbhlNvBkGqc
cCJz4yzIw6XLTykHPM3X1qY13Kd9MKHzIE3PgxHVg9Q0QX2IpPswmO7H06QH
L5A+TCS9uID0Y+4QQT8YRv2BD/UL+6h/qCE/oIT8gWHkF/CmCvyDNvITp5K/
+Jn8xgPkPxpRHriU8sFhlBeWUX4AlCccpnwhj/IGKcofPhIP0E58gBfxAo+J
H5hLPOFS4gv3E2/4iPjDSuIRXxGfaEC84kfiF+uIZzxBfGMO8Y7BxD9OWC+Y
B/R4LZgPlCrb0S/poocbew+NjzvxCn/7RAkliBXhOe6ijhipauxq32tzvpOH
2ZOFb+p7NGKExIVh8k+acUSDJDSKt6BF0cn9wmrNuNpt84rmkfWYc/fq8v3K
NVi6atJFmVP5ONdteouoURTa7pa98TQnEzT8l08Uyq8AyQ05k7UG88gsTy+u
S6iH2PdHbj60qx/8vKgx7/3GgcVR6UUXo8pgvI3Ea5+Ip6C264FY//6XeE/t
nHpNVjlKWGZLSCzkoqeMYRtXpQ5tju93rJTkYdfkO05icyqxT+uH6LioDLxS
LTxPKzAJLuXnHXYZXQb+EVvX4C4OLCz8lbJPiw8a4bd09TdzoEWuVWHZlVKI
UUo+k7kvAa7EGC69NSULT5x6uJrfVYmVc87NulbHRdPjmy9VDc7Ry5vPzz0a
UoUBVSO7YPD36QGFjLl9MxMhNmKMTeeiMlgxVN7Gdx0HXkmF2UzS5kH0Za3L
ExqqYcrpeXWuFwbfk6oTt3WEBuOdfIVG3WuFqC0zWVRLvBa3XTQ5v0SfhwvY
eifbT6ug87bs+XRWL4fVV2P3GbH7y+VJTyvTV8r0mjP9uayfraw/C9avrzL1
P1We/NBj/qgwv1yZf5bMz2nM3xVLye9e5v9WlscRls/fTZRXIMvv507K8+8u
ynciy/sIy9+d8XCP8fFnPfEyn/FjzniawPi6y3h7yPhbwng0YHwO1BOvIYzf
F4znBsa3C+P9PeN/MZuHQ4U0HyODZAK22a/CcY/PGPhnIn4Re3Rh9chy/LTc
e7T1Wg5a5v+TrpBswDk/l5t52Dajwe/XZnffNaP+My3YVd6EUyxeRkYNvp/c
6IkxF0+pxJigP+9Vl2bhMfUpkXeMbsOGc7OWeiUMvi/oD8yJN66F6C/awhP/
1YGNQbaf7YEGWJXd7zZJiQ+trb+fh1yqBAPj02ZbhyP0nw49ZPAoCetdn/zW
OV+GqTlTT8ZKcHGVsmrf0Ad1KPa9K+baXR6O/u6xetL//r9ua5Ky6ZY0DPjh
We33+DlcMrcd16dUAYFZyY0RyIXEBPdI3wg+TBTC96YatSAUaJH1TqgAzif1
PR9fdAjbzxwRXVVTgLvjPmbEb63Fs+XLDYYp8NFcsjj5iSYHE/VNusddL8bE
Ta+qFyy5gXUfDy9Qe5sLJZWztDpP18CcZeM/qmfzILRij8eDSRy4OTPpgLZh
MYh2X+VZ2V6B50mBDrH38nAW9/gzkbQa9NMTCU2IHXxvDj/2MORILb5WUR19
SqwQV+dv/PE86qv2G1XBGp7RPnjTeajhCJ6HxERBPZjdJ6iP52YJ7sNquh+l
SQ8eI334rkugF/9uF+iHowaCfuAo9QcO1C/IUP8wkvyAfBeBP5BIfuFi8g8j
yE80IH9xPvmNXd8F/mOptSAPUKV8QJzygomUH9hTnqBA+UKWiyBvWLRGkD++
Ix5QgvhAaeIFVxI/aEw84XUfAV/4YbGAN3xF/MFp4hEqzQV8QtNTAa8gRvxC
3w8Bz/A1T8A3RBPvkEn8Q3SCYB5gVbxgPmDpmas+Z6TWYPD+B2+nbszGmx9k
7PasrMTXr97t2vOOh37eP1ZlqjehRfk/WZ/BOawf4is791cTakwsLI0s4WPb
FpM9yoaVmJIwEJSrnY4THC6J2r9IBi/97CxeRxm8mv03siSJC2WRVk/vbWkA
6b1p0xM+18NNtyLhbxs5kGaaOyIstxCuv/1j//CJHxwLKjzwNzoPZYdoXokb
W4vKs7zXaYfXoWFUywbhmXU4uvdIVE14NZqGuSc8epmN5XdDkj0MEqHlhZeV
l1c5hC7rnG7xgQuvun7UKcvUwZ3DHRpaB2vBeV1rQllXHhgZa2/rGHsDU4Kl
91tcKsFlFtejPD5xcHKTvP4GPz4ON1Vccrm8BpN2z1zz+ucbjFQW0Z/gfw8W
BL/RKxEpB/0rkQUTXbnw9czNnN4aHrhEBD46EFkFk0TEPgX7ZMAV5ZCj206/
wks5diNF31biyy3DBz6f5eGVL3a6hUe4ePV2w6V24fLB93trpTG1dzBx5dj0
Edm5oKG0c2vEiFooTNRvUevngQpbe7P9c6Po/NP/nmf1qln9m+w+X3Z/DNPz
lOlTdSW9Dky/DuvnhxL1p2RL/W5l/W9nfpxm/vQzvxSNyD+h9eTnWCfyV/0j
+T3A/JdPoTx4LJ8KlpcHy6+Z5ZnL8r3O8u5i+fd2Eg8H1xEfC9yJl0LGz8ko
4mm1EvFlaEC87Wf87XtMPK61Ij65jNcrwsRvCuN5tQ/xbZ1KvI/sIv5/snnY
7kLzsWnkk+dR503hidOkG0MiXoPpiKSHvZrVEPSmKW7f1zro7jm0V065GW5O
aVzI12sGfS/DEyv16kF95xDz3oYqaPHvmtJWnglX8zMOuEQlYXpd3Lz9R8sx
slroiuhFHmqLBIklcxpQYd3bS5Ot6nFmycRxlrNrsCYuVLdFJgeTTUpadbcm
QmbTfLxUVg7uDisniCTwIGLS8n/BXvWQLhLzcsVpLkwPzXn6sboYFF113GbK
nYcdottaZhoXovXKhtEr/DiY/mfnxeDIOnQ7uFamWYmLN0KXzV3VX4Q6shL/
Eoy2Q9WZ739XbC8G9WKnEQmyXMg+PTnn/Fc+OK8Y2jow+PncNf/EhCNfc6DS
ZuiwLeueoGY6yqnLV2LOQJ12ciEPbX3H9pdv4aGquWSOals5qrZMnOBtGYfR
kicU7P3zYEhI4h6//FoIubVF3XM3H6yNdut17qwBs6+vW5alZEN5VOlA49fn
KKfwadu4z5UYNuXg5vmNPCzZWf84agkXz9tqGQSOLkGRunU9/942p42lNTyg
fYik82BGz4N0jKAeJH8R1EcFug/Z/ahCenCtlEAfHmwU6IXvZgL9YEj9AJf6
A3fqF2xtBf3DXPIDNcgfTCG/0Jb8wxOuAj/x2ymBv/g+ROA3mJD/kEl5gC/l
A38oL8hzEuSHriGCPNGF8kUPyhtdKH98TzxgqamAD5xHvEB1sYAfqDYV8ATj
iC/wIN4gg/iD78QjeBCfOIR4xZHEL54hnrGG+EZH4h1ViX+MpHnAScME84HX
DZbNGNWyHud9DBX5kpqLlS6+cxS/1eAuma3nXU82oHup1Q4t/WZ0KAm3/Wrb
iE9bxm88KcdBYX2L4MhB/8NLdmz+Nj4CTj09+kmfVwKp2pmf343nwTa5CKFl
3Q0w8d2GnWcM60FD4qNYu141nMW7xQ7aGTB9/d+IqpxUjNjW4MN5UYXcY5pZ
39zr8MhX7q/pivUY9Mh6o4FFDYrVDk34eCwL96pk3fgl+xLKD3V9anCvAqU5
67uVJOqgpSWnPPoFH/iZ/HMzdlTC+Crv/OrqJPDUDJc+GvsGU9TLb8DTwc+p
/TLHNXfXYd+xSVHbVnHwlNPEjXWaeag5JqXN+0MCHLnOvXp4TOXg+4pDqs48
Pow0sD6r6MiDrf7dITJDyyFFT64v0eIymKd4zdlxqBirIkLX8P24OPBb9++G
FXz85bT5wO2EStw1o9H+eHcSilgLbQuIygWfvx8sesdyIPXvvr97PPlwcLFP
mbxdNcg8nXssODsV2hImvO6blI38hwoZjzNqkJelvUI0iI/NbN3B9nXY+RPs
+RxWz53Vb91K90Wz+//T84PpS2d6ZzD91frUjx3r77s+9TuB9b+b+VE1mvyx
Zn41Mf/ymJ9hzN+DzO8vleR/Gcsjj+UzluWVzvIzYnn+rqF8nVnelix/ZDxc
YXwYMV5mM34mMZ7edRJfCxlvgYw/S8ajWCnx+VqPeD3J+JVmPBszvoUY7xcZ
/w1dNA+h+jQfY7Kt1afZmaHmDKmAX6n5+C9ugvFUZw7aq9T1XfNuRKfiFHGD
b014skbjopRmHd4rSQ07NKQCV3o0lVRy7qNXzuapaidzQaylw0tEjgMlj6Sk
xUIboM0+/28Zpx6GrlfYsKC9GtpXins90M+AVJNLXwv7M7CiOe5YZU81PtG/
vKV/VT3mza5OvnapDrds/vCzurAS+fuv9UvkJaH/z7yILpfB997ZU5PXHuJA
2RUvfrtWPVww6y9o+8GBX/MebFtSlgcp273lVa0SsXfYijzL5Eq8YXGmMvgT
H8N12nTMmnn4cvFnN6vQMlwzMC9QU2UXzphrax4tWwZnJYbUzorhgffbKN6w
7XzQHT3RxN2uAlb6pFjMFY+C/pGLHIMGf/efnhfz2vk7F4/+aPzkbMbHB1cN
jsy+V4Fq4sOsF+VE49j+s/OsZxRD86yVhnM6uDBHzUNFchwfxO+vPys9pgI2
tI9UWtR9Be79cVQVflyC++edddi/hIcfXVutQuN4qNShpSvzowyLcxe+3NcS
oa1Fa/hC+3CIzkMEPQ9T3wrqoTTVR3W6D7vpfhxGevAy6YNM0gvOpB9OUj9Q
Q/0Bj/rFNdQ/hpAfeIL8wbHkF54ZOv9//kEP+QmJ5C88J7/hB/kP3pQHrJ4v
yAdTKC/8SvlhCOWJPpQvrrYT5A0+lD/0EA9QTnxAE/ECu4kfMNcT8IQaxBcO
OyDgDT8TfyhFPOJV4hMPEK/wmPiFi8QznCW+wZN4B5H7Av4BaB4gIVEwHxC/
/5kFNJvjiz/RUXnRhVjrNnvWqRIu3lvtpuI4swmvf6/c9ie+EY30R3NSNThY
O8OhJyfoNc5Ot5MRCXsKY9c2Ti3QrYKfD9piOevqIdFc7e6FVw3gvcPpy73O
WlipbqM7VyEHih9vLr+x8BVaDnx2tHlcjQusoiRbT9VjiuntKoctdfi3cEJf
zpkKvJpum35oSCQ+FTVe8MGlGK4HeQTpXeNB2alXt3Pl6+HZz3XRnbxqCFj3
b5rXsxToGnkv/Kj9G3RvlX++/iEHE64WTL3aXIdeS0XWd9yuQfwtO8K8KQ2L
dknE/PqYA547NFNEV3HAruKyytEzdbB+7R979cF6zXrjjkbGv4DVQ91MI3Jy
scRaKvXtBC66Tlqu3jj4eyP32OUj73IrkffcN2b727vY1LfZT9u5GPoceW5p
u3mwbupeuxGdgzpdr2z5NKIMdDcNzzXOuYobpIu7Z2YNztPpdrnQi4PfE5rf
7PSGclFyYUmhz6lcNAyoF8/Z9hJSgu7Mc1cbfD/n3izZ8IcPd9g69RLtb2Xn
e9jzsqyePKtvbE739bH7FzI92UyfPdNb+4L0I+vHnPV3k/UrxPrvZn6oMX9U
mV8mzL+rzM8TzF8z5rcj838Xy6OD5bOQ5RXM8otmeTqzfO+yvL+nUv58xoM/
40OW8bKL8eOQSDz1qBFfexlvDxh/ox4SjyqMz7uM1weMX33GcxzjO5nx3sb4
L2HzIMrm45BduWiA0UZwvBIlHehUDCXhkjEbf/Ag16l//PUdTdBxsbjn4Jt6
mLn4ftDX4MHfr7vnW+tdjQdO3uotIo8LsMRm58Rl+jw0iNxqJza7EYOezv0+
qYKHl+XmTRhRVIipVTZNHsfj4e148Rvz31WCokrQK2/FeuhI/5bnkFkHasM3
38p7UAFHWlcfEZ1+BSZt+VYt/acUdy/vVB64ysfeDV/MW9LqcO7l9s37t1bi
6E0h9ua3b+GuSxd67/uUgvUb/+McGz5svXnpJQ5+nik2jphyPbAcTo6prPP5
5YlFIXvGbXatwMnoavd7bB3aVgUpzV7AQxenQNP9CgWoKfHy3MGcZyD0fYL/
rMk1YNotIdt9tg54ZgZ+UF0Ds9eO2av67SX0ao382XQqD3OPKnc/TObiquSB
zW3n+ajhVXY8eWs5Ov1w27qxOwQW90/5kmZYCRXVPyY+7uGDZ3XxudtaHJCx
8P/rezsLAjZc3mNskoPXomZU1McN/n5NiAvNec5H1U+fte13V+CQrZp6wQWZ
2itoDcNpH3zpPFjT8wBUD1l9LKX7cC7djzl9Aj2oTvrAkvRCMekHHvUDJ6g/
fEf94nbqH0XJDxQjf9CD/IJj5B/MJT+hgfyFx2MFfsMS8h/dKQ90o3zwNOWF
mpQfLKU84R/lC26UN8yk/OEQ8YBAfKBQhoAX1CJ+8AvxhBziCyOJN7hJ/IEt
8QjdxCdI5At4hSXEL2oRzyjiK+AbO4h37CL+8RzNA9rQfOD/AQZXK6E=
  "], $CellContext`eigvals$$ = {0.49999896164752305`, 1.4999927412669223`, 
  2.4999741797586723`, 3.4999360881710513`, 4.499880050013098, 
  5.499865780438139, 6.500244465916652, 7.502469873818236, 8.511073596633189, 
  9.536630493299043, 10.597325408213653`, 11.715981552365161`, 
  12.913550278605218`, 14.20426893350496, 15.595342393797392`, 
  17.08928802332804, 18.686285409648782`, 20.385584835116575`, 
  22.186154366529657`, 24.086924507524337`}}, 
  DynamicModuleBox[{$CellContext`solutions$$}, 
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`n$$ = 1, $CellContext`t$$ = 0, 
      Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
      Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ =
       1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
        Hold[$CellContext`t$$], 0, 1}, {
        Hold[$CellContext`n$$], 1, 20, 1}}, Typeset`size$$ = {
      696.5, {81., 17.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
      Typeset`skipInitDone$$ = True, $CellContext`t$5662$$ = 
      0, $CellContext`n$5663$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, StandardForm, 
        "Variables" :> {$CellContext`n$$ = 1, $CellContext`t$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`t$$, $CellContext`t$5662$$, 0], 
          Hold[$CellContext`n$$, $CellContext`n$5663$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> $CellContext`plotContinuous\[Psi][
          $CellContext`solutions$$[$CellContext`n$$][$CellContext`x, \
$CellContext`t$$], {$CellContext`x, 
           Part[CompressedData["
1:eJw10sFKAkEcx/FRV1111d1ZX6A3iOrQbeYZeoTA6NYr9AgdMzr0Gp5mjgUW
QSdvQRAIHYxEFEXC///r/7Ls/D7/mT87e3R5czGsGGOG5lCD+DDaVxlPpcr4
OtmXjVdSNqqzuAJX4HJcjsvJ+6z36OtG4ZMMl+E6uDauhUtxKa6Ja0Rhozou
wSW4Gq6Kq+AMzpDvgq5vw4n0bcK9+HVQtgrqlrgF7g/3i5uHZ8l/WJ+Fa+n7
Dsfiv3Cf4U7yKesf4VbeX3iOw+FGdPCxe9LcefW8Tx37uXPd33Ee+cy96zy4
uXvUed2Zzk++oG+JW+HWuA1ui9vhjH/T7+n1vipe86rXvprnPnAJro5r4Jq4
1HPfXs9v4dq4Di7DZbgurofr43LP/8j5OXnBHAXO0m9xFlfiStzA/wMmWEiV

            "], 1], 
           Part[CompressedData["
1:eJw10sFKAkEcx/FRV1111d1ZX6A3iOrQbeYZeoTA6NYr9AgdMzr0Gp5mjgUW
QSdvQRAIHYxEFEXC///r/7Ls/D7/mT87e3R5czGsGGOG5lCD+DDaVxlPpcr4
OtmXjVdSNqqzuAJX4HJcjsvJ+6z36OtG4ZMMl+E6uDauhUtxKa6Ja0Rhozou
wSW4Gq6Kq+AMzpDvgq5vw4n0bcK9+HVQtgrqlrgF7g/3i5uHZ8l/WJ+Fa+n7
Dsfiv3Cf4U7yKesf4VbeX3iOw+FGdPCxe9LcefW8Tx37uXPd33Ee+cy96zy4
uXvUed2Zzk++oG+JW+HWuA1ui9vhjH/T7+n1vipe86rXvprnPnAJro5r4Jq4
1HPfXs9v4dq4Di7DZbgurofr43LP/8j5OXnBHAXO0m9xFlfiStzA/wMmWEiV

            "], -1]}, False], 
        "Specifications" :> {{$CellContext`t$$, 0, 1}, {$CellContext`n$$, 1, 
           20, 1}}, "Options" :> {ContinuousAction -> False}, 
        "DefaultOptions" :> {}],
       ImageSizeCache->{754., {112., 119.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    Manipulate`InterpretManipulate[1]],
   DynamicModuleValues:>{{DownValues[$CellContext`solutions$$] = {HoldPattern[
          $CellContext`solutions$$[1]] :> 
        InterpolatingFunction[{{-5., 5.}, {0., 1.}}, {
          5, 13, 1, {37, 13}, {6, 4}, 0, 0, 0, 0, Automatic, {}, {}, 
           False}, {{-5., -4.722222222222222, -4.444444444444445, \
-4.166666666666667, -3.888888888888889, -3.611111111111111, \
-3.333333333333333, -3.0555555555555554`, -2.7777777777777777`, -2.5, \
-2.2222222222222223`, -1.9444444444444446`, -1.6666666666666665`, \
-1.3888888888888888`, -1.1111111111111112`, -0.833333333333333, \
-0.5555555555555554, -0.2777777777777777, 0., 0.2777777777777777, 
           0.5555555555555554, 0.833333333333333, 1.1111111111111107`, 
           1.3888888888888893`, 1.666666666666667, 1.9444444444444446`, 
           2.2222222222222223`, 2.5, 2.7777777777777777`, 3.0555555555555554`,
            3.333333333333334, 3.6111111111111107`, 3.8888888888888893`, 
           4.166666666666666, 4.444444444444445, 4.722222222222221, 5.}, {0., 
           0.1, 0.13534690529814591`, 0.1786702493224173, 0.23316119218441, 
           0.3099178751980837, 0.40991787519808376`, 0.5099178751980837, 
           0.6099178751980837, 0.7099178751980837, 0.8099178751980838, 
           0.9099178751980838, 1.}}, {
          Developer`PackedArrayForm, CompressedData["
1:eJwl04W3DwYUwPHfe7q78+nu7u58unk6n+7u7u6c7jbGGGOMMcYYU2OMMcYY
w8fZPedz/4B7zzckLDy0R1AgELj7eZkIRCYaMYlDfBKRlBSkJoQMZCYbOclD
fgpRlBKUphwVqUJ1alGX+jSiKS1oTVs60JluhNObfgxkCMMZxVgmMJlpzGQO
81nEUlawmnVsYDPb2Mke9nOIIxzjBKc4wzkucIkrXOMGt7jDfR7ymKc85yWv
ect7PhLstpGISgxiE4+EJCE5qUhLejKRlRzkJh8FKUJxSlGWClSmGjWpQz0a
0oTmtCKM9nSiK58f3ou+DGAwwxjJGMYzianMYDbzWMgSlrOKtaxnE1vZwW72
cZDDHOU4JznNWc5zkctc5To3uc09HvCIJzzjBa94wzs+EBQcCEQkCtGJRVwS
kJhkpCQN6chIFrKTi7wUoDDFKEkZylOJqtSgNqE0oDHNaEkb2tGRLnSnJ33o
zyCGMoLRjGMiU5jOLOaygMUsYyVr+IKNbGE7u9jLAb7kK77mG77lO77nB37k
J37mF37lLr/xO3/wJ3/xN//wL/8F/x9/BCITjZjEIT6JSEoKUhNCBjKTjZzk
IT+FKEoJSlOOilShOrWoS30a0ZQWtKYtHehMN8LpTT8GMoThjGIsE5jMNGYy
h/ksYikrWM06NrCZbexkD/s5xBGOcYJTnOEcF7jEFa5xg1vc4T4PecxTnvOS
17zlPR8Jjqh/ohKD2MQjIUlITirSkp5MZCUHuclHQYpQnFKUpQKVqUZN6lCP
hjShOa0Ioz2d6EoPetGXAQxmGCMZw3gmMZUZzGYeC1nCclaxlvVsYis72M0+
DnKYoxznJKc5y3kucpmrXOcmt7nHAx7xhGe84BVveMcHgiLpnyhEJxZxSUBi
kpGSNKQjI1nITi7yUoDCFKMkZShPJapSg9qE0oDGNKMlbWhHR7rQnZ70oT+D
GMoIRjOOiUxhOrOYywIWs4yVrOETyNPtcg==
           "], CompressedData["
1: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
zzgH0A7X8LRsjloCRBtZqmoJokDP5zdS5aUaqab9F6kq0RKpyoxTItV3VCPV
Cy8okeqzSzREqm3pAeRI9WcTtUg1wpMSqYaa0hCpHo8/Qo5Up0JvUolUI1go
kWpNLA2R6tPZleRI9cW3C1Qi1QIvSqR6sioTP1KVzjhJjlSbgSuVSBUMXyNH
qikv7PEj1S8HFpAj1Ty5H1Qi1Q8/48mR6sVVNESqFkc5yJHqmtsqVCJVNhFK
pCrNRUOkql00TI5UQ+tnLdCRqsdTSqQadIyGSHVynBKpxo/1U4lUnw23kCPV
GB4aItVfLpRIlTf0B5VINeTPYnKkSsdEQ6T6aWqKHKmGNkVSiVQ3XKdEqhd0
aIhUB04EkCNVDoF7VCJV8fnNqT7//+dUhWnJqZpOU3KqN6nmVB1bKTnVNElX
/Jzqvg0K5JxqbvhVKjnVSgNKTtWan4acqnzYBXJONT9kO5Wc6q4CSk71mgoN
OdVgJWZyTlVedxOVnGq6OCWn6vBoJX5ONUP0HDmn2qkaRyWn6uVHyamWsdCQ
U9UP0CXnVBk+BFDJqY4JUHKqm6di8XOq+kas5JyqlPcqKjlVJX9KTrXHaiF+
TvXJqCI5p3px+xoqOVXWVSbknGr41Zv4OdXwDVzknOruqiwqOdVDNpScapIs
DTnVCZMAck7VbkqHSk41xomSU+1/YYqfU13cx0fOqcrIMtmgc6o/11ByqjZ3
acipRnq/I+dUgwzvUcmpPpvf039zqqf/9/87/fei5fTflYVy+r+1ldrp/30e
yul/oy0Np//hImzk0/+AhWupnP4v76Gc/idm03D6738tgnz6z1W7lsrp/yl1
yum/T9JP/NP/LgEB2b+n/4q3Oqic/v8RpJz+d2bI4J/+n86/SD79b3Sjdvqf
WUE5/a98KI1/+q8Vsvbc39N/Q7k1VE7/A1ZRTv8tBgvxT/8dUgfIp/+sy2fV
0Kf/hg8op/8rWHjxT//VSu+RT/9fbYmicvqfVEo5/R9mEcI//aeLmiKf/odZ
/XRBn/4376Sc/if00HD6X8mzknz6v+O4OJXT/w2NlNP/8QkaTv+9N0nU/D39
Zz2dTeX03zmXcvp//zcNp/9s9ibk0//r1fRUTv/n+Z5q3w1q91ST/7unOkzL
PdX2+5R7qoPnqN1TJUoo91QZ6H3x76kGKxwn31NduewTlXuqvHco91RD5Gm4
pzqoqke+p+pQp0flnqoQK+WeKo+hKv491dGvF8n3VFU3vKVyT1W3kXJPtZPl
Dv491X5JOvI9Vc5LdAzoe6rWZyn3VN8r/8C/p+rnv5F8TzUrm0TlnqrFHco9
VVHvY/j3VM3u5ZDvqboLmlG5pwr2U+6pCkrQcE81yvM1+Z7qxpkQKvdUM7kp
91SPKNNwT1VLrS/r7z1V8xETKvdUI6Io91QHVtBwTzWNs5d8T/V2+jMq91Tj
/Cj3VNtOp+DfU3XNNSHfU62oNaNyT7XGmXJPNW7yPv491antruR7qoFyw1Tu
qVrPb0XVWxFqFVUq/1VUraaloupVLqWi6kQntYqqHQmUiqpKDxoqqmZ7o8gV
VYKOslQqqqRjKRVV34ZpqKi6m1ZDrqjyP8xNpaLqohOlouo91wB+RVWT1W9y
RZX1ELWKqrNclIqqF1t58Suq3v3eQa6oGjZhoFJRRbrqS66oYp76gF9R9bQz
mVxR9fNWGpWKKj5hSkVVsSINFVWC+7aRK6qagvZRqaiK+ipIrqg6+/YBfkXV
0QYVckWVcMwSKhVVjDWryBVVBuk0VFR9AdzkiiqloA1UKqruxsmQK6p434fh
V1R9+b2BXFGV2q5DpaIqjYVSUeV2moaKqmk9D3JFlcKKDioVVQfyKRVVzmto
qKhq4bhArqgqNjlHpaJqxfzW/tddplb77/Jf7f+XzzTU/tuaUGr/NxpSq/2/
+ppS+/9jPw21/6NVlNr/hGPxVGr/V0ZSav8TrGmo/feryifX/gd1bKRS+68T
San9b3z7Cr/2n/3BBXLtv+zpACq1/8sGKLX/v7h/4df+Rz6KJ9f+l21UoVL7
z7Kgl1z7f97fB7/2v4kIItf+jwy5Uan9f8NBqf2fahzHr/2P5rAg1/7rVQVT
qf33LaTU/ps00lD73x5rTK79T5sNp1L7n1ZLqf1nVFmPX/u/e91ycu0/28ce
KrX/7psotf/KJtP4tf8cHHw1f2v/Z5w/U6n9N8yk1P5X7BDEr/0fVHQi1/5P
iDpSqf23+CxJrv1fsIKG2n/v/dbk2n/5vFEqtf/p86tSNbaAmkpV3H8qVWK0
qFQxaVFUqoKoqlQ5+lNUqs4F0aJSpZtHVqkSlrhDRaVKeStFpcqnnAaVqoax
p2SVKn6J11RUqmTfUVSqZu/S4atUGS+XJ6tUZZ5JpaJSJSa+iqxSRXq5A1+l
Srqhu+SvShWT5wsqKlUX9u4iq1TNsOrgq1Q18ViTVar8uHqpqFRNL0skq1Sl
HDTCV6lK2K4c+Velqu72JyoqVfKGFJWqGBtNfJWqGLlrZJUqA81IKipVm4so
KlV7dyfhq1Sp3pAnq1SJORtRUalaXkpRqerzE8FXqTLvDierVDEJWFNRqVrN
SFGpMnf3wlepGqET4firUmWVEkpFpWpUiKJSlbu0El+lyim7kaxSxX/2EBWV
Kvr51VPlOEhNT/X4f3qqN2nRUzUepuiphidR01NtXkLRU13OuAdfT3UsTpGs
pxrJ10FFT9VGg6Kn2hlLg56qt44gWU+1O1KSip5q4GaKnqr/Qhr0VEvWR5P1
VIUTxqjoqUr7UvRUswOd8fVU0+//TPurpzo2rkNFT/VzfjNZT/VL5mJ8PdW6
7u1H/+qpGgfRs6L1VD9vukTWUxXXoUFPdeUPS7Ke6swxVg20nmo+WwJZT/Xw
Kxr0VJVGTch6qht/b6SipzpWRdFTfbHJEl9PtS5Ekqynahv6m4qeKt30T7Ke
qmP7Bnw91fSkq2Q91cgHplT0VIvfsZP1VOskefH1VAsO8ZL1VB9m7aWip3pG
n6KnaixDH4mtpxoa+ZSsp6qumk1FT3U4d16V/2eUqSn/p/yn/L+KFuX/9DqK
8r9VKTXlf7VMivJ/aB8Nyv/8b1+Tlf8jW5ZQUf7vXk1R/jebpkH536P+Bln5
/8zjLCrK/8mcFOX/oS/2+Mr/FQkVZOV/e3UHKsr/l57NkpX/Pe5H06D8n/ad
rPwfeVicivK/qjU9WfmfKbMZX/m/xPhx9V/lfzarairK/w36uWTl/zP5F/CV
/5nqmor+Kv8Pir+novy/mG4pWfm/OJcG5f+dTQ/Iyv8j8i+oKP9v/O1CVv4/
2HoRX/k/MvYDWfnfVjCQivI/Jz1F+T8j+xy+8n+TbHb5X+V/zlNMVJT/4123
kJX/czm48JX/zbadJCv/8wsLUFH+b9h0l6z8r6ekhK/839pbRVb+N8uIoaL8
HzS/PapCl1LrUVXwX4+qUncaelTZmlJ6VHWLUOtRVZhN6VG15nEKfo+qlOwE
co+qsT88VHpUfZii9KjyNwnC71FlVRhK7lE184pajyqf45QeVfR7HfB7VMU9
XkTuUeVakUqlR1XULKVH1ezRaPweVSmiEsl/e1RZ/VKj0qNKxzid3KOqITEM
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
yv8D/R9jc/sG
           "]}, {Automatic, Automatic}], HoldPattern[
          $CellContext`solutions$$[
           Pattern[$CellContext`n$, 
            
            Blank[]]]] :> ($CellContext`solutions$$[$CellContext`n$] = \
$CellContext`solveDiscreteEvolution[
           Part[CompressedData["
1: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
MozXeMbvSsazCuPbjvE+lPG/jM3DIweajwuVphPOPdGB1nWqB+DtU3C54vFW
JvINJCYPuRqwoxyslv5QeP2sBnIcfbdL+/OhKLAyb/HFwfeGZm7g79hmSLk6
jGuv2gLVFzfyF2c1Q2ro7F0ch0Y4dLzslJ0MD9YZDcvTzaiA1ZZz22IjsmDS
i5CC8+KBeNou4FWIwRvsXrk+N3NqFX6veyjvtZGHSopKW0fur0fuNy0byzeD
/iWGZZVZctDotYTa9IVlmCvaXZcy8zlqRpzuaTj6DHZF2b6F4lLYkpIzafbb
Wjg6x1N2iicfvp3Nrij34MHkYxPNlAbfa4o3+1v8OfkGzk63jgg654bS9e4e
UxfkYc3NsyPKHKuRv7Ip8IgmD3eHyT70e8fFM87j/APPVOGZX67RWcNf4/Ch
vItqimGwLdxy7OjoAkgTavIUM6oBLyF7n5bBPg8bdB8r2MsBZ9uZOc7u5aDI
jemQjHwBS9KL1drHpaC1Ya+0aHA5ysWPTfplxUE9Uflq+8F5uPbhlNvBkGqc
cCJz4yzIw6XLTykHPM3X1qY13Kd9MKHzIE3PgxHVg9Q0QX2IpPswmO7H06QH
L5A+TCS9uID0Y+4QQT8YRv2BD/UL+6h/qCE/oIT8gWHkF/CmCvyDNvITp5K/
+Jn8xgPkPxpRHriU8sFhlBeWUX4AlCccpnwhj/IGKcofPhIP0E58gBfxAo+J
H5hLPOFS4gv3E2/4iPjDSuIRXxGfaEC84kfiF+uIZzxBfGMO8Y7BxD9OWC+Y
B/R4LZgPlCrb0S/poocbew+NjzvxCn/7RAkliBXhOe6ijhipauxq32tzvpOH
2ZOFb+p7NGKExIVh8k+acUSDJDSKt6BF0cn9wmrNuNpt84rmkfWYc/fq8v3K
NVi6atJFmVP5ONdteouoURTa7pa98TQnEzT8l08Uyq8AyQ05k7UG88gsTy+u
S6iH2PdHbj60qx/8vKgx7/3GgcVR6UUXo8pgvI3Ea5+Ip6C264FY//6XeE/t
nHpNVjlKWGZLSCzkoqeMYRtXpQ5tju93rJTkYdfkO05icyqxT+uH6LioDLxS
LTxPKzAJLuXnHXYZXQb+EVvX4C4OLCz8lbJPiw8a4bd09TdzoEWuVWHZlVKI
UUo+k7kvAa7EGC69NSULT5x6uJrfVYmVc87NulbHRdPjmy9VDc7Ry5vPzz0a
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
            "], $CellContext`n$], {
           10000, 12.005000000000003`, 11.52, 11.045000000000002`, 
            10.579999999999998`, 10.125, 9.680000000000001, 9.245, 8.82, 
            8.405, 8., 7.6049999999999995`, 7.22, 6.845000000000001, 
            6.479999999999999, 6.125, 5.779999999999999, 5.444999999999999, 
            5.120000000000001, 4.804999999999999, 4.5, 4.205, 
            3.9199999999999995`, 3.644999999999999, 3.379999999999999, 3.125, 
            2.88, 2.6449999999999996`, 2.4199999999999995`, 2.204999999999999,
             2., 1.805, 1.6199999999999997`, 1.4449999999999996`, 
            1.2799999999999994`, 1.125, 0.9799999999999999, 
            0.8449999999999998, 0.7199999999999996, 0.6049999999999996, 0.5, 
            0.4049999999999995, 0.31999999999999984`, 0.24500000000000013`, 
            0.1799999999999998, 0.125, 0.0799999999999998, 
            0.04499999999999995, 0.019999999999999858`, 
            0.0049999999999999645`, 0., 0.005000000000000053, 
            0.020000000000000035`, 0.04500000000000021, 0.08000000000000014, 
            0.125, 0.18000000000000033`, 0.24500000000000013`, 
            0.32000000000000056`, 0.4050000000000003, 0.5, 0.6050000000000005,
             0.7200000000000002, 0.845000000000001, 0.9800000000000005, 1.125,
             1.280000000000001, 1.4450000000000003`, 1.6200000000000012`, 
            1.8050000000000006`, 2., 2.205000000000001, 2.4200000000000004`, 
            2.645000000000002, 2.880000000000001, 3.125, 3.3800000000000012`, 
            3.6450000000000005`, 3.920000000000002, 4.205000000000001, 4.5, 
            4.804999999999999, 5.120000000000004, 5.445000000000002, 
            5.780000000000001, 6.125, 6.479999999999999, 6.845000000000004, 
            7.220000000000002, 7.605000000000001, 8., 8.405, 
            8.820000000000004, 9.245000000000003, 9.680000000000001, 10.125, 
            10.580000000000007`, 11.045000000000005`, 11.520000000000003`, 
            12.005000000000003`, 10000}, CompressedData["
1:eJw10sFKAkEcx/FRV1111d1ZX6A3iOrQbeYZeoTA6NYr9AgdMzr0Gp5mjgUW
QSdvQRAIHYxEFEXC///r/7Ls/D7/mT87e3R5czGsGGOG5lCD+DDaVxlPpcr4
OtmXjVdSNqqzuAJX4HJcjsvJ+6z36OtG4ZMMl+E6uDauhUtxKa6Ja0Rhozou
wSW4Gq6Kq+AMzpDvgq5vw4n0bcK9+HVQtgrqlrgF7g/3i5uHZ8l/WJ+Fa+n7
Dsfiv3Cf4U7yKesf4VbeX3iOw+FGdPCxe9LcefW8Tx37uXPd33Ee+cy96zy4
uXvUed2Zzk++oG+JW+HWuA1ui9vhjH/T7+n1vipe86rXvprnPnAJro5r4Jq4
1HPfXs9v4dq4Di7DZbgurofr43LP/8j5OXnBHAXO0m9xFlfiStzA/wMmWEiV

           "], 1])}}}],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.7077738707764435`*^9, 
  3.7077744161284285`*^9},ExpressionUUID->"c59b211c-040a-4ba2-baa9-\
1ab6ef422a80"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", " ", "=", " ", 
   RowBox[{
    FractionBox["1", "2"], 
    SuperscriptBox["x", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grid", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "5"}], ",", " ", "5", ",", " ", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"potential", " ", "=", " ", 
    RowBox[{"If", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"V", " ", "===", " ", "0"}], ",", "\n", "\t", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", " ", 
        RowBox[{"Length", "[", "grid", "]"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"V", " ", "/.", " ", 
          RowBox[{"x", " ", "\[Rule]", " ", "#1"}]}], " ", "&"}], ")"}], " ", 
       "@", " ", "grid"}]}], "\n", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"potential", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"potential", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], " ", "=", " ", 
      SuperscriptBox["10", "4"]}]}], ";"}], "\[IndentingNewLine]", "*)"}], 
  "\n", "\t\t"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"eigvals", ",", " ", "eigfuncs"}], "}"}], " ", "=", " ", 
   RowBox[{"getEigenmodes", "[", 
    RowBox[{"potential", ",", " ", "grid", ",", " ", "20"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7077717835306015`*^9, 3.707771832772688*^9}, 
   3.707771895083103*^9, {3.7077719269001575`*^9, 3.707771981650461*^9}, {
   3.7077731531205835`*^9, 
   3.7077731562964845`*^9}},ExpressionUUID->"151a7c16-0f45-4239-9058-\
b49cf80f09ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"solveDiscreteEvolution", "[", 
    RowBox[{
     RowBox[{"eigfuncs", "[", 
      RowBox[{"[", "7", "]"}], "]"}], ",", " ", "potential", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", "1"}], "]"}], ";"}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.7077718524426036`*^9, 3.7077718679785824`*^9}, {
  3.707771967192568*^9, 
  3.7077719726825733`*^9}},ExpressionUUID->"c83fd7a0-eda6-4908-a7f5-\
7b12956066c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"solveDiscreteEvolution", "[", 
        RowBox[{
         RowBox[{"eigfuncs", "[", 
          RowBox[{"[", "n", "]"}], "]"}], ",", " ", "potential", ",", " ", 
         "grid", ",", " ", "0.02"}], "]"}], " ", "//", " ", 
       RowBox[{"EchoFunction", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"plotContinuous\[Psi]", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"x", ",", " ", "0.02"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", 
              RowBox[{"grid", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
              RowBox[{"grid", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
            "False"}], "]"}], ")"}], "&"}], "]"}]}], "\n", "\t", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "//", " ", "Echo"}], ",", "\n", 
   "\t", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "1", ",", " ", "5"}], "}"}]}], "\n", "]"}]], "Code",
 CellChangeTimes->{{3.7077719068832393`*^9, 3.707771907670409*^9}, {
   3.7077720145852823`*^9, 3.7077720612426224`*^9}, {3.707772210208973*^9, 
   3.7077722343835917`*^9}, {3.70777231470518*^9, 3.707772466269706*^9}, {
   3.707772542928754*^9, 3.707772546245542*^9}, {3.707772785054868*^9, 
   3.7077727870595255`*^9}, 3.707772846989869*^9, {3.7077739264055843`*^9, 
   3.7077739267381063`*^9}},ExpressionUUID->"9b4996b7-b609-4d19-ad78-\
86ec1a170897"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotContinuous\[Psi]", "[", 
  RowBox[{
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.02`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.02`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{-5., 5.}, {0., 0.02}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", 
    RowBox[{"x", ",", "0.02`"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", "False"}], "]"}]], "Echo",
 CellChangeTimes->{
  3.707774419596834*^9},ExpressionUUID->"6a7a272a-1c11-456a-b184-\
3ef50d74bb70"],

Cell[BoxData["0.13152828381314038`"], "Echo",
 CellChangeTimes->{
  3.707774419617837*^9},ExpressionUUID->"9b3c6d0a-324c-40a5-8a93-\
3d9db550af4a"],

Cell[BoxData[
 RowBox[{"plotContinuous\[Psi]", "[", 
  RowBox[{
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.02`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.02`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{-5., 5.}, {0., 0.02}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", 
    RowBox[{"x", ",", "0.02`"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", "False"}], "]"}]], "Echo",
 CellChangeTimes->{
  3.7077744196918507`*^9},ExpressionUUID->"059dbcf9-27a3-44cf-9f0b-\
077280cb9c48"],

Cell[BoxData["0.07963642428285524`"], "Echo",
 CellChangeTimes->{
  3.7077744197098484`*^9},ExpressionUUID->"aa4b888e-62da-4586-837e-\
d22beaa39dbe"],

Cell[BoxData[
 RowBox[{"plotContinuous\[Psi]", "[", 
  RowBox[{
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.02`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.02`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{-5., 5.}, {0., 0.02}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", 
    RowBox[{"x", ",", "0.02`"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", "False"}], "]"}]], "Echo",
 CellChangeTimes->{
  3.7077744197818613`*^9},ExpressionUUID->"89ebfe8a-33a8-4949-a3a2-\
7ed55dc67af7"],

Cell[BoxData["0.08510588255418142`"], "Echo",
 CellChangeTimes->{
  3.7077744198038597`*^9},ExpressionUUID->"259ed89d-0511-4cce-9521-\
bd6c0a6500b4"],

Cell[BoxData[
 RowBox[{"plotContinuous\[Psi]", "[", 
  RowBox[{
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.02`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.02`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{-5., 5.}, {0., 0.02}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", 
    RowBox[{"x", ",", "0.02`"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", "False"}], "]"}]], "Echo",
 CellChangeTimes->{
  3.707774419877878*^9},ExpressionUUID->"7893a13d-fd94-4cdd-b103-\
b9e51e34dfd2"],

Cell[BoxData["0.08214878294931664`"], "Echo",
 CellChangeTimes->{
  3.7077744198968773`*^9},ExpressionUUID->"7759a8fc-65dd-4420-b735-\
0f5e9ef409b2"],

Cell[BoxData[
 RowBox[{"plotContinuous\[Psi]", "[", 
  RowBox[{
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.02`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.02`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{-5., 5.}, {0., 0.02}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", 
    RowBox[{"x", ",", "0.02`"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", "False"}], "]"}]], "Echo",
 CellChangeTimes->{
  3.707774421393625*^9},ExpressionUUID->"78132526-be0a-41e4-8668-\
ee9a8db456b7"],

Cell[BoxData["1.503209404560305`"], "Echo",
 CellChangeTimes->{
  3.707774421420625*^9},ExpressionUUID->"4366f162-787c-401d-a8c4-\
4ed05f932140"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.13152828381314038`", ",", "0.07963642428285524`", ",", 
   "0.08510588255418142`", ",", "0.08214878294931664`", ",", 
   "1.503209404560305`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.70777387576279*^9, 3.707773935753553*^9, {3.7077744005389404`*^9, 
   3.7077744214616537`*^9}},ExpressionUUID->"0c3b8694-cc15-4cf9-8647-\
0659433e0869"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testfunc", " ", "=", " ", 
  RowBox[{
   RowBox[{"eigfuncs", "[", 
    RowBox[{"[", "5", "]"}], "]"}], " ", "//", " ", 
   RowBox[{
    RowBox[{"normaliseDiscrete", "[", 
     RowBox[{"#", ",", " ", "grid"}], "]"}], " ", "&"}]}]}]], "Input",
 CellChangeTimes->{{3.7077730018811584`*^9, 3.707773038945383*^9}, {
  3.7077730990185556`*^9, 3.7077731005379424`*^9}, {3.70777313185032*^9, 
  3.7077731339203124`*^9}},ExpressionUUID->"07019c2c-7429-406e-8539-\
f169ae75f482"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.577004562963176`*^-6"}], ",", 
   RowBox[{"-", "0.0009827625772447454`"}], ",", 
   RowBox[{"-", "0.0021781031521858995`"}], ",", 
   RowBox[{"-", "0.003685824944741858`"}], ",", 
   RowBox[{"-", "0.0056789978876120185`"}], ",", 
   RowBox[{"-", "0.008366305786549476`"}], ",", 
   RowBox[{"-", "0.011999094715538052`"}], ",", 
   RowBox[{"-", "0.01687972944815006`"}], ",", 
   RowBox[{"-", "0.023367104421175115`"}], ",", 
   RowBox[{"-", "0.03187787512721314`"}], ",", 
   RowBox[{"-", "0.04288175929901942`"}], ",", 
   RowBox[{"-", "0.05688897398917037`"}], ",", 
   RowBox[{"-", "0.0744277901792495`"}], ",", 
   RowBox[{"-", "0.09601039571365139`"}], ",", 
   RowBox[{"-", "0.1220858465126369`"}], ",", 
   RowBox[{"-", "0.1529799270168594`"}], ",", 
   RowBox[{"-", "0.1888232692600464`"}], ",", 
   RowBox[{"-", "0.22947107062126687`"}], ",", 
   RowBox[{"-", "0.27442009373562826`"}], ",", 
   RowBox[{"-", "0.3227311174465581`"}], ",", 
   RowBox[{"-", "0.3729673178036537`"}], ",", 
   RowBox[{"-", "0.42316078203101554`"}], ",", 
   RowBox[{"-", "0.47082002681396656`"}], ",", 
   RowBox[{"-", "0.5129905369214365`"}], ",", 
   RowBox[{"-", "0.5463775747836359`"}], ",", 
   RowBox[{"-", "0.5675356260938352`"}], ",", 
   RowBox[{"-", "0.5731219009072557`"}], ",", 
   RowBox[{"-", "0.5602027097149044`"}], ",", 
   RowBox[{"-", "0.526592066979801`"}], ",", 
   RowBox[{"-", "0.4711926879031541`"}], ",", 
   RowBox[{"-", "0.3943020518931981`"}], ",", 
   RowBox[{"-", "0.29784192296190437`"}], ",", 
   RowBox[{"-", "0.18547003003487464`"}], ",", 
   RowBox[{"-", "0.06253851558829614`"}], ",", "0.06412439068676463`", ",", 
   "0.18661572177028282`", ",", "0.296527091453693`", ",", 
   "0.3856439390682573`", ",", "0.44671498955818595`", ",", 
   "0.47421516380623124`", ",", "0.4650158462900105`", ",", 
   "0.41887720373737`", ",", "0.33868932800280627`", ",", 
   "0.23041196995519703`", ",", "0.10269447637197532`", ",", 
   RowBox[{"-", "0.03380536177759225`"}], ",", 
   RowBox[{"-", "0.1673472115861953`"}], ",", 
   RowBox[{"-", "0.2861895367327726`"}], ",", 
   RowBox[{"-", "0.37971360941158744`"}], ",", 
   RowBox[{"-", "0.4394672860549469`"}], ",", 
   RowBox[{"-", "0.4600108123148438`"}], ",", 
   RowBox[{"-", "0.43946728605494645`"}], ",", 
   RowBox[{"-", "0.3797136094115862`"}], ",", 
   RowBox[{"-", "0.28618953673277076`"}], ",", 
   RowBox[{"-", "0.1673472115861936`"}], ",", 
   RowBox[{"-", "0.03380536177759051`"}], ",", "0.10269447637197708`", ",", 
   "0.2304119699551977`", ",", "0.3386893280028065`", ",", 
   "0.4188772037373691`", ",", "0.46501584629000936`", ",", 
   "0.47421516380622925`", ",", "0.44671498955818467`", ",", 
   "0.3856439390682554`", ",", "0.2965270914536911`", ",", 
   "0.18661572177028096`", ",", "0.06412439068676327`", ",", 
   RowBox[{"-", "0.06253851558829714`"}], ",", 
   RowBox[{"-", "0.1854700300348749`"}], ",", 
   RowBox[{"-", "0.29784192296190426`"}], ",", 
   RowBox[{"-", "0.39430205189319695`"}], ",", 
   RowBox[{"-", "0.471192687903152`"}], ",", 
   RowBox[{"-", "0.5265920669797989`"}], ",", 
   RowBox[{"-", "0.5602027097149023`"}], ",", 
   RowBox[{"-", "0.5731219009072519`"}], ",", 
   RowBox[{"-", "0.5675356260938316`"}], ",", 
   RowBox[{"-", "0.5463775747836315`"}], ",", 
   RowBox[{"-", "0.5129905369214321`"}], ",", 
   RowBox[{"-", "0.4708200268139623`"}], ",", 
   RowBox[{"-", "0.4231607820310119`"}], ",", 
   RowBox[{"-", "0.37296731780365006`"}], ",", 
   RowBox[{"-", "0.3227311174465553`"}], ",", 
   RowBox[{"-", "0.27442009373562554`"}], ",", 
   RowBox[{"-", "0.22947107062126454`"}], ",", 
   RowBox[{"-", "0.18882326926004428`"}], ",", 
   RowBox[{"-", "0.15297992701685764`"}], ",", 
   RowBox[{"-", "0.12208584651263539`"}], ",", 
   RowBox[{"-", "0.09601039571365036`"}], ",", 
   RowBox[{"-", "0.07442779017924839`"}], ",", 
   RowBox[{"-", "0.056888973989169506`"}], ",", 
   RowBox[{"-", "0.0428817592990187`"}], ",", 
   RowBox[{"-", "0.03187787512721274`"}], ",", 
   RowBox[{"-", "0.023367104421174532`"}], ",", 
   RowBox[{"-", "0.01687972944814955`"}], ",", 
   RowBox[{"-", "0.011999094715537985`"}], ",", 
   RowBox[{"-", "0.008366305786549264`"}], ",", 
   RowBox[{"-", "0.005678997887612032`"}], ",", 
   RowBox[{"-", "0.003685824944742031`"}], ",", 
   RowBox[{"-", "0.002178103152185992`"}], ",", 
   RowBox[{"-", "0.0009827625772449347`"}], ",", 
   RowBox[{"-", "5.577004562911754`*^-6"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.707772986273102*^9, 3.7077730392011833`*^9}, 
   3.707773101185877*^9, 3.7077731350893717`*^9, 3.7077738758108025`*^9, 
   3.707774421521659*^9},ExpressionUUID->"f00c09a5-eb57-4056-9e9f-\
9b7e084ef14c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"daeq", " ", "=", " ", 
   RowBox[{"solveDiscreteEvolution", "[", 
    RowBox[{
    "testfunc", ",", " ", "potential", ",", " ", "grid", ",", " ", "2"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7077728731198406`*^9, 3.7077728786349716`*^9}, {
   3.7077729793222637`*^9, 3.7077729820418167`*^9}, {3.7077730429050064`*^9, 
   3.707773044600885*^9}, 
   3.7077735839412084`*^9},ExpressionUUID->"7262b83f-25b6-4e03-96be-\
a8a4bd0d420c"],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","eerr",
   "\"Warning: scaled local spatial error estimate of \
\\!\\(\\*RowBox[{\\\"14.258828578520507`\\\"}]\\) at \\!\\(\\*RowBox[{\\\"t\\\
\"}]\\) = \\!\\(\\*RowBox[{\\\"2.`\\\"}]\\) in the direction of independent \
variable \\!\\(\\*RowBox[{\\\"x\\\"}]\\) is much greater than the prescribed \
error tolerance. Grid spacing with \\!\\(\\*RowBox[{\\\"485\\\"}]\\) points \
may be too large to achieve the desired accuracy or precision. A singularity \
may have formed or a smaller grid spacing can be specified using the \
MaxStepSize or MinPoints method options.\"",2,97,14,32567941538784336031,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7077746571890182`*^9},ExpressionUUID->"e9b9b894-6a09-4414-b755-\
b30d76af60a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["daeq"], "Input",
 CellChangeTimes->{{3.7077732037037344`*^9, 
  3.7077732047028446`*^9}},ExpressionUUID->"c799a857-f12e-42f2-b2c3-\
627b9b8c3c32"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{-5., 5.}, {0., 2.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7077732049897156`*^9, 3.7077732766897035`*^9, 
  3.7077736043857093`*^9, 3.7077738777392273`*^9, 
  3.7077744234597816`*^9},ExpressionUUID->"6cd722a5-1989-4cfd-b2ed-\
705d88ff9ceb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"plotContinuous\[Psi]DEP", "[", " ", 
    RowBox[{
     RowBox[{"daeq", "[", 
      RowBox[{"x", ",", " ", "t"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", "2"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7077728931867557`*^9, 3.7077729323629785`*^9}, {
   3.707773078896617*^9, 3.7077730806965103`*^9}, 3.707773643180453*^9, {
   3.707774442629972*^9, 
   3.707774445725613*^9}},ExpressionUUID->"a3ec7621-5237-4e72-857b-\
9c23d5cb0db4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"daeq", "[", 
   RowBox[{"0.5", ",", " ", "0.1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707774573149082*^9, 
  3.70777458408506*^9}},ExpressionUUID->"407507f2-689c-4de8-99a8-\
2602d4e34458"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.030439069683721575`"}], "+", 
  RowBox[{"0.01469408334366676`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.7077745749603925`*^9, 
  3.7077745843504333`*^9}},ExpressionUUID->"8a81e7bc-84a1-4ab9-a76d-\
975607c5f2e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotContinuous\[Psi]DEP", "[", " ", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"daeq", "[", 
     RowBox[{"x", ",", " ", "0"}], "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.707773765049368*^9, 3.7077737663239126`*^9}, {
  3.707774466110324*^9, 3.7077744838302193`*^9}, {3.707774599966031*^9, 
  3.707774603637722*^9}},ExpressionUUID->"a2bea331-e963-46f5-987d-\
57326500d564"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.707773766586093*^9, 3.7077738839694595`*^9, 3.7077744236257734`*^9, {
   3.7077744665845394`*^9, 3.7077744949091454`*^9}, 3.707774560900632*^9, 
   3.70777463534669*^9},ExpressionUUID->"4bc4bff2-1cfa-4bbc-a1b8-\
3122ad0aa9b5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"plotContinuous\[Psi]DEP", ",", " ", "HoldFirst"}], "]"}]], "Input",
 CellChangeTimes->{{3.707774518381605*^9, 
  3.707774526845505*^9}},ExpressionUUID->"10f91fbe-362f-4f4d-8b1f-\
76ad79c4789d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7077745028747683`*^9, 
  3.7077745037812586`*^9}},ExpressionUUID->"589e8081-2feb-4803-9617-\
8e6642425e98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotContinuous\[Psi]NEW", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"daeq", "[", 
     RowBox[{"#", ",", " ", "0"}], "]"}], "&"}], ",", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7077737203489604`*^9, 3.707773731691765*^9}, {
  3.707774142073102*^9, 3.707774153208911*^9}, {3.707774303095669*^9, 
  3.707774303351096*^9}},ExpressionUUID->"9e9aaf07-4bb4-43cd-b273-\
759907fb6ffe"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
FkKN3RE4/40/sgPoHp1gcbfZQc2W2EwKwt4B3QnmIb1zm6gAm68e2uULvHLJ
RVR5S6h0aLTWJE0LWLCUOn59P4+6oBPM6UNNgLP+Eynm/xt1XuVd/rR2GfwF
qryOJHWj5Q/LajVufYYjqiV6A75VqMIJ586C+n99PV2+zmbjEzSoEq7yqTUD
6eAxxtTuQTgSwsm7Iv4YJjivLjmnj8P+xdbRmYE0+PjO/LLPrVk4Fpz4gCqo
Dl75NZlcN1sE0/j3LP3/9P7bSPBV4PQ67AY/i83nSgUZHpUVWcZtkNI7cwhN
twZHXq2zPQ9pkCA8bU/ZCQrYOb21/Y+DDqGNXpLWDKKAxHTlpVdqbMhbua13
1TURMLylaYvrZUdGKhX8FiSfAvkBl2fac05kb9/Mr/Xk7X9+dFULfoNDLFPk
n7AOa4Gay9au4TU8Yp7ecZ+oIQXpA3k1PFIExDd92eieDgu8UZr1094kICrS
S/oVGSOkBL1zt7q6/+mFziyUwuJPuj1QSNTvI2L5VnFsZ4Z9SDoUFjjKQcQ6
aXhPXhL4RYrmhbklBQLWXd/Yk3qXCaRr2b8p3cNjcxb0J2vSjoPYa6JkdDIO
+5opIZ56VRMYtP4q9URzYkpPRLnbxWygMPjTicRddqzyNp2ccbAXNPIXy5vI
02GYwnXxg4YUCFBfUDkeRIPJiNVsdF2nQKAfZ9Oo1DZaTA4Z2bFyhEhN3Ywh
l0W0QC3IlWaIDDZIsx2D0zgq5SNFPHAqFf7b+xAyL/gLtetKnD1AcgNsdtS9
42geOjO0Q3dfsBmOzTrJvTpXBVE8UY7xk/Ug7IxzMLr1G5gV9Pv9j14AMs7g
dHnbPJQHyBgFH2+GFeWnNgaRS7DJyGPsot4CxR+6rF7wbELIBTq5j2cDgIpn
Nua3yg58Se+fCCJEwnWe8qVlTlpEQ0tGZmf1X1/59vZ5hysH0p5Eqchrc4Vv
JolyWXgcosyi6hGF3IBzjr3+8/045IHjWU3XiwiY3h6UE0rHI93ilBUOAyHg
4qC1vOFJQMaotYU+Re+Qcrc3OklaRMTO/nBZmXIryetuw712VyImntvx7mQ4
StqgX30uk0zAEiMzt9+MrZAEjLyDFDvw2M5HL0vJ9EPQetZdwYcJj9EYu7N2
RZwBs4yrEbancRjrkCg+7JTxv/kd+Tb+nQM7Hm53KcT0ISjoLR98ZUaLvfz0
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
ZF7sPD+dRT4JnOw96Rtba+Ark257lZkn6t9eeuM7G/Pu4wbtWxdY+MXoW2m2
TUz75QTOr+d8Fu/W+d/1fW3MyErmbL1THlOe5J6lm9zJVi9tmSWSm8X8LdRn
Vff1sEFdvXXf1B6zkP96y/TlB5jXDavQlhGrWIFKavrn7X9YuU/nDJ8RCaxr
UoVfoqEAt/Bl8GsZlSxmEh7YYNU2gpt4LKilof4zu/lj+1BImBA3w0Rn9aHh
v+/fG9zl3Jk3kqt7/Emr6/zPTHBO7ySjbBHuOsnXN+1fZjPVQruYg86juGJL
DOI9X6WxpD8CzmMkx3BHuxbnvHR+yLaqXHKpSxfjBtQc0nXQvcYslt3cO2Q9
ljvmskrbzkt+LJVfnuQvPJ4rePLg6L1j9jHBsVH5a0wkuBoZ3jIXAzYzqYwx
ldpTJbkbcuJDe/002MKl/SmDLZLch4Zpd1vEZVi61OEWzzdS3N/7fA8K7Wjj
LNcvKxC/LM1tm2g4cUNIMudA+o2ZUTnS/P3TlRt91oRwJFymK03/I8UXXV2s
HtFZwwkdLLg9dq4UX2HvpGyF02Is2GHbmnhzSb7DiN+Fu9wWME6N3+WHIRJ8
V4eWNP9vBizxVP6dtZ7j+We3vfykOWDPPihVb3YpG8s/+izSol/aly3TuFdU
Olecb+OuO+AuEM7OXMmt/HhiDH/nqd+322PuDX//FnTJ5t5I/hEPkYJbtwuY
2gMr4xtSwvx+Gf+aC6eLmK19aFeykyDffctCxdPTiljbyPiCRcv/8tJDS7Me
dz9lESn5ygd+D/A2yh/xrHA0Z9OWhpXNTuvl9Zj//GYbcZut2jBr+xmnLt7m
gj06K/My2NqFRvOtFrbz1h1JVZ/eOvz3ud2+fec66niKWYX2fhNvsHCbsy5F
EhW8oCEHpczmk+zQ07uW4Q4fefFqLiFmWW+Yn0HDwMxTd3m9qXvnJAXksGVX
O3J/b3vH6ssOjjhZ9579XLW4JKrtC7vS8cph8pW7rHxk/4q+xhqmLJk1abak
LQs3uipcZvib+d61fbf9Ww7zDjtqOr+0gyku6vumHZHDzjXXWy1V7WHGi2Ry
rG6msMxCgeIok36mM2WawecPR5naUbcIdmKImffs2e9ieo0dcpoQYXZqBFfi
9ZfVc50+sci3miMyFgpxb12PDgwRHv563/rxzNIMYe681zZ1hqqFLNNhnO/5
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
P+d7mC1rO+VS7tjOdLKT1t/8nsfy/ZLioqUHmWPU+Ha3Ege24MKuoHhPQe43
99CVtcuL2KO2wUmmpdLcjfkvzvR+8OXkux6duOCrNH+j10omkH6SE9jl6OEw
c5C3tFBkyaFEJ5ai+9NsgUM7T23ey2U36/LY2qrlrSebKnj8qvmzhcS8WMPv
3XyFNw94Bmd/Gq5cmsOOmN+2vutTw4LvNewqc9vAIpftSzeeKMS1kK1ZE9Zf
xJKXyqTkbR3+8+9y/5/W4X9evydEzHx9sZ/nd/3n1m4FN6a26MbcoiW1vN6W
cVXPRPcxjVVhzt+lYpngYLqkHy+H5Zx7lPlOuJ39Wj5i+dyfeaxh1OKZax8N
MMfddxL//mMszjc5palGiLsx9dwPOX4Rk6tutV7+Rpo792TzCdWuqxyzFyKr
WuKk+bl/V6y3mXGPM3ij533yWyH+Wg+PP1aVReyNsIDhxR0DPI6a2aPogV5O
T5d/aO+5Nl7TWVNR5aA85rjj9r1jJgE8c9UDD7+PzWVDI7pyfi7+zvas39Dh
etKPtfFGe1/SbmMT/r3ZbD89j00bryUX3djPWr1eT1rou4NdNw95M9VHiPug
64LakZHFzPHjkoT6RkF+pUZ0rX5pEVuyzzNSg9PBU1D+K6XWl8s846pc9GOq
eYqN+TK8PyJMurdRzPdaFbuTWCx6Q9WCxW81lerOa2efjI8y2Wt57IngvHmd
HoNMITb//WNXHzZl1pSl8x8Kct8diRD3Dy1iq0eMzj/ULc1dNSD/2uKtHudF
3J2Byz3S/E2Bp73mv+dyNh/8vk3ldzvv/bPMmjS34a9vA5df3TmymiccLnLa
N20TG6NRxNvlPPznTbjfyY49i1iVbLqv9lUh/s7EG9FXhv/9fkyQNb81boDn
dbVq8vrHBqxy8uNWsfE+7L6bUpWMdC4TNHTsjQtoY9JX7v80PpfHcpK+aE9V
H2DnNVeEPby2mCkovbm2LkaI27xYIOBSVxGLjhz+wuTLAO+4w9ZDcqWbWcjs
UyF90u08rUM9AxOa89gWj3lXZjrc5o1cofl2w70cdv6bwvybM2rZKt7Ye2Xt
TmyKyLWbR7WFuN/+iUwSGf56JvxRtds2FSF+ddg2G75QMcvbGWHNomt4Vzg9
Y+UumrDKieNXfTFqZz7du+oFhv/7Q+P/W/VhYID5RrCuccm72LkkzwSjz9Lc
eYo/I45HBXCG9FskDlVI81cNJoT9TjnC8ZN6Lm+tNcgrc11t/FH5AHMzfNJ5
6UQ779F7p+DJJcP/fwO8DwmsqWE2ZkrRDS7aTLZr9KyI0ULc3ZtHbRLrKBr+
/vmTl4GtEP/Ot+7DZsO/PxJm9qaNdKjleX23v6u6/yATqU6QzGy+wQREL1tu
L81hro9XRL9pbmOTU5skNCry2MP5m/luEQMs43i+peAiZdZ1zblr8XNprvh0
EU9j0ZucFwob2gPdBnhiEqv/zXCs5Tz4u1nFMr6Nd2Ne2BmJxDw2actmOW7d
RZ7S9VaDesFcVrdw58usgn42olek990iGzZNdsE0u/1CXB/VL1Hhw/88Dwz9
drbtFeTfeiXtVVlXxFrDlgp7FVXzutWC9BaL5HKm3ktbFadZxaZ4BdzQ+GPH
DH1qG1qftLO2Vc7zbz3JYzPe+O3a2yrNFVzOsXT9spNj1pM9UrhJmr/i2bX/
fGPsObVW62fvSmnn8XuqtMIe5rHNkemPRi2u4s2Mn9H3fZc9c6qcG/mopJrd
33O0r0bnGycvzeCP7jEhvtXxhamFw9+vl+87JplU3s+z8Rz6GNFqydjlRP+M
w5fZR468pu2/HJbyd9O6xy/bmEJvLWfn6zym7Rz6N8t+gNXGZNS9vf6Ik2D5
c8WJuAGe7KdAkVEbNdkMqWZL5Yo2ntvHb04uxXms8sam2zrbr/POu5vdUqrK
YVOCbavatgpxLUd52P4e/vd3epvjb3MpIX7AJLc9tr1FrNLzp1r5suGvZ2Tq
EoJeabLQ7L6w2hPt7PsoXtCvr3msWP24n2W1NNd6+YqR6RYeHIHl8unv17Xz
vu7iGPUN/3pUWvxxo/GTGqZtpXPLS2oHkzv62XrMLCHu0phYkbfDf1/fHbOj
x2itEN9XafTu0cP/+3PsZrdlTx3+5y2RyctoyWMKDeNPTs0eYN7Ru4/USm1g
7+qT48O5A7yXmte+6IcoMu5kw5UDfHee4Pgenu6EXGbaKuvtJjjAzI7pCHSc
NWYzbnWZfz0jxH3kt1FBdkQxE3gSUCzjWs1Lyb0yrSpGhZ2OGdOkIlDN/GTc
lqQ/2sycVp9f4TMkzU34UqIefXci7VHyBf7ff+jzFWR6X45Mf34h0307Mn19
hkyfTyPTr1dk2o9Cpu+/ken9ETL9+YNM90/I9Pc/Mn3+iUz7icj081Fkeh+K
TPenyPT1IDJ9Ho5M+y3I9P0cMr1nQaZ7GWT6egSZPo9Fpj1XZPq8BpneqyPT
PTwyff+ATO8nkGlPCpl+3oFM772Q6Z4MmfYOkennqcj0nhSZ7lWRaa8Fmb6/
Rqb3Rch0v4RM+9jI9Hk3Mt37INOeCDLt6SHTzyOR6T0mMt17ItPeKzJ9noNM
79mR6V4emfaikOnnR8j0fg6Z7vOQaf8ZmT7fRab7FmTaz0Cm/Thk+vkmMr3v
RKb7UWTaN0Wmz0+Q6f04Mt2nI9M+EzL9PA2Z3hMi070iMu3hI9P7FmS670Om
/SBk2s9Eps8fkOn9NTLddyPTvjMyfX6LTPcryLSPgUz7cMi0x45M7y2Q6d4M
mfZskGnPEZk+b0Cm99bIdM+NTHvDyPR5JjLdcyDTXgQy7aUhUz8Cmd6DIdM9
LDLtbSHT3iwyfV6HTPcKyLSHgEx76Mj03gGZ7r2QaU8GmfYUkalfgEzvk5Dp
PhOZ9p+Qaf8UmT6fQ6b7BGTaP0CmfW5k+vwfme6fkGlfBZn2BZGpt4JM7yeR
6X4cmfbpkGmfGZk+30am+x5k2g9Bpn4AMr0PQqb7SGTaX0Km/VFk6n0g03s+
ZLpnRqa9NGTaC0amz7OR6Z4HmfZCkGnPHpneyyDTvSAy7REh0x4nMvWJkOm9
MTLtLSDTniMy7Zkj03sQZLqHQ6a9HWTqbSDTezpkuidGpr0yZNrrRaY+DjK9
f0Wm+39k2hdEpn1tZHr/gUz3b8i0r4NM/Qdkel+GTPe1yLTfhUz7tcjU80Km
9/nItE+CTPunyLT/j0zvp5DpfhSZ9qmQqU+DTO9Pken+Hpn2/ZBp3xqZelLI
9F4cmfYykGmPE5n26JGpZ4JM7yWR6V4cmfbokGmPGZn6dMh0b4JMezvItOeL
TD0LZOohIdN7Z2Tae0CmPUlk2lNHpn4ZMt0nINM+CzLtvyL/X//g/2/q5yDT
+1xk2idApv1DZNr/RqYeIjLdNyHTvhMy7UcjUz8FmfpbyPS+Hpn2RZBpvxSZ
9vuRqZeHTPcwyLQHhEx7w8jU20CmXhMy9S+R6Z4Nmfa8kGkvHJl6OcjUW0Om
PiEy3R8h0/4SMu07I1PfBPl/+1jA1BtFpvtBZNpPQ6Z9dmTqEyFT3w6ZepDI
dO+FTHtXyLSnjUw9GWTqkSFT3xWZ7jWRaa8OmfbwkakHhUw9QWS6J0KmPSVk
2mtGpl4JMvU/kem+D5n2zZBpPx2Z+kHI1J9DpnsYZNoDQqa9YWTqbSBTTxiZ
7oORaR8RmfoLyNQfQ6Z7EGTaw0GmvV1k6mMi030cMu2DIdP+ODK9T0amfQZk
6vcg0z0BMu2pINNeKzK9j0WmfQBk6vUi0z0uMu0RItP7U2TqISDTe3dk2vtA
pveGyNQbQ6Z7G2TaG0Km96LItHeMTO+xkWmPApneGyJTjxOZ7gORaR8Nmd7z
ItM+OzK9z0emfRJket+JTP0jZLqPQaZ9IGR6f4tM+8TI9P4cmfY3kKlPj0x7
E8i0t4tMPR9kuqdBpj0hZOphItN9IjLtsyHT/jsy9ZqR6V4bmfYqkamHgUw9
OGS6T0OmfS5k2v9Gpn47Mu0zINM+LTL1b5Cp/4hM/WBkumdGpj1HZOpFIFMv
DXnKGMd7XbrYtO+CTPvWyNTPQqZ+LDL1x5H3XPor89gRm/Y4kGmPGJl6R8jU
+0SmXjSys4bSyLIp2LSng0x74sjUK0OmXi8y9d6Raf8BmfZvkamvg0x9SeTd
msKmRq7YtL+CTPvTyNS3Qqa+KzLdPyPT/iMy9SWQqT+OTPsIyLQPi0z9GWTq
LyLTvS4y7RUiUw8B2XZp5d1377BpfwqZ9veRqe+HTPe3yLQ/iEx9bGTaM0Cm
PVdkuidDpp4MMt1zItOeHXKovvux1sEBaNqLQaa9bGS670OmXhcy3fsi094h
Mt13IVMPF5nu9ZFprxSZ7vGQqZeCTPeqyLTXh0z3X8iZpuImk9WxaQ8LmXoA
yHQvikw9QmS6T0emfU5kug9Ept43Mu1hINMeMDL1hpDpPhqZ9iGR+3bHztdz
waa9HWTaG0emnhky3bsj094nMvWAkWk/Apn2c5Gpz4Os5Kn1b18cNu0hIlMP
Bpl6s8ilcRWmEsuwz3zyffQ4txea9ruQqV+ATH1EZOqDI9crZVl3dfRA034e
MvVDkKlPihxm6pQa5o+td3qs9FI57FsVWzK8dLqhaf8Smfo/yNQXRlaSMjy4
pbwLOnmNnoLKYWzaa0OmXgUy9TCRqQePnPFQ3bc6qROa9hKRqReDTD1a5A11
Cxam6mPTfhEy7bcjUx8O+Yvs7MrLtR3QtG+GTH0HZOpHItO+CDLtKyNTfx2Z
9nqQaa8cmXpoyLSHgUx7wMg/T8ho68ti014tMvW6kGkvA5l64ci094NMe+fI
tI+ALLLzR0lSAjbtqyFTXwKZ9i2QqW+JTPsyyLSvjUz7CMiK6s/cpVZi034l
MvV7kGmPBJn6wci0T4RM++zItEeBvGqsn5TnR2zaF0OmvgIy7YcgU98RmfZ1
kGlfHNmm3uRhhTU27e8iU38MmfrmyLSHhUw9AGTB4wZX/Bt+Q9OeHjL1RJCp
V4rMFjd+2jQWm/Y2kak3hEw9Y2Sf72fEpqphp4bNW92w7Rc07YsjU18RuSNh
Ft+wuQV6Pn/aisfHsa80TVh85G4ztDsbMVV8oBGa9qCRqYeHnGQyFOEahF23
p1eqWAF7c+ivUdfXN0AvaiztWhhdD0177sjUs0TWEVHKzFuGvXnWkYg9RT+g
aQ8UmXpIyNRbRna3kNOKFcOmvWNk6r0hU08e+UpEanm5LjbtQSJTDweZervI
qZ/Mjk88gk375cjUb0TObU0wfiKDTfuCyNRXQS4XG5xp/Bib9kmRqc+ETPtc
yNSHRqa9O2TqfSD/W30t42xDDTTtIyNTHw6Z9tGQqU+PTHuGyNRzQaa9LGQF
3xW7303Hpv1QZOonIdOeGTL1m5Fpvw+Z+iXItK+FrJdaNvrPNmzqayBTXxiZ
9v+Qv/SKXFpfVAVN+6XI1G9Cpr035Nne2ySiByqhaR8amfp4yIf+3g5qnYFN
e5jI1ANCTj/RLc7Vx6b9fGTqhyJLjFwdeHEvNu2hIlMPCtnqTOjo75fLoGmf
GJn6bMjUf0ceCloi4l9dCk09DWTqCSOvkzp1+qsI9tWwz4LzVUqgNaMO/Mv1
+gJNe/XI1OtEPj397dGpN4uhC2MkhvZlFkG73nvYJyldCE09HmTqkSO7ad+b
VaSP7f4xZmO4zyfoziZlA428j9DUk0Cmni5yn8T0Gy818qGHNKW6V97IgxY5
1XdzjVs2NPVbkKlfjTzmXnNPTlkW9PiPlYZGqzOhaW8dmXqTyBO6P8UUPsiA
lpV/32cq+w6a+gvI1J9FnqqTsrH8xFvoVfnbDN5+4UHTXjgy9RKRDeVWdmff
ew29zWHWrc8+L6GpX4X8xufd/s2tL6AVL9tyPls9h6Y9cGTqISJ38GLLPuk+
gaaeAjL1ZJH5Ld89P81+BE370cjUz0OetmTtghjJBGjqyyBTXxuZ9oWRU89/
cLj1NRaa9sWRqa+ITPuyyPfzLurqrLgGTT0AZOqhItMeMHLuP8X9x4MuQNNe
NjL1ApFpjxa57cpVu/arNtDUy0JWjbTNmqC5H5r2q5G3LCl57a9zGpr28JGp
B4pMe8XIBxycGzNCw6Gpr4FMfWHk/92bBo7aoaFle/oWNO23I1O/EllA4Nk/
27Q70NTzQaaeObJdvPp7u7770LS/j0z9UWS7OWbv1SYnQ1O/Apn6vcjh/ZPn
LdF8Bp2VV3puyZYUaOopIo9SLBM+LZQKvc67/FjRk1fQefOr3Nwn8KCpz4P8
v31y4LktrksCtd5CO65yu1/WlA5NvTHkUb/dmoTeYd+LPDh3wbUM6Kb2Q7d8
1mdCu9w8HDY1KRua+n7I4oaen1efxr7f6zl+n3kudOvGI2fTxP+DTjmWlvZQ
swBaS+VtsnFEITT1OZEXebccWTCEPSd70qpR1kXQ0vb7CnlKxdAtUfJdqmlf
oKkvh1zbtOb1mFlfoUuXuZ2uD8DOLPow4fqmEugb4h4aY3+UQlPPETnc7Naf
BgPs83fz3mc8wKY+CzL1qZE99WZt8/HEpp4TMvXske2rveqX6JZDb/Yp8GgW
q4Cmvhvy2pxBTpYrNkd2rmhsMTb1WJCpR42s/PRohNkNbOoZIVPPHZn6C8iy
xkVzpfZgU28EmXrLyNQDQBb0kCm3m4xNPV/k5HUsW9wYm3olyDbT9zx/6o9N
fSVk6ssjU58COf3D6xDhLmzq1SG7RdcfTVLCpt4IsoKbhLOJNTb1fJCpZ45M
vQrkU/J2q+Pysan3iazedkHNcGQtNPVgkOsyXkzvWoFNPSjk0Ks14lFu2Hr7
xAZW3cOmPhtyl67Gz+Yq7LhJVkWXJ36Hpj4RMvXZkYXfJj/4fgqb+sLIT8PK
rwWmYts5iZxd0o79XtrM9pRlHTT1AZE9Gk4ZK4dhz3lzf2VhLra/wwjZWct/
QFMvFFlzhfLI3P3Y9eO3drjFY695eTcvXboeWlTc+IRNKzb1z5ETdO3+jVHE
3ujlefTJDuzw+ptewu+x57xtPxB/rQF6tcdlm6a1TdDUq0ZuSLpTfekY9vnv
ryxXPMUuMq4zOz+9GdpOWWOLag829WGRR9kYfPqijJ10xcLouDV210j/9QV5
2Keqv6xyi/0FTb17ZK3L/PBjxdhtqxMaz4m2QlsmHg2OdcamviqyjOXu2ofR
2HkSmzRef8TW8lAsK1ryG5r60Mjt88ap1thj3y3r9f0VgU19QGSroJrC/mzs
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
Hptzuq8P22n1+RU+Q9hHf27o+Pfv//w/4HKpMA==
      "], {{{
         EdgeForm[], 
         GrayLevel[0.5], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
58IVDPt/W0kM7Q==
            "]]}]}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           GrayLevel[0], 
           LineBox[CompressedData["
1:eJwl2Afcl2P7x/G7vTS0VNqLdmmKqEhL0d57am/RHpSR9l7SQJMQDVFo2aWd
ttBCQrvnffz/r9dzPNf38zmOy33fv991nedJvo59G/ZJlJCQ0DJZQkJcdyRJ
SBiaOCEhMx5E7EmakDCcq4J36A/ChfGDOL+5q3gF7qz3oHyEO+C+E/LUmJPf
lVvJzfSSuO8juaz5/1zf5Zab+cnMy/g/frJcLX6m3kzcACfBd801UJ/gHrir
vv8l7JRfEAbr7cSD9R/gCnBdcBF8VD6oX0StxK31m3Pl9K/JK+UVetfwFP3q
3GPcLNwQJ8Xxwxqa2Yh74m7x99C7/N+L8hC9XXiI/oNcQa4rLoqPyYf0i6ry
3HX9Vdzb+DqeauYJ7nFuNm6Ek+FEuJEZmLAbD8PP4934ebIIV4jrhovhn+XD
+sVUBe6G/mruHXwDTzPzJFeVm4Mb4+Q4MW5sxteTsAcPx0Pj+8dDzRTlCnPd
cXF8XD6iX1xV5G7qr+HexTfxdDM1uGrcXNwEp8BJcBMzybmv8Qj8Av4av2Cm
GPcA9xwugU/IR/VLqErcLf213Ep8C88w8xRXnZuHm+KUOCluaiYF9w0eiV/E
3+AXzRSPZ5PrgUvik/Ix/ZLqYe62/jpuFb6N56tm5lLxyfhmfEruWzwKD8Pf
4p6qlLlT3M9cKVWZu2PuPW41voMXqObmUvPJ+eZ8Ku47PBoPx9/hXqq0udPc
ca60eoS7a+59bg2+ixeq1Op7fgw/gv8e91aPqniA1vNr4yVXi1zSqB/Mj+VH
cj/gPqpKjJj/gF/HJ1KLuXvUj+bH8aO4H3FfVcbsGe4EV0Y9Fq8K9yH3Hk6s
3uRacGncn4JvwaXl9uLxeDTei4eZKcEV4frhh/BZ+aT+SXma3kPyKrmN3EIv
qYd2Q7w75pPwH3HZuPfN7ccT4jnESfBMXBOXwE+Yu4nX4AZ4SayD+J5YO3BK
/fN4Aa6DW7p/E+6FK+Hu+ve4bsXp3LvP9SVuTDzP5kbgffxwuaRcVK8/Lot/
kU+ZK6tW47b6Lbmq8VXhDfL6eO/VW1wrLq2ZVHwrLj33E34Zj431Ew9Q1VQy
sx/zH8T7rJZyGdR+8xP4cfG54IGqnNlz3GmunKrOJec+4T6M91TNwrXc+yS3
TL81TodT49b6m3Fv/By+V/+APFEeH++b3kh8gB8hl4rv1mdWTP8f/DYepFde
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
f2N9yP3/A3MKm3c=
            "]]}}, Annotation[#, "Charting`Private`Tag$6173#1"]& ]}}, 
      VertexColors -> {
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]], 
        Blend[
        "Rainbow", Rational[1, 2] + 
         Rational[1, 2] Pi^(-1) Arg[$CellContext`daeq[#, 0]& ]]}], {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], 
       FormBox[
        SuperscriptBox[
         TemplateBox[{"\[Psi]"}, "Abs"], "2"], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotRange -> {All, All},
      PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"arg[\[Psi]] / 2\[Pi]\"", {FontFamily -> "Arial"}, 
                Background -> Automatic, StripOnInput -> False]}, {
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
/wEdeLt3
                  "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -56.25}, 
                    Offset[{2.5, 0.}, {7.5, -56.25}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 
                    11.250000000000014`}, 
                    Offset[{2.5, 0.}, {7.5, 11.250000000000014`}]}, {{7.5, 
                    33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 56.25}, 
                    Offset[{2.5, 0.}, {7.5, 56.25}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{"\"Rainbow\"", ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"arg[\[Psi]] / 2\[Pi]\""}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.707773687662118*^9, 3.7077737094451194`*^9}, {
   3.7077737548962483`*^9, 3.7077737631528254`*^9}, 3.707773886629808*^9, 
   3.70777430513837*^9, 
   3.707774424224826*^9},ExpressionUUID->"735149e7-ae41-4058-9785-\
8cb1053eaab1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"daeq", "[", 
       RowBox[{"x", ",", "  ", "t"}], "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "2"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.707773330235434*^9, 3.7077733640635386`*^9}, {
  3.7077733956378765`*^9, 3.707773461559854*^9}, {3.7077736138777714`*^9, 
  3.7077736289414935`*^9}, {3.707774115682275*^9, 
  3.7077741388563795`*^9}},ExpressionUUID->"b6770f53-3b49-47b4-bc3d-\
22ae50d05cfd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 2}}, Typeset`size$$ = {432., {136., 141.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$6341$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$6341$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Abs[
         $CellContext`daeq[$CellContext`x, $CellContext`t$$]], \
{$CellContext`x, -5, 5}], "Specifications" :> {{$CellContext`t$$, 0, 2}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{489., {188., 195.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.707773615753361*^9, 3.7077736294676027`*^9}, 
   3.707773795323018*^9, 
   3.7077744243911605`*^9},ExpressionUUID->"d4b11a13-5bae-4eb7-9854-\
543d95d13167"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotDiscrete\[Psi]", "[", 
  RowBox[{
   RowBox[{"eigfuncs", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ",", " ", "grid"}], "]"}]], "Input",
 CellChangeTimes->{{3.7077722674125905`*^9, 
  3.7077723049770737`*^9}},ExpressionUUID->"1773323c-e929-4aa2-b683-\
0d33dfeaf077"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJyFl31MlWUYxg8fhy/BA4ePPmyDY/3RB6DzY7NlPA80gjXWAldC68BCbdAn
bpFmw8TUuVos15ii9IEUKcZkWS40eR+gFAQNBmXqLIpgODApDnQQOGuc+777
76r7n7Pf3vNcz/s+7/Pc1/W6il/J2xRos9lSAmy2hV+qONO2PXTy6TvaHj5Y
s1CxJtbbNJC8qjltpb9izQZ7+eaZ4f60Cz0L5TQvn9qaXFUxnvacv5xmtuFI
5ZFRmyI9p1kftGX5YwVORXoxZtfpC54lvyxVpBdjVnuyTujPVyjSizbtrviN
z/yerkgv2uweGcpWDU+wXrSxF43FNyUV8niHaUjyRLneep7/v9gcanYlVje/
xvNFGXdfe8VvgzuVX74n0niOhUVV7KlivUiT60teMza9n/UWmfK6W09mph9m
vQizMaO8+8pUI+uFm5T8W3uzsk6wXphxlLatvnH0FOuFmRuTLlfqxTbWCzXO
R9dVHBw7y3oh5uaVl3JOF/Uov1yN3ZyfSog5eKmX9YLNsz5Pwm1L+lkv2Gxv
jXvxoQ8GWC/IrC3Mr6+z/8B6geb1XTP3tsYPsF6A8eWk3J9p9bGezYTkGdfa
F3pYz2ZGvEP574908HifNZ696ejxr07y/+es7x9Jf6qjtk6t8M83a320Y923
kfYydcCvP2ONX3X0Nl0qYz2v9clc3ub6gTrWm7YK3FsKtu4UPY/1YVedygnv
YL1Ja+rdjE99b3ex3p/W1Zt3FfzcKfc3YdV+M7KhtalbdfrHj1vNffa80vKz
/P/rVllxQmqj+4wq8c83Yo33bhvbl3pMLffrD1nnEudDHqzZzXqD1rLKO/sz
WvLUe/7xl63GpcUt7qZa/n+/NT9/X2Pz31+qHf7rXVbyXPFP+15tZ26x6n/d
U7L3605ZP9sD2cPDYQndytB1Vc3XP6bxKoLHa9JXX7A+Xb+sgnl+vj/lfJPu
bw3dvzqQRPfPz6du76Pno/HX1Rv8/L20Pqqa14fXT5Xz+tXS+qr9vL6raP1V
D68/jfeoUn4/NN+0CuP3x+9XaX6/pDej7ub3T3qzalkl7Q/Sm1PXeP+Qnk+N
8v7i5dPf8f67SPtTt+bS/qTzFaB/5P1L4wP147y/ab4g/Yeb9j+fD72Szwfp
BesIPj+kZ9fb+HyRXogu5PNHeqH6cCadTz6/+h0+v3y+dVUJnW96/nDdtp7O
P+lF6PPp1B9Ib5EO5P7B/UWfnKf+wv1HJ3L/Ib0oPdZL/Yn0Futrx6l/kZ5D
dyRSf+P+p0fd1P+4P2oH90d6/mh9Lon6J42P0d6/qL9y/9XZ3H+5P+vcQOrP
NL9TOz+j/k16Tl10hvo76cXqtFDq/+wPesJH/sD+oR33hPj9Q/xEzo34CWLx
F8TiN4jFfxDz80IWf0IsfoVY/Aux+BliKszid4jF/xCLHyIWf0RMhVn8E7H4
KWLxV8Tit4ipMIsfIxZ/Rix+jVj8GzEVZvF3xOL3iMX/EUseQMwFWfICYskP
iCVPIJZ8gZjKC1nyB2LJI4glnyCWvIKYagKy5BnEkm8QS95BLPkHMdUgZMlH
iCUvIZb89N/cAvn/SvIWYslfiCWPIZZ8hphqELLkN8SS5xBLvkMseQ8x1QRk
yYOIJR8ilryIWPIjYiovZMmXiCVvIpb8iVjyKGIujVjyKmLJr4glzyKWfIuY
Khiy5F/EkocRSz5GLHkZMVUYZMnTiCVfI5a8jVjyN2KqSMiSzxFLXkcs+R2x
5HnEVNGQJe8jlvyPWL4HEMv3AWIqJ2T5fkAs3xOI5fsCsXxvIKaK+5f/AUGu
YXc=
    "], {{{
       {GrayLevel[0.5], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwt1GNwJUEYheGZ2LZvnE2ytm1m7d2slaxt27Zt27Zt2/bb1d+Pp+rUN32m
p6fuXEtqekqalWEYTWEDE83RAmpuh/boAHvYIg3pck2taYlWsBat0Ubupzod
0QkOcERXdIOT6I4ecIY/JmISAqTTGV2kq+7ZFu3kWVSnJ3rBRfRGH7jCDf0x
AO5iIAbBQwzGEHjCC8MxAt7wwWiMga/MRmKUXFN79EU/2UutGYtx8BPjMUHO
ps40GVMQKHsOxTDZW82mYhqCkAHbsQOJCMN8LEA4gjETsxAiZmMOQsVczJOu
6izEIkQgCiuxCtEyW4wlsIilWIZIsRwrpKs6q7EGMYjFemxAHJqoM/CjSjT1
b0ydYSd2IQnx2IwtSBBbsU3Ortbsxh4ki73Yh4zIjMM4giyy50ZsknurNftx
AJnEQRySrnrH0zFD3qW6x1EcQ1ZxHCeQTZzEKWRHblzGFeRBDpzFOeQU53EB
ucRFXJKu6lzFNeRFAdzFPRSU2XXcQD5xE7eQX9zGHemqzn08QCHxEI9QWDzG
ExRBUTzHCxQTL/EKxcVrvEEJ6TzFM+mq2Vu8Q0mUwkd8QmnxGV9QRnzFN5SV
znt8kK6afccPlJN3fBpn5N2q2U/8QnlUwF/8Q0VUgR2/NXukyEz9qZmoZGhW
ZGtUNvQaB7IjqhqaE9kZ1cg14EH2RE3Z8zf+yN5qjQvXXFHd0NzI7qbuqj1s
yLamfjb1jazFOkN/K+qeXlzzRi1ybfiR/VGHXBdB5GDUM7QQcijqG1oYORwN
DN0JIAeauqtmEWQLGpIbIZocg8aGFkuOQ6qhxZMTTP3tqk4kOcrUXfWMPmRf
Uz+r+qaTyMloRv4PRviZjw==
           "]]}]}}}, {{}, {}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.01388888888888889], AbsoluteThickness[1.6], 
        {GrayLevel[0], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 
          101}]}}}}},
    VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQZWRgYAbSr87YqtTkv7ZfNFP9usiJA/bHUwr/T3x5wH5U
fFR8VBxT/M5uttqXuQ/sHT3EDBqjn9uHPK12UzK5M+LEB1u8jKaH0fQwKj4q
Pio+Kj4qPio+Kj4qPhLEB1s7cFR8tB0+Kj54xAdb+hwVHy0fRsVHxUfFR8VH
xYeuOAB0dwcw
     "]], {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox[
     SuperscriptBox[
      TemplateBox[{
        RowBox[{"\[Phi]", "(", "x", ")"}]}, "Abs"], "2"], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 5.}, {0, 0.3284687132995463}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.707772286130124*^9, 3.7077723054099684`*^9}, 
   3.7077744246023026`*^9},ExpressionUUID->"d819c694-e470-4f40-ad27-\
3cac957c1cd9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Magnification:>1.2 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 252, 4, 201, "Title", "ExpressionUUID" -> \
"82d16c13-a4eb-4dff-88b1-256f342d7961"],
Cell[CellGroupData[{
Cell[857, 30, 149, 3, 85, "Section", "ExpressionUUID" -> \
"77808365-ac56-4e41-b3a4-9d2faff72675"],
Cell[1009, 35, 244, 6, 58, "Text", "ExpressionUUID" -> \
"7fd90cdf-b232-46cf-96ee-4b07d16bfe7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1290, 46, 163, 3, 85, "Section", "ExpressionUUID" -> \
"84fa818c-6a8a-4d1c-be9c-f9313f98a286"],
Cell[1456, 51, 177, 4, 61, "Code", "ExpressionUUID" -> \
"7d33919b-3482-4426-ba8e-615f4ccc7d13"],
Cell[1636, 57, 752, 17, 128, "Code", "ExpressionUUID" -> \
"3b9864b8-9385-42c2-a2a9-10c61c6f1a20"],
Cell[2391, 76, 2949, 68, 470, "Code", "ExpressionUUID" -> \
"5a1afa65-fae2-4695-94eb-d351bcd050ed"],
Cell[5343, 146, 2597, 62, 339, "Code", "ExpressionUUID" -> \
"32bf0459-0d20-40ec-8787-9baedb45c4a6"],
Cell[7943, 210, 4746, 117, 665, "Code", "ExpressionUUID" -> \
"97d3a635-4009-4785-b9d2-854a53bb30b9"],
Cell[12692, 329, 2966, 68, 546, "Code", "ExpressionUUID" -> \
"692459af-107a-4740-9740-70a46aeae1cb"],
Cell[15661, 399, 3124, 74, 419, "Code", "ExpressionUUID" -> \
"2752d239-f0c8-4662-8af7-2e731b925971"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18822, 478, 247, 4, 85, "Section", "ExpressionUUID" -> \
"8135c2d1-014e-4cbc-bbe8-11e8350b6fbd"],
Cell[19072, 484, 7057, 168, 745, "Code", "ExpressionUUID" -> \
"64722c90-46a9-4d8e-8fdb-45c3bda6434b"],
Cell[26132, 654, 156, 3, 37, "Input", "ExpressionUUID" -> \
"c335a339-e76d-49bf-81e4-b12d1464b404"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26325, 662, 272, 4, 85, "Section", "ExpressionUUID" -> \
"44a491ca-d668-4cc9-a7dd-b131f90ad04f"],
Cell[26600, 668, 467, 14, 45, "Text", "ExpressionUUID" -> \
"ad3733f1-cd27-4603-8357-ad3da8c8893f"],
Cell[CellGroupData[{
Cell[27092, 686, 2780, 44, 66, "Code", "ExpressionUUID" -> \
"455e9eca-7dfe-40cf-84c4-7fd30829121a"],
Cell[29875, 732, 39190, 687, 427, "Output", "ExpressionUUID" -> \
"d7997559-9702-48f9-9acd-fa6ba5ce6afe"]
}, Open  ]],
Cell[69080, 1422, 384, 12, 35, "Text", "ExpressionUUID" -> \
"9e281638-30d2-4a2c-ab59-e17ed4078937"],
Cell[69467, 1436, 167, 3, 35, "Text", "ExpressionUUID" -> \
"8b1b6e70-2262-435c-a8ab-6bd719da2839"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69671, 1444, 237, 4, 85, "Section", "ExpressionUUID" -> \
"9e01e211-cf8c-4559-af49-433cd7ad09d6"],
Cell[69911, 1450, 226, 5, 35, "Text", "ExpressionUUID" -> \
"4a714243-0ab0-4b78-a32f-a698ca5714a5"],
Cell[CellGroupData[{
Cell[70162, 1459, 1054, 20, 194, "Code", "ExpressionUUID" -> \
"6d758bb6-b14c-4c1f-875d-d7d3228c4e80"],
Cell[71219, 1481, 34164, 618, 407, "Output", "ExpressionUUID" -> \
"8ce7f97e-a0f8-459c-b4d6-9016efc668a7"]
}, Open  ]],
Cell[105398, 2102, 658, 20, 62, "Input", "ExpressionUUID" -> \
"debfb850-e1a0-4f5d-b737-2e927de75d20"],
Cell[CellGroupData[{
Cell[106081, 2126, 163, 3, 37, "Input", "ExpressionUUID" -> \
"ae9012af-b77c-4133-acd0-ab1be3ced72a"],
Cell[106247, 2131, 281, 5, 37, "Output", "ExpressionUUID" -> \
"4e30d6f1-a633-4d40-9557-b834c96776c4"]
}, Open  ]],
Cell[106543, 2139, 259, 6, 35, "Text", "ExpressionUUID" -> \
"1b32fb37-a580-413a-8f8b-6bd34b505f00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106839, 2150, 264, 4, 85, "Section", "ExpressionUUID" -> \
"4e17d6ab-b9fb-44f5-b687-e232b4f3069f"],
Cell[CellGroupData[{
Cell[107128, 2158, 1014, 27, 194, "Code", "ExpressionUUID" -> \
"de7f7cea-f073-4791-8279-8150365f1619"],
Cell[108145, 2187, 129768, 2186, 409, "Output", "ExpressionUUID" -> \
"410c194f-9031-4217-91ba-836aac448334"]
}, Open  ]],
Cell[237928, 4376, 851, 18, 104, "Text", "ExpressionUUID" -> \
"5f164725-f67f-47cc-b5f8-a00111ecfab3"],
Cell[CellGroupData[{
Cell[238804, 4398, 633, 18, 66, "Code", "ExpressionUUID" -> \
"f71c7e62-78c3-4b85-a0ad-b3829c3f1495"],
Cell[239440, 4418, 140678, 2285, 427, "Output", "ExpressionUUID" -> \
"09cd4efc-101d-47c6-8281-cb192eb04f4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380155, 6708, 1466, 42, 201, "Code", "ExpressionUUID" -> \
"d92a4886-5736-481b-b691-27fb85be3cc1"],
Cell[381624, 6752, 155064, 2526, 409, "Output", "ExpressionUUID" -> \
"e883d720-6aba-43b8-9acc-89d0291fa481"]
}, Open  ]],
Cell[536703, 9281, 299, 7, 35, "Text", "ExpressionUUID" -> \
"1a8ee658-3f8f-40f5-b995-97a25a13bc71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537039, 9293, 163, 3, 85, "Section", "ExpressionUUID" -> \
"8aa0a0d4-6a0c-4926-8145-f356b8db5238"],
Cell[537205, 9298, 274, 6, 35, "Text", "ExpressionUUID" -> \
"39c285aa-e9d8-4f9d-9eec-943d61ef708a"],
Cell[537482, 9306, 12940, 295, 1657, "Code", "ExpressionUUID" -> \
"b8a9d512-be86-4be1-b81d-5867eff2bd7b"],
Cell[550425, 9603, 3078, 74, 419, "Code", "ExpressionUUID" -> \
"969b1a4d-a0e9-4dbe-9e98-a5830560f3e7"],
Cell[CellGroupData[{
Cell[553528, 9681, 846, 18, 53, "Input", "ExpressionUUID" -> \
"4217e3ee-b177-4326-b1c6-4ba49502c4a7"],
Cell[554377, 9701, 61139, 1011, 251, "Output", "ExpressionUUID" -> \
"c59b211c-040a-4ba2-baa9-1ab6ef422a80"]
}, Open  ]],
Cell[615531, 10715, 1789, 49, 320, "Input", "ExpressionUUID" -> \
"151a7c16-0f45-4239-9058-b49cf80f09ec"],
Cell[617323, 10766, 638, 18, 62, "Input", "ExpressionUUID" -> \
"c83fd7a0-eda6-4908-a7f5-7b12956066c7"],
Cell[CellGroupData[{
Cell[617986, 10788, 1650, 37, 172, "Code", "ExpressionUUID" -> \
"9b4996b7-b609-4d19-ad78-86ec1a170897"],
Cell[CellGroupData[{
Cell[619661, 10829, 9946, 202, 73, "Echo", "ExpressionUUID" -> \
"6a7a272a-1c11-456a-b184-3ef50d74bb70"],
Cell[629610, 11033, 147, 3, 29, "Echo", "ExpressionUUID" -> \
"9b3c6d0a-324c-40a5-8a93-3d9db550af4a"],
Cell[629760, 11038, 9948, 202, 73, "Echo", "ExpressionUUID" -> \
"059dbcf9-27a3-44cf-9f0b-077280cb9c48"],
Cell[639711, 11242, 149, 3, 29, "Echo", "ExpressionUUID" -> \
"aa4b888e-62da-4586-837e-d22beaa39dbe"],
Cell[639863, 11247, 9948, 202, 73, "Echo", "ExpressionUUID" -> \
"89ebfe8a-33a8-4949-a3a2-7ed55dc67af7"],
Cell[649814, 11451, 149, 3, 29, "Echo", "ExpressionUUID" -> \
"259ed89d-0511-4cce-9521-bd6c0a6500b4"],
Cell[649966, 11456, 9946, 202, 73, "Echo", "ExpressionUUID" -> \
"7893a13d-fd94-4cdd-b103-b9e51e34dfd2"],
Cell[659915, 11660, 149, 3, 29, "Echo", "ExpressionUUID" -> \
"7759a8fc-65dd-4420-b735-0f5e9ef409b2"],
Cell[660067, 11665, 9946, 202, 73, "Echo", "ExpressionUUID" -> \
"78132526-be0a-41e4-8668-ee9a8db456b7"],
Cell[670016, 11869, 145, 3, 29, "Echo", "ExpressionUUID" -> \
"4366f162-787c-401d-a8c4-4ed05f932140"]
}, Open  ]],
Cell[670176, 11875, 384, 9, 37, "Output", "ExpressionUUID" -> \
"0c3b8694-cc15-4cf9-8647-0659433e0869"]
}, Open  ]],
Cell[CellGroupData[{
Cell[670597, 11889, 493, 11, 37, "Input", "ExpressionUUID" -> \
"07019c2c-7429-406e-8539-f169ae75f482"],
Cell[671093, 11902, 4725, 95, 354, "Output", "ExpressionUUID" -> \
"f00c09a5-eb57-4056-9e9f-9b7e084ef14c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[675855, 12002, 479, 11, 37, "Input", "ExpressionUUID" -> \
"7262b83f-25b6-4e03-96be-a8a4bd0d420c"],
Cell[676337, 12015, 805, 15, 94, "Message", "ExpressionUUID" -> \
"e9b9b894-6a09-4414-b755-b30d76af60a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[677179, 12035, 160, 3, 37, "Input", "ExpressionUUID" -> \
"c799a857-f12e-42f2-b2c3-627b9b8c3c32"],
Cell[677342, 12040, 9436, 194, 81, "Output", "ExpressionUUID" -> \
"6cd722a5-1989-4cfd-b2ed-705d88ff9ceb"]
}, Open  ]],
Cell[686793, 12237, 741, 18, 110, "Input", "ExpressionUUID" -> \
"a3ec7621-5237-4e72-857b-9c23d5cb0db4"],
Cell[CellGroupData[{
Cell[687559, 12259, 233, 6, 37, "Input", "ExpressionUUID" -> \
"407507f2-689c-4de8-99a8-2602d4e34458"],
Cell[687795, 12267, 272, 6, 37, "Output", "ExpressionUUID" -> \
"8a81e7bc-84a1-4ab9-a76d-975607c5f2e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[688104, 12278, 518, 12, 37, "Input", "ExpressionUUID" -> \
"a2bea331-e963-46f5-987d-57326500d564"],
Cell[688625, 12292, 286, 5, 37, "Output", "ExpressionUUID" -> \
"4bc4bff2-1cfa-4bbc-a1b8-3122ad0aa9b5"]
}, Open  ]],
Cell[688926, 12300, 250, 5, 37, "Input", "ExpressionUUID" -> \
"10f91fbe-362f-4f4d-8b1f-76ad79c4789d"],
Cell[689179, 12307, 156, 3, 37, "Input", "ExpressionUUID" -> \
"589e8081-2feb-4803-9617-8e6642425e98"],
Cell[CellGroupData[{
Cell[689360, 12314, 490, 12, 37, "Input", "ExpressionUUID" -> \
"9e9aaf07-4bb4-43cd-b273-759907fb6ffe"],
Cell[689853, 12328, 559356, 13614, 323, "Output", "ExpressionUUID" -> \
"735149e7-ae41-4058-9785-8cb1053eaab1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1249246, 25947, 783, 19, 110, "Input", "ExpressionUUID" -> \
"b6770f53-3b49-47b4-bc3d-22ae50d05cfd"],
Cell[1250032, 25968, 1763, 37, 403, "Output", "ExpressionUUID" -> \
"d4b11a13-5bae-4eb7-9854-543d95d13167"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1251832, 26010, 293, 7, 37, "Input", "ExpressionUUID" -> \
"1773323c-e929-4aa2-b683-0d33dfeaf077"],
Cell[1252128, 26019, 5066, 104, 314, "Output", "ExpressionUUID" -> \
"d819c694-e470-4f40-ad27-3cac957c1cd9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

