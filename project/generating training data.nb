(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    609351,      12200]
NotebookOptionsPosition[    593959,      11814]
NotebookOutlinePosition[    596341,      11895]
CellTagsIndexPosition[    595993,      11879]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Generating Training Data", "Title",
 CellChangeTimes->{{3.707976890438332*^9, 3.7079769009824624`*^9}},
 CellTags->"c:1",ExpressionUUID->"ad780da8-35ea-4592-9e9a-0e1f6076a0b9"],

Cell["\<\
Tyson Jones
tyson.jones@monash.edu
July 2017\
\>", "Subtitle",
 CellChangeTimes->{{3.7078623336702824`*^9, 3.7078623531022215`*^9}, {
  3.7079935239475384`*^9, 
  3.7079935239955387`*^9}},ExpressionUUID->"dd6f3376-3a2c-4c3a-a223-\
201bd98cd2bd"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PacletDirectoryAdd", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", " ", "PlotFunctions`"}], "\n", 
 RowBox[{"<<", " ", "EigenFunctions`"}]}], "Code",
 CellChangeTimes->{{3.7080983756359644`*^9, 
  3.708098384473039*^9}},ExpressionUUID->"7bcdd017-e5dc-4f1a-a18a-\
9612a9ec1db9"],

Cell[CellGroupData[{

Cell["potential ceiling", "Section",
 CellChangeTimes->{{3.707977467041693*^9, 3.707977480904805*^9}},
 CellTags->"c:3",ExpressionUUID->"93ee5080-e146-48a2-8d93-bc50e7f30292"],

Cell[CellGroupData[{

Cell["theoretical discussion", "Subsection",
 CellChangeTimes->{{3.7080065211496*^9, 3.7080065348129225`*^9}},
 CellTags->"c:4",ExpressionUUID->"2283a501-c64e-477b-8bd3-2fe3ea025766"],

Cell["\<\
This is all rubbish. The non-dimensional Schrodinger equation has already \
scaled space and time by a parameter of the potential (natural oscillator \
units). There is a scale invariance already built-in, even on a fixed domain.\
\>", "Text",
 CellChangeTimes->{{3.7081005524264135`*^9, 3.7081006328343706`*^9}},
 Background->RGBColor[
  1, 0.85, 0.85],ExpressionUUID->"82bcc6ac-e0c4-4f57-af23-343ea76ed8cd"],

Cell["\<\
Scaling space by \[Alpha] in the Schrodinger equation, and evaluating the \
derivative by the chain rule\
\>", "Text",
 CellChangeTimes->{{3.7079825676975856`*^9, 3.7079825860821395`*^9}, {
  3.707982837375875*^9, 
  3.7079828490242786`*^9}},ExpressionUUID->"7644a81a-b72e-456b-bc5c-\
1c3ee62380f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalEpsilon]", " ", 
    RowBox[{"\[Phi]", "[", "x", "]"}]}], " ", "\[Equal]", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     RowBox[{
      RowBox[{"\[Phi]", "''"}], "[", "x", "]"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"V", "[", "x", "]"}], " ", 
     RowBox[{"\[Phi]", "[", "x", "]"}]}]}]}], " ", "/.", "   ", 
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{"x", " ", "\[Rule]", " ", 
     RowBox[{"\[Alpha]", " ", "x"}]}], ",", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "''"}], "[", "x", "]"}], "\[Rule]", " ", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["\[Alpha]", "2"]], 
      RowBox[{
       RowBox[{"\[Phi]", "''"}], "[", 
       RowBox[{"\[Alpha]", " ", "x"}], "]"}]}]}]}], " ", "}"}]}]], "Input",
 CellChangeTimes->{{3.7079820671816607`*^9, 3.7079821107256274`*^9}, {
  3.7079825876971664`*^9, 3.7079826228092213`*^9}, {3.7079828122087917`*^9, 
  3.7079828126638603`*^9}, {3.7079828543770657`*^9, 
  3.70798296255884*^9}},ExpressionUUID->"1066d416-1cfa-409f-88d3-\
8cea6e247163"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalEpsilon]", " ", 
   RowBox[{"\[Phi]", "[", 
    RowBox[{"x", " ", "\[Alpha]"}], "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", 
     RowBox[{"x", " ", "\[Alpha]"}], "]"}], " ", 
    RowBox[{"\[Phi]", "[", 
     RowBox[{"x", " ", "\[Alpha]"}], "]"}]}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", 
     RowBox[{"x", " ", "\[Alpha]"}], "]"}], 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Alpha]", "2"]}]]}]}]], "Output",
 CellChangeTimes->{
  3.707982111253724*^9, 3.707982500370097*^9, {3.707982590375786*^9, 
   3.70798262719074*^9}, 3.70798281334124*^9, {3.7079829398668523`*^9, 
   3.707982952404868*^9}, 3.707982991436565*^9, {3.707983053977993*^9, 
   3.7079831203408346`*^9}, {3.708098292432664*^9, 3.7080983102008467`*^9}, 
   3.7080984095955715`*^9},ExpressionUUID->"23604729-7e20-47d0-9467-\
9e36b269c670"]
}, Open  ]],

Cell["\<\
reveals a resulting squared coefficient in energy and potential.\
\>", "Text",
 CellChangeTimes->{{3.7079831322524147`*^9, 3.707983141796737*^9}, {
  3.707989628394532*^9, 
  3.707989631554561*^9}},ExpressionUUID->"7a17be51-83fb-4a0c-9771-\
926ce8fa74d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"%", ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", " ", "\[NotEqual]", " ", "0"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.707982475676999*^9, 3.7079825094150963`*^9}, {
  3.707982975720016*^9, 
  3.707983118494026*^9}},ExpressionUUID->"8e50eb0e-1c20-4e09-a552-\
5d36450fba3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox["\[Alpha]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"\[CapitalEpsilon]", "-", 
      RowBox[{"V", "[", 
       RowBox[{"x", " ", "\[Alpha]"}], "]"}]}], ")"}], " ", 
    RowBox[{"\[Phi]", "[", 
     RowBox[{"x", " ", "\[Alpha]"}], "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", 
    RowBox[{"x", " ", "\[Alpha]"}], "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{{3.707982482086532*^9, 3.707982510555542*^9}, 
   3.707982602555299*^9, 3.707982979398049*^9, 3.7079830189625664`*^9, {
   3.7079830552190576`*^9, 3.707983122568574*^9}, {3.708098292457175*^9, 
   3.7080983102308645`*^9}, 
   3.708098409622574*^9},ExpressionUUID->"5b3a7ece-2e1d-4a68-8801-\
0dd979726477"]
}, Open  ]],

Cell[TextData[{
 "Though this ",
 StyleBox["does",
  FontSlant->"Italic"],
 " imply a quadratic scaling in energy, it does ",
 StyleBox["not",
  FontSlant->"Italic"],
 " in potential, which depends on position in general. For a constant system \
(V = 0; a free particle of a particle in an infinite potential well) it \
implies E scales with V, but for quadratic systems implies a quadratic \
scaling.\n\nIt\[CloseCurlyQuote]s therefore not generally possible to, given \
some scaling in the potential, a priori know the resulting scalings in energy \
and position of the eigenfunctions. This adds difficulty to choosing a \
ceiling potential value when generating training machine-learning training \
data."
}], "Text",
 CellChangeTimes->{{3.7079860348541007`*^9, 3.707986074374428*^9}, {
  3.707989634978155*^9, 3.707989795457328*^9}, {3.707990876400958*^9, 
  3.7079909224485683`*^9}, {3.707991176509139*^9, 
  3.707991176718834*^9}},ExpressionUUID->"452edbc9-c8b9-4dfa-8904-\
ecf610115984"],

Cell[TextData[{
 "In one limit, say V=constant, there is no ",
 StyleBox["functional",
  FontSlant->"Italic"],
 " scaling of potential with space. Scaling potential therefore linearly \
scales the energy, and shrinks space by the root, of the eigenfunctions. \
Horizontal shrinking is ",
 StyleBox["slower",
  FontSlant->"Italic"],
 " than vertical growth. E.g. the particle in an infinite square potential \
well has an energy ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", " ", "\[Proportional]", " ", 
    RowBox[{"1", "/", 
     SuperscriptBox["L", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1afa49fa-83ad-4301-b129-56a96f957659"],
 ". Shrinking the domain should give an square increase in energy, as the \
energy formula corroborates.\n\nAny polynomial positional dependence in the \
potential (e.g. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"V", "[", "x", "]"}], "  ", "\[Proportional]", " ", 
    SuperscriptBox["x", "p"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3f6f8c2e-5a7a-4519-9b4b-0337d9289261"],
 " for some ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", " ", ">", " ", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "59255351-9715-40fc-ba90-e4d5061367a6"],
 ") will see ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Alpha]", "2"], 
     RowBox[{"V", "[", 
      RowBox[{"x", " ", "\[Alpha]"}], "]"}]}], "  ", "\[Proportional]", " ", 
    RowBox[{
     SuperscriptBox["\[Alpha]", 
      RowBox[{"2", " ", "+", " ", "p"}]], " ", 
     SuperscriptBox["x", "p"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "03ccda81-901d-4dd2-8ac3-7c2adf94113b"],
 " and mean a growth in the potential scaling accompanies a ",
 StyleBox["smaller",
  FontSlant->"Italic"],
 " (relative to a scaled constant potential) shrinking in the x axis. \
Super-polynomial functions see a smaller horizontal scale change still. \
Non-differentiable potentials can have infinite polynomial expansions, and \
see ",
 StyleBox["no",
  FontSlant->"Italic"],
 " horizontal scaling from vertical.\nHorizontal ",
 StyleBox["shrinking",
  FontSlant->"Italic"],
 " can cause great expanding of the axis, prompting truncated by the finite \
(static) numerical domain; reduction of the potential can thus drastically \
change the form of the eigenfunctions.\n\nAlso, energy eigenvalues can \
generally be greatly affected by the scaling of V; eigenfunctions can \
reshuffle haphazardly due to scaling."
}], "Text",
 CellChangeTimes->{{3.7079911861897016`*^9, 3.707991372772321*^9}, {
  3.7079926234105005`*^9, 3.7079927972341824`*^9}, {3.7079928755603733`*^9, 
  3.7079928855527925`*^9}, {3.707992953767249*^9, 3.707993050919894*^9}, {
  3.7079930954396515`*^9, 3.707993142415264*^9}, {3.7079931871985474`*^9, 
  3.7079932798693876`*^9}, {3.7079933152138996`*^9, 3.7079933271352053`*^9}, {
  3.7079933734865713`*^9, 3.7079934647005925`*^9}, {3.707995261470078*^9, 
  3.7079953779498606`*^9}},ExpressionUUID->"40a1171a-27fd-45f0-bac0-\
747e160e0bae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["empirical demonstration", "Subsection",
 CellChangeTimes->{{3.7080065211496*^9, 3.7080065483808975`*^9}},
 CellTags->"c:5",ExpressionUUID->"a58533c9-e472-45e7-8c94-d4dcbf5786ea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ShowSpectrum", "[", " ", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"1", " ", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"#", "+", "2"}], ")"}]}], "]"}]}], " ", "+", " ", 
      RowBox[{"1", " ", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"#", "-", "2"}], "]"}]}], " ", "-", " ", 
      RowBox[{"1", " ", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"#", "-", "3"}], "]"}]}]}], " ", "&"}], ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", "\n", "\t", 
    RowBox[{"PotentialTransform", " ", "\[Rule]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "/", "4"}], " ", "&"}], ")"}]}]}], "\n", "]"}], 
  "\n"}], "\n", 
 RowBox[{"ShowSpectrum", "[", " ", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"1000", " ", 
      RowBox[{"UnitStep", "[", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"#", "+", "2"}], ")"}]}], "]"}]}], " ", "+", " ", 
     RowBox[{"1000", " ", 
      RowBox[{"UnitStep", "[", 
       RowBox[{"#", "-", "2"}], "]"}]}], " ", "-", " ", 
     RowBox[{"1000", " ", 
      RowBox[{"UnitStep", "[", 
       RowBox[{"#", "-", "3"}], "]"}]}]}], " ", "&"}], ",", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", "\n", "\t", 
   RowBox[{"PotentialTransform", " ", "\[Rule]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "/", "1000"}], " ", "&"}], ")"}]}]}], "\n", "]"}]}], "Code",
 CellChangeTimes->{
  3.707582213864502*^9, {3.7075832709865055`*^9, 3.707583300441403*^9}, {
   3.7075860417769585`*^9, 3.7075860423598804`*^9}, 3.7076088728969717`*^9, {
   3.707968412148286*^9, 3.707968420082162*^9}, {3.707968545273947*^9, 
   3.707968556057125*^9}, {3.7079716126729827`*^9, 3.707971647456168*^9}, {
   3.707972458043148*^9, 3.707972458793666*^9}, {3.707993559251676*^9, 
   3.707993559691115*^9}, {3.7079943215034294`*^9, 3.707994328549327*^9}, {
   3.707995403830283*^9, 3.707995404973386*^9}, {3.7079966271233015`*^9, 
   3.707996631931028*^9}, {3.707996945515461*^9, 
   3.7079969898807707`*^9}},ExpressionUUID->"7226dafb-2151-4142-892c-\
243a561df081"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Lambda]$$ = {0.15965209338300915`, 
  0.5392755836914478, 0.7582994084706489, 1.2701704739124924`, 
  1.6828930908585291`, 2.2696714852958135`, 2.8568734224808012`, 
  3.5408706917629003`, 4.424528899069205, 
  5.381363730241899}, $CellContext`\[Phi]$$ = CompressedData["
1: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
  "], $CellContext`eigArgs$$ = {}, $CellContext`plotArgs$$ = {
  PlotFunctions`PotentialTransform -> (#/4& ), 
   PlotFunctions`Potential -> (1 UnitStep[-(# + 2)] + 1 UnitStep[# - 2] - 1 
    UnitStep[# - 3]& )}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 1, 10, 1}}, Typeset`size$$ = {
     601., {173., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`n$5920$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$5920$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       PlotFunctions`PlotWavefunction[
         Part[$CellContext`\[Phi]$$, $CellContext`n$$], 
         If[Length[{-5, 5}] === 3, {
           Part[{-5, 5}, 2], 
           Part[{-5, 5}, 3]}, {
           Part[{-5, 5}, 1], 
           Part[{-5, 5}, -1]}], $CellContext`plotArgs$$], 
       "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{666., {232., 241.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.7079935604093046`*^9, 3.707994330740965*^9, 3.707995406481248*^9, 
   3.707996634076355*^9, {3.7079969465566034`*^9, 3.7079969930830636`*^9}, {
   3.708098291774022*^9, 3.7080983102688494`*^9}, {3.7080983885608573`*^9, 
   3.70809840981361*^9}},ExpressionUUID->"a9d47f2d-075f-4738-a109-\
4d81807c4eb6"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Lambda]$$ = {0.2883798374576557, 
  1.1534769005707883`, 1.2212393327546458`, 2.5951258400421, 
  4.612925535653419, 4.883023804839197, 7.206054724735512, 
  10.373021638355855`, 10.976855263287426`, 
  14.111355138963255`}, $CellContext`\[Phi]$$ = CompressedData["
1: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
pO1ktQtB7gAL1/A8EVSXONTdb84D/wO9p7aF
  "], $CellContext`eigArgs$$ = {}, $CellContext`plotArgs$$ = {
  PlotFunctions`PotentialTransform -> (#/1000& ), 
   PlotFunctions`Potential -> (1000 UnitStep[-(# + 2)] + 1000 UnitStep[# - 2] - 
    1000 UnitStep[# - 3]& )}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 9, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 1, 10, 1}}, Typeset`size$$ = {
     601., {173., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`n$5957$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$5957$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       PlotFunctions`PlotWavefunction[
         Part[$CellContext`\[Phi]$$, $CellContext`n$$], 
         If[Length[{-5, 5}] === 3, {
           Part[{-5, 5}, 2], 
           Part[{-5, 5}, 3]}, {
           Part[{-5, 5}, 1], 
           Part[{-5, 5}, -1]}], $CellContext`plotArgs$$], 
       "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{666., {232., 241.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.7079935604093046`*^9, 3.707994330740965*^9, 3.707995406481248*^9, 
   3.707996634076355*^9, {3.7079969465566034`*^9, 3.7079969930830636`*^9}, {
   3.708098291774022*^9, 3.7080983102688494`*^9}, {3.7080983885608573`*^9, 
   3.7080984098406115`*^9}},ExpressionUUID->"31dd9935-b9c4-4cc9-9488-\
885eca307348"]
}, Open  ]],

Cell["\<\
We observe scaling the potential can drastically altar the functional form of \
the lowest eigenfunctions.\
\>", "Text",
 CellChangeTimes->{{3.707996909960987*^9, 
  3.707996931977391*^9}},ExpressionUUID->"24c22c84-7ea0-4b15-a998-\
3d8ef1ddc6f6"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ShowSpectrum", "[", " ", "\n", "\t", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", "\n", "\t", 
     RowBox[{"PotentialTransform", " ", "\[Rule]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "/", "30"}], "&"}], ")"}]}]}], "\n", "]"}], "\n"}], 
  "Code"], "\n", 
 RowBox[{"ShowSpectrum", "[", " ", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"10", " ", 
    SuperscriptBox["x", "2"]}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", "\[IndentingNewLine]", 
   "\t", 
   RowBox[{"PotentialTransform", " ", "\[Rule]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "/", "30"}], "&"}], ")"}]}]}], "\n", "]"}]}], "Input",
 CellChangeTimes->{{3.707996708306283*^9, 3.7079967642674737`*^9}, {
  3.7079968217481594`*^9, 
  3.707996881818033*^9}},ExpressionUUID->"f4337a4f-e7f7-4172-b900-\
ff2c459999ce"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Lambda]$$ = {0.7071037277374913, 
  2.121298996253427, 3.535457783504437, 4.949555978924861, 6.363569679281461, 
  7.777475208803367, 9.191249338255176, 10.604870829902403`, 
  12.018329189914837`, 
  13.431665423548335`}, $CellContext`\[Phi]$$ = CompressedData["
1:eJwtl3dczV0cx0NFIZU0HlISRTSkEO43q4xKSEqigaQUChWKpBRRD6UykpGE
pozG/TY1tLTr3tZtqYTHSGQ89/7O+aPXeb1+r3O+5zPep5jl4L5131ghISFx
/s9e/o/7dNUcaeuklXpS/i7h4jYstvisqzzLIyyHTruH+6b4s9JyzvvZl4Wz
psyP+/FBPo715WHPrYa5Kay+onJ7Rwk2S1Spc2nt5TesJ73mn1T7mlibXIJ5
ypq9LIUZu4LSvL6wPn9NzVZtFoKCT5e3js+ZBMu+5UUFqMuDpd3YJZuFVeFl
7QvX71baUPjoS2DsFgNIlUsW7ulcC2UVsuGNFuYwYWXV5kcLrcFZfvSA9yxH
mJ0qLf3goSsY7Vo3R0HtGPC2OoVql/iCe97puKtTA0Fu2v7xVvpXQPfyvIZQ
jAB236kbd9pvwZORqlsay+6D/tCzvH9+J8JN0PukkZsKGmItN5vGvYApMxSu
FTnngN00y0VRgfnwMOT89DtCxWD/QkypZW45uNrItPb/rAbnt7Psk7XroIVT
NLPoUSPsqyrTn2bJgc1FzydcVG4HX+Hc4PITnVCRt5crs60Lzgn5N3lL90BJ
xY+iKfG90HEnxC/sTx982GKwZrNEP5yNlEyYWdYPk9XKMqfOH4BJdD1Dvw/R
fe30XBmdE0DnVtF7Aui9e6iOQ1RXP9XpRXX7UB/e1FcO9elBfevRHAxpLqk0
J1uaWwHN8QPN1YzmvJXmfo32oLCN9OJLe1pGe3OjPW6lvYpWkp5ZtPfiRMKB
bR3hwt+BcMKh3PT0E44uTkxjuNL8bMNwNrGBcOdhsIXhsO1yB8Nl9oVShlPv
a/0MtzHPHzIcX1PzYrh+k2DCcJ7kp8Fw/7Ei9qDgHZztUy2T47+LvZ9qNqR3
teVcG/fF7eKxi+zrWfNEYG8c+/PAOJ5RRSr7uMY7JQetPHaZT6T2knnV7Cer
Aldpt7Sybe/HtqvMHmR3ugpF/btphL08MqjwoasI2h8I2D77pjT2KV6o9G1S
wutCUgr3Gubjn7Yle5YY66NVvM3CAv3VuPCgSfc3C1PkJXt8Dlu9Awt/5ZpO
n++APjZli79+dMFlMt9M76kdw7s7NIR8L/qhAQTsKlQLwhj51sW3s8LQ1bA2
f1nldVzX7fisM/EOKi6LczMaiUeD764GFnOTccHTk1s/Fz/Dr5JLfmcZZeGc
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
rH8K57ix4MikQLzlor6wpjsMfU6mqxXZReNNv7B5w0/vom7VtM/nPyZiSkJA
14Fx6WjgFr4+aE0mvtW5efFEdh5OkViQMNupGI2dRzWuzq7EMwkuiwwGa9Cy
4aLD+5mNGLrcNLHCk4M3V0hNFLrZjue6359ZF9mJkn4N0iUNPJSxGNG1Mu/C
At2fxlDKw+xGry275TrRy87mMWc7Fydf+p0gpl2HFr+u2WUeLcRgt/svvyUE
QeX3iGndS4phzfIbf5Rn1YNci4bigslc2B8Yo69n2Q5pY3IqdXe1wfIMl5Ii
6Wbwf2F2+rxsNdT8GXf2WFQaVC/8bzR3Chtlvi+bfsmjBmdHz70RsLkFwwN8
W1RTW9FW/IvbhiEO6hmnrvuXVY/136ZP+xBShI1Tq+x1TGJAJvVT7uJzbyBf
XNh9olUjdFvf9t4axwUuXTPp958pZJ+CDDlXTOcspXMd6D3n6L0TqA4xqotH
ddpS3TupD3nqK5v6PE59L6Y5bKG5tNCcph0iuf1LczSnuT6mOb+luefSHj5v
I710+ZKe7GhvJ2iPIbTXQ7TnK7R3fcqBOuWihnJiRbkZRzkSolzdPk04G6Hc
hR8kHPYcJlzuriKc3pUi3J4cXc9wvL+lnOE6+gHh3FuScJ9YEMq8g1+XFA8I
3kWkxI8DgzMiWNNzHxotPrcarstGPP6bvR1mm8mG6r93hO/tWl5nmw7DE9HX
YTYOJ0FXZvPVocTz4PtMpMM5PwxUjZMbNe2iIcBzVa5/5V1YlJxl7Lz+MZju
uD+pzyYdTvh5rUvnZELBihw3Y918qHAUFvoqXQJevheMjSdWAXd4mnrlqVr4
Lpbl0FvcCMsVL7nOnMsFP1bejArFDriXEXxnVlknqNtdXSjawAOlzCjH+D88
WH2Cpe8gzoOPOa9FnR+1Q4Gfb+75Z02wqEVne7p4FXxJ+ja+cH46aDu5lniX
vcJR6eojMX3VqGfW5nVcpxnd69/OV5Now6C+TKUHMfy/Q43ROQ0hLSgZvmIM
mtbg+GAbz5712fhqpnLAN+cMmNw6cMu3thrmPJxxdCOrGWznFF5aPMwFnc2i
OzbO50DvdtWK97J1sKGd3e4mkw/XXieviYxMQu6pYKPjFVXYumfvrF8pTbhW
LOJErAUXV2QkScwUbkETr36e9uIajDGBC2uUMtHWglmh9ijzHWzSmH3QMJ45
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
  "], $CellContext`eigArgs$$ = {}, $CellContext`plotArgs$$ = {
  PlotFunctions`PotentialTransform -> (#/30& ), PlotFunctions`Potential -> 
   Function[$CellContext`x, $CellContext`x^2]}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 6, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 1, 10, 1}}, Typeset`size$$ = {
     601., {173., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`n$5982$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$5982$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       PlotFunctions`PlotWavefunction[
         Part[$CellContext`\[Phi]$$, $CellContext`n$$], 
         If[Length[{$CellContext`x, -5, 5}] === 3, {
           Part[{$CellContext`x, -5, 5}, 2], 
           Part[{$CellContext`x, -5, 5}, 3]}, {
           Part[{$CellContext`x, -5, 5}, 1], 
           Part[{$CellContext`x, -5, 5}, -1]}], $CellContext`plotArgs$$], 
       "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{666., {232., 241.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.7079967386621256`*^9, 3.707996783126127*^9, {3.707996834496461*^9, 
   3.7079968415398965`*^9}, 3.707996884334035*^9, {3.7080982926246967`*^9, 
   3.7080983103993735`*^9}, 
   3.7080984098776236`*^9},ExpressionUUID->"18aeefff-d4c5-467c-9984-\
d9a66f51e49d"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Lambda]$$ = {2.2359723248400702`, 
  6.707536878874591, 11.17796842680962, 15.64653042686253, 
  20.112503627236617`, 24.57518436141321, 29.033882968011525`, 
  33.48792231881998, 37.93663644059984, 
  42.37936921792391}, $CellContext`\[Phi]$$ = CompressedData["
1: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
  "], $CellContext`eigArgs$$ = {}, $CellContext`plotArgs$$ = {
  PlotFunctions`PotentialTransform -> (#/30& ), PlotFunctions`Potential -> 
   Function[$CellContext`x, 10 $CellContext`x^2]}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 10, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 1, 10, 1}}, Typeset`size$$ = {
     601., {173., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`n$6007$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$6007$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       PlotFunctions`PlotWavefunction[
         Part[$CellContext`\[Phi]$$, $CellContext`n$$], 
         If[Length[{$CellContext`x, -5, 5}] === 3, {
           Part[{$CellContext`x, -5, 5}, 2], 
           Part[{$CellContext`x, -5, 5}, 3]}, {
           Part[{$CellContext`x, -5, 5}, 1], 
           Part[{$CellContext`x, -5, 5}, -1]}], $CellContext`plotArgs$$], 
       "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{666., {232., 241.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.7079967386621256`*^9, 3.707996783126127*^9, {3.707996834496461*^9, 
   3.7079968415398965`*^9}, 3.707996884334035*^9, {3.7080982926246967`*^9, 
   3.7080983103993735`*^9}, 
   3.708098409903623*^9},ExpressionUUID->"fe34fe50-8b58-4bad-b4f0-\
9e99aaa5bc3a"]
}, Open  ]],

Cell["\<\
Even mere horizontal scaling is significant on a fixed domain. \
\>", "Text",
 CellChangeTimes->{{3.7079973332526026`*^9, 3.70799735792443*^9}, {
  3.7079973918608594`*^9, 
  3.7079973990929613`*^9}},ExpressionUUID->"09f1837d-2e20-478e-8cf0-\
e398736f274c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["ShowSpectrum", "Code"], 
   StyleBox["[", "Code"], 
   StyleBox[" ", "Code"], 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   RowBox[{
    RowBox[{
     StyleBox["-", "Code"], 
     SuperscriptBox[
      StyleBox["x", "Code"], "2"]}], 
    StyleBox[",", "Code"], 
    StyleBox["\n", "Code"], 
    StyleBox["\t", "Code"], 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], "Code"], 
    StyleBox[",", "Code"], 
    StyleBox["\n", "Code"], 
    StyleBox["\t", "Code"], 
    StyleBox[
     RowBox[{"PotentialTransform", " ", "\[Rule]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "/", "30"}], " ", "+", " ", "1"}], "&"}], ")"}]}], 
     "Code"]}], 
   StyleBox["\n", "Code"], 
   StyleBox["]", "Code"]}], "\n"}], "\n", 
 StyleBox[
  RowBox[{"ShowSpectrum", "[", " ", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "20"}], " ", 
     SuperscriptBox[
      StyleBox["x", "Code"], "2"]}], ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", "\n", "\t", 
    RowBox[{"PotentialTransform", " ", "\[Rule]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "/", "30"}], " ", "+", " ", "1"}], "&"}], ")"}]}]}], 
   "\n", "]"}], "Code"]}], "Input",
 CellChangeTimes->{{3.707997413437242*^9, 3.707997488287685*^9}, {
  3.7080063098103685`*^9, 
  3.7080063102147875`*^9}},ExpressionUUID->"0d201aea-1b4e-4bca-af2c-\
0773dc041b97"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Lambda]$$ = {-3.9545245147197847`, \
-3.954387214930755, -1.4990300237029455`, -1.4744139635288755`, 
  0.014010347070775985`, 0.5031914205352496, 1.538503793036389, 
  2.6520543176185774`, 3.9239862916881223`, 
  5.324024710905852}, $CellContext`\[Phi]$$ = CompressedData["
1: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
bSB7gOaWko8easri/8ZjVUE=
  "], $CellContext`eigArgs$$ = {}, $CellContext`plotArgs$$ = {
  PlotFunctions`PotentialTransform -> (#/30 + 1& ), PlotFunctions`Potential -> 
   Function[$CellContext`x, -$CellContext`x^2]}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 5, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 1, 10, 1}}, Typeset`size$$ = {
     601., {173., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`n$6032$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$6032$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       PlotFunctions`PlotWavefunction[
         Part[$CellContext`\[Phi]$$, $CellContext`n$$], 
         If[Length[{$CellContext`x, -5, 5}] === 3, {
           Part[{$CellContext`x, -5, 5}, 2], 
           Part[{$CellContext`x, -5, 5}, 3]}, {
           Part[{$CellContext`x, -5, 5}, 1], 
           Part[{$CellContext`x, -5, 5}, -1]}], $CellContext`plotArgs$$], 
       "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{666., {232., 241.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.7079974304385996`*^9, 3.707997488673283*^9}, 
   3.7080063106448455`*^9, {3.708098292752722*^9, 3.708098310525891*^9}, 
   3.7080984099416227`*^9},ExpressionUUID->"74bddfd2-0e76-450f-a3ec-\
ce6238324a74"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Lambda]$$ = {-10.616559880937416`, \
-10.604555694153852`, -3.9769285979969404`, -3.6909909833703582`, 
  0.721285335774811, 2.6622728140161716`, 6.052978815442441, 
  9.436435732197083, 13.153034970851106`, 
  17.072057270140306`}, $CellContext`\[Phi]$$ = CompressedData["
1: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
  "], $CellContext`eigArgs$$ = {}, $CellContext`plotArgs$$ = {
  PlotFunctions`PotentialTransform -> (#/30 + 1& ), PlotFunctions`Potential -> 
   Function[$CellContext`x, (-20) $CellContext`x^2]}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 6, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 1, 10, 1}}, Typeset`size$$ = {
     601., {173., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`n$6057$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$6057$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       PlotFunctions`PlotWavefunction[
         Part[$CellContext`\[Phi]$$, $CellContext`n$$], 
         If[Length[{$CellContext`x, -5, 5}] === 3, {
           Part[{$CellContext`x, -5, 5}, 2], 
           Part[{$CellContext`x, -5, 5}, 3]}, {
           Part[{$CellContext`x, -5, 5}, 1], 
           Part[{$CellContext`x, -5, 5}, -1]}], $CellContext`plotArgs$$], 
       "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{666., {232., 241.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.7079974304385996`*^9, 3.707997488673283*^9}, 
   3.7080063106448455`*^9, {3.708098292752722*^9, 3.708098310525891*^9}, 
   3.7080984099676323`*^9},ExpressionUUID->"ff02dc59-9ca1-4444-911a-\
7a392c7bfe6b"]
}, Open  ]],

Cell["\<\
Finite precision of the discretised grid presents an upper bound to potential \
magnitude, above which smoothness is long forgone and Gibbs phenomena may \
appear.\
\>", "Text",
 CellChangeTimes->{{3.7080063388069043`*^9, 
  3.708006409054248*^9}},ExpressionUUID->"b9a4c60a-7bf3-441b-bf91-\
5371dec06ea2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["ShowSpectrum", "Code"], 
  StyleBox["[", "Code"], 
  StyleBox[" ", "Code"], 
  StyleBox["\n", "Code"], 
  StyleBox["\t", "Code"], 
  RowBox[{
   StyleBox[
    RowBox[{"100", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{".1", "x"}], "+", ".1"}], ")"}]}], "Code"], 
   StyleBox[",", "Code"], 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}], "Code"], 
   StyleBox[",", "Code"], 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   RowBox[{
    StyleBox["PlotRange", "Code"], 
    StyleBox[" ", "Code"], 
    StyleBox["\[Rule]", "Code"], " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "10"}], "}"}]}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"PotentialTransform", " ", "\[Rule]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "/", "100"}], "&"}], ")"}]}]}], "\n", "]"}]], "Input",
 CellChangeTimes->{{3.7080076402059307`*^9, 
  3.70800776039726*^9}},ExpressionUUID->"f732e8f8-d28c-4f00-b3c6-\
4f43e8b1b4e1"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Lambda]$$ = {579.8290846081865, 
  648.2065622273465, 710.3988916069125, 770.4609808286997, 829.9430977722521, 
  890.16870504503, 953.8430129355398, 1024.8605740099965`, 
  1105.7399558671639`, 
  1197.1350138134942`}, $CellContext`\[Phi]$$ = CompressedData["
1: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
Gv8H++rMnQ==
  "], $CellContext`eigArgs$$ = {}, $CellContext`plotArgs$$ = {
  PlotRange -> {0, 10}, PlotFunctions`PotentialTransform -> (#/100& ), 
   PlotFunctions`Potential -> 
   Function[$CellContext`x, 100/(0.1 + 0.1 $CellContext`x)]}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 10, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 1, 10, 1}}, Typeset`size$$ = {
     601., {173., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`n$6082$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$6082$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       PlotFunctions`PlotWavefunction[
         Part[$CellContext`\[Phi]$$, $CellContext`n$$], 
         If[Length[{$CellContext`x, 0, 1}] === 3, {
           Part[{$CellContext`x, 0, 1}, 2], 
           Part[{$CellContext`x, 0, 1}, 3]}, {
           Part[{$CellContext`x, 0, 1}, 1], 
           Part[{$CellContext`x, 0, 1}, -1]}], $CellContext`plotArgs$$], 
       "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{666., {232., 241.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.7080076475666447`*^9, 3.7080077613328376`*^9}, {
   3.7080982928716993`*^9, 3.7080983106529083`*^9}, 
   3.708098410003637*^9},ExpressionUUID->"44eb0b84-526a-4fff-8e7e-\
4e1a14adbcb1"]
}, Open  ]],

Cell["We can approximate reciprocal functions with polynomials.", "Text",
 CellChangeTimes->{{3.7080077783713074`*^9, 
  3.7080078034507313`*^9}},ExpressionUUID->"d888ebed-df16-41cf-9607-\
298a3031e207"]
}, Open  ]],

Cell[CellGroupData[{

Cell["normalisation algorithm", "Subsection",
 CellChangeTimes->{{3.708006573164299*^9, 3.708006575716675*^9}},
 CellTags->"c:6",ExpressionUUID->"fb161a3b-bfd6-4765-91d3-e073a84823a0"],

Cell[CellGroupData[{

Cell["procedure", "Subsubsection",
 CellChangeTimes->{{3.7080071401119413`*^9, 3.7080071411206694`*^9}},
 CellTags->"c:7",ExpressionUUID->"b4b181cc-db77-40ff-8854-78e6667224f7"],

Cell[TextData[{
 "Since translation of the potential is non-physical, we\[CloseCurlyQuote]ll \
arbitrarily fix the potential to fall between ",
 StyleBox["0",
  FontWeight->"Bold"],
 " and ",
 StyleBox["POTENTIALBOUND",
  FontWeight->"Bold"],
 "; this is global, and bounds all training potentials. ",
 StyleBox["POTENTIALBOUND",
  FontWeight->"Bold",
  Background->RGBColor[0.87, 0.94, 1]],
 StyleBox[" will be very large (found experimentally below),",
  Background->RGBColor[0.87, 0.94, 1]],
 " so as to render maximum-potential regions as quasi-infinite, and the \
waveforms stable in form above it (beyond horizontal scaling).\n\nWe\
\[CloseCurlyQuote]ll randomly generate a potential form (see proceeding \
section) on the domain ",
 StyleBox["x \[Element]", "Input"],
 " ",
 StyleBox["[-5, 5] ",
  FontWeight->"Bold"],
 "(wide enough to observe unity-coefficient polynomial growth) which is \
implicitly infinite at the grid boundaries, and normalise it to ",
 StyleBox["span",
  FontWeight->"Bold"],
 " ",
 StyleBox["[0, POTENTIALBOUND]",
  FontWeight->"Bold"],
 ". This will be the most ",
 StyleBox["extreme",
  FontSlant->"Italic"],
 " scaling of the potential of that form. We\[CloseCurlyQuote]ll also \
consider",
 StyleBox[" scalings of this potential between ",
  Background->RGBColor[0.87, 0.94, 1]],
 StyleBox["0 ",
  FontWeight->"Bold",
  Background->RGBColor[0.87, 0.94, 1]],
 StyleBox["and ",
  Background->RGBColor[0.87, 0.94, 1]],
 StyleBox["1",
  FontWeight->"Bold",
  Background->RGBColor[0.87, 0.94, 1]],
 StyleBox[", distributed sensibly based on the experiment below.",
  Background->RGBColor[0.87, 0.94, 1]],
 " This should provide discovery of the distinct waveforms (beyond scaling) \
possible of the eigenbasis of each potential specification. We note our fixed \
grid size (and infinite potential well envelope) means this \
\[OpenCurlyDoubleQuote]scaling\[CloseCurlyDoubleQuote] isn\[CloseCurlyQuote]t \
",
 StyleBox["just",
  FontSlant->"Italic"],
 " a vertical scaling of potential; it\[CloseCurlyQuote]s a subtle geometric \
change with possibly complicated effects on the energy eigenvalues."
}], "Text",
 CellChangeTimes->{{3.708006586538787*^9, 3.7080066258447943`*^9}, {
  3.7080066762271423`*^9, 3.7080068681069927`*^9}, {3.7080068996982994`*^9, 
  3.7080069186194735`*^9}, {3.708006994370185*^9, 3.708007038313812*^9}, {
  3.7080070884491796`*^9, 3.708007110496359*^9}, {3.708007181728842*^9, 
  3.708007197928516*^9}, {3.70800723660915*^9, 3.7080073888646016`*^9}, {
  3.70800812445039*^9, 3.708008124530536*^9}, {3.7080090192991867`*^9, 
  3.708009063323099*^9}},ExpressionUUID->"8d4b97c2-b62a-4656-9b91-\
2afd03b408b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["potential bound experiment", "Subsubsection",
 CellChangeTimes->{{3.7080071496317153`*^9, 3.7080071546482844`*^9}},
 CellTags->"c:8",ExpressionUUID->"5705b977-aea4-4e71-aeb1-dc9b986d5519"],

Cell[TextData[{
 "We found a ",
 StyleBox["higher",
  FontSlant->"Italic"],
 " rate of compression for ",
 StyleBox["lower",
  FontSlant->"Italic"],
 " order potentials; these will be the first to reach the horizontal \
compression limit. We\[CloseCurlyQuote]ll study the linear and quadratic \
potentials (corresponding to Airy and Hermite functions). These are \
comfortably expressed with unity coefficients on the domain ",
 StyleBox["[-5, 5]",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.7080074027018633`*^9, 3.708007406150318*^9}, {
  3.7080081886715717`*^9, 3.708008198608465*^9}, {3.708008433533417*^9, 
  3.7080084728375664`*^9}, {3.7080085934366083`*^9, 3.7080086921800566`*^9}, {
  3.708008802027089*^9, 3.7080088062193317`*^9}, {3.7080088834185734`*^9, 
  3.7080089048743105`*^9}, {3.7080091024169717`*^9, 
  3.70800911600061*^9}},ExpressionUUID->"1cba46a0-8c6b-44f3-90de-\
6d0f52b4628f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"XLEFT", " ", "=", " ", 
   RowBox[{"-", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XRIGHT", " ", "=", " ", "5"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7080092443174915`*^9, 
  3.7080092508483334`*^9}},ExpressionUUID->"31b6d905-0765-4d8b-acc0-\
9569ce6e0571"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["ShowSpectrum", "Code"], 
   StyleBox["[", "Code"], 
   StyleBox[" ", "Code"], 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   RowBox[{
    StyleBox["x", "Code"], 
    StyleBox[",", "Code"], 
    StyleBox["\n", "Code"], 
    StyleBox["\t", "Code"], 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "XLEFT", ",", " ", "XRIGHT"}], "}"}], "Code"], 
    StyleBox[",", "Code"], 
    StyleBox["\n", "Code"], 
    StyleBox["\t", "Code"], 
    RowBox[{
     StyleBox["PlotRange", "Code"], 
     StyleBox[" ", "Code"], 
     StyleBox["\[Rule]", "Code"], " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", ".8"}], "}"}]}], ",", 
    StyleBox["\n", "Code"], 
    StyleBox["\t", "Code"], 
    StyleBox[
     RowBox[{"PotentialTransform", " ", "\[Rule]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "/", "2"}], "&"}], ")"}]}], "Code"]}], 
   StyleBox["\n", "Code"], 
   StyleBox["]", "Code"]}], "\n"}], "\n", 
 RowBox[{
  StyleBox["ShowSpectrum", "Code"], 
  StyleBox["[", "Code"], 
  StyleBox[" ", "Code"], 
  StyleBox["\n", "Code"], 
  StyleBox["\t", "Code"], 
  RowBox[{
   SuperscriptBox[
    StyleBox["x", "Code"], "2"], 
   StyleBox[",", "Code"], 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "XLEFT", ",", " ", "XRIGHT"}], "}"}], "Code"], 
   StyleBox[",", "Code"], 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   RowBox[{
    StyleBox["PlotRange", "Code"], 
    StyleBox[" ", "Code"], 
    StyleBox["\[Rule]", "Code"], " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   StyleBox[
    RowBox[{"PotentialTransform", " ", "\[Rule]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "/", "2"}], "&"}], ")"}]}], "Code"]}], 
  StyleBox["\n", "Code"], 
  StyleBox["]", "Code"]}]}], "Input",
 CellChangeTimes->{{3.708008486726675*^9, 3.7080085741248026`*^9}, {
  3.7080092588848977`*^9, 3.7080092657228823`*^9}, {3.7080093402428737`*^9, 
  3.708009346602276*^9}},ExpressionUUID->"2c6ac809-53b4-4da2-9dcf-\
c1bba1c0675b"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Lambda]$$ = {-3.1365721254329637`, \
-1.7478016496765973`, -0.6108209533567999, 0.39403035987318347`, 
  1.3125781987691558`, 2.168501282055221, 2.9765050697020086`, 
  3.752278178501966, 4.534264273190516, 
  5.385611414764563}, $CellContext`\[Phi]$$ = CompressedData["
1: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
Jg==
  "], $CellContext`eigArgs$$ = {}, $CellContext`plotArgs$$ = {
  PlotRange -> {0, 0.8}, PlotFunctions`PotentialTransform -> (#/2& ), 
   PlotFunctions`Potential -> Function[$CellContext`x, $CellContext`x]}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 7, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 1, 10, 1}}, Typeset`size$$ = {
     601., {173., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`n$6107$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$6107$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       PlotFunctions`PlotWavefunction[
         Part[$CellContext`\[Phi]$$, $CellContext`n$$], 
         If[Length[{$CellContext`x, -5, 5}] === 3, {
           Part[{$CellContext`x, -5, 5}, 2], 
           Part[{$CellContext`x, -5, 5}, 3]}, {
           Part[{$CellContext`x, -5, 5}, 1], 
           Part[{$CellContext`x, -5, 5}, -1]}], $CellContext`plotArgs$$], 
       "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{666., {232., 241.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.7080084915214314`*^9, 3.7080085744693594`*^9}, {
   3.70800927513428*^9, 3.7080092761914277`*^9}, {3.7080982929567122`*^9, 
   3.7080983107649217`*^9}, 
   3.7080984100486336`*^9},ExpressionUUID->"68c46bf0-ed78-4feb-83f7-\
9cc9973734db"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Lambda]$$ = {0.7071037277374913, 
  2.121298996253427, 3.535457783504437, 4.949555978924861, 6.363569679281461, 
  7.777475208803367, 9.191249338255176, 10.604870829902403`, 
  12.018329189914837`, 
  13.431665423548335`}, $CellContext`\[Phi]$$ = CompressedData["
1:eJwtl3dczV0cx0NFIZU0HlISRTSkEO43q4xKSEqigaQUChWKpBRRD6UykpGE
pozG/TY1tLTr3tZtqYTHSGQ89/7O+aPXeb1+r3O+5zPep5jl4L5131ghISFx
/s9e/o/7dNUcaeuklXpS/i7h4jYstvisqzzLIyyHTruH+6b4s9JyzvvZl4Wz
psyP+/FBPo715WHPrYa5Kay+onJ7Rwk2S1Spc2nt5TesJ73mn1T7mlibXIJ5
ypq9LIUZu4LSvL6wPn9NzVZtFoKCT5e3js+ZBMu+5UUFqMuDpd3YJZuFVeFl
7QvX71baUPjoS2DsFgNIlUsW7ulcC2UVsuGNFuYwYWXV5kcLrcFZfvSA9yxH
mJ0qLf3goSsY7Vo3R0HtGPC2OoVql/iCe97puKtTA0Fu2v7xVvpXQPfyvIZQ
jAB236kbd9pvwZORqlsay+6D/tCzvH9+J8JN0PukkZsKGmItN5vGvYApMxSu
FTnngN00y0VRgfnwMOT89DtCxWD/QkypZW45uNrItPb/rAbnt7Psk7XroIVT
NLPoUSPsqyrTn2bJgc1FzydcVG4HX+Hc4PITnVCRt5crs60Lzgn5N3lL90BJ
xY+iKfG90HEnxC/sTx982GKwZrNEP5yNlEyYWdYPk9XKMqfOH4BJdD1Dvw/R
fe30XBmdE0DnVtF7Aui9e6iOQ1RXP9XpRXX7UB/e1FcO9elBfevRHAxpLqk0
J1uaWwHN8QPN1YzmvJXmfo32oLCN9OJLe1pGe3OjPW6lvYpWkp5ZtPfiRMKB
bR3hwt+BcMKh3PT0E44uTkxjuNL8bMNwNrGBcOdhsIXhsO1yB8Nl9oVShlPv
a/0MtzHPHzIcX1PzYrh+k2DCcJ7kp8Fw/7Ei9qDgHZztUy2T47+LvZ9qNqR3
teVcG/fF7eKxi+zrWfNEYG8c+/PAOJ5RRSr7uMY7JQetPHaZT6T2knnV7Cer
Aldpt7Sybe/HtqvMHmR3ugpF/btphL08MqjwoasI2h8I2D77pjT2KV6o9G1S
wutCUgr3Gubjn7Yle5YY66NVvM3CAv3VuPCgSfc3C1PkJXt8Dlu9Awt/5ZpO
n++APjZli79+dMFlMt9M76kdw7s7NIR8L/qhAQTsKlQLwhj51sW3s8LQ1bA2
f1nldVzX7fisM/EOKi6LczMaiUeD764GFnOTccHTk1s/Fz/Dr5JLfmcZZeGc
lAlSi2/k4e4M+aQb1q9R7qWakXX3G/ToFi4s/ectVmZ3RFjcrEOHEpH5eY5N
uDbfv8nJgovNo03cgdkduOJewzHD8Tx8vH7d/byXXbg2g3M17Z8enLS3tf+T
RC8OfIkbq+/di5pN6nsururFWbHn2zMse7A+TKvNIqULoxJz84+ad6LBPnvT
mxe4+KOm7ZLz+nqs88/wCt5Qhj9XKMiHF6eiBVnhFPkODWQfSJFzEETmQCWZ
CzPIPaBF7oUPRAfIEl1gTnRCFtENpsQHvCe+wJX4hEDiGz6RHOAKyQWMSE5w
geQGG0iOoCPF5ArbSc5wmuQOZqQHOEx6gZukJyggvYEr6REmWDG9QjjpGT6R
3kHtN8MBSKQwXIAe4QTuPWC4gavNDEfgOSIp4ApcJRjOIMmG4Q7+3mc4hL0+
DJeszr8Mp6yeQYZbVqXSdQHHrPub+gVcs26MExVwzmo7ryPgntVR/UfwDljl
hun30rraVg50D19VbBNhOVvsXtW8N511mqe2yH9NCcv/8pykO/ubWJ6essuS
pftY1stOuv5Y8o01ddLC9WpzxoHo2Q1Fm35LQlQv+9KvJ4qg3BHq/J//PLgY
F/kgLFIPtDiqPotGV8H8bgnxtSdNQW+K3QPp0h0gs6L14VaeA4SOBjdonz0E
A1nNpdZPj0PU4Ltw1zlnQU/1akPPmWBwr+HKmz38FxQOh0kW18XAmtHwnbEj
d6HUBGJO7U6Erbta9XTGpoFm9Ixqo/kvIUU26dHzJoTy20Et6jGF0HUrISFb
vQwOdDm5w8Zq0JyQa/m4qxZiFtzS0ixrBMtri8R3tHBgsa16+D9d7RChom66
obYTfoSV5Om5dcHvnXcyZW50Q9bO0843FvWAKXvwka5UD/hM9r+jPr0b5p01
F6805EFVkqu1vnA7XJpxwdWK1whPZpsuTCqvhOzOnDfrf74At/z7W1SNkvDv
6zc3QmLLMOpSW8Pox3q89/Skh8nEVpyzx8nz2ORO3KXRwzPdzUMHuurT71V0
XxU9F1BM5kQWkrmpHeSepfReU6rjDtUlT3W6U92bqI886muMDfEpHE5836c5
bKS5HKM5vaK5baQ5nqa5Ct8mOffT3DtpD1toL0dpT8O0N0faozXt9V/a827a
+xvKgU424ULmF+FEhXIjJ0k46uolXC1uJJwNJxDuEtoJhzs6CJclzoRTg1mE
22pbwrHZTMK1SJsqw/nNJHWG+0LPncw7GDQKKBa8C//57h5TmtRZFVWDZmGj
9azBjv9+L5w3yIqSSFktVveTNeoM2eMbJsCeSZHze7bIwtfrX89aJcyGEaWl
AyvG6UDsrv0H931bAatmx55pWLkeVJLr11/6tg2sSrkXds+zg2r7COvcbGf4
yLtmqDPXE3aHzbsSNc4Pfog/bS08FgQHtFuqNhwOB98jv05d8IoGb+VH143X
3QW9SukLojmPwPBXmUvjm1SY4rinQXnuS4hcbLnLQDoXbJJXJmeMFMJC+xua
J6vL4Ohr4WcapdWgcDD2w+CVOpgh/a9U3+0m+Ov+6a9BCRcMIx9Nvrm/A7oz
k2981OLBnxUpd1yudsHqukhxMYdueNd8yP+XWzfYsT8OrIrogitiRbphOZ0g
/ffgrO7iVvDYrzp2xdIGMB/r6hdlVgasVUej+6Y+gim2vKmZPtnYp6WseKS0
Gue62h9eLtyMFhkJkomi7Xh/d43yOIVOrHAWST82tROX3Hy8ILeuDdddWzTG
6kwThoce7Tt0pgrnhVR7ZbzKwK3BzAqa5Dsokn2gQM7BazIHHpC5cJDcA2bk
XpDSZnTAR6ILvIHRie1jGN3IIj6w6w/jC08Sn2hOfCOH5ICrSC4otJLJCd+T
3NCI5Ig0V1QkOaMcyR09SA9Ie0F70hPGkN5wGukRN5Be0Zr0jCGkd4wmHGAg
4QKHCScYRrjBXMIR6hCusK+E4QxFCHf4WZXhEEVsGS5RWpHhFG3vMNzi01kM
x7g9iuEau1QYztlbIxnu2WP7mHfADtUo8ua/C3ZUFa804K8xO6LGNdxX6xs7
2dKKZdAshu+fZh35JaWAR7ZOv3czYy4W/P4r92ZIFx1Tn8xrVFyF54W7L4u2
muBAvM8Zxf4d+NTffPLEE45Y88+zJAtVd0zw2K1Z5+2F38PlB0/3+OPPWVpa
zx9eQsvtB3+O3R6BnDMwVLUgFr8OOl3S3hmPR15v6bh4OBn9JhZ9SXmagWWn
9phImuSg2NDGiAeOBWgyrCB9bWYphiW7/eXWVqGM+v1Dj9NrcdgjbuOOykbc
aBh3T1KMi8eE80puTenAAYllnO/cThwKTShbY9CFPmHtSdafu3CpblXmSE0X
fpxh8Lo2nYcLLN1+afp2oNGO6dbDTi140G6ckvHAWzQNeLbmP9FcVC+dvs7+
zH2w+speHFtWCjdinn/g/KiHB65GQotquLA2uXD+L9MOMCncmn3CqQNmWDnO
nGvcChM4pmZm2xrA4vvQDBGnUnC5MGbqmSNRMMNwaLt6YgFuPyEhdu1LLW76
R4U9+wIHeY+1rDwi23GQrs70uw/d50XPTQkkc+Tp3C8t5B4Feu8mqmMz1fWS
6kyjuoOpj3jqS5b63Ex9z6Y5qNBc+mhO82luR2mOvTTXDprzEZr7etrDb9qL
Cu3pCe3NjfY4j/b6l/b8nPaeTjnQeE+4mHSWcHKWcmOiQjjiUK5yPAlnRpS7
YMqhRwLhMkOccMpJI9zeHyskL+D4+U7CtVsA4bw3cwfD/c0S8g6qkz0rBO/i
3bCh77DFXrZatJrMyXdSeNY9gjvt6hzU1GC/NwlZjN90H07+q7Maty71WXNB
fTPK7q3aNld6J2alXJxyz3Efit4NfLtw2REUeRZskmFwEu1Gl/HuKZ/HG19D
HW1kw5Dzu/r0OLEobHYWmcy9EYfH4uLMTTY9QouJ34v1K1JRIT1Ea3fIS1Te
PqbP53Iuxu40/9bTXIRfbtcNamiVo4F9X7Q4vsUPTg5jfpTVY2Vu3W7FKS04
V2V64tQNbTjkIHFmm2Qnfh0aeFgdwUMTxQHTdz5deHViindGYBce8B9ojQzm
YZh9rtZm/u+92r3x6Ry9Fnzx6G1i6pW3WPYz6fuh6BzMf/HJICX8Mciuu5wu
0foGIvdxc7XeNYBM2o4gr7Wt8KGUNU1EsgMcJxwPSRlpg7MflD5tqmiG2QX7
loUteAvxkkFp1zNewhilP98O5T9HlUdhSx+8qkYT2L4jxbgZswwe2ywY34YF
te/2/dVpw4BNMwsdM5rx8NiOccEGb3FH56i4y4qXOJ2s4ES+gzvZBy/IOaBz
wIrMhcXkHthP7gUfogOliC70ITrRnujGj8QHihJfeJX4xOnEN7aTHLCa5ALJ
JCfoIbnBFZIj7Ce5QiDJGdaT3GGQ9AC0F1AmPcEb0ht8JT0Ci/QKtGdIJL3D
PMIBTCVcgB3hBJwIN/CWcATvCVfgTziDcMId5KYxHEIc4RKiUxlOQceB4RbM
lzMcw0tNhmuIW8xwDn/8GO7h0FXmHYDwyYln+e+CpVEvf3pNuS/7XOZlyXRJ
DfRVCS56LG+IRj8PagRONcNVqhWxzWI7cePCDXmRWfuwXK4osSX1CH7krvJ8
rH8K57ix4MikQLzlor6wpjsMfU6mqxXZReNNv7B5w0/vom7VtM/nPyZiSkJA
14Fx6WjgFr4+aE0mvtW5efFEdh5OkViQMNupGI2dRzWuzq7EMwkuiwwGa9Cy
4aLD+5mNGLrcNLHCk4M3V0hNFLrZjue6359ZF9mJkn4N0iUNPJSxGNG1Mu/C
At2fxlDKw+xGry275TrRy87mMWc7Fydf+p0gpl2HFr+u2WUeLcRgt/svvyUE
QeX3iGndS4phzfIbf5Rn1YNci4bigslc2B8Yo69n2Q5pY3IqdXe1wfIMl5Ii
6Wbwf2F2+rxsNdT8GXf2WFQaVC/8bzR3Chtlvi+bfsmjBmdHz70RsLkFwwN8
W1RTW9FW/IvbhiEO6hmnrvuXVY/136ZP+xBShI1Tq+x1TGJAJvVT7uJzbyBf
XNh9olUjdFvf9t4axwUuXTPp958pZJ+CDDlXTOcspXMd6D3n6L0TqA4xqotH
ddpS3TupD3nqK5v6PE59L6Y5bKG5tNCcph0iuf1LczSnuT6mOb+luefSHj5v
I710+ZKe7GhvJ2iPIbTXQ7TnK7R3fcqBOuWihnJiRbkZRzkSolzdPk04G6Hc
hR8kHPYcJlzuriKc3pUi3J4cXc9wvL+lnOE6+gHh3FuScJ9YEMq8g1+XFA8I
3kWkxI8DgzMiWNNzHxotPrcarstGPP6bvR1mm8mG6r93hO/tWl5nmw7DE9HX
YTYOJ0FXZvPVocTz4PtMpMM5PwxUjZMbNe2iIcBzVa5/5V1YlJxl7Lz+MZju
uD+pzyYdTvh5rUvnZELBihw3Y918qHAUFvoqXQJevheMjSdWAXd4mnrlqVr4
Lpbl0FvcCMsVL7nOnMsFP1bejArFDriXEXxnVlknqNtdXSjawAOlzCjH+D88
WH2Cpe8gzoOPOa9FnR+1Q4Gfb+75Z02wqEVne7p4FXxJ+ja+cH46aDu5lniX
vcJR6eojMX3VqGfW5nVcpxnd69/OV5Now6C+TKUHMfy/Q43ROQ0hLSgZvmIM
mtbg+GAbz5712fhqpnLAN+cMmNw6cMu3thrmPJxxdCOrGWznFF5aPMwFnc2i
OzbO50DvdtWK97J1sKGd3e4mkw/XXieviYxMQu6pYKPjFVXYumfvrF8pTbhW
LOJErAUXV2QkScwUbkETr36e9uIajDGBC2uUMtHWglmh9ijzHWzSmH3QMJ45
B8r7mTmw619mLux7z9wDLsPMvfjZhtGB57YxulBOhdGJmfcY3RjfyPhAHX3G
F44NYXyC5TXGNyi1MTmAfTeTC3TXMjnBzbVMbnBNiskRHA4xuULhbSZnFCa5
o4oX0wPmItMLZnkyPWHqS6Y3LLdnesRTWUyveMiQ6RmD5jC949FJDAc48oXh
AsU8GE74/65guMFsJYYjXLuT4QpXzGM4Q904hjuUi2U4xAcWKQIucWK6qIBT
nGe4RcAtTlB+I+AY+3R0BVzj72kzBZyj2INbAu7xsN8rwTvAEY7up4EZEeyV
s2d+MHdJZG9dLdUgqbgDuRvK/e+UHcSoBeN7Jsp44agv+NW2ncOh7TrGeS5X
0CgtoEdOOQpz90RxjKTv4nSXWFdRj0RU05Z9Gd+fhpncLWI/DmZiw54lLnpj
8zGmVEtU6r9iLDblBG4XqkKne8bvrM7X4nW3/rttrY1Y6V51NH4N//fP8oja
5/M6sHmOXJpSSSdGH82dGfWcx//7/+aUaDIPS44fKl94ohNPpWg3buC2Yvgr
a6vlug14xTj0g3puCb76/aJO6eJVrOsbGn90ZiHY/vSWkh5fByOFph9/6nMg
JbQ/JdmxDb42Huitq+NCQ0Zm2OLLDZAi3TjudmMJLF2TrPVJywKkzMIbQ4NK
0OR8dMC9lQ3o8tF2rXkFB9P2b1lWmspBbZGogTfl9ej+36wNUX6vsX/P7tq8
Xzdg7Mvdnonp5bDkhNLUbc8aQQuGvobEckD6YWuOv0oz9Mz3GJXOr4aRUwuv
VKSmgoh/qXzFYB7mj3Hfq6Zbh8oGT6/svN6CpxrJKiN9mPme2lPO7ItV1mDO
6UiSOQmuZO7yPHJPdq8yudfQkdERePcoo+u3pAqj02xuDKN7INiC8fHqmh3j
y8Ge+LTde5nxfZ3zbJEgB3lbDpPL47psJqcjLs5Mbpmn3zE5PhLdyOQqdus4
k/P6Z71M7ukvcpgeJs4KYnq57mHB9PRJdiHTW8QzV6bHvFuk12d1eUzPcy3l
md6nCEcyHExNfMtwEfVhgOEkdNIGhpu/IY0MR3smaDNcha3RZjirT9/GcPck
W5LhUPb0Q4ZLydknGU4zOPsYbp9MOmgk4Jibk+Ar4Pr1+o3dAs7NmywZ7nu0
1OsE70B/6ZdOTf67qJuRXnt4O5vdkFV/wNbnIJqFeruKbvLFtw/n3FVPCcGC
f6PDfH0icPSrdtgzvzv4yM5mv8nFBCzr2Gu6qjAVvwwcODok9QpTCnYcaF6Z
h6qFj/S2/FOM5pwNkd+UKvFG2+u81mm1WCC3LDXesxGb1ijqRHdz+L8vrtqm
/WnHJZfapGTudKJ9tIiISwgPJT/Wlb/y5KGTV8WeYyqdKBdmvFeml4tKejMt
Ojrq0E1xUb7igSIcqQ35s0g4EFpVnyTX/1cMslYT4oej6kEnb2H7gfFcYN9J
Lz89uQ3MDigYDk/lwC2empefbS0EgI9Hln4uOGXLX6kqSMOEa8K8vuBqtJYV
fXH7axNK80IctvD/fzms5if+43MTZh0RlnY2qMYLYieC+iWS8HWIUmyaVgFo
ZR7zLrlVB+t85rJirrSA2BSX4xncZmhZ0Vk8GlMDzZ337q8wyYR4U8ujf+Ky
sfOVza8XY2vxqUqQ5trGZgz83Xt9f2Uzyp3X6H7Hq8F2pVzDhvgsHI0aEqxQ
ufFnF/87nKutFOwDzgU/wTlQmx8lmANqL5o8+HPhWdEYwT2onmVcwr8Xe77H
C3Tgge4tAl3IDdgl0IlrIjtu83Wj2iuJYL4P+CTWIsX3Bf2aQQKfEHEyUeAb
7GQMBDmAk05PJz8XkKnPv8zPCeJbFnjyc8Op15cJcsSBgUmCXDFrS6ggZ4zs
VxXkjne98QG/B7y7P0vQC5akFY3we8LHMXsEvUHGrtFt/B7hSTjHkd8r1Jq9
FPQMHNVkQe9guXZUmM8BCO37IOACmhTeCjgByUmWAm5As7BIwBE0J6jm87mC
c33Tr/M5g+8FBQLu4Nanbic+h6Chy3Xncwn3Ito28jmFjAuNdnxuobH+XTCf
Y/C+PxzE5xqMf6ld4XMOObvzLPncg8u0fuC/A/j11LrGxZLN+h8+7DPX
  "], $CellContext`eigArgs$$ = {}, $CellContext`plotArgs$$ = {
  PlotRange -> {0, 1}, PlotFunctions`PotentialTransform -> (#/2& ), 
   PlotFunctions`Potential -> Function[$CellContext`x, $CellContext`x^2]}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 6, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 1, 10, 1}}, Typeset`size$$ = {
     601., {173., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`n$6132$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$6132$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       PlotFunctions`PlotWavefunction[
         Part[$CellContext`\[Phi]$$, $CellContext`n$$], 
         If[Length[{$CellContext`x, -5, 5}] === 3, {
           Part[{$CellContext`x, -5, 5}, 2], 
           Part[{$CellContext`x, -5, 5}, 3]}, {
           Part[{$CellContext`x, -5, 5}, 1], 
           Part[{$CellContext`x, -5, 5}, -1]}], $CellContext`plotArgs$$], 
       "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{666., {232., 241.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.7080084915214314`*^9, 3.7080085744693594`*^9}, {
   3.70800927513428*^9, 3.7080092761914277`*^9}, {3.7080982929567122`*^9, 
   3.7080983107649217`*^9}, 
   3.7080984100756474`*^9},ExpressionUUID->"3154021a-2bc1-434b-8feb-\
7e658657869f"]
}, Open  ]],

Cell[TextData[{
 "These functions become erroneously spiky (with default NumberOfPoints on ",
 StyleBox["x \[Element]", "Input"],
 " ",
 StyleBox["[-5, 5]",
  FontWeight->"Bold"],
 ") before ",
 Cell[BoxData[
  FormBox[
   RowBox[{"coeff", " ", "~", " ", 
    SuperscriptBox["10", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "eda78d75-51bf-4d56-8ef1-a7eb7ae8812b"],
 ", or potential maxima of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["10", "2"], " ", 
     SuperscriptBox["5", "2"]}], " ", "=", " ", "2500"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a7041a90-02af-40ea-b69e-148b8627e1b9"]
}], "Text",
 CellChangeTimes->{{3.7080094467654676`*^9, 3.70800951640711*^9}, {
  3.7080095709817653`*^9, 
  3.7080096052704153`*^9}},ExpressionUUID->"431714a9-e0f0-474e-909c-\
6642c9476811"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UPPERBOUND", " ", "=", " ", 
   RowBox[{
    SuperscriptBox["10", "2"], " ", 
    SuperscriptBox["5", "2"]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.708009607648589*^9, 
  3.7080096249726157`*^9}},ExpressionUUID->"2fe1d05d-8430-4207-b7df-\
e14253cc07de"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["ShowSpectrum", "Code"], 
   StyleBox["[", "Code"], 
   StyleBox[" ", "Code"], 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      StyleBox["10", "Code"], "2"], 
     StyleBox[" ", "Code"], 
     StyleBox["x", "Code"]}], 
    StyleBox[",", "Code"], 
    StyleBox["\n", "Code"], 
    StyleBox["\t", "Code"], 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "XLEFT", ",", " ", "XRIGHT"}], "}"}], "Code"], 
    StyleBox[",", "Code"], 
    StyleBox["\n", "Code"], 
    StyleBox["\t", "Code"], 
    RowBox[{
     StyleBox["PlotRange", "Code"], 
     StyleBox[" ", "Code"], 
     StyleBox["\[Rule]", "Code"], " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", ".8"}], "}"}]}], ",", 
    StyleBox["\n", "Code"], 
    StyleBox["\t", "Code"], 
    StyleBox[
     RowBox[{"PotentialTransform", " ", "\[Rule]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "/", "2"}], "&"}], ")"}]}], "Code"]}], 
   StyleBox["\n", "Code"], 
   StyleBox["]", "Code"]}], "\n"}], "\n", 
 RowBox[{
  StyleBox["ShowSpectrum", "Code"], 
  StyleBox["[", "Code"], 
  StyleBox[" ", "Code"], 
  StyleBox["\n", "Code"], 
  StyleBox["\t", "Code"], 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     StyleBox["10", "Code"], "2"], " ", 
    SuperscriptBox[
     StyleBox["x", "Code"], "2"]}], 
   StyleBox[",", "Code"], 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "XLEFT", ",", " ", "XRIGHT"}], "}"}], "Code"], 
   StyleBox[",", "Code"], 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   RowBox[{
    StyleBox["PlotRange", "Code"], 
    StyleBox[" ", "Code"], 
    StyleBox["\[Rule]", "Code"], " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   StyleBox["\n", "Code"], 
   StyleBox["\t", "Code"], 
   StyleBox[
    RowBox[{"PotentialTransform", " ", "\[Rule]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "/", "2"}], "&"}], ")"}]}], "Code"]}], 
  StyleBox["\n", "Code"], 
  StyleBox["]", "Code"]}]}], "Input",
 CellChangeTimes->{{3.7080093524642577`*^9, 
  3.708009425301914*^9}},ExpressionUUID->"d5094b62-a385-4721-b419-\
5aed8825394b"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Lambda]$$ = {-44.154166666666654`, \
-34.05315656565661, -23.952146464646482`, -13.851136363636368`, \
-3.7501262626262637`, 6.350883838383834, 16.451893939393933`, 
  26.552904040404034`, 36.65391414141412, 
  46.75492424242424}, $CellContext`\[Phi]$$ = CompressedData["
1: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
Qfe0Aydo2SRwgpasACdoYCAH6QQ1ZAFOUM3Bp6QTZPBMBOkEWcRFOOhOEGOO
wlC6E4RFdrcW3QlSZjPuT3eCfJlTRW+58CAJKme9zG4MwVNuT812VhXBq51O
YYoLV2BDOQFeo2INeK3HpJZddAia2LNXbHTqLW3MOo62tJZPU+xnF/vVdhI6
8Wqv6OYzYTSrfjb56yUPoKmg7z5JD+JpbQb3fMMFr0Mtd0Y6paf9oCvmEgoK
Y+G0fLu+chZrD0ioLUhJdGMkxKK+xc26O5Jm6+TBqxHzEHJPI8anJh9A93+q
Bby0MYfCbf80NchGQirpkh7Mibdpl32iknKYomjHtkpZGHjGQ/7PcYfwwBSa
qhDba6Zb9yDj2oOua3mJtFtckOh8XAjE2WvvVNJgB6WPV9mJRadA1R+m1Zi1
EiGzV2Ufn8ck01r2qfEapx2CGlSsWsSP3YRq9NJSmMUSaLTOoeEskYdQ5of1
PpNc2phr4/ZNkZOjmGlK2M/77qxI8i6hK9szZPBTf2K35ynrIfyq3Km6dCct
esxed+lOckLvM8nRneAdqvykE/Hlt8AJrf8acGI6nQ+c8HtTTpa9KCc2YpST
99WUk3qGk9leykkYw8lJhpMyhpN4hpNNDCcCDCfBDCeSDCfyDCdBDCfdDCc1
DCelDCcCDCcsDCfHGE78GU50/5+TwwwnzAwnvQwnQQwn/2M4EWA4WWU44WU4
GWA4ecdw0s5wEslwEsxwso3hJIDhJIThRLuDcnJzinJyYo1ywhFKORmZ9wFO
bnZRToLOUU5s10SBE927YcBJgPRPTdKJADF3nXTC1vrrGOkk+22LjindCXvY
b/p/KIITL22WD6c72WRZObeuWgNev3n9nazLQ9Avh5GHSjlvaehSpO3y/kLa
00N6O8dfBECpj6PXV7s9opnwjjVb1SZAn73b2IIOR9OQ7141FQmhtJXrhiMD
5XGQn/TtqG6hAJrbN4knntF3aB+FY3dcPBYHacnPLxYap9HuS1o2fP77kKZj
dzJm7sNlWoKZ/f6BtWRaU0hKj59hHPScnz1j+610yPUL+jWpNJaW4TR66zl3
FoR4PDYJmE2h+Wyw31FwPQHaFVM9UzcYSSu32y890XGBZtDe3miyLZm2kPxN
J/RKMu29M0/d9EQKdNzoFC2Mz5g2Ed3/WSE5gma0U3Z63jIRsr4VKDAvn0Mz
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
/UT4/wCzr+Ru
  "], $CellContext`eigArgs$$ = {}, $CellContext`plotArgs$$ = {
  PlotRange -> {0, 0.8}, PlotFunctions`PotentialTransform -> (#/2& ), 
   PlotFunctions`Potential -> Function[$CellContext`x, 100 $CellContext`x]}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 5, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 1, 10, 1}}, Typeset`size$$ = {
     601., {173., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`n$6157$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$6157$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       PlotFunctions`PlotWavefunction[
         Part[$CellContext`\[Phi]$$, $CellContext`n$$], 
         If[Length[{$CellContext`x, -5, 5}] === 3, {
           Part[{$CellContext`x, -5, 5}, 2], 
           Part[{$CellContext`x, -5, 5}, 3]}, {
           Part[{$CellContext`x, -5, 5}, 1], 
           Part[{$CellContext`x, -5, 5}, -1]}], $CellContext`plotArgs$$], 
       "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{666., {232., 241.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.708009355572527*^9, 3.7080094258065*^9}, {
   3.7080982931287355`*^9, 3.7080983108909335`*^9}, 
   3.708098410121647*^9},ExpressionUUID->"fb7e1323-ca14-48d3-a65f-\
1324c128bf11"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Lambda]$$ = {7.068125911822177, 
  21.19281520073506, 35.28336528791378, 49.3183309496035, 63.277232362095866`,
   77.14018064808269, 90.88754399675007, 104.49962999865535`, 
  117.95636230207296`, 
  131.23692865653996`}, $CellContext`\[Phi]$$ = CompressedData["
1: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
  "], $CellContext`eigArgs$$ = {}, $CellContext`plotArgs$$ = {
  PlotRange -> {0, 1}, PlotFunctions`PotentialTransform -> (#/2& ), 
   PlotFunctions`Potential -> 
   Function[$CellContext`x, 100 $CellContext`x^2]}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 6, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 1, 10, 1}}, Typeset`size$$ = {
     601., {173., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`n$6182$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$6182$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       PlotFunctions`PlotWavefunction[
         Part[$CellContext`\[Phi]$$, $CellContext`n$$], 
         If[Length[{$CellContext`x, -5, 5}] === 3, {
           Part[{$CellContext`x, -5, 5}, 2], 
           Part[{$CellContext`x, -5, 5}, 3]}, {
           Part[{$CellContext`x, -5, 5}, 1], 
           Part[{$CellContext`x, -5, 5}, -1]}], $CellContext`plotArgs$$], 
       "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{666., {232., 241.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.708009355572527*^9, 3.7080094258065*^9}, {
   3.7080982931287355`*^9, 3.7080983108909335`*^9}, 
   3.7080984101466465`*^9},ExpressionUUID->"58caa2c0-178c-4fa1-89bb-\
3941d446f08d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"adjustPotential", "[", 
   RowBox[{"potential_", ",", " ", "x___"}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "grid", ",", " ", "potentialList", ",", " ", "minV", ",", " ", "maxV"}], 
     "}"}], ",", "\n", "\t\t\t", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"grid", ",", " ", "potentialList"}], "}"}], " ", "=", " ", 
      RowBox[{"Discretise", "[", 
       RowBox[{"potential", ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "XLEFT", ",", " ", "XRIGHT"}], "}"}], ",", 
        " ", 
        RowBox[{"NumberOfPoints", " ", "\[Rule]", " ", "200"}]}], "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"maxV", " ", "=", " ", 
      RowBox[{"Max", "[", "potentialList", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"minV", " ", "=", " ", 
      RowBox[{"Min", "[", "potentialList", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"N", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"potentialList", " ", "-", " ", "minV"}], 
        RowBox[{"maxV", " ", "-", " ", "minV"}]], " ", "UPPERBOUND"}], 
      "]"}]}]}], "\n", "\t", "]"}]}]], "Code",
 CellChangeTimes->{{3.708009712111512*^9, 3.7080097469555964`*^9}, {
  3.708009967855096*^9, 3.708010068603018*^9}, {3.7080258230596943`*^9, 
  3.7080258330989175`*^9}, {3.708025896152987*^9, 3.7080260556963873`*^9}, {
  3.708026108335287*^9, 3.7080261417275333`*^9}, {3.7080263701578083`*^9, 
  3.708026370324988*^9}},ExpressionUUID->"fdcad5f6-7381-4adb-8b6b-\
13176819cc9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["potential scaling distribution experiment", "Subsubsection",
 CellChangeTimes->{{3.7080071611187997`*^9, 3.708007169991707*^9}},
 CellTags->"c:9",ExpressionUUID->"05e6b78e-01d4-4286-858d-bd665dc8419a"],

Cell["What distribution of scales should we use?", "Text",
 CellChangeTimes->{{3.7080281083583794`*^9, 
  3.708028115430707*^9}},ExpressionUUID->"9fc29847-b0fe-4831-a911-\
d1e89f78676c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"ShowSpectrum", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"c", " ", 
      RowBox[{"adjustPotential", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"1", " ", 
          RowBox[{"UnitStep", "[", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"#", "+", "2"}], ")"}]}], "]"}]}], " ", "+", " ", 
         RowBox[{"1", " ", 
          RowBox[{"UnitStep", "[", 
           RowBox[{"#", "-", "2"}], "]"}]}], " ", "-", " ", 
         RowBox[{"1", " ", 
          RowBox[{"UnitStep", "[", 
           RowBox[{"#", "-", "3"}], "]"}]}]}], " ", "&"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", 
      RowBox[{"XLEFT", ",", " ", "XRIGHT"}], "}"}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "4"}], "}"}]}]}], "\[IndentingNewLine]", "\t", 
    "]"}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"{", 
    RowBox[{"c", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.708027207130418*^9, 3.7080273156785293`*^9}, {
  3.7080274149585485`*^9, 3.7080274248758926`*^9}, {3.708027494380951*^9, 
  3.708027518084778*^9}},ExpressionUUID->"81cf6d26-f07d-43b0-a0ee-\
ac01f309092c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 0.304, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 1}}, Typeset`size$$ = {666., {232., 241.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`c$6199$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$6199$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`ShowSpectrum[$CellContext`c$$ \
$CellContext`adjustPotential[
         1 UnitStep[-(# + 2)] + 1 UnitStep[# - 2] - 1 
          UnitStep[# - 3]& ], {$CellContext`XLEFT, $CellContext`XRIGHT}, 
        PlotRange -> {0, 4}], "Specifications" :> {{$CellContext`c$$, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{731., {291., 300.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7080272444757204`*^9, {3.708027308658224*^9, 3.7080273167565413`*^9}, 
   3.708027426582118*^9, {3.708027508377606*^9, 3.7080275190269923`*^9}, {
   3.708098293260765*^9, 3.708098311018959*^9}, 
   3.708098410181661*^9},ExpressionUUID->"d597a6f1-c5cd-4be4-9c97-\
7d3acaaa8cfa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPotentialScalings", "[", 
   RowBox[{"potential_", ",", " ", "x___"}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"fullPotential", " ", "=", " ", 
       RowBox[{"adjustPotential", "[", 
        RowBox[{"potential", ",", " ", "x"}], "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"scalings", " ", "=", " ", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SuperscriptBox["10", "n"], ",", " ", 
          RowBox[{"{", 
           RowBox[{"n", ",", " ", 
            RowBox[{"-", "4"}], ",", " ", "0"}], "}"}]}], "]"}], " ", "//", 
        " ", "N"}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"scalings", "[", 
        RowBox[{"[", "n", "]"}], "]"}], " ", "fullPotential"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", " ", 
        RowBox[{"Length", "[", "scalings", "]"}]}], "}"}]}], "]"}]}], "\n", 
   "\t", "]"}]}]], "Code",
 CellChangeTimes->{{3.7080277268899174`*^9, 3.7080277936440105`*^9}, {
  3.7080278650044107`*^9, 3.7080278706671877`*^9}, {3.708028060075605*^9, 
  3.7080280808166127`*^9}, {3.7080283789982915`*^9, 
  3.7080284199984846`*^9}},ExpressionUUID->"9dd6df36-f730-4b60-9a95-\
d017eef5f0fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"scaledVs", " ", "=", " ", 
     RowBox[{"getPotentialScalings", "[", " ", 
      RowBox[{
       SuperscriptBox["x", "3"], ",", " ", "x"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"ShowSpectrum", "[", "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{
       RowBox[{"scaledVs", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"{", 
        RowBox[{"XLEFT", ",", " ", "XRIGHT"}], "}"}], ",", 
       "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"PlotRange", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "4"}], "}"}]}]}], "\[IndentingNewLine]", 
      "\t\t", "]"}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", " ", 
       RowBox[{"Length", "[", "scaledVs", "]"}], ",", " ", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.708027207130418*^9, 3.7080273156785293`*^9}, {
  3.7080274149585485`*^9, 3.7080274248758926`*^9}, {3.708027494380951*^9, 
  3.708027518084778*^9}, {3.708028149590868*^9, 
  3.708028227335034*^9}},ExpressionUUID->"4c32b734-1315-440c-aced-\
e45bf84cd60f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 5, 1}}, Typeset`size$$ = {
    666., {232., 241.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$6217$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$6217$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`ShowSpectrum[
        Part[CompressedData["
1:eJxF2Hc4lfH7OPCTEQ0pMlJG5jmyZaR037Y2KSsce2QmUVQ0kCjjyEoykjQo
MjMOMqOMRJHVQCI5xxa/8/l8f9/f71zXc72u+7mv837f7+eP536ue7e990kn
JgKBwMq4mgj//zc9puL3LMYLRK/vNWHXvgpE5p88M/5hIOmt0Gn5+A70JVsZ
dJrFQdXaYGVK8z2IxdrvZcRkeKws9tH+QiqcfCn6qCn/IdD1fVQ5PTJg0Phg
1pH5TIh1jBQvvPQISs666JNp2bB0YiTezTEHmAibUydan0CQM310VeYpbPF+
xlJ58xk4s2pdhY/PYQ9P/dDDnXmw/rZB6bxlPnRKeRgqHHoJPU90lheHXsJP
zYLyH36v4GN/9VECawEEBPkFmMYWwCPOXsLsjkKQj57JG0srhMk/7wwOiryG
AimPWKa013Baps9Ym78IntJETmyMLoKw83onXJiKoTLDiN/Ztxgk/Q77cA8W
Q/yQhuBlwxLo7yf9eJ5XAh9thO8WbCsFIyuxgeRzpSD5TvO+9/tSkM7wj0Ri
GSh+7PbbEVwGWy0dBNm6yiCVKHWEV7wcnqqQ3pr4lsPWgHPHWyvLIX2E7WXU
+jeg6EXPyzj6BpI4YRt/zBvIrfiTutL+BjTct/BbcVaA8LYsQ50jFSD3qIhe
dbMC9gscH+l7UwECbn49j6crICtMIUVGrBKeuN6evmRSCasst9PvX6uEK8Zq
PmkvKmFeJ0UiuqcStDrLwwLXKkFxJt3CU6IKUpJPOfodqoLTVV89Ut2rQMlU
d99MZBVsMouJvv60CvKLm1UsG6tg8ezC39CRKihzE7/NtVIFjU9Ov928vRrm
BOOdr0lXg2D1qOoVqIYt182XN5tUQ4bV1CVNp2p4pvvq4k7/avgnn1tZGFoN
PtsHtnDHV8OnUTMl/YxqYE0XmrJ4UQ3dShrsZ0qrgSehQN+0thrSqqO9zd9V
g172Z0OvrmroP5CU9OhLNey/3CXOPlwNqhaUwuyfjH2aBzfenqgGkzrqdM2f
ahA6cHCPJa0aekm2IeS5ajC9Llc8sFAN3vtfxX1fqobZw9N9V1aqofoxzazk
H+P/unWtD1YZeQEXwsG1aiAIjZY+Yiipd6RigGFZ6P32BYaR3YNv1hju59kq
SiBQQVyzIJGZoZf1l4ytDNedi8qSZdjs27pmy/ClddqOVwwzZNafEl9HhbAv
bFw1DA/Z5xTfYaJCd9XYoxhmKmyf+ADtLFT4O2z76+R6KpilPWQTZqeCws6Y
JY2NVHAyUZV8sZkK37QSJoM4qRA3XFj4gosKNrKUPkNeKiiKqDeZCFBh7vXj
/o9CVEj4ORLUKUaF1fxpdhMSFXg3f/xpJc+oazbm4pwKFZhc9+yW1KTCM+sc
nRldRp0d7Dp2x6iwWGVy/ZIpFXxFohy1bKmw/m/R0eqzVHiwp/vB4gXGed9N
ls9do8LNFma2yrtUyBXf+eNkKhWCPqqVVj2lwuhH62/ry6nwSSS2WbGFCsqF
3W16fVQYC5M3OTRJhaGEzAptQg2wDih5qm+vAW2z740KpBq49q9cXglq4MW7
cjYd0xrIrxgtcPOqgfPv9OKfh9fAt5neLVyZNTAumx2aXlkD5wLyzth8qQGH
lgWa8UINPN9969U1vlpQuWg7T1OrhbGmUGK+RS283LKSU3a5Fi7pNvbuyKiF
PU4Tgp8aaqHA3eMLfbIWFk4eP3eZtw7GeO7pncc68MjXLR90rwNPATulpqQ6
6DWe2qrcWAcJRtOlkvN1ELfN/U4u8S2URNv/rTnzFibrvxj4x7yF3fk9tNaG
t3BQ39q8dfUtyIR59waq18MnN66egfP1QPx9qGT1ZT1sZBfoH/pTD26lYU8i
FRpAboESzHq+AXRr9d6eKmmAhG3pn4P/NcCW4ceid/Qa4d4eG6Yb0Y3A97u5
z6WvEYIFp7Zpk5qguPw9G/+lJsip8haZbmkCTfHuqnahZrD/yaRP9WsGAuEf
f31rMzB5NKb8kGyBkxLOcsQbLfBV8qsqZbgFItwV+GS134HOlIPSyqN3MJcb
NLF+YytEJgdlm5xrhakSl7qxL62wgaD7pFW/Deo9tpewFrUB52L/yRSJ9/D+
YcZATNJ7mD7jXPmH4wNYEeVPVoZ+gP/pGu3wv/0j4VUG0V0gC053EPbqjRfA
zA3y/bztFXBRz6ZuIbwWjKnKnxsmG+DFmpnnugPv4HX7jPWY7wcwJCS8tW7u
AOW8e85f27rglflmFu7GbjD9yRElVNQDRZp5k8JJn8FJbx2/mk8fLHwTWLqh
+ZXRPzhvSBIGgYO6YCRsNQRuEhOic0rDQM4ay8thGQEN2aDfOh0joFss0/Ul
6Rs0KoZbXj7zHTZTtgeq7/gB5DYbknDnD9jw8Q8Zw37C6RRjnucqoxDFvUXL
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
         "], $CellContext`n$$], {$CellContext`XLEFT, $CellContext`XRIGHT}, 
        PlotRange -> {0, 4}], 
      "Specifications" :> {{$CellContext`n$$, 1, 5, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{731., {291., 300.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7080282279865675`*^9, 3.708028435682328*^9, {3.708098293407787*^9, 
   3.708098311199484*^9}, 
   3.708098410222661*^9},ExpressionUUID->"a487c0eb-b1de-4cbb-9906-\
484cea4ef029"]
}, Open  ]],

Cell["\<\
Our scaling shows good variation for a given potential form, though looks \
linear for most forms in the large scaling, yielding Airy functions. \
\>", "Text",
 CellChangeTimes->{{3.7080301245904703`*^9, 3.7080301670864925`*^9}, 
   3.708030783421045*^9},ExpressionUUID->"89e0d047-4782-4558-b3ad-\
1c4d3190e143"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"scaledVs", " ", "=", " ", 
     RowBox[{"getPotentialScalings", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", " ", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"#", "+", "2"}], ")"}]}], "]"}]}], " ", "+", " ", 
        RowBox[{"1", " ", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"#", "-", "2"}], "]"}]}], " ", "-", " ", 
        RowBox[{"1", " ", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"#", "-", "3"}], "]"}]}]}], " ", "&"}], "]"}]}], "}"}], ",",
    "\[IndentingNewLine]", "\t", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"ShowSpectrum", "[", "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{
       RowBox[{"scaledVs", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"{", 
        RowBox[{"XLEFT", ",", " ", "XRIGHT"}], "}"}], ",", 
       "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"PlotRange", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "4"}], "}"}]}]}], "\[IndentingNewLine]", 
      "\t\t", "]"}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", " ", 
       RowBox[{"Length", "[", "scaledVs", "]"}], ",", " ", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.708027207130418*^9, 3.7080273156785293`*^9}, {
  3.7080274149585485`*^9, 3.7080274248758926`*^9}, {3.708027494380951*^9, 
  3.708027518084778*^9}, {3.708028149590868*^9, 3.708028227335034*^9}, {
  3.7080307438148794`*^9, 
  3.7080307578200192`*^9}},ExpressionUUID->"0c8d30b6-6dcc-4f95-9fd5-\
e1ade8454754"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 5, 1}}, Typeset`size$$ = {
    666., {232., 241.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$6235$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$6235$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`ShowSpectrum[
        Part[CompressedData["
1:eJzt08EJgEAMRNEgbiGW4cnUYAkLnrcN+7AZj5akF0sIA8N/EH4Dk6WP/Zgi
on13x+/ZqHMBJfX++Y9ac1LnAkrq/fMftdakzgWU1PvnP0rlSGpcQEm9f/6j
1nklNS6gpN4//1HmBdAaTmg=
         "], $CellContext`n$$], {$CellContext`XLEFT, $CellContext`XRIGHT}, 
        PlotRange -> {0, 4}], 
      "Specifications" :> {{$CellContext`n$$, 1, 5, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{731., {291., 300.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.708030758761949*^9, {3.708098293542798*^9, 3.7080983113390136`*^9}, 
   3.708098410256177*^9},ExpressionUUID->"8fed0180-2aaf-4b5f-8077-\
c7630edf2c5f"]
}, Open  ]],

Cell[TextData[{
 "This may be undone by step potentials. Since step functions don\
\[CloseCurlyQuote]t grow in x, their amplitudes should be able to appear of \
similar size to the max value of the greatest order polynomial in the \
potential. E.g",
 StyleBox[". [-1, 1] ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["XRIGHT", "p"], " ", 
    RowBox[{"UnitStep", "[", 
     RowBox[{"x", " ", "+", " ", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "5"}], ",", " ", "5"}], "]"}]}], "]"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",
  FontWeight->"Bold",ExpressionUUID->"2bdbfcea-3872-40df-96eb-658e81e9fe5d"]
}], "Text",
 CellChangeTimes->{{3.708030788266161*^9, 
  3.7080308127890697`*^9}},ExpressionUUID->"9119176f-76d2-4fcd-bd65-\
b8d0f0cd2c63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"scaledVs", " ", "=", " ", 
     RowBox[{"getPotentialScalings", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{".1", " ", 
         SuperscriptBox["x", "3"]}], " ", "+", " ", 
        RowBox[{".4", " ", 
         SuperscriptBox["x", "6"]}], " ", "-", " ", 
        RowBox[{".7", " ", 
         SuperscriptBox["x", "7"]}], " ", "+", " ", 
        RowBox[{".2", " ", 
         SuperscriptBox["x", "4"]}], " ", "+", " ", 
        RowBox[{"0.3", " ", 
         SuperscriptBox["XRIGHT", "7"], "  ", 
         RowBox[{"UnitStep", "[", "x", "]"}]}]}], ",", " ", "x"}], "]"}]}], 
    "}"}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"ShowSpectrum", "[", "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{
       RowBox[{"scaledVs", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"{", 
        RowBox[{"XLEFT", ",", " ", "XRIGHT"}], "}"}], ",", 
       "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"PlotRange", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "4"}], "}"}]}]}], "\[IndentingNewLine]", 
      "\t\t", "]"}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", " ", 
       RowBox[{"Length", "[", "scaledVs", "]"}], ",", " ", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.708027207130418*^9, 3.7080273156785293`*^9}, {
  3.7080274149585485`*^9, 3.7080274248758926`*^9}, {3.708027494380951*^9, 
  3.708027518084778*^9}, {3.708028149590868*^9, 3.708028227335034*^9}, {
  3.7080299947605257`*^9, 3.708030069376187*^9}, {3.7080301787292104`*^9, 
  3.7080301937608795`*^9}, {3.70803055028555*^9, 
  3.7080305846378236`*^9}},ExpressionUUID->"2d1b6cb2-9715-4c74-aa9d-\
71d70d2bde11"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 5, 1}}, Typeset`size$$ = {
    666., {232., 241.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$6253$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$6253$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`ShowSpectrum[
        Part[CompressedData["
1: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

         "], $CellContext`n$$], {$CellContext`XLEFT, $CellContext`XRIGHT}, 
        PlotRange -> {0, 4}], 
      "Specifications" :> {{$CellContext`n$$, 1, 5, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{731., {291., 300.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7080300092328625`*^9, 3.7080300705256863`*^9}, 
   3.7080301942253685`*^9, {3.7080305611232786`*^9, 3.7080305855318594`*^9}, {
   3.7080982936828694`*^9, 3.7080983114750166`*^9}, 
   3.7080984102876797`*^9},ExpressionUUID->"fe08b6f5-f286-4f21-a92b-\
83deaa487851"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.708030621018626*^9, 3.708030703331029*^9}, 
   3.7080308116462755`*^9},ExpressionUUID->"602760b6-5fe2-44d5-bd81-\
d5407fdb56b9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["potential forms", "Section",
 CellChangeTimes->{{3.707977529513442*^9, 3.7079775385452633`*^9}},
 CellTags->"c:10",ExpressionUUID->"5d2a6f32-1a47-4844-8454-91fe56a3b029"],

Cell["Our aim to produce a potential with form", "Text",
 CellChangeTimes->{{3.7080353947171965`*^9, 3.708035399429386*^9}, {
  3.70804064738756*^9, 
  3.708040655859515*^9}},ExpressionUUID->"5f708605-d343-40de-a7d0-\
88198996dc12"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"V", "(", "x", ")"}], " ", 
     SubscriptBox["|", 
      RowBox[{"XLEFT", " ", "<", " ", "x", " ", "<", " ", "XRIGHT"}]]}], " ", 
    "=", " ", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SubscriptBox["\[CapitalSigma]", "i"], "p"], " ", 
      SubscriptBox["c", "i"]}], 
     SubscriptBox["|", 
      SubscriptBox["Pr", "i"]], " ", 
     RowBox[{
      SuperscriptBox["x", "i"], " ", "+", "  ", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["\[CapitalSigma]", "s"], "j"], 
       SubscriptBox["d", "j"]}]}], 
     SubscriptBox["|", "U"], " ", 
     RowBox[{
      SuperscriptBox["XRIGHT", 
       RowBox[{"p", " "}]], 
      RowBox[{"Step", "(", 
       RowBox[{
        RowBox[{"x", " ", "+", " ", 
         RowBox[{"XRIGHT", " ", 
          SubscriptBox["t", "j"]}]}], 
        SubscriptBox["|", "U"]}], ")"}]}]}]}], TraditionalForm]],
  InitializationCell->True,
  FormatType->"TraditionalForm",ExpressionUUID->
  "75e18321-fe10-4af2-84a9-262236326d83"]
}], "Text",
 CellChangeTimes->{{3.7080349325681987`*^9, 3.708034969425841*^9}, {
  3.7080350180033135`*^9, 3.7080350748723493`*^9}, {3.7080351068878207`*^9, 
  3.7080351835222025`*^9}, {3.7080352261130643`*^9, 3.7080353653845987`*^9}, {
  3.7080354347353616`*^9, 3.7080354465819254`*^9}, {3.7080355399495173`*^9, 
  3.708035546998353*^9}},ExpressionUUID->"7d9ebff3-20f1-4f3e-ab46-\
1787f48e2983"],

Cell[TextData[{
 "where the step amplitudes and translations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "j"], ",", " ", 
    RowBox[{
     SubscriptBox["t", "j"], " ", "\[Element]", " ", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", " ", "1"}], "]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "15f39bef-04b0-4419-95da-00d4893bfa49"],
 " are uniformly distributed (on ",
 StyleBox["U",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ") and the polynomial coefficients ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "i"], " ", "\[Element]", " ", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", " ", "1"}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "77badc78-759b-4af1-af98-f555bdf30a20"],
 " follow some degree-dependent distribution ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Pr", "i"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "faf7f697-c040-476d-8618-187f24c7378a"],
 " still to be decided. Integers ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "92d90eb2-b9de-4fca-9a80-e6e0f4bfc527"],
 " and ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "dd08bbec-b206-48c3-b979-5dd8d72d412e"],
 " are the polynomial degree and number of present step potentials \
respectively, and are fixed a-priori.\n\nWe now decide ",
 StyleBox["p",
  FontWeight->"Bold"],
 ", ",
 StyleBox["s",
  FontWeight->"Bold"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Pr", "i"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontWeight->"Bold",ExpressionUUID->"9549b023-3a60-48c8-9bfb-2242b0ac7449"],
 "."
}], "Text",
 CellChangeTimes->{{3.7080354070362835`*^9, 3.708035409989643*^9}, {
  3.7080354555575895`*^9, 3.70803552633377*^9}, {3.708035611651422*^9, 
  3.70803575721124*^9}, {3.708035794162137*^9, 
  3.708035863418518*^9}},ExpressionUUID->"032c7489-2d4a-425e-b0a9-\
63879d136b2e"],

Cell[CellGroupData[{

Cell["coefficients, terms and translation distributions", "Subsection",
 CellChangeTimes->{{3.7079775447131476`*^9, 3.7079775619287767`*^9}, {
  3.7080312827172375`*^9, 3.708031296117771*^9}, {3.7080349166489735`*^9, 
  3.7080349246088295`*^9}, {3.708038487863662*^9, 3.708038492364914*^9}},
 CellTags->"c:11",ExpressionUUID->"e1f9d4df-11f5-4476-af69-edf42da924aa"],

Cell[TextData[{
 "For a grid ",
 StyleBox["x \[Element] [XLEFT = -5, XRIGHT=5]",
  FontWeight->"Bold"],
 " with potentials bounded by ",
 StyleBox["[0, UPPERBOUND = 2500]",
  FontWeight->"Bold"],
 ", we hypothesised generating polynomials of degree ",
 StyleBox["1, 2, ..., p",
  FontWeight->"Bold"],
 " with",
 StyleBox[" ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "i"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontWeight->"Bold",ExpressionUUID->"ac4e8d7e-261e-47b7-af14-b6e22d300b5a"],
 StyleBox[" \[Element] [-1, 1]",
  FontWeight->"Bold"],
 " coefficients superposed with step potentials of amplitude ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    StyleBox[
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], ",", " ", "1"}], "]"}], "  ", 
      SuperscriptBox["XRIGHT", "p"]}],
     FontWeight->"Bold"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5eab2231-42aa-40a5-aa59-90f258c62e01"],
 " and translations ",
 StyleBox["dx = [XLEFT, XRIGHT] ",
  FontWeight->"Bold"],
 "will generate many interesting potentials."
}], "Text",
 CellChangeTimes->{{3.708030871856092*^9, 3.7080309241694736`*^9}, {
  3.708031111543028*^9, 3.7080311433116484`*^9}, {3.7080311821345825`*^9, 
  3.708031272527253*^9}, {3.7080315169173007`*^9, 3.708031519508487*^9}, {
  3.708031593395809*^9, 3.708031620739272*^9}, {3.7080320312242045`*^9, 
  3.708032050560651*^9}, {3.708033423748659*^9, 3.708033432325277*^9}, {
  3.708034501148876*^9, 3.708034509845483*^9}, {3.7080383676489882`*^9, 
  3.7080383731988115`*^9}},ExpressionUUID->"cdc834ce-7060-493c-a862-\
d260ea9f4ed4"],

Cell[CellGroupData[{

Cell[TextData[{
 "choosing a degree (p) and coefficient distribution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["Pr", "i"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e912c413-89e3-4093-bf56-a6953a4eeec9"],
 ")"
}], "Subsubsection",
 CellChangeTimes->{{3.708038381606717*^9, 
  3.708038428940588*^9}},ExpressionUUID->"f1791aec-c460-44cf-810d-\
ff90998a0a79"],

Cell["\<\
We must now choose the polynomial order of the potential, and what \
probability distribution each coefficient should follow. \
Let\[CloseCurlyQuote]s first test uniform coefficients.\
\>", "Text",
 CellChangeTimes->{
  3.7080383712149096`*^9},ExpressionUUID->"6e6a2dda-8cab-4026-a8a4-\
747fa0d0d27e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getUniformRandomPolynomial", "[", 
   RowBox[{
    RowBox[{"x_:", "x"}], ",", " ", 
    RowBox[{"order_:", "5"}]}], "]"}], " ", ":=", "\[IndentingNewLine]", "\t", 
  RowBox[{"Total", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], " ", 
      SuperscriptBox["x", "n"]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "order"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708032063344765*^9, 3.7080320826535273`*^9}, {
   3.708032895064844*^9, 3.7080330480882864`*^9}, {3.7080331659758425`*^9, 
   3.7080332080473766`*^9}, 3.708033333671132*^9, {3.7080333829571257`*^9, 
   3.7080334048231897`*^9}, {3.708034210937194*^9, 3.708034292478758*^9}, {
   3.708034336301681*^9, 3.7080343429026833`*^9}, {3.7080369002290134`*^9, 
   3.708036901211862*^9}},ExpressionUUID->"85b96655-354d-425a-b8d5-\
608ccb690da1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"#", " ", "/.", " ", 
         RowBox[{"x", " ", "\[Rule]", " ", "r"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"r", ",", " ", "XLEFT", ",", " ", "XRIGHT"}], "}"}]}], "]"}],
       "&"}], ")"}], " ", "/@", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"getUniformRandomPolynomial", "[", 
       RowBox[{"x", ",", " ", "p"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"dummyvar", ",", " ", "9"}], "}"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"p", ",", " ", "1", ",", " ", "10", ",", " ", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7080343129515095`*^9, 3.708034487942217*^9}, 
   3.7080347648205233`*^9, {3.7080348001408367`*^9, 3.7080348698289156`*^9}, {
   3.708036905767728*^9, 3.7080369068915186`*^9}, {3.7080378534195995`*^9, 
   3.708037854624398*^9}},ExpressionUUID->"d3266da8-1f4b-4aab-849c-\
757bfb26d9d9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`p$$ = 8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`p$$], 1, 10, 1}}, Typeset`size$$ = {
    541.5, {888., 83.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`p$6271$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`p$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`p$$, $CellContext`p$6271$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Map[Plot[
         ReplaceAll[#, $CellContext`x -> $CellContext`r], {$CellContext`r, \
$CellContext`XLEFT, $CellContext`XRIGHT}]& , 
        Table[
         $CellContext`getUniformRandomPolynomial[$CellContext`x, \
$CellContext`p$$], {$CellContext`dummyvar, 9}]], 
      "Specifications" :> {{$CellContext`p$$, 1, 10, 1}}, 
      "Options" :> {ContinuousAction -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{607., {540., 549.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7080348092548466`*^9, 3.7080348323889313`*^9}, {
   3.7080348715753975`*^9, 3.708034909281234*^9}, {3.708035765267833*^9, 
   3.7080357663526297`*^9}, {3.708035871346877*^9, 3.7080358727377987`*^9}, {
   3.7080369184064827`*^9, 3.7080369277045965`*^9}, {3.7080378568227997`*^9, 
   3.708037859193824*^9}, {3.7080982938217444`*^9, 3.7080983116160526`*^9}, 
   3.7080984103766947`*^9, {3.7080984793478436`*^9, 
   3.7080984808019547`*^9}},ExpressionUUID->"785a5dd7-88bd-43ce-bc46-\
e13f42823c62"]
}, Open  ]],

Cell[TextData[{
 "These plots look largely the same; a uniform distribution for each \
coefficient (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Pr", "i"], " ", "=", " ", 
    RowBox[{"U", "  ", "\[ForAll]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "154874f6-1fcb-469e-97bb-aaca9a53af15"],
 " i) sees the greatest degree power dominate the large-scale potential \
behaviour.\nWe\[CloseCurlyQuote]ll need some family of distributions where \
the expectation of the absolute value of the outcome decreases with \
increasing ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b4ebc294-a918-4910-aed5-5d7919233118"],
 ".\nSince higher terms dominate ",
 StyleBox["polynomially",
  FontSlant->"Italic"],
 ", we should use a distribution with polynomial scaling on the parameter. "
}], "Text",
 CellChangeTimes->{{3.708035881865201*^9, 3.7080359236659775`*^9}, {
  3.708035956580776*^9, 3.7080359946968236`*^9}, {3.708036134896149*^9, 
  3.7080361866722455`*^9}, {3.708036266983237*^9, 3.7080362781829925`*^9}, {
  3.708036857385892*^9, 3.708036893338418*^9}, {3.7080369458412724`*^9, 
  3.7080369837774024`*^9}, {3.708037021456826*^9, 3.708037022208147*^9}, {
  3.7080962719421864`*^9, 3.7080963765335994`*^9}, {3.7080968010009484`*^9, 
  3.70809681473001*^9}, {3.7080972969496574`*^9, 
  3.7080972973574867`*^9}},ExpressionUUID->"2c1e6b1c-7ea3-4bd5-b98e-\
04fea942e3aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getInverseRandomPolynomial", "[", 
   RowBox[{
    RowBox[{"x_:", "x"}], ",", " ", 
    RowBox[{"order_:", "6"}]}], "]"}], " ", ":=", "\[IndentingNewLine]", "\t", 
  RowBox[{"Total", "[", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], "n", "  ", 
      SuperscriptBox["XRIGHT", 
       RowBox[{"-", "n"}]], 
      SuperscriptBox["x", "n"]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "order"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708032063344765*^9, 3.7080320826535273`*^9}, {
   3.708032895064844*^9, 3.7080330480882864`*^9}, {3.7080331659758425`*^9, 
   3.7080332080473766`*^9}, 3.708033333671132*^9, {3.7080333829571257`*^9, 
   3.7080334048231897`*^9}, {3.708034210937194*^9, 3.708034292478758*^9}, {
   3.708034336301681*^9, 3.7080343429026833`*^9}, {3.7080369002290134`*^9, 
   3.708036901211862*^9}, {3.7080371363444796`*^9, 3.708037152503506*^9}, {
   3.708037248779257*^9, 3.7080372612230253`*^9}, {3.7080376071415176`*^9, 
   3.7080376145182495`*^9}, {3.7080377279476414`*^9, 3.708037728316637*^9}, {
   3.708037995203198*^9, 3.7080379954197545`*^9}, {3.7080963903911767`*^9, 
   3.7080964190615683`*^9}, 3.7080964495978947`*^9, {3.7080972264389606`*^9, 
   3.7080972448708763`*^9}, {3.70809727865622*^9, 
   3.708097292422789*^9}},ExpressionUUID->"a20701cf-1d37-4e07-9b79-\
a72b0c647318"],

Cell["\<\
Note forcing the total degree positive will not force positive limiting \
behaviour, and setting the greatest-degree coefficient large will break all \
behaviour (not just limiting)\
\>", "Text",
 CellChangeTimes->{{3.708097300204199*^9, 
  3.7080973520210795`*^9}},ExpressionUUID->"fbb7cf75-1c36-45e9-80a8-\
02251146c29e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"#", " ", "/.", " ", 
         RowBox[{"x", " ", "\[Rule]", " ", "r"}]}], ",", 
        "\[IndentingNewLine]", "\t ", 
        RowBox[{"{", 
         RowBox[{"r", ",", " ", 
          RowBox[{"c", " ", "XLEFT"}], ",", " ", 
          RowBox[{"c", " ", "XRIGHT"}]}], "}"}], ",", "\[IndentingNewLine]", 
        "\t", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
       "]"}], "&"}], ")"}], " ", "/@", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"getInverseRandomPolynomial", "[", 
       RowBox[{"x", ",", " ", "p"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"numofplotsdummyvar", ",", " ", "9"}], "}"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "100"}], "}"}], ",", " ", "1", ",", " ", "100", ",", 
     " ", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", " ", "0.65"}], "}"}], ",", " ", "0.01", ",", " ", 
     "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7080343129515095`*^9, 3.708034487942217*^9}, 
   3.7080347648205233`*^9, {3.7080348001408367`*^9, 3.7080348698289156`*^9}, {
   3.708036905767728*^9, 3.7080369068915186`*^9}, {3.70803716353617*^9, 
   3.7080371663846617`*^9}, {3.7080372938720436`*^9, 3.708037310880458*^9}, {
   3.7080373495042157`*^9, 3.7080373768390703`*^9}, {3.7080374423107204`*^9, 
   3.7080374698778305`*^9}, {3.708037528814172*^9, 3.7080375289337697`*^9}, {
   3.708037664805109*^9, 3.708037665036149*^9}, {3.708037837884466*^9, 
   3.7080378433962917`*^9}, {3.7080380776263294`*^9, 3.708038088530887*^9}, {
   3.7080960384966288`*^9, 3.7080960444915924`*^9}, {3.708096554406062*^9, 
   3.7080965575044193`*^9}},ExpressionUUID->"3781e777-41e6-41c6-bce0-\
38f3217b599d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 0.805, $CellContext`p$$ = 100, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`p$$], 100}, 1, 100, 1}, {{
       Hold[$CellContext`c$$], 0.65}, 0.01, 1}}, Typeset`size$$ = {
    541.5, {896., 87.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`p$6288$$ = 
    0, $CellContext`c$6289$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`c$$ = 0.65, $CellContext`p$$ = 100}, 
      "ControllerVariables" :> {
        Hold[$CellContext`p$$, $CellContext`p$6288$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$6289$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Map[Plot[
         ReplaceAll[#, $CellContext`x -> $CellContext`r], {$CellContext`r, \
$CellContext`c$$ $CellContext`XLEFT, $CellContext`c$$ $CellContext`XRIGHT}, 
         PlotRange -> All]& , 
        Table[
         $CellContext`getInverseRandomPolynomial[$CellContext`x, \
$CellContext`p$$], {$CellContext`numofplotsdummyvar, 9}]], 
      "Specifications" :> {{{$CellContext`p$$, 100}, 1, 100, 
         1}, {{$CellContext`c$$, 0.65}, 0.01, 1}}, 
      "Options" :> {ContinuousAction -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{607., {561., 570.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7080371671826906`*^9, 3.7080372133999357`*^9}, {
   3.708037264872619*^9, 3.708037279069968*^9}, {3.708037317090172*^9, 
   3.7080373261024837`*^9}, {3.7080373775375013`*^9, 
   3.7080374508731375`*^9}, {3.7080375258116646`*^9, 3.708037562948987*^9}, {
   3.7080376189819884`*^9, 3.7080377858679132`*^9}, {3.708037843740176*^9, 
   3.7080379183511415`*^9}, {3.708037950050214*^9, 3.7080379660978923`*^9}, {
   3.708037997903284*^9, 3.7080380567051067`*^9}, {3.708038089304222*^9, 
   3.7080381151315365`*^9}, {3.7080960293360343`*^9, 3.708096087923086*^9}, {
   3.7080964270209756`*^9, 3.7080964355961905`*^9}, {3.7080965122034907`*^9, 
   3.708096563607388*^9}, {3.7080966316279025`*^9, 3.70809663628547*^9}, {
   3.7080968666742992`*^9, 3.7080968704610453`*^9}, {3.708096906705829*^9, 
   3.7080969142138634`*^9}, {3.7080970173606153`*^9, 3.708097049374751*^9}, {
   3.7080972511375446`*^9, 3.7080972685343447`*^9}, {3.708097357302085*^9, 
   3.708097362581914*^9}, {3.708098056321151*^9, 3.708098072800458*^9}, {
   3.7080982949079275`*^9, 3.708098311879081*^9}, 3.708098410412693*^9, {
   3.70809848511582*^9, 
   3.7080984854501605`*^9}},ExpressionUUID->"6343c423-7dc1-4f91-96bc-\
6c5c5478045b"]
}, Open  ]],

Cell["\<\
These plots have desirable distinct landscape on inner regions ([-3, 3]), and \
good rapid growth outside  (making our training data \
\[OpenCurlyDoubleQuote]less particle-in-a-boxy\[CloseCurlyDoubleQuote]). \
Negative boundary behaviour will need to be solved without polynomials. \
Notice the local range of the function doesn\[CloseCurlyQuote]t grow with the \
upper degree! We can work in quasi-linear regimes!\
\>", "Text",
 CellChangeTimes->{{3.7080379397446723`*^9, 3.7080379419769125`*^9}, {
  3.708038029183883*^9, 3.708038037911762*^9}, {3.7080381565662575`*^9, 
  3.708038196224119*^9}, {3.7080403986862936`*^9, 3.7080404193346024`*^9}, {
  3.7080974981558304`*^9, 
  3.708097520251875*^9}},ExpressionUUID->"127f4039-2f52-4d59-9570-\
a630466cfcb1"],

Cell[TextData[{
 "We decide on degree ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", "100"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "90cbf950-e10c-49c4-a334-3f06f6076984"],
 " and distribution \n ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["c", "i"], 
    SubscriptBox["|", 
     SubscriptBox["Pr", "i"]]}], " ", "=", "  ", 
   RowBox[{
    SubscriptBox["c2", "i"], 
    SubscriptBox["|", "U"], " ", 
    RowBox[{"i", "  ", 
     SuperscriptBox["XRIGHT", 
      RowBox[{"-", "i"}]]}]}]}]],ExpressionUUID->
  "518707e4-1e44-4235-a282-18b97bbb9f15"]
}], "Text",
 CellChangeTimes->{{3.7080382103500743`*^9, 3.708038213583677*^9}, {
  3.70803825902931*^9, 3.708038309303445*^9}, {3.70803844811786*^9, 
  3.708038458596936*^9}},ExpressionUUID->"92d3800c-239d-4d56-975b-\
a6dbefcc4ee7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getRandomPolynomial", "[", "x_", "]"}], " ", ":=", 
  "\[IndentingNewLine]", "\t", 
  RowBox[{"getInverseRandomPolynomial", "[", 
   RowBox[{"x", ",", " ", "100"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7080387621044755`*^9, 3.70803881337163*^9}, {
  3.7080402894553366`*^9, 
  3.708040290374635*^9}},ExpressionUUID->"f0654e87-38a6-4514-8f39-\
efeb81e388a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["choosing number of steps (s)", "Subsubsection",
 CellChangeTimes->{{3.7080384695884166`*^9, 3.7080384730614405`*^9}, {
  3.708038523662451*^9, 
  3.708038527276497*^9}},ExpressionUUID->"4747fc85-7373-4625-a709-\
2a3c45215270"],

Cell["\<\
Having chosen a drastic degree-dependence in the coefficients of the \
polynomials, we\[CloseCurlyQuote]ll need to decide a new maximum amplitude \
for our step functions. The range of our poly\[CloseCurlyQuote]s in [-5, 5] \
is approx linear in the domain; we\[CloseCurlyQuote]ll simply choose linear \
(with XRIGHT) amplitudes!\
\>", "Text",
 CellChangeTimes->{{3.708040334101629*^9, 3.7080403723343515`*^9}, {
  3.708040427293317*^9, 3.7080404542223043`*^9}, {3.7080404991091228`*^9, 
  3.70804050795786*^9}},ExpressionUUID->"78503eda-6c4a-4a1d-a6bf-\
613b3664fbe0"],

Cell["\<\
We\[CloseCurlyQuote]ll merely experiment on a sufficient number of step terms \
in the potential; it may also be random.\
\>", "Text",
 CellChangeTimes->{{3.7080386215630903`*^9, 3.7080386682828536`*^9}, {
   3.708038703915595*^9, 3.708038727243194*^9}, 
   3.7080405118215876`*^9},ExpressionUUID->"e04610ae-04da-4bf6-a369-\
d74d0de1c3ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getRandomStepsFixedNum", "[", 
   RowBox[{
    RowBox[{"x_:", "x"}], ",", " ", 
    RowBox[{"s_:", "5"}]}], "]"}], " ", ":=", "\[IndentingNewLine]", "\t", 
  RowBox[{"Total", "[", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"XRIGHT", " ", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], "]"}], " ", 
      RowBox[{"UnitStep", "[", 
       RowBox[{"x", " ", "+", " ", 
        RowBox[{"XRIGHT", " ", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], "]"}]}]}], "]"}]}], 
     ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", 
      RowBox[{"dummyvar", ",", " ", "s"}], "}"}]}], "\[IndentingNewLine]", 
    "\t", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708038841674886*^9, 3.7080389133614674`*^9}, {
  3.7080395003730383`*^9, 3.7080395228773518`*^9}, {3.7080395941165085`*^9, 
  3.708039607684871*^9}, {3.7080396580445986`*^9, 3.7080397408763084`*^9}, {
  3.7080405186784563`*^9, 
  3.7080405206938686`*^9}},ExpressionUUID->"fb45f425-5042-4b0b-9353-\
bed4f688aa8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"With", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"V", " ", "=", " ", 
       RowBox[{"getRandomStepsFixedNum", "[", 
        RowBox[{"r", ",", " ", "s"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t\t ", 
      RowBox[{
       RowBox[{"V", " ", "/.", " ", 
        RowBox[{"r", " ", "\[Rule]", " ", "x"}]}], ",", "\[IndentingNewLine]",
        "\t\t", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "XLEFT", ",", " ", "XRIGHT"}], "}"}], ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"Exclusions", "\[Rule]", " ", "None"}]}], 
      "\[IndentingNewLine]", "\t\t", "]"}]}], "\[IndentingNewLine]", "\t", 
    "]"}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"{", 
    RowBox[{"s", ",", " ", "1", ",", " ", "20", ",", " ", "1"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7080397003100433`*^9, 3.7080397208552227`*^9}, {
  3.7080397814917536`*^9, 3.708039852210984*^9}, {3.708039895674988*^9, 
  3.70803996938721*^9}},ExpressionUUID->"98f06143-93f1-4bb5-ae9a-\
4b24436202f0"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`s$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`s$$], 1, 20, 1}}, Typeset`size$$ = {
    504., {154., 162.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`s$6308$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`s$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$6308$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      With[{$CellContext`V = \
$CellContext`getRandomStepsFixedNum[$CellContext`r, $CellContext`s$$]}, 
        Plot[
         ReplaceAll[$CellContext`V, $CellContext`r -> $CellContext`x], \
{$CellContext`x, $CellContext`XLEFT, $CellContext`XRIGHT}, Exclusions -> 
         None]], "Specifications" :> {{$CellContext`s$$, 1, 20, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{569., {213., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7080398225526237`*^9, 3.708039852824155*^9, {3.7080399266471577`*^9, 
   3.708039970456151*^9}, 3.708040523821691*^9, {3.708098295444116*^9, 
   3.7080983124071684`*^9}, 
   3.708098410456202*^9},ExpressionUUID->"f759fcd5-3ad0-4f75-a43b-\
a97836a819c5"]
}, Open  ]],

Cell["\<\
A number is better decided by observing the total deformation to the \
potential.\
\>", "Text",
 CellChangeTimes->{{3.708040577075644*^9, 
  3.7080405955159807`*^9}},ExpressionUUID->"9192bf5b-cbfe-4dc2-92b2-\
3fd42b2a5231"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"With", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"V", " ", "=", " ", 
       RowBox[{
        RowBox[{"getRandomStepsFixedNum", "[", 
         RowBox[{"r", ",", " ", "s"}], "]"}], " ", "+", " ", 
        RowBox[{"getRandomPolynomial", "[", "r", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t\t ", 
      RowBox[{
       RowBox[{"V", " ", "/.", " ", 
        RowBox[{"r", " ", "\[Rule]", " ", "x"}]}], ",", "\[IndentingNewLine]",
        "\t\t", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "XLEFT", ",", " ", "XRIGHT"}], "}"}], ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"Exclusions", "\[Rule]", " ", "None"}]}], 
      "\[IndentingNewLine]", "\t\t", "]"}]}], "\[IndentingNewLine]", "\t", 
    "]"}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"{", 
    RowBox[{"s", ",", " ", "1", ",", " ", "20", ",", " ", "1"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7080397003100433`*^9, 3.7080397208552227`*^9}, {
  3.7080397814917536`*^9, 3.708039852210984*^9}, {3.708039895674988*^9, 
  3.70803996938721*^9}, {3.7080402588557577`*^9, 3.7080402593353662`*^9}, {
  3.708040302599993*^9, 
  3.7080403081040926`*^9}},ExpressionUUID->"2673a054-b6db-44d1-bf58-\
1bf04b6d87c5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`s$$ = 8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`s$$], 1, 20, 1}}, Typeset`size$$ = {
    504., {152., 160.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`s$6325$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`s$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$6325$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      With[{$CellContext`V = \
$CellContext`getRandomStepsFixedNum[$CellContext`r, $CellContext`s$$] + \
$CellContext`getRandomPolynomial[$CellContext`r]}, 
        Plot[
         ReplaceAll[$CellContext`V, $CellContext`r -> $CellContext`x], \
{$CellContext`x, $CellContext`XLEFT, $CellContext`XRIGHT}, Exclusions -> 
         None]], "Specifications" :> {{$CellContext`s$$, 1, 20, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{569., {211., 220.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.708040309053644*^9, 3.708040528021442*^9, {3.708098295533635*^9, 
   3.708098312494181*^9}, 
   3.7080984104837055`*^9},ExpressionUUID->"a01b18c6-9acc-4cc3-b612-\
2231b0e41d66"]
}, Open  ]],

Cell[TextData[{
 "A ",
 StyleBox["random",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "number in ",
 StyleBox["[0, 5]",
  FontWeight->"Bold"],
 " seems ideal"
}], "Text",
 CellChangeTimes->{{3.7080406124991827`*^9, 
  3.7080406247966447`*^9}},ExpressionUUID->"3e46be4e-eff3-46b8-8c36-\
5a91f594d5b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getRandomSteps", "[", "x_", "]"}], " ", ":=", "\n", "\t ", 
  RowBox[{"getRandomStepsFixedNum", "[", 
   RowBox[{"x", ",", " ", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], "]"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.7080938311853466`*^9, 
  3.7080939043278418`*^9}},ExpressionUUID->"e8186ea8-893f-400b-a7bb-\
5bdd19e7cc07"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["sampling and smoothing", "Subsection",
 CellChangeTimes->{{3.7079775680330343`*^9, 3.7079775712902007`*^9}},
 CellTags->"c:12",ExpressionUUID->"4e1ddef7-4c7a-427e-a6b8-99b9fc691a59"],

Cell["We\[CloseCurlyQuote]ve outlined parameters and distributions to \
create", "Text",
 CellChangeTimes->{{3.7080406632351065`*^9, 
  3.708040671668973*^9}},ExpressionUUID->"73fc45af-df03-437d-bdd7-\
1bf036d553de"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"V", "(", "x", ")"}], " ", 
     SubscriptBox["|", 
      RowBox[{"XLEFT", " ", "<", " ", "x", " ", "<", " ", "XRIGHT"}]]}], " ", 
    "=", " ", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       SubscriptBox["\[CapitalSigma]", "i"], "100"], " ", 
      SubscriptBox["c", "i"]}], 
     SubscriptBox["|", 
      RowBox[{"U", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "]"}]], " ", 
     RowBox[{
      RowBox[{"i", "  ", 
       SuperscriptBox["XRIGHT", 
        RowBox[{"-", "i"}]], "  ", 
       SuperscriptBox["x", "i"]}], " ", "+", "  ", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["\[CapitalSigma]", 
         RowBox[{"U", "[", 
          RowBox[{"0", ",", "5"}], "]"}]], "j"], 
       SubscriptBox["d", "j"]}]}], 
     SubscriptBox["|", 
      RowBox[{"U", "[", 
       RowBox[{"-", "1.1"}], "]"}]], " ", 
     RowBox[{"XRIGHT", " ", 
      RowBox[{"Step", "(", 
       RowBox[{
        RowBox[{"x", " ", "+", " ", 
         RowBox[{"XRIGHT", " ", 
          SubscriptBox["t", "j"]}]}], 
        SubscriptBox["|", 
         RowBox[{"U", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "]"}]]}], ")"}]}]}]}], 
   TraditionalForm]],
  InitializationCell->True,
  FormatType->"TraditionalForm",ExpressionUUID->
  "b920343b-4115-4b1d-a574-2fce81806c49"]
}], "Text",
 CellChangeTimes->{{3.7080349325681987`*^9, 3.708034969425841*^9}, {
  3.7080350180033135`*^9, 3.7080350748723493`*^9}, {3.7080351068878207`*^9, 
  3.7080351835222025`*^9}, {3.7080352261130643`*^9, 3.7080353653845987`*^9}, {
  3.7080354347353616`*^9, 3.7080354465819254`*^9}, {3.7080355399495173`*^9, 
  3.708035546998353*^9}, {3.7080408116094484`*^9, 3.708040870523284*^9}, {
  3.7080937309883914`*^9, 
  3.7080937572516513`*^9}},ExpressionUUID->"690a6ed0-b89c-4ab1-b2ea-\
df2b6defa88a"],

Cell["\<\
Note that the local and boundary behaviours are very different.\
\>", "Text",
 CellChangeTimes->{{3.7080961419656644`*^9, 
  3.708096163278535*^9}},ExpressionUUID->"899709ca-e38d-46f9-93b8-\
bccf33163c1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"With", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"V", " ", "=", 
       RowBox[{"Function", " ", "@@", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"getRandomSteps", "[", "#", "]"}], " ", "+", " ", 
          RowBox[{"getRandomPolynomial", "[", "#", "]"}]}], "}"}]}]}], "}"}], 
     ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"V", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", 
         RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", 
       RowBox[{"Exclusions", "\[Rule]", " ", "None"}], ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "\[IndentingNewLine]",
       "\t\t", "]"}]}], "\[IndentingNewLine]", "\t", "]"}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"{", 
    RowBox[{"plotrange", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", " ", "All"}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7080957051202717`*^9, 3.7080958057842226`*^9}, {
   3.7080958836724873`*^9, 3.70809593367684*^9}, {3.7080959792506285`*^9, 
   3.7080959811770205`*^9}, 3.708096139191422*^9, {3.708097602365574*^9, 
   3.7080976265334487`*^9}, {3.708098524971965*^9, 
   3.708098582707756*^9}},ExpressionUUID->"7fe19ff4-e63c-4b94-bed6-\
f8d8269713fa"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`plotrange$$ = Automatic, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`plotrange$$], {Automatic, All}}}, Typeset`size$$ = {
    504., {152., 160.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`plotrange$37094$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`plotrange$$ = Automatic}, 
      "ControllerVariables" :> {
        Hold[$CellContext`plotrange$$, $CellContext`plotrange$37094$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      With[{$CellContext`V$ = 
         Apply[Function, {$CellContext`getRandomSteps[#] + \
$CellContext`getRandomPolynomial[#]}]}, 
        Plot[
         $CellContext`V$[$CellContext`x], {$CellContext`x, -5, 5}, Exclusions -> 
         None, PlotRange -> $CellContext`plotrange$$]], 
      "Specifications" :> {{$CellContext`plotrange$$, {Automatic, All}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{569., {213., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7080957175586414`*^9, 3.708095732745718*^9}, {
   3.708095806239479*^9, 3.7080958326431713`*^9}, {3.7080958737179427`*^9, 
   3.7080958990357056`*^9}, 3.7080959823852916`*^9, {3.7080976040825844`*^9, 
   3.708097627707488*^9}, 3.7080976651467676`*^9, {3.7080982956836543`*^9, 
   3.7080983126352015`*^9}, 3.7080984105337057`*^9, 3.708098538140299*^9, {
   3.7080985750274444`*^9, 
   3.708098583130123*^9}},ExpressionUUID->"b81d076d-da1b-4038-98b3-\
bd1325ddd77e"]
}, Open  ]],

Cell[TextData[{
 "We\[CloseCurlyQuote]ll simply horizontally scale the function to avoid \
these \[OpenCurlyDoubleQuote]boundary plummets\[CloseCurlyDoubleQuote].\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "4.5"}], ",", " ", "4.5"}], "]"}], " ", "\[Rule]", " ", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", " ", "5"}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b9bcae52-378f-42c2-8b6d-80507c27df48"],
 " is a scale factor of ",
 Cell[BoxData[
  FormBox[
   FractionBox["4.5", "5"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4d84e347-c838-4dcd-9512-02f7760bb02a"]
}], "Text",
 CellChangeTimes->{{3.7080976351856627`*^9, 
  3.708097743067154*^9}},ExpressionUUID->"e0654808-df1f-469c-a9cb-\
728f37a919f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{"With", "[", "\[IndentingNewLine]", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"V", " ", "=", " ", 
      RowBox[{"getRandomPotentialFunction", "[", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\t\t", 
    RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{"x", " ", 
        FractionBox["4.5", "5"]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", 
      RowBox[{"Exclusions", "\[Rule]", " ", "None"}], ",", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
     "\t\t", "]"}]}], "\[IndentingNewLine]", "\t", "]"}]}]], "Input",
 CellChangeTimes->{{3.708097755906165*^9, 
  3.7080977643141546`*^9}},ExpressionUUID->"3cede240-63c9-484e-95da-\
6e575abdf44c"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
LYU1B/7//zywz+JeiGf/HPgfaxQ9HA==
         "]]}},
      Annotation[#, "Charting`Private`Tag$37496#1"]& ]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.708097758433016*^9, 3.708097779680187*^9}, {
   3.708097873143145*^9, 3.7080978806856704`*^9}, {3.7080982958166957`*^9, 
   3.7080983128102303`*^9}, 3.7080984107397933`*^9, 
   3.708098609246867*^9},ExpressionUUID->"c0e24445-a0c7-4edd-8b19-\
9c3d959738a1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"getRandomPotential", "[", "x_", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"getRandomSteps", "[", 
    RowBox[{"x", " ", 
     FractionBox["4.5", "5"]}], "]"}], " ", "+", " ", 
   RowBox[{"getRandomPolynomial", "[", 
    RowBox[{"x", " ", 
     FractionBox["4.5", "5"]}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7080956892517924`*^9, 3.70809568982358*^9}, 
   3.7080975686271434`*^9, {3.7080978333666773`*^9, 
   3.7080978499051447`*^9}},ExpressionUUID->"df85b5a2-1484-4456-9048-\
5d5e3562282d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getRandomPotentialFunction", "[", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Function", " ", "@@", " ", 
   RowBox[{"{", 
    RowBox[{"getRandomPotential", "[", "#", "]"}], "}"}]}]}]], "Code",
 CellChangeTimes->{{3.7080949280398674`*^9, 3.7080949464345016`*^9}, 
   3.7080957470491614`*^9},ExpressionUUID->"0ef2f4fc-4f29-4def-a56f-\
a8ce0c887c73"],

Cell[TextData[{
 "Finally, our potential is scaled between ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"[", 
     RowBox[{"0", ",", " ", 
      RowBox[{"UPPERBOUND", "=", "2500"}]}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ec6d846d-19ed-4346-8999-638abf3c8854"]
}], "Text",
 CellChangeTimes->{{3.7080986342425165`*^9, 3.7080986635694504`*^9}, 
   3.7080987105302916`*^9},ExpressionUUID->"43fff534-8157-451f-9540-\
3022cfdc6107"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"V", " ", "=", " ", 
     RowBox[{"adjustPotential", "[", 
      RowBox[{"getRandomPotentialFunction", "[", "]"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"PlotWavefunction", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{"0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"XLEFT", ",", " ", "XRIGHT"}], "}"}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"Potential", " ", "\[Rule]", " ", "V"}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "UPPERBOUND"}], "}"}]}]}], 
    "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7080940651138163`*^9, 3.7080940953525505`*^9}, {
   3.70809416088709*^9, 3.7080941626460657`*^9}, {3.7080941955203485`*^9, 
   3.7080942514033923`*^9}, {3.7080943246131477`*^9, 
   3.7080943904857197`*^9}, {3.7080944248853965`*^9, 3.708094426300209*^9}, {
   3.708095000823447*^9, 3.708095149582697*^9}, {3.7080951815266733`*^9, 
   3.7080951857965665`*^9}, 3.708095338400709*^9, {3.7080956158057585`*^9, 
   3.7080956516675205`*^9}},ExpressionUUID->"fb6a6ed4-8cdb-4e33-99fd-\
4ec6c925e238"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      GraphicsComplexBox[CompressedData["
1:eJxF03lMElAcwHEgPEASlCwpzaPmig11unQeLc0YbiUSBrVcZijNGYWpMx1q
OVHT2lIRnSh/iEY6Vra2vFbTwnTTIpcTMzooE6+sRJnkRbXp773t7e2z73vv
v5+PQMwV4jAYTNy//f8smI4z22zUPszW0mCzWjChyHZCVhDtgiuY+v6VSFXl
AuZqFSmHhyhgya+jospJMrjrhiK9Pd4ZzK7meW/Wk8As5XN27A8iWD2Yp89K
JICTpDVub1sdwIXJOx45Ue3BGIZXb0wJHvzhTn2ZZgwH9iCmtS0fx4KvHKHb
GTxsvdtOCf3cqtWugem54bZrLVZw06eE/rxoC3i6yC2S5W4G98gPMWf4C+DA
2YnlAKUJfKLHQNjgG8EZbe1WF+oomH/5QNO7/G7w4OuJiuCErmPbDme8eMKp
GwXjctw+ptKMYAcSp0jw0wQuNupjMpsXwI8bSjmF5kWwWJVK+c63gJPSFZ5l
RVZw+emcsODGNTB+l9x0c3UTPD5c8ltKxkZtmycRhCi0OLDIad5Xdx4P9tIM
1NrP2YElXTEJ5AYHcIZa1BESQACTcKEC/ykimHn1jJwuI4Hduz3FzIPO4OrM
21WB42QwtzSeoeyggOmJUl5LgQtYbyKoZDxXsE4wFe3qRQVvzQO4Jjv55K0G
NA9+92l7y++h7ug/vr/vDeqrxbaHcWdR5w4El/YPIr+sqHY0mtD91CzzSkAE
6s+e+o2oNcgz+qjIb5PI3mEZG+Il9J42P+/hw0D9OsPbUqdEVrLDL42OIQdd
ZO1ZXERmU76sdP5B/y2r09ppfqifmm0sq6xFziV2Lg3rkHfu62+bnUM+1zwk
tVqRTZLdFsM6+v8r/oFV7ot6GMswQpIhC9MskbHDyKu5uCXhNDITS9BlW5DT
mXcj8teR/wJawSEC
       "], {{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], {
            GrayLevel[0], 
            
            LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
             11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
             27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 
             43, 44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 
             58, 55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]}}, 
          Annotation[#, "Charting`Private`Tag$145131#1"]& ]}}, 
       VertexColors -> CompressedData["
1:eJxTTMoPSmViYGDwBWJmIL6zm632Ze4De0cPMYPG6Of2IU+r3ZRM7tiPio+K
j4qPio+Kj4qPimOKAwADqUE4
        "]], {}, {}}, {
      GraphicsComplexBox[CompressedData["
1:eJw9mndcjX/4/9tD+xwzoowQkbbE+yIahNCWKBVaVNqRhpZ2ndM8depQGggh
xH2LprRLe++lvcf3/vwev++3f3q8H/d9rve4rvfr9bzO44iZ3r9qzsLExKTA
ysT03/9HAxen1tfJuNKr3+oxdsGQxezwnEmBjJtpeLEoKFKA3VxNetsNEi6i
73K61CsWyI2F1qkRQnjUhZITLFgcXP0Zf/tgmSDu722c5KIRD+7/TlqH9wjg
6vylbbLJ8ZDnHG/55jI//qHMkTbZFQ+XInVE1+J48Wl7/yrFwwmgRvt2SX10
A74g+N2KzzUB0opdGxyuc+OjmWN1iz8SwNg3elPlS07c6W7KyAOBRHh8i/U1
D5kD12RayBbTTgQmyV2YylM2fOUGa9jfyERofhbnn1XPgrseN27mrU6EHRvu
ZsycYcYt/Y6wPGangZWcBHvLjnXsmpHdJjtFGtxWaH/58+cy9r3Hwv8iHwMk
XJTWbZ8vYGGs0xcuIQaktF375Xp6FvuXSxdUusKAAa9Nympbp7D451tNJW8x
4AvlwLlB3THsHve3+ne2DJAaapo5SuvHTA0rZD3cGfC/58v0//8eZLxZECLX
YpousbJPt9JB12JPSo3HZ2zl89opdzE6FJc3Bclcy0MXN0wlOxykg5Lkj3da
MbUool9oSu4YHVicNrWabetEDY6kgPuSCcDJq+VlOt6PXoodqrwelAA+nQ0q
9owx9E5yOm7LDhrkJPhpPZ6aRPlK1T2Xi6hwP9VMsFd3FjkbPGQcLqOCsWW8
iL/XAto/tX+HKjEOvOJ0XCZxGdm5U/v0iffZNlL6PZfWUILpdFZAPhX+/n46
4SvADH84VCMmsqmg424qH/+TBVYX3ULUoqhgzTOyu8KQDTzGfOlkOyrsyiqi
cgyzg9SuVusQFSq456lcE0jghACumUdXmKnwIM36o/xRbmBsDyjwekMBXhYF
0yN9G4BTx3drhRIFztloUySieGE2/u1ncUY0bP0scv/cXn6oEIuSCxuKgkj7
gAipvwIg9uL1SYP2SLjqd1mS9lEQUv6yBTqHRIDEdV+d54+EoMtC/rIRJQwa
+rlTo3RIMDK1Nv9lWxBUmPadJu0iA1/DrTcN+7z/N18gpDt3yWJYE0U/vHXh
SQIZDx1Tu1d/MxL0ZW6M8JaR8HM/Ak46KsdAcJJf5Y15IfyqTPK67pk4eHdR
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
       "], {{{}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1: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
Kw==
             "]]}]}, {}, {}}, {{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Thickness[Large], 
            RGBColor[1, 0, 0]], 
           LineBox[CompressedData["
1:eJwl0jdMlAEYgOGfw4L0nhhjootx0ASph4XBwd47drFHBRUnHSxgSUxsYC9R
wF4mTWygDhorapyMBRycFJAYB2Mszx+Hl+973+8uOf67vmUVU8pjgiD4jnCO
iARBjSUBdbwUe7R3fCq+8Dys0m7yHDzmm3Faa+NL8ZvTYKQ/tTwR9Xw29mrv
+TR85flYrd3ig/CEb8EZrZ0vwx8ei1HaQZ6EBj4H+7QPfDraeAHWaLd5Lp7y
rajTOvhy/OVdMFo7xJNxls/Ffu0jn4F2Xohy7Q7PwzO+DV0xRj+speAcn4ci
VOh3tXw851XohrH6ES0V5/l8RNEdceiBeCQgEUlIRgrGee9R70vDBb4AxVir
N2oFeMGrkYrx+jEtHRf5QhzQWvhMdPBGHo8q3mmWIMeDHuy2zt4UfpdmofnG
7IPe7s3u1+0xSOMbw9+GPYoBfLt7vf2bHsdXmC3hLfL/h/bQTMdu+w9zOPK8
Ls15gv24/tPMMJvNXujpfsn9mv1X+JvileZnnov+fJF7jb1Vj+WzzLe8X/hZ
3JrMBFTrQ/h6+z17EV7yHUjHRP2ElonLvAxDkYFMZGGS15x0z8IVvhjDUKnf
16J4xXciG5P1U1o2rvIlqNU+8dLw+fMSbNAe8GK85jd4BJv4Lt5g77SvRKt9
YPg92B+FzwtF/u9/YyxvvQ==
            "]], 
           LineBox[CompressedData["
1:eJwV1WUUFWUUheFLC0qYdHeHtRSR7samu6QllVa6BDsBlQbpRukG6bRpEGMB
Eorgc3686+y9z8zcOzPfdyZ36+6NuiVJJBKVkiYSTyRLJNKit+Ac/yja6b2n
npI1xkm6IPI67oreevo+ZORH6F+hy6M0X16/D71Jfkd9Wj2s5kYO/YP6K+hk
eIAfqH+Zfgpj9GaoV2SdkRSZZI1kU+mMWMi3RwVkRhY8pz8tjsUivgMqoq98
s6wsDvFjkRXPy6fLMmMx3xHvy07zTXCV38CnxUi+Et+P3kLfVZ9Rj6h5kNM9
HNZfSSfHg/wg/d/j3lGcH6c/k74qT82/qv7Kl0ABPhm/nX4I4+lsjn+B/oL+
R82i7lOzhXb8Ev2F9G15Or6Pep5/DIX5Tvof0Gfkyfmm6vd8IeTjr+lvpNNh
lF5lvj+9NRaFfjn1aLxv5OKPiFfRKeI/8oP1/6DLxj3w4/Vn0dfkafgu6im+
ZKwbPjm/g34YE+jramVkd96L6peyf9Ws6v7IQztvqf4i+j95er6veoF/HEX4
zvof0mflKfhm6g/xDPC33iY1PUbLq/AD6G30s3F//ATMjmP5rnEN7OQfwUT6
hlolnqtr53DsS/RX8tvxLtQDsaZD6y/TX0zfkWfg+6kXY3+haLxz/Y/oc/KU
fHP1x7gPXNfbrGaIPRDrT62AqvLX1e2yJLG31GPxDmM/8cf0V9Mp49nyQ/T/
jPUZz56fqD8nri+/l49Nf5ovFefQu2IPYxKd07Ev0zPo7FjOd8HHsvN8i3ge
fDW8IdvBV8Bxfg2fCkP5Sfxc+gbdHamwm8+Et+lc+q/QM+kcOBh7CCvkS9S7
sv64RD+JrvJP1AtxLffQUv0pniny8zf1t9D3x2/wY/Wv0RVRhq+uP5DeGfOE
rxj/Oc6N/cuf0F9L3xPvnR+m/xddLv6v3jz1pqwHztCl41h6j5oZk+ncjmtM
z4rniJX8Uj6BAXw38lP6It0Kt/gaGCTbFfMlZiw/GfNlt/ieMSuQR9ZENjue
HVbx3fGZ7BLfOmYEXxODZbtjP8d+56cgL5rK58T/xGq+B2phiHxP7I3YN/w7
yIdm8rnx21jD90RtDJXvlVWNtcu/i/xoLp8ny4u1fC/UwTD5d7Jq8c7im4IC
aCGfL8uHdfxrqIvh8n2y6vg5ZjIKoqV8gSw/vuF7ox7elO+X1cAvMfNQCK3k
X8sK4Nv4HqE+3pIfkNWM+RuzA4XRWr5QVhDr47uBBhghPyirFfMs9i+KoI18
kawQNsS3AQ0xUn5IVjv2WewdFEVb+WJZYWyMWRvfNIySH5bVibUV6xzF0E6+
RFYEm2JuxTcOo+VHZHVxNtYUiqO9fKmsKDbHzIhvHMbIj8rq4VysGZRAB/ky
WTFsif0c3xuMlR+T1cd5/nOUREf5cllxbI39FHMb4+THZQ1iLvNTUQqdYj/L
SmBbrPO4luw3vk3M+pilGC87wTeMWclPQ2l0lq+UlcT2WNdxbdllvm3M35hV
mCA7yTeKecGv41NjOD+dX0D/Q/dCGuzls2AKfTPma3xL7Pkyjv0fye0cWA==

            "]]}, 
          Annotation[#, "Charting`Private`Tag$145174#1"]& ]}}], {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox[
       "\"Abs[\[Psi][x]\\!\\(\\*SuperscriptBox[\\(]\\), \\(2\\)]\\)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, 
     PlotRange -> {{-4.9999997959183675`, 4.9999997959183675`}, {0, 2500}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Arg[\[Psi][x]]\"", {FontFamily -> "Arial"}, Background -> 
                Automatic, StripOnInput -> False]}, {
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
                  "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.19878137861521`}, 
                    Offset[{4., 0}, {7.5, -112.19878137861521`}]}, {{
                    7.5, -56.27853081669613}, 
                    Offset[{4., 0}, {7.5, -56.27853081669613}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.27853081669613}, 
                    Offset[{4., 0}, {7.5, 56.27853081669613}]}, {{7.5, 
                    112.19878137861521`}, 
                    Offset[{4., 0}, {7.5, 112.19878137861521`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.19878137861521`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.27853081669613}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.27853081669613}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.19878137861521`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                     StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"\"Rainbow\"", ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Arg[\[Psi][x]]\""}], ",", 
           RowBox[{"\"Ticks\"", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "3.1315926535897933`"}], ",", 
                 RowBox[{"-", "1.5707963267948966`"}], ",", "0.`", ",", 
                 "1.5707963267948966`", ",", "3.1315926535897933`"}], "}"}]}],
            ",", 
           RowBox[{"\"TickLabels\"", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                 "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.708098295939169*^9, 3.708098312896735*^9}, 
   3.708098410961475*^9, {3.7080986215137997`*^9, 3.7080986313875074`*^9}, {
   3.708099271017005*^9, 3.7080992783900905`*^9}, 
   3.708103425723569*^9},ExpressionUUID->"0ce960a3-4c9c-413e-bb81-\
2c8af4dc1e7f"]
}, Open  ]],

Cell[TextData[{
 "and a distribution of scalings of ",
 StyleBox["UPPERBOUND",
  FontWeight->"Bold"],
 " are used for finding solutions."
}], "Text",
 CellChangeTimes->{{3.708098713777754*^9, 
  3.708098725993516*^9}},ExpressionUUID->"61707247-b3c6-4e04-b4ba-\
9ba5fe5c0d81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"VScalings", " ", "=", " ", 
     RowBox[{"getPotentialScalings", "[", 
      RowBox[{"getRandomPotentialFunction", "[", "]"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"PlotWavefunction", "[", "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{"0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"XLEFT", ",", " ", "XRIGHT"}], "}"}], ",", 
       "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"Potential", " ", "\[Rule]", " ", 
        RowBox[{"VScalings", "[", 
         RowBox[{"[", "s", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       "\t\t\t", 
       RowBox[{"PlotRange", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "UPPERBOUND"}], "}"}]}]}], "\[IndentingNewLine]", 
      "\t\t", "]"}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", 
      RowBox[{"s", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "VScalings", "]"}], ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7080940651138163`*^9, 3.7080940953525505`*^9}, {
   3.70809416088709*^9, 3.7080941626460657`*^9}, {3.7080941955203485`*^9, 
   3.7080942514033923`*^9}, {3.7080943246131477`*^9, 
   3.7080943904857197`*^9}, {3.7080944248853965`*^9, 3.708094426300209*^9}, {
   3.708095000823447*^9, 3.708095149582697*^9}, {3.7080951815266733`*^9, 
   3.7080951857965665`*^9}, 3.708095338400709*^9, {3.7080956158057585`*^9, 
   3.7080956516675205`*^9}, {3.7080988482494864`*^9, 
   3.7080989084984665`*^9}, {3.708098978648427*^9, 3.7080990503203573`*^9}, {
   3.7080991215111637`*^9, 3.7080991264770365`*^9}, {3.7080991676489954`*^9, 
   3.708099221476514*^9}, 
   3.708099333925539*^9},ExpressionUUID->"4bad230b-548f-43b8-a1bf-\
85a3d9718d95"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`s$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`s$$], 1, 5, 1}}, Typeset`size$$ = {
    601., {173., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`s$145395$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`s$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$145395$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      PlotFunctions`PlotWavefunction[
       0, {$CellContext`XLEFT, $CellContext`XRIGHT}, PlotFunctions`Potential -> 
        Part[CompressedData["
1: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
          "], $CellContext`s$$], PlotRange -> {0, $CellContext`UPPERBOUND}], 
      "Specifications" :> {{$CellContext`s$$, 1, 5, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{666., {232., 241.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.708099052318493*^9, {3.7080991226678452`*^9, 3.7080991272906246`*^9}, {
   3.708099174627542*^9, 3.7080992518261895`*^9}, 3.7080993362656107`*^9, {
   3.708099438181176*^9, 3.7080994444053617`*^9}, 3.708099574893521*^9, 
   3.7081034305000577`*^9},ExpressionUUID->"baae3d89-91d9-48d7-ad9e-\
9e0485ace1d6"]
}, Open  ]],

Cell["\<\
We finally remark that we\[CloseCurlyQuote]re still making a very particular \
sampling of potentials; relative variation of our potentials is very small. \
For example, there\[CloseCurlyQuote]s no simulation of a quadratic potential \
(which keeps growing boundaries).\
\>", "Text",
 CellChangeTimes->{{3.708099467867432*^9, 
  3.7080995359150047`*^9}},ExpressionUUID->"9c0b32e7-17e8-42ba-8d46-\
6741292ab2a9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Formatting Solutions", "Chapter",
 CellChangeTimes->{{3.7079770161899347`*^9, 3.70797702187726*^9}},
 CellTags->"c:13",ExpressionUUID->"85774e08-09f0-420f-84f9-2f62a2279a4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"VScalings", " ", "=", " ", 
     RowBox[{"getPotentialScalings", "[", 
      RowBox[{"getRandomPotentialFunction", "[", "]"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"ShowSpectrum", "[", " ", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"VScalings", "[", 
        RowBox[{"[", "scaling", "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"XLEFT", ",", " ", "XRIGHT"}], "}"}], ",", 
       "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"PotentialTransform", " ", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", "/", "10"}], " ", "&"}], ")"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "\n", "\t\t", 
      "]"}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"scaling", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "VScalings", "]"}], ",", " ", "1"}], "}"}]}], 
    "\n", "\t", "]"}]}], "\[IndentingNewLine]", "]"}]], "Code",
 CellChangeTimes->{{3.708099619635603*^9, 3.70809971377087*^9}, {
  3.708099767746296*^9, 3.7080998598822336`*^9}, {3.708099936651101*^9, 
  3.708099940993033*^9}, {3.7081034531407256`*^9, 
  3.7081034607886724`*^9}},ExpressionUUID->"08ce9c87-8123-42a7-acbd-\
9a39dc111385"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`scaling$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`scaling$$], 1, 5, 1}}, Typeset`size$$ = {
    529., {187., 194.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`scaling$156345$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`scaling$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`scaling$$, $CellContext`scaling$156345$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`ShowSpectrum[
        Part[CompressedData["
1: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
l4KzNVVnqTjS8N3vfioRy4z/8CMkC/8PKtKGWg==
         "], $CellContext`scaling$$], {$CellContext`XLEFT, \
$CellContext`XRIGHT}, PlotFunctions`PotentialTransform -> (#/10& ), PlotRange -> 
        All], "Specifications" :> {{$CellContext`scaling$$, 1, 5, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{584., {237., 244.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.708099613392329*^9, 3.7080997636747046`*^9}, {
  3.7080998616278687`*^9, 3.7080999877769794`*^9}, {3.708100049217462*^9, 
  3.7081000522893143`*^9}, {3.708103461354616*^9, 
  3.7081035033236876`*^9}},ExpressionUUID->"28b63cb3-4f6e-497b-ac1e-\
4af6f32e62d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetModel", "[", 
  "\"\<Inception V1 Trained on ImageNet Competition Data\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7080012264639854`*^9, 
  3.7080012434703207`*^9}},ExpressionUUID->"2dc12446-9f12-4886-8cab-\
980f57a8c678"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "conv1_7x7_s2" -> 
           Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{64, 3, 7, 7}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 64, "KernelSize" -> {7, 7}, 
               "Stride" -> {2, 2}, "PaddingSize" -> {3, 3}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               3, "$GroupNumber" -> 1, "$InputSize" -> {224, 224}, 
               "$OutputSize" -> {112, 112}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 112, 112}, NeuralNetworks`RealT]]],
            "conv1_relu_7x7" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {64, 112, 112}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64, 112, 112}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 112, 112}, NeuralNetworks`RealT]]],
            "pool1_3x3_s2_pad" -> 
           Association[
            "Type" -> "Padding", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Specification" -> {{0, 0}, {0, 1}, {0, 1}}, "Padding" -> 
               "Fixed", "Rank" -> 3, "$InputSize" -> {64, 112, 112}, 
               "$OutputSize" -> {64, 113, 113}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64, 112, 112}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 113, 113}, NeuralNetworks`RealT]]],
            "pool1_3x3_s2" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 64, "$InputSize" -> {113, 113}, 
               "$OutputSize" -> {56, 56}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64, 113, 113}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 56, 56}, NeuralNetworks`RealT]]], 
           "pool1_norm1" -> 
           Association[
            "Type" -> "LocalResponseNormalization", "Arrays" -> Association[],
              "Parameters" -> 
             Association[
              "ChannelWindowSize" -> 2, "Alpha" -> 0.0001, "Beta" -> 0.75, 
               "Bias" -> 1., "$Channel" -> 64, "$Shape" -> 
               NeuralNetworks`TensorT[{64, 56, 56}, NeuralNetworks`RealT]], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 56, 56}, NeuralNetworks`RealT]]], 
           "conv2_3x3_reduce" -> 
           Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{64, 64, 1, 1}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               64, "$GroupNumber" -> 1, "$InputSize" -> {56, 56}, 
               "$OutputSize" -> {56, 56}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 56, 56}, NeuralNetworks`RealT]]], 
           "conv2_relu_3x3_reduce" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
             Association[
              "Input" -> 
               NeuralNetworks`TensorT[{64, 56, 56}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 56, 56}, NeuralNetworks`RealT]]], 
           "conv2_3x3" -> 
           Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{192, 64, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               64, "$GroupNumber" -> 1, "$InputSize" -> {56, 56}, 
               "$OutputSize" -> {56, 56}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{192, 56, 56}, NeuralNetworks`RealT]]], 
           "conv2_relu_3x3" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {192, 56, 56}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{192, 56, 56}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{192, 56, 56}, NeuralNetworks`RealT]]], 
           "conv2_norm2" -> 
           Association[
            "Type" -> "LocalResponseNormalization", "Arrays" -> Association[],
              "Parameters" -> 
             Association[
              "ChannelWindowSize" -> 2, "Alpha" -> 0.0001, "Beta" -> 0.75, 
               "Bias" -> 1., "$Channel" -> 192, "$Shape" -> 
               NeuralNetworks`TensorT[{192, 56, 56}, NeuralNetworks`RealT]], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{192, 56, 56}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{192, 56, 56}, NeuralNetworks`RealT]]], 
           "pool2_3x3_s2_pad" -> 
           Association[
            "Type" -> "Padding", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Specification" -> {{0, 0}, {0, 1}, {0, 1}}, "Padding" -> 
               "Fixed", "Rank" -> 3, "$InputSize" -> {192, 56, 56}, 
               "$OutputSize" -> {192, 57, 57}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{192, 56, 56}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{192, 57, 57}, NeuralNetworks`RealT]]], 
           "pool2_3x3_s2" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 192, "$InputSize" -> {57, 57}, 
               "$OutputSize" -> {28, 28}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{192, 57, 57}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{192, 28, 28}, NeuralNetworks`RealT]]], 
           "inception_3a" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{192, 28, 28}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{256, 28, 28}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "1x1" -> Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]]], "3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 28, 28}, 
                    NeuralNetworks`RealT]]], "3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 96, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "5x5_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{16, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 16, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{16, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_5x5_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {16, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{16, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{16, 28, 28}, 
                    NeuralNetworks`RealT]]], "5x5" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{32, 16, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 32, "KernelSize" -> {5, 5}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 16, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{16, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_5x5" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {32, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]]], "pool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 192, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 28, 28}, 
                    NeuralNetworks`RealT]]], "pool_proj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{32, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_pool_proj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {32, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]]], "output" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "relu_1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5x5", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "output", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_5x5", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_pool_proj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath["Nodes", "1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "pool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "output", "Outputs", "Output"]}], "inception_3b" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{480, 28, 28}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "1x1" -> Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 256, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 256, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 128, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 28, 28}, 
                    NeuralNetworks`RealT]]], "5x5_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{32, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 256, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_5x5_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {32, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]]], "5x5" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 32, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {5, 5}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 32, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_5x5" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 28, 28}, 
                    NeuralNetworks`RealT]]], "pool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 256, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "pool_proj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 256, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_pool_proj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]]], "output" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{480, 28, 28}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 28, 28}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{480, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "relu_1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5x5", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "output", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_5x5", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_pool_proj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath["Nodes", "1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "pool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "output", "Outputs", "Output"]}], "pool3_3x3_s2_pad" -> 
           Association[
            "Type" -> "Padding", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Specification" -> {{0, 0}, {0, 1}, {0, 1}}, "Padding" -> 
               "Fixed", "Rank" -> 3, "$InputSize" -> {480, 28, 28}, 
               "$OutputSize" -> {480, 29, 29}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{480, 28, 28}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{480, 29, 29}, NeuralNetworks`RealT]]], 
           "pool3_3x3_s2" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 480, "$InputSize" -> {29, 29}, 
               "$OutputSize" -> {14, 14}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{480, 29, 29}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{480, 14, 14}, NeuralNetworks`RealT]]], 
           "inception_4a" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{480, 14, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{512, 14, 14}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "1x1" -> Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 480, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 480, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{480, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 480, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 480, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{480, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{208, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{208}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 208, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 96, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{208, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {208, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{208, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{208, 14, 14}, 
                    NeuralNetworks`RealT]]], "5x5_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{16, 480, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 16, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 480, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{480, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{16, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_5x5_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {16, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{16, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{16, 14, 14}, 
                    NeuralNetworks`RealT]]], "5x5" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{48, 16, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 48, "KernelSize" -> {5, 5}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 16, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{16, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_5x5" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {48, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 480, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{480, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{480, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool_proj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 480, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 480, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{480, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_pool_proj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "output" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{208, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{208, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "relu_1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5x5", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "output", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_5x5", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_pool_proj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath["Nodes", "1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "pool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "output", "Outputs", "Output"]}], "inception_4b" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{512, 14, 14}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "1x1" -> Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{160, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{112, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{112}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 112, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{112, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {112, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{112, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{112, 14, 14}, 
                    NeuralNetworks`RealT]]], "3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{224, 112, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 112, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{112, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {224, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "5x5_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{24, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{24}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 24, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{24, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_5x5_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {24, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{24, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{24, 14, 14}, 
                    NeuralNetworks`RealT]]], "5x5" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 24, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {5, 5}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 24, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{24, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_5x5" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 512, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool_proj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_pool_proj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "output" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "relu_1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5x5", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "output", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_5x5", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_pool_proj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath["Nodes", "1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "pool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "output", "Outputs", "Output"]}], "inception_4c" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{512, 14, 14}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "1x1" -> Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{256, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 128, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "5x5_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{24, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{24}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 24, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{24, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_5x5_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {24, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{24, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{24, 14, 14}, 
                    NeuralNetworks`RealT]]], "5x5" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 24, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {5, 5}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 24, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{24, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_5x5" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 512, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool_proj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_pool_proj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "output" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "relu_1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5x5", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "output", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_5x5", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_pool_proj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath["Nodes", "1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "pool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "output", "Outputs", "Output"]}], "inception_4d" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{528, 14, 14}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "1x1" -> Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{112, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{112}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 112, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{112, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {112, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{112, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{112, 14, 14}, 
                    NeuralNetworks`RealT]]], "3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{144, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 144, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{144, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {144, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{144, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{144, 14, 14}, 
                    NeuralNetworks`RealT]]], "3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{288, 144, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{288}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 288, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 144, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{144, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{288, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {288, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{288, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{288, 14, 14}, 
                    NeuralNetworks`RealT]]], "5x5_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{32, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_5x5_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {32, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 14, 14}, 
                    NeuralNetworks`RealT]]], "5x5" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 32, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {5, 5}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 32, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_5x5" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 512, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool_proj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_pool_proj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "output" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{112, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{288, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{528, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{112, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{288, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{528, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "relu_1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5x5", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "output", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_5x5", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_pool_proj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath["Nodes", "1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "pool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "output", "Outputs", "Output"]}], "inception_4e" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{528, 14, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{832, 14, 14}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "1x1" -> Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{256, 528, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 528, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{528, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{160, 528, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 528, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{528, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{320, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 320, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 160, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {320, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]]], "5x5_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{32, 528, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 528, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{528, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_5x5_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {32, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 14, 14}, 
                    NeuralNetworks`RealT]]], "5x5" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 32, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {5, 5}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 32, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_5x5" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 528, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{528, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{528, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool_proj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 528, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 528, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{528, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_pool_proj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "output" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{832, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{832, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "relu_1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5x5", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "output", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_5x5", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_pool_proj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath["Nodes", "1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "pool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "output", "Outputs", "Output"]}], "pool4_3x3_s2_pad" -> 
           Association[
            "Type" -> "Padding", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Specification" -> {{0, 0}, {0, 1}, {0, 1}}, "Padding" -> 
               "Fixed", "Rank" -> 3, "$InputSize" -> {832, 14, 14}, 
               "$OutputSize" -> {832, 15, 15}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{832, 14, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{832, 15, 15}, NeuralNetworks`RealT]]], 
           "pool4_3x3_s2" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 832, "$InputSize" -> {15, 15}, 
               "$OutputSize" -> {7, 7}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{832, 15, 15}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{832, 7, 7}, NeuralNetworks`RealT]]], 
           "inception_5a" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{832, 7, 7}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{832, 7, 7}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "1x1" -> Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{256, 832, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 832, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu_1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {256, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{160, 832, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 832, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {160, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{320, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 320, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 160, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu_3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {320, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "5x5_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{32, 832, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 832, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 7, 7}, NeuralNetworks`RealT]]],
                "relu_5x5_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {32, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 7, 7}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 7, 7}, NeuralNetworks`RealT]]],
                "5x5" -> Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 32, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {5, 5}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 32, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 7, 7}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu_5x5" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "pool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 832, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, 
                    NeuralNetworks`RealT]]], "pool_proj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 832, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 832, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu_pool_proj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "output" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "relu_1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5x5", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "output", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_5x5", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_pool_proj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath["Nodes", "1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "pool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "output", "Outputs", "Output"]}], "inception_5b" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{832, 7, 7}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1024, 7, 7}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "1x1" -> Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{384, 832, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 384, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 832, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{384, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu_1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {384, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{384, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{384, 7, 7}, 
                    NeuralNetworks`RealT]]], "3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 832, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 832, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{384, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 384, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{384, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu_3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {384, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{384, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{384, 7, 7}, 
                    NeuralNetworks`RealT]]], "5x5_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{48, 832, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 48, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 832, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{48, 7, 7}, NeuralNetworks`RealT]]],
                "relu_5x5_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {48, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{48, 7, 7}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{48, 7, 7}, NeuralNetworks`RealT]]],
                "5x5" -> Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 48, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {5, 5}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 48, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{48, 7, 7}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu_5x5" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "pool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 832, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, 
                    NeuralNetworks`RealT]]], "pool_proj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 832, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 832, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{832, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu_pool_proj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "output" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{384, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{384, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "relu_1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_5x5_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu_5x5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5x5", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_pool_proj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "pool_proj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "output", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_5x5", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu_pool_proj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath["Nodes", "1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "5x5_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "pool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "output", "Outputs", "Output"]}], "pool5_7x7_s1" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {7, 7}, "Stride" -> {1, 1}, 
               "PaddingSize" -> {0, 0}, "Function" -> Mean, "Dimensionality" -> 
               2, "Channels" -> 1024, "$InputSize" -> {7, 7}, 
               "$OutputSize" -> {1, 1}, "$MXPoolingConvention" -> "full", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1024, 7, 7}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1024, 1, 1}, NeuralNetworks`RealT]]], 
           "pool5_drop_7x7_s1" -> 
           Association[
            "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
             Association["DropoutProbability" -> 0.4], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1024, 1, 1}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1024, 1, 1}, NeuralNetworks`RealT]]], 
           "flatten_0" -> 
           Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {1024}, 
               "$InputSize" -> {1024, 1, 1}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1024, 1, 1}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
           "loss3_classifier" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1000, 1024}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {1000}, "$OutputSize" -> 1000, 
               "$InputSize" -> 1024, "$InputDimensions" -> {1024}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1024}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]], "prob" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1000}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "conv1_7x7_s2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath[
            "Nodes", "conv1_relu_7x7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "conv1_7x7_s2", "Outputs", "Output"], 
           NeuralNetworks`NetPath[
            "Nodes", "pool1_3x3_s2_pad", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "conv1_relu_7x7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "pool1_3x3_s2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "pool1_3x3_s2_pad", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "pool1_norm1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "pool1_3x3_s2", "Outputs", "Output"], 
           NeuralNetworks`NetPath[
            "Nodes", "conv2_3x3_reduce", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "pool1_norm1", "Outputs", "Output"], 
           NeuralNetworks`NetPath[
            "Nodes", "conv2_relu_3x3_reduce", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "conv2_3x3_reduce", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "conv2_3x3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "conv2_relu_3x3_reduce", "Outputs", "Output"], 
           NeuralNetworks`NetPath[
            "Nodes", "conv2_relu_3x3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "conv2_3x3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "conv2_norm2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "conv2_relu_3x3", "Outputs", "Output"], 
           NeuralNetworks`NetPath[
            "Nodes", "pool2_3x3_s2_pad", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "conv2_norm2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "pool2_3x3_s2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "pool2_3x3_s2_pad", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "inception_3a", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "pool2_3x3_s2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "inception_3b", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "inception_3a", "Outputs", "Output"], 
           NeuralNetworks`NetPath[
            "Nodes", "pool3_3x3_s2_pad", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "inception_3b", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "pool3_3x3_s2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "pool3_3x3_s2_pad", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "inception_4a", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "pool3_3x3_s2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "inception_4b", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "inception_4a", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "inception_4c", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "inception_4b", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "inception_4d", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "inception_4c", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "inception_4e", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "inception_4d", "Outputs", "Output"], 
           NeuralNetworks`NetPath[
            "Nodes", "pool4_3x3_s2_pad", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "inception_4e", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "pool4_3x3_s2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "pool4_3x3_s2_pad", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "inception_5a", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "pool4_3x3_s2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "inception_5b", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "inception_5a", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "pool5_7x7_s1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "inception_5b", "Outputs", "Output"], 
           NeuralNetworks`NetPath[
            "Nodes", "pool5_drop_7x7_s1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "pool5_7x7_s1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "flatten_0", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "pool5_drop_7x7_s1", "Outputs", "Output"], 
           NeuralNetworks`NetPath[
            "Nodes", "loss3_classifier", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "flatten_0", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "prob", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "loss3_classifier", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "prob", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
              "ColorChannels" -> 3, 
              "MeanImage" -> {0.4823529411764706, 0.4588235294117647, 
               0.40784313725490196`}], 
             NeuralNetworks`TensorT[{3, 224, 224}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association["Labels" -> {
                Entity["Concept", "Tench::q9r2d"], 
                Entity["Concept", "CarassiusAuratus::f73xs"], 
                Entity["Concept", "CarcharodonCarcharias::st7pj"], 
                Entity["Concept", "GaleocerdoCuvieri::h7238"], 
                Entity["Concept", "HammerheadShark::cky4t"], 
                Entity["Concept", "Crampfish::6369q"], 
                Entity["Concept", "Stingray::4cts3"], 
                Entity["Concept", "Cock::2s2xh"], 
                Entity["Concept", "Hen::49q38"], 
                Entity["Concept", "StruthioCamelus::7fgc2"], 
                Entity["Concept", "Brambling::47bpt"], 
                Entity["Concept", "CarduelisCarduelis::bv5y9"], 
                Entity["Concept", "CarpodacusMexicanus::zq6w8"], 
                Entity["Concept", "Junco::sjqs9"], 
                Entity["Concept", "IndigoBird::6365d"], 
                Entity["Concept", "AmericanRobin::wf28w"], 
                Entity["Concept", "Bulbul::4x6vd"], 
                Entity["Concept", "Jay::9g7qw"], 
                Entity["Concept", "Magpie::62kfm"], 
                Entity["Concept", "Chickadee::qmsc9"], 
                Entity["Concept", "WaterOuzel::n32d7"], 
                Entity["Concept", "Kite::y2jjm"], 
                Entity["Concept", "AmericanEagle::z2fqr"], 
                Entity["Concept", "Vulture::r2nfy"], 
                Entity["Concept", "GreatGrayOwl::97vk2"], 
                Entity["Concept", "EuropeanFireSalamander::t6v33"], 
                Entity["Concept", "CommonNewt::9nx3s"], 
                Entity["Concept", "Eft::t3bv7"], 
                Entity["Concept", "AmbystomaMaculatum::qnd2g"], 
                Entity["Concept", "AmbystomaMexicanum::k9j45"], 
                Entity["Concept", "Bullfrog::r9cvc"], 
                Entity["Concept", "Tree-frog::m988r"], 
                Entity["Concept", "AscaphusTrui::qr2np"], 
                Entity["Concept", "CarettaCaretta::768y9"], 
                Entity["Concept", "DermochelysCoriacea::ypc4b"], 
                Entity["Concept", "MudTurtle::47p9w"], 
                Entity["Concept", "Terrapin::5j9b2"], 
                Entity["Concept", "BoxTortoise::hksb9"], 
                Entity["Concept", "BandedGecko::38zhr"], 
                Entity["Concept", "CommonIguana::66q43"], 
                Entity["Concept", "AmericanChameleon::67k54"], 
                Entity["Concept", "Whiptail::sb62k"], 
                Entity["Concept", "Agama::22vdx"], 
                Entity["Concept", "ChlamydosaurusKingi::stq3k"], 
                Entity["Concept", "AlligatorLizard::k6335"], 
                Entity["Concept", "GilaMonster::k8q26"], 
                Entity["Concept", "GreenLizard::2fkzv"], 
                Entity["Concept", "AfricanChameleon::x82fs"], 
                Entity["Concept", "DragonLizard::s68v6"], 
                Entity["Concept", "AfricanCrocodile::zw55f"], 
                Entity["Concept", "AlligatorMississipiensis::s7582"], 
                Entity["Concept", "Triceratops::p997c"], 
                Entity["Concept", "CarphophisAmoenus::35dfs"], 
                Entity["Concept", "Ring-neckedSnake::2f823"], 
                Entity["Concept", "HognoseSnake::k5k58"], 
                Entity["Concept", "GrassSnake::pv2xf"], 
                Entity["Concept", "KingSnake::t9m8y"], 
                Entity["Concept", "GarterSnake::892t9"], 
                Entity["Concept", "WaterSnake::y627x"], 
                Entity["Concept", "VineSnake::9kywz"], 
                Entity["Concept", "HypsiglenaTorquata::6869v"], 
                Entity["Concept", "BoaConstrictor::qq73z"], 
                Entity["Concept", "PythonSebae::dmhh6"], 
                Entity["Concept", "IndianCobra::2sv7h"], 
                Entity["Concept", "GreenMamba::c9qn3"], 
                Entity["Concept", "SeaSnake::s529y"], 
                Entity["Concept", "Cerastes::6575z"], 
                Entity["Concept", "CrotalusAdamanteus::8ynrx"], 
                Entity["Concept", "CrotalusCerastes::m382t"], 
                Entity["Concept", "Trilobite::3qyq3"], 
                Entity["Concept", "Harvestman::545h3"], 
                Entity["Concept", "Scorpion::9rx48"], 
                Entity["Concept", "ArgiopeAurantia::633xv"], 
                Entity["Concept", "AraneusCavaticus::thm3g"], 
                Entity["Concept", "AraneaDiademata::4jvj8"], 
                Entity["Concept", "BlackWidow::4682d"], 
                Entity["Concept", "Tarantula::mc462"], 
                Entity["Concept", "HuntingSpider::q7898"], 
                Entity["Concept", "Tick::xw6hc"], 
                Entity["Concept", "Centipede::s8w7r"], 
                Entity["Concept", "BlackGrouse::9w35m"], 
                Entity["Concept", "Ptarmigan::tv6c8"], 
                Entity["Concept", "BonasaUmbellus::bpbr3"], 
                Entity["Concept", "PrairieChicken::2ws9g"], 
                Entity["Concept", "Peacock::kd2y4"], 
                Entity["Concept", "Quail::7462f"], 
                Entity["Concept", "Partridge::t22mp"], 
                Entity["Concept", "AfricanGray::84css"], 
                Entity["Concept", "Macaw::ntx97"], 
                Entity["Concept", "CacatuaGalerita::tfz9w"], 
                Entity["Concept", "Lorikeet::4f725"], 
                Entity["Concept", "Coucal::z95g6"], 
                Entity["Concept", "BeeEater::376h3"], 
                Entity["Concept", "Hornbill::6389h"], 
                Entity["Concept", "Hummingbird::vz6gt"], 
                Entity["Concept", "Jacamar::v7428"], 
                Entity["Concept", "Toucan::2h2d5"], 
                Entity["Concept", "Drake::5cdfw"], 
                Entity["Concept", "MergusSerrator::5t86m"], 
                Entity["Concept", "Goose::82x27"], 
                Entity["Concept", "BlackSwan::6ft7p"], 
                Entity["Concept", "Tusker::dqq7d"], 
                Entity["Concept", "Anteater::8t864"], 
                Entity["Concept", "Duck-billedPlatypus::b8867"], 
                Entity["Concept", "BrushKangaroo::493r2"], 
                Entity["Concept", "KangarooBear::hvf3s"], 
                Entity["Concept", "Wombat::m5rqr"], 
                Entity["Concept", "Jellyfish::fs9rf"], 
                Entity["Concept", "SeaAnemone::5n98x"], 
                Entity["Concept", "BrainCoral::v7844"], 
                Entity["Concept", "Flatworm::h957w"], 
                Entity["Concept", "Nematode::hz536"], 
                Entity["Concept", "Conch::44pfv"], 
                Entity["Concept", "Snail::3r58h"], 
                Entity["Concept", "Slug::d4638"], 
                Entity["Concept", "Nudibranch::dq2vh"], 
                Entity["Concept", "Coat-of-mailShell::h3tp5"], 
                Entity["Concept", "ChamberedNautilus::tspc6"], 
                Entity["Concept", "CancerMagister::5r562"], 
                Entity["Concept", "CancerIrroratus::d69mr"], 
                Entity["Concept", "FiddlerCrab::4mt9n"], 
                Entity["Concept", "ParalithodesCamtschatica::pfzy2"], 
                Entity["Concept", "HomarusAmericanus::n2j65"], 
                Entity["Concept", "SeaCrawfish::x53g2"], 
                Entity["Concept", "Crawdaddy::946y4"], 
                Entity["Concept", "HermitCrab::4k242"], 
                Entity["Concept", "Isopod::4z747"], 
                Entity["Concept", "CiconiaCiconia::wkt3m"], 
                Entity["Concept", "BlackStork::5v349"], 
                Entity["Concept", "Spoonbill::4939q"], 
                Entity["Concept", "Flamingo::28r7m"], 
                Entity["Concept", "EgrettaCaerulea::9965c"], 
                Entity["Concept", "AmericanEgret::43jz8"], 
                Entity["Concept", "Bittern::722qw"], 
                Entity["Concept", "Crane::9wrg8"], 
                Entity["Concept", "AramusPictus::964mw"], 
                Entity["Concept", "EuropeanGallinule::c7jfx"], 
                Entity["Concept", "AmericanCoot::c7452"], 
                Entity["Concept", "Bustard::p3zj5"], 
                Entity["Concept", "ArenariaInterpres::3rbq4"], 
                Entity["Concept", "Dunlin::4mj52"], 
                Entity["Concept", "Redshank::yvbj8"], 
                Entity["Concept", "Dowitcher::47w6h"], 
                Entity["Concept", "OysterCatcher::9drpt"], 
                Entity["Concept", "Pelican::jpfg7"], 
                Entity["Concept", "AptenodytesPatagonica::f85wf"], 
                Entity["Concept", "Mollymawk::r8386"], 
                Entity["Concept", "EschrichtiusGibbosus::2c8q9"], 
                Entity["Concept", "KillerWhale::26sj4"], 
                Entity["Concept", "Dugong::ss39b"], 
                Entity["Concept", "SeaLion::bs87w"], 
                Entity["Concept", "Chihuahua::8hmhf"], 
                Entity["Concept", "JapaneseSpaniel::h55d9"], 
                Entity["Concept", "MalteseDog::trsv6"], 
                Entity["Concept", "Peke::b9n5f"], 
                Entity["Concept", "Shih-Tzu::kc9k8"], 
                Entity["Concept", "BlenheimSpaniel::cd3nm"], 
                Entity["Concept", "Papillon::zhn7j"], 
                Entity["Concept", "ToyTerrier::k3s97"], 
                Entity["Concept", "RhodesianRidgeback::jph75"], 
                Entity["Concept", "AfghanHound::6845m"], 
                Entity["Concept", "Basset::n769x"], 
                Entity["Concept", "Beagle::2bdvt"], 
                Entity["Concept", "Bloodhound::pc454"], 
                Entity["Concept", "Bluetick::fs5sw"], 
                Entity["Concept", "Black-and-tanCoonhound::84k6y"], 
                Entity["Concept", "WalkerFoxhound::z3y7p"], 
                Entity["Concept", "EnglishFoxhound::5v343"], 
                Entity["Concept", "Redbone::j6h4x"], 
                Entity["Concept", "Borzoi::v43t8"], 
                Entity["Concept", "IrishWolfhound::8m3gw"], 
                Entity["Concept", "ItalianGreyhound::s4gq3"], 
                Entity["Concept", "Whippet::57r47"], 
                Entity["Concept", "IbizanHound::987kj"], 
                Entity["Concept", "Elkhound::62q39"], 
                Entity["Concept", "OtterHound::3442w"], 
                Entity["Concept", "GazelleHound::7k449"], 
                Entity["Concept", "Deerhound::btsv4"], 
                Entity["Concept", "Weimaraner::476j6"], 
                Entity["Concept", "StaffordshireBullTerrier::883y3"], 
                Entity["Concept", "AmericanPitBullTerrier::kw55q"], 
                Entity["Concept", "BedlingtonTerrier::98h82"], 
                Entity["Concept", "BorderTerrier::gh5h6"], 
                Entity["Concept", "KerryBlueTerrier::t9c62"], 
                Entity["Concept", "IrishTerrier::qmsm4"], 
                Entity["Concept", "NorfolkTerrier::b7z76"], 
                Entity["Concept", "NorwichTerrier::9v483"], 
                Entity["Concept", "YorkshireTerrier::bn4jn"], 
                Entity["Concept", "Wire-hairedFoxTerrier::pn5qb"], 
                Entity["Concept", "LakelandTerrier::b729b"], 
                Entity["Concept", "SealyhamTerrier::5jz56"], 
                Entity["Concept", "Airedale::w6gf4"], 
                Entity["Concept", "CairnTerrier::67c37"], 
                Entity["Concept", "AustralianTerrier::q2h6g"], 
                Entity["Concept", "DandieDinmont::ff47s"], 
                Entity["Concept", "BostonBull::6662j"], 
                Entity["Concept", "MiniatureSchnauzer::848y9"], 
                Entity["Concept", "GiantSchnauzer::8fwv6"], 
                Entity["Concept", "StandardSchnauzer::q9j3y"], 
                Entity["Concept", "ScotchTerrier::2f2jw"], 
                Entity["Concept", "ChrysanthemumDog::y9tps"], 
                Entity["Concept", "SilkyTerrier::xyfw3"], 
                Entity["Concept", "Soft-coatedWheatenTerrier::474j2"], 
                Entity["Concept", "WestHighlandWhiteTerrier::4h85y"], 
                Entity["Concept", "LhasaApso::cr28m"], 
                Entity["Concept", "Flat-coatedRetriever::866mk"], 
                Entity["Concept", "Curly-coatedRetriever::pb8yt"], 
                Entity["Concept", "GoldenRetriever::t59tg"], 
                Entity["Concept", "LabradorRetriever::7g587"], 
                Entity["Concept", "ChesapeakeBayRetriever::s8567"], 
                Entity["Concept", "GermanShort-hairedPointer::k3297"], 
                Entity["Concept", "HungarianPointer::7555p"], 
                Entity["Concept", "EnglishSetter::ps793"], 
                Entity["Concept", "IrishSetter::h5pp3"], 
                Entity["Concept", "GordonSetter::yvx65"], 
                Entity["Concept", "BrittanySpaniel::435gz"], 
                Entity["Concept", "Clumber::2ddvk"], 
                Entity["Concept", "EnglishSpringer::f4dq6"], 
                Entity["Concept", "WelshSpringerSpaniel::qyng2"], 
                Entity["Concept", "Cocker::7284r"], 
                Entity["Concept", "SussexSpaniel::sbv42"], 
                Entity["Concept", "IrishWaterSpaniel::m9zkp"], 
                Entity["Concept", "Kuvasz::z4sxp"], 
                Entity["Concept", "Schipperke::7778z"], 
                Entity["Concept", "Groenendael::5854s"], 
                Entity["Concept", "Malinois::k8y57"], 
                Entity["Concept", "Briard::dtm5k"], 
                Entity["Concept", "Kelpie::k6795"], 
                Entity["Concept", "Komondor::p8q9b"], 
                Entity["Concept", "OldEnglishSheepdog::4zdy3"], 
                Entity["Concept", "ShetlandSheepDog::sffh8"], 
                Entity["Concept", "Collie::999kf"], 
                Entity["Concept", "BorderCollie::463w2"], 
                Entity["Concept", "BouvierDesFlandres::h7txf"], 
                Entity["Concept", "Rottweiler::zywt3"], 
                Entity["Concept", "Alsatian::fh5zw"], 
                Entity["Concept", "Doberman::zgqf4"], 
                Entity["Concept", "MiniaturePinscher::jvy9c"], 
                Entity["Concept", "GreaterSwissMountainDog::t7642"], 
                Entity["Concept", "BerneseMountainDog::y32v5"], 
                Entity["Concept", "Appenzeller::j96dj"], 
                Entity["Concept", "EntleBucher::y43x6"], 
                Entity["Concept", "Boxer::3966f"], 
                Entity["Concept", "BullMastiff::6p365"], 
                Entity["Concept", "TibetanMastiff::4f68b"], 
                Entity["Concept", "FrenchBulldog::3jg82"], 
                Entity["Concept", "GreatDane::xg8dn"], 
                Entity["Concept", "SaintBernard::r5277"], 
                Entity["Concept", "EskimoDog::2vm97"], 
                Entity["Concept", "AlaskanMalamute::y6wqq"], 
                Entity["Concept", "SiberianHusky::k7pkk"], 
                Entity["Concept", "CarriageDog::jh3w6"], 
                Entity["Concept", "Affenpinscher::58wr6"], 
                Entity["Concept", "Basenji::k9yy2"], 
                Entity["Concept", "Pug::6799h"], 
                Entity["Concept", "Leonberg::49td5"], 
                Entity["Concept", "NewfoundlandDog::q787h"], 
                Entity["Concept", "GreatPyrenees::t8qh7"], 
                Entity["Concept", "Samoyede::rq827"], 
                Entity["Concept", "Pomeranian::dx7mr"], 
                Entity["Concept", "ChowChow::7x292"], 
                Entity["Concept", "Keeshond::rz734"], 
                Entity["Concept", "BrabanconGriffon::jh5pt"], 
                Entity["Concept", "Pembroke::95g54"], 
                Entity["Concept", "Cardigan::b724j"], 
                Entity["Concept", "ToyPoodle::732f6"], 
                Entity["Concept", "MiniaturePoodle::4955p"], 
                Entity["Concept", "StandardPoodle::w25c4"], 
                Entity["Concept", "MexicanHairless::m2by7"], 
                Entity["Concept", "CanisLupus::5gwtc"], 
                Entity["Concept", "ArcticWolf::4xr47"], 
                Entity["Concept", "CanisNiger::99p6d"], 
                Entity["Concept", "BrushWolf::44t57"], 
                Entity["Concept", "CanisDingo::529k9"], 
                Entity["Concept", "CuonAlpinus::f5yfn"], 
                Entity["Concept", "AfricanHuntingDog::d9b86"], 
                Entity["Concept", "Hyaena::7444d"], 
                Entity["Concept", "VulpesVulpes::g8mvp"], 
                Entity["Concept", "VulpesMacrotis::jm64h"], 
                Entity["Concept", "AlopexLagopus::44cg9"], 
                Entity["Concept", "GrayFox::vftd5"], 
                Entity["Concept", "TabbyCat::rvg7f"], 
                Entity["Concept", "TigerCat::8k84h"], 
                Entity["Concept", "PersianCat::p69kd"], 
                Entity["Concept", "SiameseCat::hgg68"], 
                Entity["Concept", "EgyptianCat::sd6pw"], 
                Entity["Concept", "Cougar::7bc9f"], 
                Entity["Concept", "Catamount::q4f63"], 
                Entity["Concept", "PantheraPardus::r35k5"], 
                Entity["Concept", "PantheraUncia::z6697"], 
                Entity["Concept", "FelisOnca::jh7tq"], 
                Entity["Concept", "KingOfBeasts::vrwm9"], 
                Entity["Concept", "PantheraTigris::2mpmq"], 
                Entity["Concept", "GiantAnteater::y96st"], 
                Entity["Concept", "BrownBear::8374p"], 
                Entity["Concept", "AmericanBlackBear::763x8"], 
                Entity["Concept", "IceBear::fnc5j"], 
                Entity["Concept", "MelursusUrsinus::48x75"], 
                Entity["Concept", "Mongoose::5hp73"], 
                Entity["Concept", "Meerkat::q77nd"], 
                Entity["Concept", "TigerBeetle::8362y"], 
                Entity["Concept", "LadyBeetle::tx6bz"], 
                Entity["Concept", "CarabidBeetle::w3hjn"], 
                Entity["Concept", "Long-hornedBeetle::9zzc8"], 
                Entity["Concept", "Chrysomelid::y8pqz"], 
                Entity["Concept", "DungBeetle::bt6hz"], 
                Entity["Concept", "RhinocerosBeetle::23y53"], 
                Entity["Concept", "Weevil::r87rt"], 
                Entity["Concept", "Fly::68s97"], 
                Entity["Concept", "Bee::d8yym"], 
                Entity["Concept", "Ant::7tznr"], 
                Entity["Concept", "Grasshopper::52v2f"], 
                Entity["Concept", "Cricket::82n55"], 
                Entity["Concept", "StickInsect::4x983"], 
                Entity["Concept", "Cockroach::7426w"], 
                Entity["Concept", "Mantid::93t86"], 
                Entity["Concept", "Cicada::w2299"], 
                Entity["Concept", "Leafhopper::8k2k2"], 
                Entity["Concept", "Lacewing::8v2m6"], 
                Entity["Concept", "Dragonfly::7s252"], 
                Entity["Concept", "Damselfly::dh8zj"], 
                Entity["Concept", "Admiral::j6fvp"], 
                Entity["Concept", "RingletButterfly::28v7s"], 
                Entity["Concept", "DanausPlexippus::bfk9c"], 
                Entity["Concept", "CabbageButterfly::c8v77"], 
                Entity["Concept", "SulfurButterfly::b9263"], 
                Entity["Concept", "Lycaenid::4whyw"], 
                Entity["Concept", "SeaStar::46w97"], 
                Entity["Concept", "SeaUrchin::7b835"], 
                Entity["Concept", "Holothurian::7jk5q"], 
                Entity["Concept", "Cottontail::bsxk4"], 
                Entity["Concept", "Hare::55m72"], 
                Entity["Concept", "AngoraRabbit::v6627"], 
                Entity["Concept", "Hamster::9yy49"], 
                Entity["Concept", "Porcupine::5r285"], 
                Entity["Concept", "EasternFoxSquirrel::8g9v6"], 
                Entity["Concept", "Marmot::7vb94"], 
                Entity["Concept", "Beaver::qp598"], 
                Entity["Concept", "CaviaCobaya::b8w85"], 
                Entity["Concept", "Sorrel::b824z"], 
                Entity["Concept", "Zebra::nx5qr"], 
                Entity["Concept", "Grunter::437d2"], 
                Entity["Concept", "WildBoar::5wjz4"], 
                Entity["Concept", "Warthog::3q477"], 
                Entity["Concept", "Hippo::647b2"], 
                Entity["Concept", "Ox::yhn7j"], 
                Entity["Concept", "AsiaticBuffalo::532z9"], 
                Entity["Concept", "Bison::25c86"], 
                Entity["Concept", "Tup::8y669"], 
                Entity["Concept", "Bighorn::773z4"], 
                Entity["Concept", "CapraIbex::p5pmr"], 
                Entity["Concept", "Hartebeest::r8276"], 
                Entity["Concept", "AepycerosMelampus::q45p2"], 
                Entity["Concept", "Gazelle::px427"], 
                Entity["Concept", "ArabianCamel::98q62"], 
                Entity["Concept", "Llama::pp4mc"], 
                Entity["Concept", "Weasel::gcxk7"], 
                Entity["Concept", "Mink::r5727"], 
                Entity["Concept", "Fitch::x2w8q"], 
                Entity["Concept", "Black-footedFerret::r6gqg"], 
                Entity["Concept", "Otter::63tg7"], 
                Entity["Concept", "WoodPussy::6886s"], 
                Entity["Concept", "Badger::vcsk3"], 
                Entity["Concept", "Armadillo::s9866"], 
                Entity["Concept", "Ai::z6968"], 
                Entity["Concept", "Orang::5385s"], 
                Entity["Concept", "Gorilla::7vrdz"], 
                Entity["Concept", "Chimp::2t668"], 
                Entity["Concept", "Gibbon::7yqsr"], 
                Entity["Concept", "HylobatesSyndactylus::3g4xn"], 
                Entity["Concept", "Guenon::7y986"], 
                Entity["Concept", "ErythrocebusPatas::949v6"], 
                Entity["Concept", "Baboon::28m6v"], 
                Entity["Concept", "Macaque::m87ss"], 
                Entity["Concept", "Langur::3w42b"], 
                Entity["Concept", "Colobus::yqv5q"], 
                Entity["Concept", "NasalisLarvatus::92p77"], 
                Entity["Concept", "Marmoset::3j236"], 
                Entity["Concept", "CebusCapucinus::4r452"], 
                Entity["Concept", "HowlerMonkey::87c48"], 
                Entity["Concept", "TitiMonkey::6rqgy"], 
                Entity["Concept", "AtelesGeoffroyi::8f944"], 
                Entity["Concept", "SaimiriSciureus::f9528"], 
                Entity["Concept", "LemurCatta::4z4fy"], 
                Entity["Concept", "Indri::w2dsm"], 
                Entity["Concept", "ElephasMaximus::4668g"], 
                Entity["Concept", "AfricanElephant::634z7"], 
                Entity["Concept", "AilurusFulgens::m96y6"], 
                Entity["Concept", "AiluropodaMelanoleuca::xg799"], 
                Entity["Concept", "Barracouta::dzc32"], 
                Entity["Concept", "Eel::6yymn"], 
                Entity["Concept", "BlueJack::8728b"], 
                Entity["Concept", "HolocanthusTricolor::6t872"], 
                Entity["Concept", "AnemoneFish::5mdgt"], 
                Entity["Concept", "Sturgeon::46xyk"], 
                Entity["Concept", "Garfish::p9w7b"], 
                Entity["Concept", "Lionfish::45vp5"], 
                Entity["Concept", "Globefish::z6448"], 
                Entity["Concept", "Abacus::s322h"], 
                Entity["Concept", "Abaya::327b3"], 
                Entity["Concept", "AcademicGown::6vvft"], 
                Entity["Concept", "Accordion::vx545"], 
                Entity["Concept", "AcousticGuitar::wp46j"], 
                Entity["Concept", "AircraftCarrier::74d49"], 
                Entity["Concept", "Airliner::t7542"], 
                Entity["Concept", "Airship::dg429"], 
                Entity["Concept", "Altar::z644x"], 
                Entity["Concept", "Ambulance::rgts3"], 
                Entity["Concept", "AmphibiousVehicle::rr85n"], 
                Entity["Concept", "AnalogClock::3832f"], 
                Entity["Concept", "Apiary::d939v"], 
                Entity["Concept", "Apron::qr79c"], 
                Entity["Concept", "Ash-bin::6sd8p"], 
                Entity["Concept", "AssaultRifle::d2gst"], 
                Entity["Concept", "BackPack::2cjsp"], 
                Entity["Concept", "Bakehouse::6nmsm"], 
                Entity["Concept", "BalanceBeam::6nyqs"], 
                Entity["Concept", "Balloon::64p99"], 
                Entity["Concept", "Ballpen::k35fx"], 
                Entity["Concept", "BandAid::z727z"], 
                Entity["Concept", "Banjo::fs3f9"], 
                Entity["Concept", "Balusters::nt6x4"], 
                Entity["Concept", "Barbell::295kg"], 
                Entity["Concept", "BarberChair::mybp2"], 
                Entity["Concept", "Barbershop::qg6kn"], 
                Entity["Concept", "Barn::6xw3q"], 
                Entity["Concept", "Barometer::65g49"], 
                Entity["Concept", "Barrel::3pzvn"], 
                Entity["Concept", "GardenCart::7br53"], 
                Entity["Concept", "Baseball::9f8qz"], 
                Entity["Concept", "Basketball::jq262"], 
                Entity["Concept", "Bassinet::yn2td"], 
                Entity["Concept", "Bassoon::92ky9"], 
                Entity["Concept", "BathingCap::tsd8r"], 
                Entity["Concept", "BathTowel::72qcw"], 
                Entity["Concept", "BathingTub::729f8"], 
                Entity["Concept", "BeachWaggon::c945g"], 
                Entity["Concept", "BeaconLight::k282w"], 
                Entity["Concept", "Beaker::btv5s"], 
                Entity["Concept", "Busby::448c3"], 
                Entity["Concept", "BeerBottle::8gz7t"], 
                Entity["Concept", "BeerGlass::r6xp2"], 
                Entity["Concept", "BellCot::567d3"], 
                Entity["Concept", "Bib::5wq8k"], 
                Entity["Concept", "Bicycle-built-for-two::7h478"], 
                Entity["Concept", "Bikini::m86f8"], 
                Entity["Concept", "Ring-binder::848m9"], 
                Entity["Concept", "Binoculars::yp4ss"], 
                Entity["Concept", "Birdhouse::n3qgq"], 
                Entity["Concept", "Boathouse::59rht"], 
                Entity["Concept", "Bob::n2762"], 
                Entity["Concept", "BolaTie::g65x6"], 
                Entity["Concept", "PokeBonnet::f4y42"], 
                Entity["Concept", "Bookcase::6t56v"], 
                Entity["Concept", "Bookshop::4rgfr"], 
                Entity["Concept", "Bottlecap::mgg5c"], 
                Entity["Concept", "Bow::89mx8"], 
                Entity["Concept", "Bow-tie::79h37"], 
                Entity["Concept", "MemorialTablet::66g76"], 
                Entity["Concept", "Bandeau::4j247"], 
                Entity["Concept", "Breakwater::nrtz2"], 
                Entity["Concept", "Breastplate::4fmw7"], 
                Entity["Concept", "Broom::hgy49"], 
                Entity["Concept", "Bucket::f9743"], 
                Entity["Concept", "Buckle::3398s"], 
                Entity["Concept", "BulletproofVest::djqn3"], 
                Entity["Concept", "BulletTrain::4dfr5"], 
                Entity["Concept", "ButcherShop::hfp48"], 
                Entity["Concept", "Taxi::379w3"], 
                Entity["Concept", "Caldron::k6c8c"], 
                Entity["Concept", "WaxLight::d9rqz"], 
                Entity["Concept", "Cannon::54f56"], 
                Entity["Concept", "Canoe::nnt95"], 
                Entity["Concept", "CanOpener::6b885"], 
                Entity["Concept", "Cardigan::237mv"], 
                Entity["Concept", "CarMirror::5xccg"], 
                Entity["Concept", "Carousel::n2992"], 
                Entity["Concept", "CarpentersKit::37rxx"], 
                Entity["Concept", "Carton::769gr"], 
                Entity["Concept", "CarWheel::t6f2y"], 
                Entity["Concept", "AutomatedTeller::w8746"], 
                Entity["Concept", "Cassette::2pvzn"], 
                Entity["Concept", "CassettePlayer::v2ng9"], 
                Entity["Concept", "Castle::m2pbs"], 
                Entity["Concept", "Catamaran::7b489"], 
                Entity["Concept", "CDPlayer::7gq93"], 
                Entity["Concept", "Cello::hhbp5"], 
                Entity["Concept", "Cellphone::5k4s4"], 
                Entity["Concept", "Chain::w9j9s"], 
                Entity["Concept", "ChainlinkFence::pfv8d"], 
                Entity["Concept", "ChainArmor::h32y6"], 
                Entity["Concept", "ChainSaw::f5bt6"], 
                Entity["Concept", "Chest::fd956"], 
                Entity["Concept", "Chiffonier::m3jmr"], 
                Entity["Concept", "Chime::m6623"], 
                Entity["Concept", "ChinaCabinet::9bmqg"], 
                Entity["Concept", "ChristmasStocking::867r8"], 
                Entity["Concept", "ChurchBuilding::2394b"], 
                Entity["Concept", "MovieHouse::hbj23"], 
                Entity["Concept", "Cleaver::bk925"], 
                Entity["Concept", "CliffDwelling::5c9sb"], 
                Entity["Concept", "Cloak::dj822"], 
                Entity["Concept", "Geta::3r9c9"], 
                Entity["Concept", "CocktailShaker::r9655"], 
                Entity["Concept", "CoffeeMug::gwhm5"], 
                Entity["Concept", "Coffeepot::32tb2"], 
                Entity["Concept", "Coil::c7h65"], 
                Entity["Concept", "CombinationLock::b8rp7"], 
                Entity["Concept", "ComputerKeyboard::26d5s"], 
                Entity["Concept", "CandyStore::268x7"], 
                Entity["Concept", "ContainerShip::tsz7x"], 
                Entity["Concept", "Convertible::4pxj2"], 
                Entity["Concept", "BottleScrew::djq6x"], 
                Entity["Concept", "Cornet::35d97"], 
                Entity["Concept", "CowboyBoot::5f655"], 
                Entity["Concept", "CowboyHat::59wk9"], 
                Entity["Concept", "Cradle::3882z"], 
                Entity["Concept", "Crane::k29p4"], 
                Entity["Concept", "CrashHelmet::76cs8"], 
                Entity["Concept", "Crate::wmc92"], 
                Entity["Concept", "Cot::3kgws"], 
                Entity["Concept", "CrockPot::w5t85"], 
                Entity["Concept", "CroquetBall::g84t5"], 
                Entity["Concept", "Crutch::3q57h"], 
                Entity["Concept", "Cuirass::256jq"], 
                Entity["Concept", "Dam::w9687"], 
                Entity["Concept", "Desk::q73z7"], 
                Entity["Concept", "DesktopComputer::f8gmj"], 
                Entity["Concept", "DialPhone::3j2f6"], 
                Entity["Concept", "Nappy::6979r"], 
                Entity["Concept", "DigitalClock::hm3x5"], 
                Entity["Concept", "DigitalWatch::v274r"], 
                Entity["Concept", "DiningTable::6ypqf"], 
                Entity["Concept", "Dishcloth::4t678"], 
                Entity["Concept", "DishWasher::px58r"], 
                Entity["Concept", "DiscBrake::bxcw7"], 
                Entity["Concept", "DockingFacility::f42zy"], 
                Entity["Concept", "DogSled::34t8q"], 
                Entity["Concept", "Dome::5j3x2"], 
                Entity["Concept", "WelcomeMat::jqb5y"], 
                Entity["Concept", "DrillingPlatform::r792r"], 
                Entity["Concept", "Membranophone::2x379"], 
                Entity["Concept", "Drumstick::4j5yw"], 
                Entity["Concept", "Dumbbell::qjh33"], 
                Entity["Concept", "DutchOven::qy3dv"], 
                Entity["Concept", "ElectricFan::n79z5"], 
                Entity["Concept", "ElectricGuitar::9pkmr"], 
                Entity["Concept", "ElectricLocomotive::5wv23"], 
                Entity["Concept", "EntertainmentCenter::mg549"], 
                Entity["Concept", "Envelope::c722j"], 
                Entity["Concept", "EspressoMaker::z42xs"], 
                Entity["Concept", "FacePowder::yzy7x"], 
                Entity["Concept", "FeatherBoa::c94h7"], 
                Entity["Concept", "FileCabinet::vsb9c"], 
                Entity["Concept", "Fireboat::xf64t"], 
                Entity["Concept", "FireEngine::zsvx8"], 
                Entity["Concept", "FireScreen::665b5"], 
                Entity["Concept", "Flagstaff::qz2t6"], 
                Entity["Concept", "TransverseFlute::8pj76"], 
                Entity["Concept", "FoldingChair::4vqcr"], 
                Entity["Concept", "FootballHelmet::c6twc"], 
                Entity["Concept", "Forklift::b2dfv"], 
                Entity["Concept", "Fountain::yn972"], 
                Entity["Concept", "FountainPen::r2vw4"], 
                Entity["Concept", "Four-poster::8kbhw"], 
                Entity["Concept", "FreightCar::5pg8s"], 
                Entity["Concept", "FrenchHorn::rm367"], 
                Entity["Concept", "FryingPan::23fyh"], 
                Entity["Concept", "FurCoat::6q374"], 
                Entity["Concept", "Dustcart::2bbpr"], 
                Entity["Concept", "GasHelmet::23k79"], 
                Entity["Concept", "GasolinePump::wk2nk"], 
                Entity["Concept", "Goblet::h85x9"], 
                Entity["Concept", "Go-kart::gjsj5"], 
                Entity["Concept", "GolfBall::63tb2"], 
                Entity["Concept", "GolfCart::sxmp6"], 
                Entity["Concept", "Gondola::4ds6k"], 
                Entity["Concept", "Tam-tam::m962t"], 
                Entity["Concept", "Gown::76k26"], 
                Entity["Concept", "GrandPiano::8kk56"], 
                Entity["Concept", "Glasshouse::qxjm6"], 
                Entity["Concept", "RadiatorGrille::75d36"], 
                Entity["Concept", "FoodMarket::4bmts"], 
                Entity["Concept", "Guillotine::w4656"], 
                Entity["Concept", "HairSlide::3xwcp"], 
                Entity["Concept", "HairSpray::9w6z4"], 
                Entity["Concept", "HalfTrack::59zq4"], 
                Entity["Concept", "Hammer::cx2fn"], 
                Entity["Concept", "Hamper::3b93m"], 
                Entity["Concept", "BlowDrier::t4dpz"], 
                Entity["Concept", "Hand-heldComputer::zs5zw"], 
                Entity["Concept", "Handkerchief::84d24"], 
                Entity["Concept", "FixedDisk::5xfff"], 
                Entity["Concept", "Harmonica::8t835"], 
                Entity["Concept", "Harp::zz89k"], 
                Entity["Concept", "Harvester::472sq"], 
                Entity["Concept", "Hatchet::7cspp"], 
                Entity["Concept", "Holster::g2prc"], 
                Entity["Concept", "HomeTheater::4y845"], 
                Entity["Concept", "Honeycomb::qq347"], 
                Entity["Concept", "Claw::7kmg8"], 
                Entity["Concept", "Hoopskirt::3784g"], 
                Entity["Concept", "HighBar::n5222"], 
                Entity["Concept", "Horse-cart::546b9"], 
                Entity["Concept", "Hourglass::83jnz"], 
                Entity["Concept", "IPod::366dw"], 
                Entity["Concept", "SmoothingIron::274h7"], 
                Entity["Concept", "Jack-o-lantern::yss6v"], 
                Entity["Concept", "BlueJean::68hww"], 
                Entity["Concept", "Jeep::5twmt"], 
                Entity["Concept", "TeeShirt::nk5bs"], 
                Entity["Concept", "JigsawPuzzle::jgp79"], 
                Entity["Concept", "Jinrikisha::g7j7m"], 
                Entity["Concept", "Joystick::nj32z"], 
                Entity["Concept", "Kimono::284nv"], 
                Entity["Concept", "KneePad::nh7y5"], 
                Entity["Concept", "Knot::f4x5y"], 
                Entity["Concept", "LabCoat::6fg55"], 
                Entity["Concept", "Ladle::3m7q7"], 
                Entity["Concept", "LampShade::4b824"], 
                Entity["Concept", "Laptop::zdd33"], 
                Entity["Concept", "LawnMower::z97p3"], 
                Entity["Concept", "LensCap::6j259"], 
                Entity["Concept", "LetterOpener::sx79v"], 
                Entity["Concept", "Library::8855f"], 
                Entity["Concept", "Lifeboat::3r554"], 
                Entity["Concept", "Igniter::638td"], 
                Entity["Concept", "Limo::jfrr3"], 
                Entity["Concept", "OceanLiner::s5fxp"], 
                Entity["Concept", "LipRouge::4vd22"], 
                Entity["Concept", "Loafer::br9fk"], 
                Entity["Concept", "Lotion::79h3v"], 
                Entity["Concept", "Loudspeaker::44d64"], 
                Entity["Concept", "JewelersLoupe::kg4bc"], 
                Entity["Concept", "Lumbermill::94r3y"], 
                Entity["Concept", "MagneticCompass::5r692"], 
                Entity["Concept", "Postbag::ck37r"], 
                Entity["Concept", "LetterBox::pccp7"], 
                Entity["Concept", "Maillot::d8grj"], 
                Entity["Concept", "TankSuit::5k74s"], 
                Entity["Concept", "ManholeCover::4x7fq"], 
                Entity["Concept", "Maraca::395nq"], 
                Entity["Concept", "Marimba::kbbq5"], 
                Entity["Concept", "Mask::798jz"], 
                Entity["Concept", "Matchstick::266wm"], 
                Entity["Concept", "Maypole::qc3qr"], 
                Entity["Concept", "Labyrinth::gc6rg"], 
                Entity["Concept", "MeasuringCup::7b637"], 
                Entity["Concept", "MedicineCabinet::m9g7m"], 
                Entity["Concept", "Megalith::753z9"], 
                Entity["Concept", "Microphone::7bqww"], 
                Entity["Concept", "MicrowaveOven::fs7tb"], 
                Entity["Concept", "MilitaryUniform::r9626"], 
                Entity["Concept", "MilkCan::d9g72"], 
                Entity["Concept", "Minibus::y94d9"], 
                Entity["Concept", "Mini::pn78q"], 
                Entity["Concept", "Minivan::yfsj9"], 
                Entity["Concept", "Missile::854m6"], 
                Entity["Concept", "Mitten::7d534"], 
                Entity["Concept", "MixingBowl::djy62"], 
                Entity["Concept", "ManufacturedHome::d7czj"], 
                Entity["Concept", "ModelT::c44dv"], 
                Entity["Concept", "Modem::wq8j3"], 
                Entity["Concept", "Monastery::mkgg8"], 
                Entity["Concept", "Monitor::nh8d4"], 
                Entity["Concept", "Moped::p85wp"], 
                Entity["Concept", "Mortar::jz37q"], 
                Entity["Concept", "Mortarboard::8r99w"], 
                Entity["Concept", "Mosque::35k94"], 
                Entity["Concept", "MosquitoNet::5z562"], 
                Entity["Concept", "MotorScooter::bbwp9"], 
                Entity["Concept", "All-terrainBike::7n976"], 
                Entity["Concept", "MountainTent::k5s7y"], 
                Entity["Concept", "ComputerMouse::kbzr4"], 
                Entity["Concept", "Mousetrap::j8542"], 
                Entity["Concept", "MovingVan::2s387"], 
                Entity["Concept", "Muzzle::c7f4q"], 
                Entity["Concept", "Nail::x2828"], 
                Entity["Concept", "NeckBrace::hxh4p"], 
                Entity["Concept", "Necklace::58n8w"], 
                Entity["Concept", "Nipple::jfzc3"], 
                Entity["Concept", "NotebookComputer::b3h64"], 
                Entity["Concept", "Obelisk::s7vg6"], 
                Entity["Concept", "Hautbois::937r3"], 
                Entity["Concept", "Ocarina::zc9mv"], 
                Entity["Concept", "Hodometer::jw6kb"], 
                Entity["Concept", "OilFilter::d8chh"], 
                Entity["Concept", "PipeOrgan::gq9sr"], 
                Entity["Concept", "Cathode-rayOscilloscope::z4q77"], 
                Entity["Concept", "Overskirt::n87sx"], 
                Entity["Concept", "Oxcart::vwjn2"], 
                Entity["Concept", "OxygenMask::4k479"], 
                Entity["Concept", "Packet::r63y2"], 
                Entity["Concept", "BoatPaddle::843sz"], 
                Entity["Concept", "PaddleWheel::c59g3"], 
                Entity["Concept", "Padlock::73c99"], 
                Entity["Concept", "Paintbrush::2456k"], 
                Entity["Concept", "Jammies::5vhcb"], 
                Entity["Concept", "Palace::3556d"], 
                Entity["Concept", "PandeanPipe::gjck2"], 
                Entity["Concept", "PaperTowel::j7j8m"], 
                Entity["Concept", "Parachute::k594d"], 
                Entity["Concept", "Bars::3m828"], 
                Entity["Concept", "ParkBench::hq98s"], 
                Entity["Concept", "ParkingMeter::h445p"], 
                Entity["Concept", "PassengerCar::b7xgp"], 
                Entity["Concept", "Patio::65kf2"], 
                Entity["Concept", "Pay-phone::4h2kc"], 
                Entity["Concept", "Footstall::b89vf"], 
                Entity["Concept", "PencilBox::977v9"], 
                Entity["Concept", "PencilSharpener::23nv4"], 
                Entity["Concept", "Essence::9m7fx"], 
                Entity["Concept", "PetriDish::xt977"], 
                Entity["Concept", "Photocopier::33g75"], 
                Entity["Concept", "Plectron::5g596"], 
                Entity["Concept", "Pickelhaube::pgr6y"], 
                Entity["Concept", "Paling::2brd3"], 
                Entity["Concept", "PickupTruck::9k58n"], 
                Entity["Concept", "Pier::36y3h"], 
                Entity["Concept", "PennyBank::78b56"], 
                Entity["Concept", "PillBottle::r9pdj"], 
                Entity["Concept", "Pillow::3y32w"], 
                Entity["Concept", "Ping-pongBall::3vdwp"], 
                Entity["Concept", "Pinwheel::85td5"], 
                Entity["Concept", "PirateShip::386k8"], 
                Entity["Concept", "Ewer::w6672"], 
                Entity["Concept", "CarpentersPlane::287kt"], 
                Entity["Concept", "Planetarium::kq5yg"], 
                Entity["Concept", "PlasticBag::9x453"], 
                Entity["Concept", "PlateRack::sxt2r"], 
                Entity["Concept", "Plough::y6c4t"], 
                Entity["Concept", "PlumbersHelper::hq4m2"], 
                Entity["Concept", "PolaroidCamera::38q9k"], 
                Entity["Concept", "Pole::c4566"], 
                Entity["Concept", "BlackMaria::5jn8v"], 
                Entity["Concept", "Poncho::tr389"], 
                Entity["Concept", "BilliardTable::9c56d"], 
                Entity["Concept", "PopBottle::6243b"], 
                Entity["Concept", "Flowerpot::jjb26"], 
                Entity["Concept", "PottersWheel::zwt32"], 
                Entity["Concept", "PowerDrill::j44yg"], 
                Entity["Concept", "PrayerMat::x6rjb"], 
                Entity["Concept", "Printer::c4244"], 
                Entity["Concept", "Prison::rsq7c"], 
                Entity["Concept", "Missile::n28m6"], 
                Entity["Concept", "Projector::d56q9"], 
                Entity["Concept", "HockeyPuck::3hj3q"], 
                Entity["Concept", "PunchBag::wm5qg"], 
                Entity["Concept", "Purse::n57jd"], 
                Entity["Concept", "QuillPen::jm57s"], 
                Entity["Concept", "Quilt::f56w9"], 
                Entity["Concept", "RaceCar::9m8p9"], 
                Entity["Concept", "Racquet::53f72"], 
                Entity["Concept", "Radiator::3959j"], 
                Entity["Concept", "Radio::8p736"], 
                Entity["Concept", "RadioReflector::55ckr"], 
                Entity["Concept", "RainBarrel::65nkh"], 
                Entity["Concept", "RecreationalVehicle::p93tb"], 
                Entity["Concept", "Reel::v4rgf"], 
                Entity["Concept", "ReflexCamera::j67h4"], 
                Entity["Concept", "Icebox::tnkd4"], 
                Entity["Concept", "Remote::h4drx"], 
                Entity["Concept", "Eatery::f73dy"], 
                Entity["Concept", "Six-gun::ctqb6"], 
                Entity["Concept", "Rifle::x7pp3"], 
                Entity["Concept", "RockingChair::ncpd5"], 
                Entity["Concept", "Rotisserie::c8hjy"], 
                Entity["Concept", "PencilEraser::7y7dd"], 
                Entity["Concept", "RugbyBall::34tbp"], 
                Entity["Concept", "Rule::shrw6"], 
                Entity["Concept", "RunningShoe::z7fvm"], 
                Entity["Concept", "Safe::36p67"], 
                Entity["Concept", "SafetyPin::8h4m3"], 
                Entity["Concept", "SaltShaker::7k48t"], 
                Entity["Concept", "Sandal::7f3xr"], 
                Entity["Concept", "Sarong::96j5v"], 
                Entity["Concept", "Sax::v45s9"], 
                Entity["Concept", "Scabbard::77z36"], 
                Entity["Concept", "WeighingMachine::2xvy7"], 
                Entity["Concept", "SchoolBus::2983r"], 
                Entity["Concept", "Schooner::f2t26"], 
                Entity["Concept", "Scoreboard::z76vk"], 
                Entity["Concept", "CRTScreen::q6vr6"], 
                Entity["Concept", "Screw::wwzc4"], 
                Entity["Concept", "Screwdriver::8ty86"], 
                Entity["Concept", "SeatBelt::4qg32"], 
                Entity["Concept", "SewingMachine::23c46"], 
                Entity["Concept", "Buckler::4m7zq"], 
                Entity["Concept", "Shoe-shop::7ds48"], 
                Entity["Concept", "Shoji::x95jt"], 
                Entity["Concept", "ShoppingBasket::db865"], 
                Entity["Concept", "ShoppingCart::95g62"], 
                Entity["Concept", "Shovel::tjpz7"], 
                Entity["Concept", "ShowerCap::2787m"], 
                Entity["Concept", "ShowerCurtain::6cs25"], 
                Entity["Concept", "Ski::5nbj2"], 
                Entity["Concept", "SkiMask::6hd4m"], 
                Entity["Concept", "SleepingBag::549k4"], 
                Entity["Concept", "SlideRule::59p96"], 
                Entity["Concept", "SlidingDoor::m65qk"], 
                Entity["Concept", "One-armedBandit::573v8"], 
                Entity["Concept", "Snorkel::53ncf"], 
                Entity["Concept", "Snowmobile::y538p"], 
                Entity["Concept", "Snowplough::h36y5"], 
                Entity["Concept", "SoapDispenser::c2fjc"], 
                Entity["Concept", "SoccerBall::25w42"], 
                Entity["Concept", "Sock::8w379"], 
                Entity["Concept", "SolarCollector::pw2xw"], 
                Entity["Concept", "Sombrero::k9893"], 
                Entity["Concept", "SoupBowl::w86pk"], 
                Entity["Concept", "SpaceBar::735sr"], 
                Entity["Concept", "SpaceHeater::spt23"], 
                Entity["Concept", "SpaceShuttle::72jnc"], 
                Entity["Concept", "Spatula::r7876"], 
                Entity["Concept", "Speedboat::r6p4f"], 
                Entity["Concept", "SpidersWeb::28fz6"], 
                Entity["Concept", "Spindle::7zh9v"], 
                Entity["Concept", "SportCar::k9874"], 
                Entity["Concept", "Spot::q3792"], 
                Entity["Concept", "Stage::86r83"], 
                Entity["Concept", "SteamLocomotive::9kv4y"], 
                Entity["Concept", "SteelArchBridge::46zx5"], 
                Entity["Concept", "SteelDrum::fqv7s"], 
                Entity["Concept", "Stethoscope::f829c"], 
                Entity["Concept", "Stole::g8fqc"], 
                Entity["Concept", "StoneWall::8489j"], 
                Entity["Concept", "StopWatch::4vk6s"], 
                Entity["Concept", "Stove::27vm8"], 
                Entity["Concept", "Strainer::2c2kx"], 
                Entity["Concept", "Streetcar::vhm65"], 
                Entity["Concept", "Stretcher::74r96"], 
                Entity["Concept", "DayBed::nrph3"], 
                Entity["Concept", "Stupa::g64q6"], 
                Entity["Concept", "Pigboat::p7yyy"], 
                Entity["Concept", "SuitOfClothes::5c67x"], 
                Entity["Concept", "Sundial::7mj6d"], 
                Entity["Concept", "Sunglass::xc3yz"], 
                Entity["Concept", "DarkGlasses::855bw"], 
                Entity["Concept", "Sunblock::65k7n"], 
                Entity["Concept", "SuspensionBridge::66qcg"], 
                Entity["Concept", "Mop::v6xdr"], 
                Entity["Concept", "Sweatshirt::s5937"], 
                Entity["Concept", "BathingTrunks::c892w"], 
                Entity["Concept", "Swing::s5b96"], 
                Entity["Concept", "ElectricalSwitch::5gnjt"], 
                Entity["Concept", "Syringe::8j57r"], 
                Entity["Concept", "TableLamp::6239m"], 
                Entity["Concept", "ArmoredCombatVehicle::353r5"], 
                Entity["Concept", "TapePlayer::bf5f8"], 
                Entity["Concept", "Teapot::c54x7"], 
                Entity["Concept", "TeddyBear::f56q9"], 
                Entity["Concept", "TelevisionSystem::5593b"], 
                Entity["Concept", "TennisBall::xk58h"], 
                Entity["Concept", "ThatchedRoof::w2cjw"], 
                Entity["Concept", "TheaterCurtain::5kbhk"], 
                Entity["Concept", "Thimble::9828b"], 
                Entity["Concept", "ThreshingMachine::372m3"], 
                Entity["Concept", "Throne::2t9q6"], 
                Entity["Concept", "TileRoof::5p749"], 
                Entity["Concept", "Toaster::rp6v2"], 
                Entity["Concept", "TobacconistShop::88ncg"], 
                Entity["Concept", "ToiletSeat::z8wvq"], 
                Entity["Concept", "Torch::j9rg7"], 
                Entity["Concept", "TotemPole::gbxn5"], 
                Entity["Concept", "TowCar::ph6vn"], 
                Entity["Concept", "Toyshop::74q74"], 
                Entity["Concept", "Tractor::39j62"], 
                Entity["Concept", "ArticulatedLorry::ph66j"], 
                Entity["Concept", "Tray::jyx2n"], 
                Entity["Concept", "TrenchCoat::rq833"], 
                Entity["Concept", "Tricycle::3537s"], 
                Entity["Concept", "Trimaran::2639q"], 
                Entity["Concept", "Tripod::pqth2"], 
                Entity["Concept", "TriumphalArch::q79sh"], 
                Entity["Concept", "TracklessTrolley::78g52"], 
                Entity["Concept", "Trombone::22z3w"], 
                Entity["Concept", "Vat::vcpt8"], 
                Entity["Concept", "Turnstile::82gr4"], 
                Entity["Concept", "TypewriterKeyboard::z8334"], 
                Entity["Concept", "Umbrella::3mntq"], 
                Entity["Concept", "Monocycle::mrm29"], 
                Entity["Concept", "UprightPiano::286t3"], 
                Entity["Concept", "VacuumCleaner::7rg56"], 
                Entity["Concept", "Vase::4x594"], 
                Entity["Concept", "Vault::7k875"], 
                Entity["Concept", "Velvet::575z6"], 
                Entity["Concept", "VendingMachine::96kgg"], 
                Entity["Concept", "Vestment::334y8"], 
                Entity["Concept", "Viaduct::p32mt"], 
                Entity["Concept", "Fiddle::q9djd"], 
                Entity["Concept", "Volleyball::q7bkw"], 
                Entity["Concept", "WaffleIron::gpqx8"], 
                Entity["Concept", "WallClock::w5687"], 
                Entity["Concept", "Billfold::z7845"], 
                Entity["Concept", "Closet::588p6"], 
                Entity["Concept", "MilitaryPlane::whx2r"], 
                Entity["Concept", "Handbasin::6w875"], 
                Entity["Concept", "AutomaticWasher::6d32z"], 
                Entity["Concept", "WaterBottle::5wh67"], 
                Entity["Concept", "WaterJug::759dt"], 
                Entity["Concept", "WaterTower::4rr5d"], 
                Entity["Concept", "WhiskeyJug::5gcrh"], 
                Entity["Concept", "Whistle::pv275"], 
                Entity["Concept", "Wig::9msqy"], 
                Entity["Concept", "WindowScreen::wfk7m"], 
                Entity["Concept", "WindowShade::3rh75"], 
                Entity["Concept", "WindsorTie::5tt62"], 
                Entity["Concept", "WineBottle::g4m78"], 
                Entity["Concept", "Wing::tbhz7"], 
                Entity["Concept", "Wok::fv9fj"], 
                Entity["Concept", "WoodenSpoon::nc2wp"], 
                Entity["Concept", "Woolen::ns82d"], 
                Entity["Concept", "SnakeFence::837z2"], 
                Entity["Concept", "Wreck::qr554"], 
                Entity["Concept", "Yawl::hggp6"], 
                Entity["Concept", "Yurt::4bbtv"], 
                Entity["Concept", "InternetSite::639pp"], 
                Entity["Concept", "ComicBook::ty3qz"], 
                Entity["Concept", "Crossword::yqtk6"], 
                Entity["Concept", "StreetSign::ysx2f"], 
                Entity["Concept", "TrafficLight::b4966"], 
                Entity["Concept", "BookJacket::sy4d3"], 
                Entity["Concept", "Menu::g698m"], 
                Entity["Concept", "Plate::2244k"], 
                Entity["Concept", "Guacamole::xc482"], 
                Entity["Concept", "Consomme::37g8f"], 
                Entity["Concept", "HotPot::kgb8q"], 
                Entity["Concept", "Trifle::b4264"], 
                Entity["Concept", "IceCream::825yn"], 
                Entity["Concept", "IceLolly::473v3"], 
                Entity["Concept", "FrenchLoaf::x859t"], 
                Entity["Concept", "Bagel::x38n5"], 
                Entity["Concept", "Pretzel::967k7"], 
                Entity["Concept", "Cheeseburger::3z2z7"], 
                Entity["Concept", "RedHot::3j848"], 
                Entity["Concept", "MashedPotato::8ys8w"], 
                Entity["Concept", "HeadCabbage::9c693"], 
                Entity["Concept", "Broccoli::spbm9"], 
                Entity["Concept", "Cauliflower::fmp3m"], 
                Entity["Concept", "Courgette::44yb5"], 
                Entity["Concept", "SpaghettiSquash::8j979"], 
                Entity["Concept", "AcornSquash::8p8y2"], 
                Entity["Concept", "ButternutSquash::6k466"], 
                Entity["Concept", "Cuke::nzfb2"], 
                Entity["Concept", "Artichoke::ntvv7"], 
                Entity["Concept", "BellPepper::9w646"], 
                Entity["Concept", "Cardoon::s78dn"], 
                Entity["Concept", "Mushroom::3xw4j"], 
                Entity["Concept", "GrannySmith::k3786"], 
                Entity["Concept", "Strawberry::3csyb"], 
                Entity["Concept", "Orange::w579d"], 
                Entity["Concept", "Lemon::743j2"], 
                Entity["Concept", "Fig::d3p6f"], 
                Entity["Concept", "Ananas::m6nzv"], 
                Entity["Concept", "Banana::f6z73"], 
                Entity["Concept", "Jak::p6r56"], 
                Entity["Concept", "CustardApple::nx482"], 
                Entity["Concept", "Pomegranate::dh736"], 
                Entity["Concept", "Hay::vcd3m"], 
                Entity["Concept", "Carbonara::9my37"], 
                Entity["Concept", "ChocolateSauce::y5838"], 
                Entity["Concept", "Dough::8x86g"], 
                Entity["Concept", "MeatLoaf::t7nnp"], 
                Entity["Concept", "Pizza::56w88"], 
                Entity["Concept", "Potpie::38zh5"], 
                Entity["Concept", "Burrito::4xwy5"], 
                Entity["Concept", "RedWine::666g6"], 
                Entity["Concept", "Espresso::rv2y4"], 
                Entity["Concept", "Cup::q9zjy"], 
                Entity["Concept", "Eggnog::9v7t8"], 
                Entity["Concept", "Alp::m4bkv"], 
                Entity["Concept", "Bubble::qp224"], 
                Entity["Concept", "Cliff::q56fy"], 
                Entity["Concept", "CoralReef::669j5"], 
                Entity["Concept", "Geyser::5w69b"], 
                Entity["Concept", "Lakeshore::4483j"], 
                Entity["Concept", "Headland::8n9c9"], 
                Entity["Concept", "SandBar::4w689"], 
                Entity["Concept", "Sea-coast::m3d85"], 
                Entity["Concept", "Vale::88wm8"], 
                Entity["Concept", "Volcano::9fcbc"], 
                Entity["Concept", "Ballplayer::7v976"], 
                Entity["Concept", "Bridegroom::85m28"], 
                Entity["Concept", "ScubaDiver::kqb95"], 
                Entity["Concept", "Rapeseed::5x738"], 
                Entity["Concept", "Daisy::hypz2"], 
                Entity["Concept", "CypripediumCalceolus::7tzrs"], 
                Entity["Concept", "Corn::m7hpj"], 
                Entity["Concept", "Acorn::f62cf"], 
                Entity["Concept", "RoseHip::333d2"], 
                Entity["Concept", "Conker::v8p64"], 
                Entity["Concept", "CoralFungus::f7fp4"], 
                Entity["Concept", "Agaric::844w2"], 
                Entity["Concept", "Gyromitra::3v4zb"], 
                Entity["Concept", "CarrionFungus::wj2ng"], 
                Entity["Concept", "Earthstar::678m7"], 
                Entity["Concept", "GrifolaFrondosa::m7rxd"], 
                Entity["Concept", "Bolete::9g3s2"], 
                Entity["Concept", "Capitulum::834z6"], 
                Entity["Concept", "BathroomTissue::ts4sr"]}, "Dimensions" -> 
              1000], 
             NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"224\"", 
                    "\"224\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"conv1_7x7_s2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv1_7x7_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv1_7x7_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"112\"", 
                    "\"112\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "conv1_7x7_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"conv1_relu_7x7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv1_relu_7x7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv1_relu_7x7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"112\"", 
                    "\"112\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "conv1_relu_7x7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"pool1_3x3_s2_pad\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool1_3x3_s2_pad"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PaddingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool1_3x3_s2_pad"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"113\"", 
                    "\"113\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "pool1_3x3_s2_pad"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"pool1_3x3_s2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool1_3x3_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool1_3x3_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"56\"", "\"56\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "pool1_3x3_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"pool1_norm1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool1_norm1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LocalResponseNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool1_norm1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"56\"", "\"56\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "pool1_norm1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"conv2_3x3_reduce\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv2_3x3_reduce"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv2_3x3_reduce"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"56\"", "\"56\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "conv2_3x3_reduce"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"conv2_relu_3x3_reduce\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv2_relu_3x3_reduce"}, 
                    "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv2_relu_3x3_reduce"}, 
                    "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"56\"", "\"56\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "conv2_relu_3x3_reduce"}, 
                    "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"conv2_3x3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv2_3x3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv2_3x3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"56\"", 
                    "\"56\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "conv2_3x3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"conv2_relu_3x3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv2_relu_3x3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv2_relu_3x3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"56\"", 
                    "\"56\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "conv2_relu_3x3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"conv2_norm2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv2_norm2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LocalResponseNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv2_norm2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"56\"", 
                    "\"56\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "conv2_norm2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"pool2_3x3_s2_pad\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool2_3x3_s2_pad"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PaddingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool2_3x3_s2_pad"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"57\"", 
                    "\"57\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "pool2_3x3_s2_pad"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"pool2_3x3_s2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool2_3x3_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool2_3x3_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"28\"", 
                    "\"28\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "pool2_3x3_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"inception_3a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_3a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_3a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"28\"", 
                    "\"28\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "inception_3a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"inception_3b\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_3b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_3b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"480\"", "\"28\"", 
                    "\"28\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "inception_3b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"pool3_3x3_s2_pad\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool3_3x3_s2_pad"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PaddingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool3_3x3_s2_pad"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"480\"", "\"29\"", 
                    "\"29\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "pool3_3x3_s2_pad"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"pool3_3x3_s2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool3_3x3_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool3_3x3_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"480\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "pool3_3x3_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"inception_4a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_4a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_4a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "inception_4a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"inception_4b\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_4b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_4b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "inception_4b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"inception_4c\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_4c"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_4c"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "inception_4c"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"inception_4d\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_4d"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_4d"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"528\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "inception_4d"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"inception_4e\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_4e"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_4e"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"832\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "inception_4e"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"pool4_3x3_s2_pad\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool4_3x3_s2_pad"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PaddingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool4_3x3_s2_pad"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"832\"", "\"15\"", 
                    "\"15\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "pool4_3x3_s2_pad"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"pool4_3x3_s2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool4_3x3_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool4_3x3_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"832\"", "\"7\"", "\"7\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "pool4_3x3_s2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"inception_5a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_5a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_5a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"832\"", "\"7\"", "\"7\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "inception_5a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"inception_5b\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_5b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "inception_5b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1024\"", "\"7\"", "\"7\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "inception_5b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"pool5_7x7_s1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool5_7x7_s1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool5_7x7_s1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1024\"", "\"1\"", "\"1\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "pool5_7x7_s1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"pool5_drop_7x7_s1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool5_drop_7x7_s1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool5_drop_7x7_s1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1024\"", "\"1\"", "\"1\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "pool5_drop_7x7_s1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"flatten_0\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"loss3_classifier\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "loss3_classifier"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "loss3_classifier"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "loss3_classifier"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"prob\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{543., {291., 298.}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.708001298327049*^9, {3.708098305943218*^9, 3.708098312995324*^9}, 
   3.70809841562529*^9},ExpressionUUID->"ba7424c3-bc7b-42d0-b33a-\
ec87ce1464e1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{968, 988},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "c:1"->{
  Cell[580, 22, 182, 2, 
  110, "Title", "ExpressionUUID" -> "ad780da8-35ea-4592-9e9a-0e1f6076a0b9",
   CellTags->"c:1"]},
 "c:10"->{
  Cell[199160, 3900, 176, 2, 
  75, "Section", "ExpressionUUID" -> "5d2a6f32-1a47-4844-8454-91fe56a3b029",
   CellTags->"c:10"]},
 "c:11"->{
  Cell[203130, 4020, 365, 4, 
  52, "Subsection", "ExpressionUUID" -> "e1f9d4df-11f5-4476-af69-edf42da924aa",
   CellTags->"c:11"]},
 "c:12"->{
  Cell[231540, 4703, 188, 2, 
  52, "Subsection", "ExpressionUUID" -> "4e1ddef7-4c7a-427e-a6b8-99b9fc691a59",
   CellTags->"c:12"]},
 "c:13"->{
  Cell[310147, 6216, 180, 2, 
  80, "Chapter", "ExpressionUUID" -> "85774e08-09f0-420f-84f9-2f62a2279a4e",
   CellTags->"c:13"]},
 "c:3"->{
  Cell[1495, 50, 175, 2, 
  75, "Section", "ExpressionUUID" -> "93ee5080-e146-48a2-8d93-bc50e7f30292",
   CellTags->"c:3"]},
 "c:4"->{
  Cell[1695, 56, 183, 2, 
  52, "Subsection", "ExpressionUUID" -> "2283a501-c64e-477b-8bd3-2fe3ea025766",
   CellTags->"c:4"]},
 "c:5"->{
  Cell[10385, 285, 184, 2, 
  52, "Subsection", "ExpressionUUID" -> "a58533c9-e472-45e7-8c94-d4dcbf5786ea",
   CellTags->"c:5"]},
 "c:6"->{
  Cell[101504, 1963, 184, 2, 
  52, "Subsection", "ExpressionUUID" -> "fb161a3b-bfd6-4765-91d3-e073a84823a0",
   CellTags->"c:6"]},
 "c:7"->{
  Cell[101713, 1969, 177, 2, 
  43, "Subsubsection", "ExpressionUUID" -> "b4b181cc-
   db77-40ff-8854-78e6667224f7",
   CellTags->"c:7"]},
 "c:8"->{
  Cell[104594, 2041, 194, 2, 
  43, "Subsubsection", "ExpressionUUID" -> "5705b977-aea4-4e71-aeb1-
   dc9b986d5519",
   CellTags->"c:8"]},
 "c:9"->{
  Cell[161546, 3146, 207, 2, 
  43, "Subsubsection", "ExpressionUUID" -> "05e6b78e-01d4-4286-858d-
   bd665dc8419a",
   CellTags->"c:9"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"c:1", 594275, 11825},
 {"c:10", 594409, 11829},
 {"c:11", 594550, 11833},
 {"c:12", 594694, 11837},
 {"c:13", 594838, 11841},
 {"c:3", 594978, 11845},
 {"c:4", 595113, 11849},
 {"c:5", 595251, 11853},
 {"c:6", 595391, 11857},
 {"c:7", 595533, 11861},
 {"c:8", 595682, 11866},
 {"c:9", 595831, 11871}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 182, 2, 110, "Title", "ExpressionUUID" -> \
"ad780da8-35ea-4592-9e9a-0e1f6076a0b9",
 CellTags->"c:1"],
Cell[765, 26, 255, 8, 137, "Subtitle", "ExpressionUUID" -> \
"dd6f3376-3a2c-4c3a-a223-201bd98cd2bd"],
Cell[1023, 36, 447, 10, 114, "Code", "ExpressionUUID" -> \
"7bcdd017-e5dc-4f1a-a18a-9612a9ec1db9"],
Cell[CellGroupData[{
Cell[1495, 50, 175, 2, 75, "Section", "ExpressionUUID" -> \
"93ee5080-e146-48a2-8d93-bc50e7f30292",
 CellTags->"c:3"],
Cell[CellGroupData[{
Cell[1695, 56, 183, 2, 52, "Subsection", "ExpressionUUID" -> \
"2283a501-c64e-477b-8bd3-2fe3ea025766",
 CellTags->"c:4"],
Cell[1881, 60, 419, 7, 94, "Text", "ExpressionUUID" -> \
"82bcc6ac-e0c4-4f57-af23-343ea76ed8cd"],
Cell[2303, 69, 309, 7, 55, "Text", "ExpressionUUID" -> \
"7644a81a-b72e-456b-bc5c-1c3ee62380f4"],
Cell[CellGroupData[{
Cell[2637, 80, 1126, 31, 55, "Input", "ExpressionUUID" -> \
"1066d416-1cfa-409f-88d3-8cea6e247163"],
Cell[3766, 113, 958, 24, 51, "Output", "ExpressionUUID" -> \
"23604729-7e20-47d0-9467-9e36b269c670"]
}, Open  ]],
Cell[4739, 140, 265, 6, 33, "Text", "ExpressionUUID" -> \
"7a17be51-83fb-4a0c-9771-926ce8fa74d7"],
Cell[CellGroupData[{
Cell[5029, 150, 392, 10, 33, "Input", "ExpressionUUID" -> \
"8e50eb0e-1c20-4e09-a552-5d36450fba3b"],
Cell[5424, 162, 821, 20, 33, "Output", "ExpressionUUID" -> \
"5b3a7ece-2e1d-4a68-8801-0dd979726477"]
}, Open  ]],
Cell[6260, 185, 994, 20, 184, "Text", "ExpressionUUID" -> \
"452edbc9-c8b9-4dfa-8904-ecf610115984"],
Cell[7257, 207, 3091, 73, 385, "Text", "ExpressionUUID" -> \
"40a1171a-27fd-45f0-bac0-747e160e0bae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10385, 285, 184, 2, 52, "Subsection", "ExpressionUUID" -> \
"a58533c9-e472-45e7-8c94-d4dcbf5786ea",
 CellTags->"c:5"],
Cell[CellGroupData[{
Cell[10594, 291, 2252, 57, 252, "Code", "ExpressionUUID" -> \
"7226dafb-2151-4142-892c-243a561df081"],
Cell[12849, 350, 13101, 225, 389, "Output", "ExpressionUUID" -> \
"a9d47f2d-075f-4738-a109-4d81807c4eb6"],
Cell[25953, 577, 12488, 215, 389, "Output", "ExpressionUUID" -> \
"31dd9935-b9c4-4cc9-9488-885eca307348"]
}, Open  ]],
Cell[38456, 795, 256, 6, 55, "Text", "ExpressionUUID" -> \
"24c22c84-7ea0-4b15-a998-3d8ef1ddc6f6"],
Cell[CellGroupData[{
Cell[38737, 805, 1090, 29, 260, "Input", "ExpressionUUID" -> \
"f4337a4f-e7f7-4172-b900-ff2c459999ce"],
Cell[39830, 836, 10914, 188, 389, "Output", "ExpressionUUID" -> \
"18aeefff-d4c5-467c-9984-d9a66f51e49d"],
Cell[50747, 1026, 11891, 204, 389, "Output", "ExpressionUUID" -> \
"fe34fe50-8b58-4bad-b4f0-9e99aaa5bc3a"]
}, Open  ]],
Cell[62653, 1233, 267, 6, 33, "Text", "ExpressionUUID" -> \
"09f1837d-2e20-478e-8cf0-e398736f274c"],
Cell[CellGroupData[{
Cell[62945, 1243, 1582, 51, 260, "Input", "ExpressionUUID" -> \
"0d201aea-1b4e-4bca-af2c-0773dc041b97"],
Cell[64530, 1296, 11270, 193, 389, "Output", "ExpressionUUID" -> \
"74bddfd2-0e76-450f-a3ec-ce6238324a74"],
Cell[75803, 1491, 10928, 187, 389, "Output", "ExpressionUUID" -> \
"ff02dc59-9ca1-4444-911a-7a392c7bfe6b"]
}, Open  ]],
Cell[86746, 1681, 315, 7, 55, "Text", "ExpressionUUID" -> \
"b9a4c60a-7bf3-441b-bf91-5371dec06ea2"],
Cell[CellGroupData[{
Cell[87086, 1692, 1074, 34, 144, "Input", "ExpressionUUID" -> \
"f732e8f8-d28c-4f00-b3c6-4f43e8b1b4e1"],
Cell[88163, 1728, 13086, 224, 389, "Output", "ExpressionUUID" -> \
"44eb0b84-526a-4fff-8e7e-4e1a14adbcb1"]
}, Open  ]],
Cell[101264, 1955, 203, 3, 33, "Text", "ExpressionUUID" -> \
"d888ebed-df16-41cf-9607-298a3031e207"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101504, 1963, 184, 2, 52, "Subsection", "ExpressionUUID" -> \
"fb161a3b-bfd6-4765-91d3-e073a84823a0",
 CellTags->"c:6"],
Cell[CellGroupData[{
Cell[101713, 1969, 177, 2, 43, "Subsubsection", "ExpressionUUID" -> \
"b4b181cc-db77-40ff-8854-78e6667224f7",
 CellTags->"c:7"],
Cell[101893, 1973, 2664, 63, 339, "Text", "ExpressionUUID" -> \
"8d4b97c2-b62a-4656-9b91-2afd03b408b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104594, 2041, 194, 2, 43, "Subsubsection", "ExpressionUUID" -> \
"5705b977-aea4-4e71-aeb1-dc9b986d5519",
 CellTags->"c:8"],
Cell[104791, 2045, 919, 21, 99, "Text", "ExpressionUUID" -> \
"1cba46a0-8c6b-44f3-90de-6d0f52b4628f"],
Cell[105713, 2068, 315, 8, 56, "Input", "ExpressionUUID" -> \
"31b6d905-0765-4d8b-acc0-9569ce6e0571"],
Cell[CellGroupData[{
Cell[106053, 2080, 2168, 70, 301, "Input", "ExpressionUUID" -> \
"2c6ac809-53b4-4da2-9dcf-c1bba1c0675b"],
Cell[108224, 2152, 13185, 225, 389, "Output", "ExpressionUUID" -> \
"68c46bf0-ed78-4feb-83f7-9cc9973734db"],
Cell[121412, 2379, 10912, 187, 389, "Output", "ExpressionUUID" -> \
"3154021a-2bc1-434b-8feb-7e658657869f"]
}, Open  ]],
Cell[132339, 2569, 878, 26, 56, "Text", "ExpressionUUID" -> \
"431714a9-e0f0-474e-909c-6642c9476811"],
Cell[133220, 2597, 291, 8, 33, "Input", "ExpressionUUID" -> \
"2fe1d05d-8430-4207-b7df-e14253cc07de"],
Cell[CellGroupData[{
Cell[133536, 2609, 2247, 76, 304, "Input", "ExpressionUUID" -> \
"d5094b62-a385-4721-b419-5aed8825394b"],
Cell[135786, 2687, 11614, 199, 389, "Output", "ExpressionUUID" -> \
"fb7e1323-ca14-48d3-a65f-1324c128bf11"],
Cell[147403, 2888, 12506, 214, 389, "Output", "ExpressionUUID" -> \
"58caa2c0-178c-4fa1-89bb-3941d446f08d"]
}, Open  ]],
Cell[159924, 3105, 1585, 36, 256, "Code", "ExpressionUUID" -> \
"fdcad5f6-7381-4adb-8b6b-13176819cc9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161546, 3146, 207, 2, 43, "Subsubsection", "ExpressionUUID" -> \
"05e6b78e-01d4-4286-858d-bd665dc8419a",
 CellTags->"c:9"],
Cell[161756, 3150, 186, 3, 33, "Text", "ExpressionUUID" -> \
"9fc29847-b0fe-4831-a911-d1e89f78676c"],
Cell[CellGroupData[{
Cell[161967, 3157, 1398, 34, 232, "Input", "ExpressionUUID" -> \
"81cf6d26-f07d-43b0-a0ee-ac01f309092c"],
Cell[163368, 3193, 2021, 41, 482, "Output", "ExpressionUUID" -> \
"d597a6f1-c5cd-4be4-9c97-7d3acaaa8cfa"]
}, Open  ]],
Cell[165404, 3237, 1360, 33, 210, "Code", "ExpressionUUID" -> \
"9dd6df36-f730-4b60-9a95-d017eef5f0fa"],
Cell[CellGroupData[{
Cell[166789, 3274, 1393, 31, 259, "Input", "ExpressionUUID" -> \
"4c32b734-1315-440c-aced-e45bf84cd60f"],
Cell[168185, 3307, 12151, 208, 482, "Output", "ExpressionUUID" -> \
"a487c0eb-b1de-4cbb-9906-484cea4ef029"]
}, Open  ]],
Cell[180351, 3518, 322, 6, 55, "Text", "ExpressionUUID" -> \
"89e0d047-4782-4558-b3ad-1c4d3190e143"],
Cell[CellGroupData[{
Cell[180698, 3528, 1831, 43, 298, "Input", "ExpressionUUID" -> \
"0c8d30b6-6dcc-4f95-9fd5-e1ade8454754"],
Cell[182532, 3573, 1975, 41, 482, "Output", "ExpressionUUID" -> \
"8fed0180-2aaf-4b5f-8077-c7630edf2c5f"]
}, Open  ]],
Cell[184522, 3617, 811, 22, 77, "Text", "ExpressionUUID" -> \
"9119176f-76d2-4fcd-bd65-b8d0f0cd2c63"],
Cell[CellGroupData[{
Cell[185358, 3643, 1978, 44, 304, "Input", "ExpressionUUID" -> \
"2d1b6cb2-9715-4c74-aa9d-71d70d2bde11"],
Cell[187339, 3689, 11578, 198, 482, "Output", "ExpressionUUID" -> \
"fe08b6f5-f286-4f21-a92b-83deaa487851"]
}, Open  ]],
Cell[198932, 3890, 167, 3, 33, "Text", "ExpressionUUID" -> \
"602760b6-5fe2-44d5-bd81-d5407fdb56b9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199160, 3900, 176, 2, 75, "Section", "ExpressionUUID" -> \
"5d2a6f32-1a47-4844-8454-91fe56a3b029",
 CellTags->"c:10"],
Cell[199339, 3904, 232, 4, 33, "Text", "ExpressionUUID" -> \
"5f708605-d343-40de-a7d0-88198996dc12"],
Cell[199574, 3910, 1465, 42, 47, "Text", "ExpressionUUID" -> \
"7d9ebff3-20f1-4f3e-ab46-1787f48e2983"],
Cell[201042, 3954, 2063, 62, 145, "Text", "ExpressionUUID" -> \
"032c7489-2d4a-425e-b0a9-63879d136b2e"],
Cell[CellGroupData[{
Cell[203130, 4020, 365, 4, 52, "Subsection", "ExpressionUUID" -> \
"e1f9d4df-11f5-4476-af69-edf42da924aa",
 CellTags->"c:11"],
Cell[203498, 4026, 1652, 45, 100, "Text", "ExpressionUUID" -> \
"cdc834ce-7060-493c-a862-d260ea9f4ed4"],
Cell[CellGroupData[{
Cell[205175, 4075, 408, 12, 43, "Subsubsection", "ExpressionUUID" -> \
"f1791aec-c460-44cf-810d-ff90998a0a79"],
Cell[205586, 4089, 311, 7, 55, "Text", "ExpressionUUID" -> \
"6e6a2dda-8cab-4026-a8a4-747fa0d0d27e"],
Cell[205900, 4098, 1005, 23, 58, "Input", "ExpressionUUID" -> \
"85b96655-354d-425a-b8d5-608ccb690da1"],
Cell[CellGroupData[{
Cell[206930, 4125, 1192, 29, 144, "Input", "ExpressionUUID" -> \
"d3266da8-1f4b-4aab-849c-757bfb26d9d9"],
Cell[208125, 4156, 2295, 44, 873, "Output", "ExpressionUUID" -> \
"785a5dd7-88bd-43ce-bc46-e13f42823c62"]
}, Open  ]],
Cell[210435, 4203, 1466, 31, 142, "Text", "ExpressionUUID" -> \
"2c1e6b1c-7ea3-4bd5-b98e-04fea942e3aa"],
Cell[211904, 4236, 1512, 31, 58, "Input", "ExpressionUUID" -> \
"a20701cf-1d37-4e07-9b79-a72b0c647318"],
Cell[213419, 4269, 333, 7, 55, "Text", "ExpressionUUID" -> \
"fbb7cf75-1c36-45e9-80a8-02251146c29e"],
Cell[CellGroupData[{
Cell[213777, 4280, 2133, 47, 232, "Input", "ExpressionUUID" -> \
"3781e777-41e6-41c6-bce0-38f3217b599d"],
Cell[215913, 4329, 3341, 60, 906, "Output", "ExpressionUUID" -> \
"6343c423-7dc1-4f91-96bc-6c5c5478045b"]
}, Open  ]],
Cell[219269, 4392, 769, 13, 98, "Text", "ExpressionUUID" -> \
"127f4039-2f52-4d59-9570-a630466cfcb1"],
Cell[220041, 4407, 829, 25, 59, "Text", "ExpressionUUID" -> \
"92d3800c-239d-4d56-975b-a6dbefcc4ee7"],
Cell[220873, 4434, 396, 9, 56, "Input", "ExpressionUUID" -> \
"f0654e87-38a6-4514-8f39-efeb81e388a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221306, 4448, 232, 4, 43, "Subsubsection", "ExpressionUUID" -> \
"4747fc85-7373-4625-a709-2a3c45215270"],
Cell[221541, 4454, 579, 10, 77, "Text", "ExpressionUUID" -> \
"78503eda-6c4a-4a1d-a6bf-613b3664fbe0"],
Cell[222123, 4466, 349, 7, 55, "Text", "ExpressionUUID" -> \
"e04610ae-04da-4bf6-a369-d74d0de1c3ec"],
Cell[222475, 4475, 1218, 30, 122, "Input", "ExpressionUUID" -> \
"fb45f425-5042-4b0b-9353-bed4f688aa8b"],
Cell[CellGroupData[{
Cell[223718, 4509, 1231, 27, 254, "Input", "ExpressionUUID" -> \
"98f06143-93f1-4bb5-ae9a-4b24436202f0"],
Cell[224952, 4538, 2043, 42, 359, "Output", "ExpressionUUID" -> \
"f759fcd5-3ad0-4f75-a43b-a97836a819c5"]
}, Open  ]],
Cell[227010, 4583, 233, 6, 33, "Text", "ExpressionUUID" -> \
"9192bf5b-cbfe-4dc2-92b2-3fd42b2a5231"],
Cell[CellGroupData[{
Cell[227268, 4593, 1427, 31, 254, "Input", "ExpressionUUID" -> \
"2673a054-b6db-44d1-bf58-1bf04b6d87c5"],
Cell[228698, 4626, 2020, 42, 356, "Output", "ExpressionUUID" -> \
"a01b18c6-9acc-4cc3-b612-2231b0e41d66"]
}, Open  ]],
Cell[230733, 4671, 343, 14, 34, "Text", "ExpressionUUID" -> \
"3e46be4e-eff3-46b8-8c36-5a91f594d5b0"],
Cell[231079, 4687, 412, 10, 75, "Code", "ExpressionUUID" -> \
"e8186ea8-893f-400b-a7bb-5bdd19e7cc07"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[231540, 4703, 188, 2, 52, "Subsection", "ExpressionUUID" -> \
"4e1ddef7-4c7a-427e-a6b8-99b9fc691a59",
 CellTags->"c:12"],
Cell[231731, 4707, 216, 4, 33, "Text", "ExpressionUUID" -> \
"73fc45af-df03-437d-bdd7-1bf036d553de"],
Cell[231950, 4713, 1900, 55, 74, "Text", "ExpressionUUID" -> \
"690a6ed0-b89c-4ab1-b2ea-df2b6defa88a"],
Cell[233853, 4770, 215, 5, 33, "Text", "ExpressionUUID" -> \
"899709ca-e38d-46f9-93b8-bccf33163c1c"],
Cell[CellGroupData[{
Cell[234093, 4779, 1520, 34, 232, "Input", "ExpressionUUID" -> \
"7fe19ff4-e63c-4b94-bed6-f8d8269713fa"],
Cell[235616, 4815, 2370, 46, 359, "Output", "ExpressionUUID" -> \
"b81d076d-da1b-4038-98b3-bd1325ddd77e"]
}, Open  ]],
Cell[238001, 4864, 838, 23, 87, "Text", "ExpressionUUID" -> \
"e0654808-df1f-469c-a9cb-728f37a919f1"],
Cell[CellGroupData[{
Cell[238864, 4891, 908, 22, 218, "Input", "ExpressionUUID" -> \
"3cede240-63c9-484e-95da-6e575abdf44c"],
Cell[239775, 4915, 13340, 237, 261, "Output", "ExpressionUUID" -> \
"c0e24445-a0c7-4edd-8b19-9c3d959738a1"]
}, Open  ]],
Cell[253130, 5155, 542, 13, 95, "Code", "ExpressionUUID" -> \
"df85b5a2-1484-4456-9048-5d5e3562282d"],
Cell[253675, 5170, 381, 8, 75, "Code", "ExpressionUUID" -> \
"0ef2f4fc-4f29-4def-a56f-a8ce0c887c73"],
Cell[254059, 5180, 501, 14, 34, "Text", "ExpressionUUID" -> \
"43fff534-8157-451f-9540-3022cfdc6107"],
Cell[CellGroupData[{
Cell[254585, 5198, 1307, 27, 188, "Input", "ExpressionUUID" -> \
"fb6a6ed4-8cdb-4e33-99fd-4ec6c925e238"],
Cell[255895, 5227, 39159, 706, 296, "Output", "ExpressionUUID" -> \
"0ce960a3-4c9c-413e-bb81-2c8af4dc1e7f"]
}, Open  ]],
Cell[295069, 5936, 275, 8, 34, "Text", "ExpressionUUID" -> \
"61707247-b3c6-4e04-b4ba-9ba5fe5c0d81"],
Cell[CellGroupData[{
Cell[295369, 5948, 1939, 39, 254, "Input", "ExpressionUUID" -> \
"4bad230b-548f-43b8-a1bf-85a3d9718d95"],
Cell[297311, 5989, 12351, 210, 389, "Output", "ExpressionUUID" -> \
"baae3d89-91d9-48d7-ad9e-9e0485ace1d6"]
}, Open  ]],
Cell[309677, 6202, 421, 8, 54, "Text", "ExpressionUUID" -> \
"9c0b32e7-17e8-42ba-8d46-6741292ab2a9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310147, 6216, 180, 2, 80, "Chapter", "ExpressionUUID" -> \
"85774e08-09f0-420f-84f9-2f62a2279a4e",
 CellTags->"c:13"],
Cell[CellGroupData[{
Cell[310352, 6222, 1419, 31, 246, "Code", "ExpressionUUID" -> \
"08ce9c87-8123-42a7-acbd-9a39dc111385"],
Cell[311774, 6255, 12433, 210, 500, "Output", "ExpressionUUID" -> \
"28b63cb3-4f6e-497b-ac1e-4af6f32e62d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324244, 6470, 250, 5, 34, "Input", "ExpressionUUID" -> \
"2dc12446-9f12-4886-8cab-980f57a8c678"],
Cell[324497, 6477, 269422, 5332, 633, "Output", "ExpressionUUID" -> \
"ba7424c3-bc7b-42d0-b33a-ec87ce1464e1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

