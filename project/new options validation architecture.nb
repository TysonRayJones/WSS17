(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     53890,       1265]
NotebookOptionsPosition[     49466,       1157]
NotebookOutlinePosition[     49807,       1172]
CellTagsIndexPosition[     49764,       1169]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["OptionsPattern Paradigm", "Title",
 CellChangeTimes->{{3.7078364324206233`*^9, 3.7078364362366924`*^9}, {
  3.7112726452806573`*^9, 3.7112726457307577`*^9}, {3.711678128733694*^9, 
  3.7116781323274446`*^9}},ExpressionUUID->"0c1b7362-5ed8-4ccc-abb7-\
72fa6f6ce9af"],

Cell["\<\
Tyson Jones
tyson.jones@monash.edu
August 2017\
\>", "Subtitle",
 CellChangeTimes->{{3.7078623336702824`*^9, 3.7078623531022215`*^9}, {
  3.710674188936492*^9, 
  3.7106741894084225`*^9}},ExpressionUUID->"5e3b6e5f-ae47-401b-b2fe-\
9ec4b415b524"],

Cell[CellGroupData[{

Cell["For filtering and validating options", "Chapter",
 CellChangeTimes->{{3.707836441770815*^9, 3.707836443342235*^9}, {
   3.7106741957288685`*^9, 3.710674196040546*^9}, 3.711272661207796*^9, {
   3.711678135718101*^9, 
   3.71167816568497*^9}},ExpressionUUID->"241ee3eb-d6ba-4ec3-b403-\
59e5e2d16fcb"],

Cell[CellGroupData[{

Cell["basic structure", "Section",
 CellChangeTimes->{{3.711678253414814*^9, 
  3.7116782552536297`*^9}},ExpressionUUID->"ae042e3c-4976-4367-b29b-\
fdec3b6dc711"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", " ", "=", " ", 
       RowBox[{"2", " ", "A"}]}], "}"}], ",", " ", "#"}], "]"}], " ", "&"}], 
  " ", "@", " ", "a"}]], "Input",
 CellChangeTimes->{{3.7116780154869075`*^9, 3.7116780641008835`*^9}, {
  3.711678205414529*^9, 
  3.711678235461685*^9}},ExpressionUUID->"e4444009-6f82-47e7-be2f-\
c2f30e90e21d"],

Cell[BoxData[
 RowBox[{"2", " ", "A"}]], "Output",
 CellChangeTimes->{{3.7116782187694917`*^9, 
  3.711678229566366*^9}},ExpressionUUID->"87f9a493-d39e-419a-aaec-\
e5f4ca884770"]
}, Open  ]],

Cell[TextData[{
 StyleBox["a = 2A",
  FontWeight->"Bold"],
 " would instead become some ",
 StyleBox["options = validating[raw options]",
  FontWeight->"Bold"],
 ". This entire structure can be put inside another function"
}], "Text",
 CellChangeTimes->{{3.71167826514425*^9, 3.711678296186284*^9}, {
  3.7116783516110983`*^9, 
  3.711678361195886*^9}},ExpressionUUID->"f4ae6681-b9db-4962-972f-\
515c5811ce20"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"don", "'"}], "t", " ", "actually", " ", "need", " ", "this"}], 
     ";", "   ", 
     RowBox[{
     "declare", " ", "accepted", " ", "funcs", " ", "in", " ", 
      "OptionsPattern"}]}], ",", " ", 
    RowBox[{
     RowBox[{"then", " ", "just", " ", "do", " ", 
      RowBox[{"OptionValue", "[", 
       RowBox[{"{", "}"}], "]"}]}], ";", " ", "\n", 
     RowBox[{
      RowBox[{"checkOptions", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"options", ":", 
         RowBox[{"OptionsPattern", "[", "]"}]}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"functions", ":", "_"}], "/;", 
         RowBox[{"VectorQ", "[", 
          RowBox[{"functions", ",", " ", 
           RowBox[{"MatchQ", "[", "_Symbol", "]"}]}], "]"}]}]}], "\n", "]"}], 
      " ", ":=", "\n", "\t", 
      RowBox[{"OptionValue", "[", 
       RowBox[{"functions", ",", " ", 
        RowBox[{"{", "options", "}"}], ",", " ", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"checkOptions", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"options", ":", 
         RowBox[{"OptionsPattern", "[", "]"}]}], ",", "\n", "\t", 
        RowBox[{"function", ":", "_Symbol"}]}], "\n", "]"}], " ", ":=", "\n", 
      "\t", 
      RowBox[{"checkOptions", "[", 
       RowBox[{"options", ",", " ", 
        RowBox[{"{", "function", "}"}]}], "]"}]}]}]}], "\n", "*)"}], "\n", 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"extractOptions", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"options", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"functions", ":", "_"}], "/;", 
       RowBox[{"VectorQ", "[", 
        RowBox[{"functions", ",", " ", 
         RowBox[{"MatchQ", "[", "_Symbol", "]"}]}], "]"}]}]}], "\n", "]"}], 
    " ", ":=", " ", "\n", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{
     "silently", " ", "return", " ", "only", " ", "options", " ", "for", " ", 
      "functions"}], " ", "*)"}], "\n", "\t", 
    RowBox[{"Sequence", " ", "@@", " ", 
     RowBox[{"FilterRules", "[", 
      RowBox[{
       RowBox[{"{", "options", "}"}], ",", " ", 
       RowBox[{"Options", " ", "/@", " ", "functions"}]}], "]"}]}]}], "\n", 
   "\t", "\n", 
   RowBox[{
    RowBox[{"extractOptions", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"options", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}], ",", "\n", "\t", 
      RowBox[{"function", ":", "_Symbol"}]}], "\n", "]"}], " ", ":=", "\n", 
    "\t", 
    RowBox[{"extractOptions", "[", 
     RowBox[{"options", ",", " ", 
      RowBox[{"{", "function", "}"}]}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"addDefaultOptions", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"options", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"functions", ":", "_"}], "/;", 
       RowBox[{"VectorQ", "[", 
        RowBox[{"functions", ",", " ", 
         RowBox[{"MatchQ", "[", "_Symbol", "]"}]}], "]"}]}]}], "\n", "]"}], 
    " ", ":=", "\n", "\t", 
    RowBox[{"Sequence", " ", "@@", " ", 
     RowBox[{"Flatten", " ", "@", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "options", "}"}], ",", " ", 
        RowBox[{"Options", " ", "/@", " ", "functions"}]}], "]"}]}]}]}], "\n",
    "\t", "\n", 
   RowBox[{
    RowBox[{"addDefaultOptions", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"options", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}], ",", "\n", "\t", 
      RowBox[{"function", ":", "_Symbol"}]}], "\n", "]"}], " ", ":=", "\n", 
    "\t", 
    RowBox[{"addDefaultOptions", "[", 
     RowBox[{"options", ",", " ", 
      RowBox[{"{", "function", "}"}]}], "]"}]}], "\n", "\t", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"not", " ", "actually", " ", "needed"}], ";", " ", 
     RowBox[{
     "just", " ", "call", " ", "purifyOptions", " ", "and", " ", "do", " ", 
      "the", " ", "manual", " ", "option", " ", "checking"}], ";", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"OptionValue", "[", 
        RowBox[{"{", "}"}], "]"}], " ", "\n", 
       RowBox[{"validateOptions", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"options", ":", 
          RowBox[{"OptionsPattern", "[", "]"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"functions", ":", "_"}], "/;", 
          RowBox[{"VectorQ", "[", 
           RowBox[{"functions", ",", " ", 
            RowBox[{"MatchQ", "[", "_Symbol", "]"}]}], "]"}]}]}], "\n", 
        "]"}]}], " ", ":=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "\n", "\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "throw", " ", "single", " ", "error", " ", "for", " ", "bad", " ", 
           "options"}], " ", "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"checkOptions", "[", 
           RowBox[{"options", ",", " ", "functions"}], "]"}], ";", "\n", "\t",
           "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"return", " ", "valid", " ", "options"}], " ", "*)"}], 
          "\n", "\t", 
          RowBox[{"extractOptions", "[", 
           RowBox[{"options", ",", " ", "functions"}], "]"}]}], "\n", ")"}], 
        "\n", "\n", 
        RowBox[{"validateOptions", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"options", ":", 
           RowBox[{"OptionsPattern", "[", "]"}]}], ",", "\n", "\t", 
          RowBox[{"function", ":", "_Symbol"}]}], "\n", "]"}]}], " ", ":=", 
       "\n", "\t", 
       RowBox[{"validateOptions", "[", 
        RowBox[{"options", ",", " ", 
         RowBox[{"{", "function", "}"}]}], "]"}]}]}]}], "\n", "*)"}], "\n", 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "only", " ", "very", " ", "dubiously", " ", "works", " ", "using", " ", 
      "Hold", " ", "and", " ", "Release", "\n", 
      RowBox[{"withValidOptions", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"rawOptions", ":", 
         RowBox[{"OptionsPattern", "[", "]"}]}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"functions", ":", "_"}], "/;", 
         RowBox[{"VectorQ", "[", 
          RowBox[{"functions", ",", " ", 
           RowBox[{"MatchQ", "[", "_Symbol", "]"}]}], "]"}]}]}], "\n", 
       "]"}]}], " ", ":=", "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"options", " ", "=", " ", 
          RowBox[{"validateOptions", "[", 
           RowBox[{"rawOptions", ",", " ", "functions"}], "]"}]}], "}"}], ",",
         "\n", "\t\t", "#"}], "\n", "\t", "]"}], " ", "&"}]}], "\n", 
    "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.711678465936511*^9, 3.711678469096227*^9}, {
   3.7116785317930727`*^9, 3.711678538741724*^9}, {3.7116787020525136`*^9, 
   3.7116787710918245`*^9}, {3.7116790048325667`*^9, 3.711679006098816*^9}, {
   3.711679039285474*^9, 3.7116791597239847`*^9}, {3.7116793655933833`*^9, 
   3.7116794060588613`*^9}, {3.7116795120137744`*^9, 
   3.7116795126284804`*^9}, {3.711679620472885*^9, 3.7116797149890594`*^9}, {
   3.7116797467315254`*^9, 3.7116798048277583`*^9}, {3.7116798836855097`*^9, 
   3.711679883755831*^9}, 3.7116799517412796`*^9, {3.711680701347131*^9, 
   3.7116807223253202`*^9}, {3.711680802301346*^9, 3.711680816447891*^9}, {
   3.7116811501666803`*^9, 3.711681159847477*^9}, {3.711681313281189*^9, 
   3.711681314046301*^9}, 3.711682037264704*^9, {3.711682101188637*^9, 
   3.711682113334811*^9}, {3.711682447586644*^9, 3.7116825062922015`*^9}, {
   3.7116825367994766`*^9, 3.711682564929127*^9}, {3.7116826027815037`*^9, 
   3.711682720272086*^9}, {3.711682757365001*^9, 3.711682758782242*^9}, {
   3.7116828207610483`*^9, 3.7116828700975337`*^9}, {3.7116834279915533`*^9, 
   3.711683451901077*^9}, {3.7116835032837386`*^9, 3.7116835389904795`*^9}, {
   3.7116837193924055`*^9, 3.7116837395862775`*^9}, {3.7116838379892845`*^9, 
   3.71168390462016*^9}, {3.7116990498972054`*^9, 3.7116990961132574`*^9}, {
   3.7116991286977816`*^9, 3.7116991884592*^9}, {3.7116992348268127`*^9, 
   3.711699268766862*^9}, {3.7116993415253415`*^9, 3.7116993521338954`*^9}, {
   3.711699412491069*^9, 3.711699427297024*^9}, {3.7116994908439007`*^9, 
   3.7116995515294347`*^9}},ExpressionUUID->"c7e02640-a6ac-4c2e-abec-\
6195833f4e19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", " ", "[", " ", 
  RowBox[{"validateOptions", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"poopy", " ", "\[Rule]", " ", "3"}], ",", "\[IndentingNewLine]", 
    "\t", 
    RowBox[{"wtf", " ", "\[Rule]", " ", "5"}], ",", "\[IndentingNewLine]", 
    "\t", 
    RowBox[{"PlotRange", " ", "\[Rule]", " ", "10"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"AxesLabel", " ", "\[Rule]", " ", "19"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"Paneled", " ", "\[Rule]", " ", "True"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"{", 
     RowBox[{"Plot", ",", " ", "Manipulate"}], "}"}]}], "\[IndentingNewLine]",
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7116791641483803`*^9, 3.711679223666175*^9}, {
  3.7116794371615887`*^9, 3.7116794463226123`*^9}, {3.7116794795894275`*^9, 
  3.7116794886977305`*^9}},ExpressionUUID->"47f56e0c-5389-4cc1-b0dd-\
fda5e24443d6"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","nodef",
   "\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"poopy\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Plot\\\", \\\",\\\", \\\"Manipulate\\\
\"}], \\\"}\\\"}]\\).\"",2,217,139,32593524158198295073,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7116800773553457`*^9, {3.711680790074752*^9, 3.711680819238432*^9}, {
   3.7116826773874846`*^9, 3.7116827239469585`*^9}, 3.711682761363061*^9, {
   3.7116828262246027`*^9, 3.7116828729401226`*^9}, 
   3.711683908252248*^9},ExpressionUUID->"c7977051-ba81-454b-80a1-\
f24cb8140215"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","nodef",
   "\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"wtf\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Plot\\\", \\\",\\\", \\\"Manipulate\\\
\"}], \\\"}\\\"}]\\).\"",2,217,140,32593524158198295073,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7116800773553457`*^9, {3.711680790074752*^9, 3.711680819238432*^9}, {
   3.7116826773874846`*^9, 3.7116827239469585`*^9}, 3.711682761363061*^9, {
   3.7116828262246027`*^9, 3.7116828729401226`*^9}, 
   3.7116839082957487`*^9},ExpressionUUID->"ce0d1ed4-d100-4449-8272-\
98a0a4e5bb8c"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"PlotRange", "\[Rule]", "10"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "19"}], ",", 
   RowBox[{"Paneled", "\[Rule]", "True"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.711680077376346*^9, {3.711680790115251*^9, 3.7116808192809324`*^9}, {
   3.7116826774289837`*^9, 3.711682723989959*^9}, 3.711682761406561*^9, {
   3.7116828262681074`*^9, 3.711682872981619*^9}, 
   3.711683908299247*^9},ExpressionUUID->"59243756-7039-4b02-b112-\
64dc65c1d15a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"withValidOptions", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"poopy", " ", "\[Rule]", " ", "3"}], ",", "\[IndentingNewLine]", 
    "\t", 
    RowBox[{"wtf", " ", "\[Rule]", " ", "5"}], ",", "\[IndentingNewLine]", 
    "\t", 
    RowBox[{"PlotRange", " ", "\[Rule]", " ", "10"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"AxesLabel", " ", "\[Rule]", " ", "19"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"Paneled", " ", "\[Rule]", " ", "True"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"{", 
     RowBox[{"Plot", ",", " ", "Manipulate"}], "}"}]}], "\[IndentingNewLine]",
    "]"}], " ", "@", " ", 
  RowBox[{"f", "[", "options", "]"}]}]], "Input",
 CellChangeTimes->{{3.7116798178544965`*^9, 3.711679848471816*^9}, {
  3.7116798987440214`*^9, 3.711679935759646*^9}, {3.7116799739275827`*^9, 
  3.711679976045079*^9}, {3.7116800378888936`*^9, 3.711680038780677*^9}, {
  3.7116808324751024`*^9, 3.711680834643037*^9}, {3.7116808714290776`*^9, 
  3.7116808774940844`*^9}},ExpressionUUID->"7f5d00d9-ad99-4480-a857-\
d96e085c3a8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"withValidOptions", "[", 
   RowBox[{
    RowBox[{"poopy", "\[Rule]", "3"}], ",", 
    RowBox[{"wtf", "\[Rule]", "5"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "10"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", "19"}], ",", 
    RowBox[{"Paneled", "\[Rule]", "True"}], ",", 
    RowBox[{"{", 
     RowBox[{"Plot", ",", "Manipulate"}], "}"}]}], "]"}], "[", 
  RowBox[{"f", "[", "options", "]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.7116798487346325`*^9, {3.711679885556121*^9, 3.7116799055003386`*^9}, {
   3.711679937890767*^9, 3.7116799768563614`*^9}, 3.7116800392723527`*^9, 
   3.7116800799581976`*^9, 3.7116807685929937`*^9, {3.711680825569545*^9, 
   3.711680836679596*^9}, {3.7116808717133694`*^9, 3.711680877824578*^9}, 
   3.7116839093581066`*^9},ExpressionUUID->"3731130d-8367-4021-9e7a-\
bd4501569aca"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testfunc", "[", "\n", "\t", 
   RowBox[{"rawOptions", ":", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "\n", "]"}], " ", ":=", "\n", 
  "\t", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", "options"}], 
    "]"}], " ", "//", "\n", "\t", 
   RowBox[{"withValidOptions", "[", 
    RowBox[{"rawOptions", ",", " ", 
     RowBox[{"{", "Plot", "}"}]}], "]"}]}]}], "\n", 
 RowBox[{"\t"}]}], "Code",
 CellChangeTimes->{{3.711680393287033*^9, 3.711680507049183*^9}, 
   3.711680638314189*^9, 3.7116807559472895`*^9, {3.7116809339202127`*^9, 
   3.7116809720880165`*^9}, {3.7116810045767183`*^9, 
   3.71168104203629*^9}},ExpressionUUID->"3d1996ac-69a5-46ef-85c6-\
9e6cde2213c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testfunc", "[", 
  RowBox[{
   RowBox[{"PlotRange", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "2"}], "}"}]}], ",", " ", 
   RowBox[{"pop", " ", "\[Rule]", " ", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7116805212034082`*^9, 
  3.711680534007409*^9}},ExpressionUUID->"ded7580d-8e73-4993-ac6f-\
97cc2788291c"],

Cell[BoxData[
 TemplateBox[{
  "Plot","nonopt",
   "\"Options expected (instead of \\!\\(\\*RowBox[{\\\"options\\\"}]\\)) \
beyond position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{SuperscriptBox[\\\"x\\\", \
\\\"2\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \
\\\",\\\", \\\"options\\\"}], \\\"]\\\"}]\\). An option must be a rule or a \
list of rules.\"",2,96,92,32593524158198295073,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7116805344200754`*^9, 3.7116806403593445`*^9, 3.7116807077566576`*^9, 
   3.711680908490696*^9, {3.7116809392962627`*^9, 3.711680973966467*^9}, {
   3.711681033516918*^9, 3.7116810447912016`*^9}, 
   3.7116814351439695`*^9},ExpressionUUID->"fcc9e334-dbc5-4ca0-88c9-\
836a8b699e46"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","nodef",
   "\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"pop\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"Plot\\\", \\\"}\\\"}]\\).\"",2,96,93,
   32593524158198295073,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7116805344200754`*^9, 3.7116806403593445`*^9, 3.7116807077566576`*^9, 
   3.711680908490696*^9, {3.7116809392962627`*^9, 3.711680973966467*^9}, {
   3.711681033516918*^9, 3.7116810447912016`*^9}, 
   3.71168143519197*^9},ExpressionUUID->"91eea70d-24e3-4823-88cc-\
185224d1884f"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
btNA7NjTdy279//bQ+D/95D/ATgbkOg=
         "]]}},
      Annotation[#, "Charting`Private`Tag$3796#1"]& ]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.9999999591836735, 0.9999999591836735}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.711680534443575*^9, 3.711680640896699*^9, 3.7116807078051567`*^9, 
   3.711680908601695*^9, {3.7116809394057417`*^9, 3.7116809740294666`*^9}, {
   3.7116810336399164`*^9, 3.7116810449046984`*^9}, 
   3.7116814352549725`*^9},ExpressionUUID->"014db867-d67a-4aa9-ab64-\
1c102282ec5b"]
}, Open  ]],

Cell[TextData[{
 "It seems ",
 StyleBox["Plot",
  FontWeight->"Bold"],
 " with ",
 StyleBox["options",
  FontWeight->"Bold"],
 " gets evaluated (causing error), then ",
 StyleBox["options",
  FontWeight->"Bold"],
 " is valued, then ",
 StyleBox["Plot",
  FontWeight->"Bold"],
 " is re-evaluted.\[LineSeparator]While we can avoid this with something \
like..."
}], "Text",
 CellChangeTimes->{{3.711681453498954*^9, 
  3.7116814830329704`*^9}},ExpressionUUID->"44767443-8b66-46f4-852e-\
4a721b9292b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testfunc2", "[", "\n", "\t", 
   RowBox[{"rawOptions", ":", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "\n", "]"}], " ", ":=", "\n", 
  "\t", 
  RowBox[{"ReleaseHold", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"Hold", "[", 
     RowBox[{"Plot", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", 
         RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", "options"}], 
      "]"}], "]"}], " ", "//", "\n", "\t\t", 
    RowBox[{"withValidOptions", "[", 
     RowBox[{"rawOptions", ",", " ", 
      RowBox[{"{", "Plot", "}"}]}], "]"}]}], "\n", "\t", "]"}]}]], "Code",
 CellChangeTimes->{{3.711680393287033*^9, 3.711680507049183*^9}, 
   3.711680638314189*^9, 3.7116807559472895`*^9, {3.7116809339202127`*^9, 
   3.7116809720880165`*^9}, {3.7116810045767183`*^9, 3.71168104203629*^9}, {
   3.7116814865076914`*^9, 
   3.7116815324232874`*^9}},ExpressionUUID->"93b27ef6-02d9-48db-a5aa-\
83a148057cfb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testfunc2", "[", 
  RowBox[{
   RowBox[{"PlotRange", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "2"}], "}"}]}], ",", " ", 
   RowBox[{"poopoo", " ", "\[Rule]", " ", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7116815116257973`*^9, 
  3.7116815197591686`*^9}},ExpressionUUID->"941544a7-b85d-455e-aa0f-\
a3b6f0047580"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","nodef",
   "\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"poopoo\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"Plot\\\", \\\"}\\\"}]\\).\"",2,100,96,
   32593524158198295073,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.711681520060941*^9, 
  3.7116815345802917`*^9}},ExpressionUUID->"421ad03d-0f5a-4f7c-921e-\
ef34952f5a5c"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJw1mHk0FH7Yxa3Z16ifkmyJIVsolXkoScqaRGQrFCXZd5oQypJ9K3uWsk1k
afja17FkGcmaogkzQylLqdd7zvv+dc95zv3c8/xz/7li9vdNHBjo6Oj46eno
/lflYd/Sv3805BIsN7qrcH9LInJrm4ZM3xp8/PGTBpVvlKR2FXlVuXl+W6aB
srS+/eIyDdmvvbk1MU6DE3xhH4njNLSUekKVWEEDzc9rvekVNJQXcjxlx4YG
Jo/7Xx23oSFC/c61uBYq+AyG3XNqoqLnHyY/ukZRYHSUY6nFjoIs7jsJX99e
gkPN9wVOCK8gXvEIbb8qMtS4tDPzTC+hkIWFUIWYRbB9qrQ6gfuGknUmUp+Y
fYHNhIBIBGQUj7lxScR2HvK5Z4TSPi2iHE6jKCerOcjSU3IfiVpA2zoVl1z/
TgHurp2vzMUvqDms54Ra3QQEMJb6uFPmkfLDaBvmWySwCx2UJBV/QhY8bqWE
oBFIblxIy3KeQ/fZ8Qn/xoegYVaa87X4DBIIYpSWtiOCBK/mWdMXk0hFsS5e
g9QFeEyk8/znD4in/Ko/xqoNZjuqRNXUSIi37M9j4lgTLMglK6O3I6hotN/6
mF4d8AWXqMnTv0eHAj31cPx4iHgr3c27MYRkViNesu5UwTa1yOLHyhDSoqQT
M79WwbzNy8C6D0MoG9fiTSZUAV4rv/Vs5RDiPLD/3MHbVWDC/Nzgms0Qqvo9
+W6xuRKOCon10wUMIiOBdEvMZjnIqdHkCn8QkXfRM6kcpVJwlA8JqZ8mIu4l
HIWJvRSypXiG+7uIiLhaSng8XwL8+xV8fmUSEdLL9viaWAIbG64tF7SJKFBR
SJtnsxha66lXl5L6kHmb8X26ziIw16AGK6j1omd7SNTbvoWQoBr8/pxoLxIY
yCbEmhZC3zFuSXP2XtRokZMwrFgIWBH5ntCZHhTReP5a9bcCkPh3b+9wRA+i
vRU7N2dVANRmSpHneDcSfyBSOKGbD4+0KUP1vl2InVE2weRELrTqrhiq3OxC
Ym++Ng3szwU6/eWBcv0u9GTbbcZpMwcCr34j5ot3ITvDbz9X63PA23GhO4bY
iXj4HkRYY3PgduR0s51oJxoh11sapL+Ay8T+SrbudnTa+7Lc9E4GRA8RFcLw
7ejdq+WT/J0Z0D3aV/43qx0t8kjKPozNgPPTPa9/PGhHmrdsmzlFMwBL7Sie
PtiOaGdYyj+eTwdF3qacqvttyLCcK8U4KxUETcvjLfa3Ir5nO2mvPJMAL/Wk
4TxjKypf4Y67cSEJjLacvijRWhDhaChZ60ASRL8QO8ne1YKEz+A6cpsT4S85
abbBuwUxzjBJN/EkwmJQgLwwqRm57GGKu1P7DFwNn6U1yiCkPzLSI2gRC8Xr
eivJ9AjROVJj+DliYT6dSdN1ognF1nb/59kYA2ZffL6KRDUhSCXgHCRiAPys
1ULJjWhVN7eIfv0J8ObLjp4tIqBwL2vVw8VRgP/VwdMt2YBCfhTZ0izDIbY0
rxW7VY+GtQ3usAiGg4t1iFdNfz0ydo0hJw+EgWTnyck873rUe5Gkt+9cGKQk
v3oZ1F2HKsQTXhQoPQJ/lWcax+/WogtWeNyG5EMwI99bLdGs3e3T4rr3Qigc
z9LLFxWsRfpT+Om7L0NhhZGJjbvpLdoi7NtLkAkF6xHvUTLPWxStyXdgyCUY
zrpbubx4U41Mp2UCVrr9QURKXUQwshrZR79WbjD3h98Tgu+fWFWjzq+2457f
/KBaa1DNj7kaRbyxJldy+YEU31kG02tv0HJsubS2nQ+wVx5NZ/tdhQyvZouP
q3hC4eRCzLewcsSgFb1x4+A9+Bi4L/v58XK0VNjYd+DhXeAWuVBpPF+GVC1l
8Z5kF/C2LR6uhzK08bam5t87Z9BZcN4fvf0KKR6PSHX3vg1kKi0H41aC3LH7
OvtO3gLheFH8jEgJel5CbbSouwlGSsZtCf3F6JgDfXeY+k2o88AvbGOKkV//
GD9e0x6iNj0xfQsvUaf9qUd37G0Bw7D9xsWyAF3XXHieumgB1vmYjsPsBeiU
xNzoVSELSNC2JI3U5aPPLw0VDQzNYTuCsHl6Xz6KjX9qSmk3gz6OEA3O97nI
gBJkskC6AnRlFQbNIbnIm3SozFPiCqgYzNl4yueim7bKclgPE8iK18JNPclB
aWb1qSHCxvABwxprEfMCDacF6frK6oPmvTuVLUvP0UsflvPqm5eguKJ3WEb3
OeJI84927dMDP5WY/dsMWSj6ufCqarguHMDy52b4pqOr7wylTupoAy7Uo42B
lIbwLyWcM3XOwXLr6ILz8TSUNzL3y13/LBAupGJOU1OQyvd9y8GumnDDWLh6
8mYS0gv7EijwRx1WfvxU92pPRMVcPIUMd09CYMog4j6SiI40vZ80J6tB1iSu
T2vxGfJLOuylsUcF5IKtjCd1niHDhtLxviJleCeqNu5ZFI+0WAZ0W68qQXXf
cIfh+1j0V66hbKDsGIzyRrzHJcSg1KpnX2VNZeHHVfXpmitP0Z2wdKzFXhlQ
nsteP0iKQi0Cp7QlpyTB+MgVOsPUSKQ9PPy9ZUEc3Jz3cOLMH+/2ObNJgVUM
KtbvSpA/hiGn5iDLDfmDMKAuqnAw6xHSLVPKe8P6H1CDR04Z3MChXDUdCV4B
QeBqj9B5KPIQ3bd6N8NpzA/m/J4Ft1EIctAQL7kSwgOpWR/fDWgFocntWLYB
xA4kKa0RlXZ/hF0jzETe3AMCVUVLGTq+6Inoa+kwZwa4cpqbgb7HC8Xy1Q+E
lOxgEzo8hZwueaDZK1mqvtob2CHDScX+fje0h5UhYq1wDStS/SjeMecu4rca
DRnP/IbN7DZCyoVOqPtJSWe/7yfsf9OHqH9L7JEtlqXlSccYVvbzmHrKDUuk
YBGt+s+xCyvF6ZYq72SM+iKPO09R8NjQUenRg20a6OJiH4du+ROsHM+0M/Mx
SdhIyVfnfGCBJa3hsnk3dYEp4OdqZkA+dtXw6Pf77magzq5mvhiEsAGJOr0u
KrYgfmiP6aM7Q9i/wX6Z2QoOcCCEtS6eawob6vz67gjGGU6Zsn8acljAMprN
arBI3YfMy4Lqk8ZUbJto1OPnvO5gnsSP93BYx4aliLudiPUE9XXhKv/b21gd
ToL5ew4f+D0/epk+nQ5YcFe1XKL8oDNsqobZjgm6N6gyzCyBEGhTmKj3lBWi
70XyZ4cFg5iHwuLgAS54uRYfJPwwFCZsGkl6e/jAyQnj+PYvDogPMfprT/eB
rrjP9UcaYeC7szZbnSEE0tNtBkaB4ZAqeKDsv4/CsGRy48TS1mPI5tIJmPsl
Br1cpbK1J6PAlsmlnuGTBLzq/nU4zCcarC82C/z8fATuYuNZRX4+Bfam3+J6
KhjQ35r6s3Q8Fuopn8ZeP5QD+WqZtVr3OMh32Syc/SoPm0mfVqQ340FQZnLg
+j8lqGcPGGv1SoQ/Xxq8+F6dgJxjgiMV4klgr4hrZbimDhFGFUNZg0kQt2aw
FcN3GkxTPvd5y6SA/timpDseC6til1sx02kgynehoc74HIxrL6L90enwO6aZ
VcheG5qcQhuZTmQAoePM5U6/8/CkrLpuJj4Tvjlo4FnQBZBSP1SRoP0CGO/Y
bB/JvQycVrWvQ9ZeAHMjdZWyrA8/go1L777IBkpf6BQD1hBs51tNJAJzQC3G
rIftjxHIS2/o74zlgoBGogb50xXoeWOjXRVVABfEDUSmrK7DmQ65tqNzBeCW
/6ql6IwlVJK2tF6oFQI3LnpWSNQKUrYS4cnnQsi8RoxeW7sBt6D7lINGEXAp
VxrWztnCv15FJaG1EtCld5gbZHEA96mdirgLpeBWJhLxLckBFim98ntelIIp
q9AdkoQjEHkd5H7ovYKzvYOLMhecIMMs/Wh/wWsYCT7fUpt/B1Tn6UUemldA
eanxd9dqV5BvuLamWFIBAQwfbfWv3AephLL2ua0KSJxRqGn9cR84cl+r5uhX
whhfHkt9lhv8MTKf+kethHduj9vXlh/AdGWFDFLCAyE5pSey0hM+Zl3fu/86
Hji+6ChUcHoBKZJ5xxWHh+D1aZbcO14wYGs5JDKChwnLZr6vR7yhiZfFJ9jz
DVhqm0X+KfKBbDfrdo3aakgL7KTTH/aHLCu28uTZajCkzCdhTgdAmm51KoWl
BjCii5kjBQEQL8ru8ty8Bq4Qcxgi/QMhdKiGb2erBjywX5X9FYLBTpHLhnCm
Fn5pW/G0zoaCxOq7rVOt9TBt/ZZvPyEMAvvPha1T6iEhdPpRLUM4kEr7uMuF
GqB9tNpj8GI4RDtMSog9aIAMAU+iw0Q4rH7c1mcRfQcs31Xs5f5GQFOHet5I
EAF+STSLiFlHwfXMWr276ghEbv2ZLPaJhWpfGDvigODEmAyTen8scJt12czG
I+jzZSnVlIiDFt5xTxMyAvtrI65vh+JA4FyAYdalZpCtN6M+T4uHgLoMP9x2
M5TE1UheY0qAi/kT/QbmrdCHiXiTxpoMq+Hljh33WuE6RuIsRT0Z0m4/+nf6
USuEVmg6BrgkA/nYMSWZ8laI09tx1R5Mhsi60CRGpjbAtwXiotJToLv/qGVd
RRtwtCZVzZ5MgwubXmQxlg7gpEkrEvIy4bw+P+PPmi6QYn4wnvEsF2Lt2Na2
errAsI5exKQiFz540c3+ne6CPxOLbuL9ueD8gtrAuqcbSLfLT3Oz5UEsrddd
2KwbsqqVHfhxefDh2aP5c7+64QETL2u/bz44k9ZbEtR6QTn8UAyHXyHE2YyH
KtYSQZgjLKmsvQQiVs7AIpEIp5N6VvDLJRDsl7eTOU+Eh6bHG8b4S8E18Z4/
C3c/BPl7VHvYlYJBF6PnzK1+ULF6KcVH9wq4FRSdnvIPQJ43iX747GuI/Rup
T743CL4stokuM+XQZXCIy4j/PURefsr3Tw0PFDHB4OGMEVjxxbLHMteBl6es
Xdw+EmwlPD6ACW6C8SleE8fuD8CmZx8QqtQGtn5nvrJcnoR2m9bf9Be7oE32
RHQb8wyI4SivBzFEkGIjkAt052DRWq8gMWEIDhFczjNHfgLiiHhMnOoI0G0z
lLjPz8P2z7zFPXok2DButO448gVeH1VO7bSegEkVm4NHwhbANcuDKEmbArdr
vHziU4tw8gazXLrpHAglfTFnOkSGvMSTYzmy81BumVP0w/cbKP1LmOvQ+QLX
NEJ0uxuXIKbsKV2f+SJUWd8TP/VnGYycROUd/ciwyX6Osf4qBdrCNze1vyyB
yfvTaofSqODEYTDJpkkB9tMcLYTnVKgt83Tv06NAS8HHS1b5VFClRDLG7XKK
vn52meVU6Drnv1fYhQLch2ufCnVQQdkwdEk/hQI9d5U/C36ngtSskBcvhQKa
rDLx3Jdp8Owz7g9vFhU2H2weKDemwS/ZG+/5iqhQMdlVqH+NBtF8R3IE8FQQ
qXB899SeBheqg2RFu6nw52rBIrsfDVjNTbYM1nf/yj+swfKSBsX/RT3g0KeB
Kxet6+UrGuxT0ViQNaeBlE+TiU4VDWpXZkwMbtIgSe/G7XACDR6rLh9M381x
X8tIZByhgceRow46uzkYS2eR/A80uIPRLfbe5T61q5ecnaFBDNFsoXiXM0r7
0PTwGw2cyWf09+5yrAzFF8VoNBC3F/C9tOtDLj6jzes0YPObyArf9XmP6djY
btNA7NjTdy279//bQ+D/95D/ATgbkOg=
         "]]}},
      Annotation[#, "Charting`Private`Tag$3913#1"]& ]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.9999999591836735, 0.9999999591836735}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.711681520128439*^9, 
  3.7116815346357946`*^9}},ExpressionUUID->"866ed2ce-ad52-4e5a-9ccf-\
485c0675a7bd"]
}, Open  ]],

Cell["\<\
this is even worse.\[LineSeparator]Decision;
we\[CloseCurlyQuote]ll just use a With! This is only used in the OUTER \
(public) functions anyway, so let\[CloseCurlyQuote]s not be pedantic about \
compactness\
\>", "Text",
 CellChangeTimes->{{3.7116815384595428`*^9, 
  3.7116815689713025`*^9}},ExpressionUUID->"c2cca4f2-eeba-46bc-aa50-\
af3f52ce702f"],

Cell[BoxData[
 RowBox[{"extractOptions", " ", "=", " "}]], "Code",
 CellChangeTimes->{{3.7116824277241077`*^9, 
  3.7116824306062946`*^9}},ExpressionUUID->"6b71bc15-5b21-4a13-9309-\
35d06c0adfc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testfunc3", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{"rawOptions", ":", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "\n", "]"}], " ", ":=", 
  "\[IndentingNewLine]", "\t", 
  RowBox[{"With", "[", "\[IndentingNewLine]", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"options", " ", "=", " ", 
      RowBox[{"validateOptions", "[", 
       RowBox[{"rawOptions", ",", " ", 
        RowBox[{"{", 
         RowBox[{"Plot", ",", " ", "Manipulate"}], "}"}]}], "]"}]}], "}"}], 
    ",", "\[IndentingNewLine]", "\t\t", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{
      RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{
        RowBox[{"x", " ", "+", " ", "c"}], ",", " ", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", 
          RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Evaluate", " ", "@", " ", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Echo", "[", "options", "]"}], "}"}], ",", " ", 
            RowBox[{"Options", "[", "Plot", "]"}]}], "]"}]}], " ", "*)"}], 
        "\n", "\t\t\t\t", 
        RowBox[{"Evaluate", " ", "@", " ", 
         RowBox[{"extractOptions", "[", 
          RowBox[{"options", ",", " ", "Plot"}], "]"}]}]}], 
       "\[IndentingNewLine]", "\t\t\t", "]"}], ",", "\[IndentingNewLine]", 
      "\t\t\t", 
      RowBox[{"{", 
       RowBox[{"c", ",", " ", "0", ",", " ", "1", ",", " ", ".1"}], "}"}], 
      ",", "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{"Evaluate", " ", "@", " ", 
       RowBox[{"extractOptions", "[", 
        RowBox[{"options", ",", " ", "Manipulate"}], "]"}]}]}], 
     "\[IndentingNewLine]", "\t\t", "]"}]}], "\[IndentingNewLine]", "\t", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.7116815953017406`*^9, 3.7116816970961666`*^9}, {
  3.7116817346869364`*^9, 3.7116818490259*^9}, {3.7116818924359665`*^9, 
  3.7116818958035803`*^9}, {3.7116819350908446`*^9, 3.7116819382389593`*^9}, {
  3.7116820555244055`*^9, 3.711682056087916*^9}, {3.7116821200082254`*^9, 
  3.711682149457989*^9}, {3.711682343546915*^9, 3.7116823736844206`*^9}, {
  3.7116827454446473`*^9, 3.7116828103489447`*^9}, {3.7116830219091234`*^9, 
  3.7116830272620535`*^9}, {3.7116836779794493`*^9, 
  3.711683681213957*^9}},ExpressionUUID->"505a2416-5120-4ced-aed6-\
966ef22a66d4"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "nah", " ", "fuck", " ", "it", " ", "I", " ", "still", " ", "hate", " ", 
   "this"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7116833015348983`*^9, 
  3.711683304948896*^9}},ExpressionUUID->"28b648dd-25c1-4882-8c72-\
410ae90fcfc3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testfunc3", "[", 
  RowBox[{
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "5"}], ",", " ", 
   RowBox[{"Paneled", " ", "\[Rule]", " ", "False"}], ",", " ", 
   RowBox[{"goose", " ", "\[Rule]", " ", "9"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7116818276724195`*^9, 3.711681864370827*^9}, {
  3.7116823867400646`*^9, 3.7116823900862713`*^9}, {3.711683042487681*^9, 
  3.711683044285519*^9}},ExpressionUUID->"7c6f1c1d-a1b3-4a84-89f9-\
a0950ff80806"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","nodef",
   "\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"goose\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Plot\\\", \\\",\\\", \\\"Manipulate\\\
\"}], \\\"}\\\"}]\\).\"",2,220,141,32593524158198295073,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7116830445995703`*^9, 3.7116836831224856`*^9, 
  3.711683918732662*^9},ExpressionUUID->"5b346424-dc65-419f-a817-\
65716c1c8bf2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 0.9, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 1, 0.1}}, Typeset`size$$ = {
    360., {109., 114.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$12061$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$12061$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`x + $CellContext`c$$, {$CellContext`x, -5, 5}, 
        Evaluate[
         $CellContext`extractOptions[
          Sequence[PlotRange -> 5, Paneled -> False], Plot]]], 
      "Specifications" :> {{$CellContext`c$$, 0, 1, 0.1}}, 
      "Options" :> {Paneled -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{380., {144., 150.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7116818323922863`*^9, 3.7116818646777744`*^9}, 
   3.7116818982036915`*^9, 3.711681940264963*^9, 3.7116820464076333`*^9, {
   3.71168213184122*^9, 3.7116821511360445`*^9}, {3.7116823562370253`*^9, 
   3.711682390367343*^9}, 3.7116827335149274`*^9, {3.7116827889232807`*^9, 
   3.711682812286581*^9}, {3.711683029523513*^9, 3.7116830446790676`*^9}, 
   3.7116836832259855`*^9, 
   3.711683918834564*^9},ExpressionUUID->"edf6115b-91a3-4c3f-aa05-\
d227bf4bf500"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"let", "'"}], "s", " ", "do", " ", "it", " ", "like", " ", 
   "this"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.711683342064091*^9, 
  3.711683345706214*^9}},ExpressionUUID->"3ea64af9-bb88-4f15-8d3f-\
0df0c156a3fd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "testfunc4", "]"}], " ", ":=", " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"xL", " ", "\[Rule]", " ", 
       RowBox[{"-", "5"}]}], ",", "\n", "\t", 
      RowBox[{"xR", " ", "\[Rule]", " ", "5"}]}], "\n", "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"testfunc4", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{"options", ":", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{"testfunc4", ",", " ", "Plot", ",", " ", "Manipulate"}], "}"}], 
     "]"}]}], "\n", "]"}], " ", ":=", " ", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{"(*", " ", 
    RowBox[{"alert", " ", "on", " ", "bad", " ", "options"}], " ", "*)"}], 
   "\n", "\t", 
   RowBox[{
    RowBox[{"OptionValue", "[", 
     RowBox[{"{", "}"}], "]"}], ";", "\n", "\t", "\[IndentingNewLine]", "\t", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{"Plot", "[", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"x", " ", "+", " ", "c"}], ",", " ", "\[IndentingNewLine]", 
        "\t\t\t", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", 
          RowBox[{"Quiet", " ", "@", " ", 
           RowBox[{"OptionValue", "[", "xL", "]"}]}], ",", " ", 
          RowBox[{"Quiet", " ", "@", " ", 
           RowBox[{"OptionValue", "[", "xR", "]"}]}]}], "}"}], ",", " ", "\n",
         "\t\t\t", 
        RowBox[{"Evaluate", " ", "@", " ", 
         RowBox[{"extractOptions", "[", 
          RowBox[{"options", ",", " ", "Plot"}], "]"}]}]}], 
       "\[IndentingNewLine]", "\t\t", "]"}], ",", "\[IndentingNewLine]", 
      "\t\t", 
      RowBox[{"{", 
       RowBox[{"c", ",", " ", "0", ",", " ", "1", ",", " ", ".1"}], "}"}], 
      ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"Evaluate", " ", "@", " ", 
       RowBox[{"extractOptions", "[", 
        RowBox[{"options", ",", " ", "Manipulate"}], "]"}]}]}], 
     "\[IndentingNewLine]", "\t", "]"}]}], "\n", ")"}]}]}], "Code",
 CellChangeTimes->{{3.7116836979425526`*^9, 3.711683702856124*^9}, {
  3.711683930680066*^9, 3.7116839961083097`*^9}, {3.7116842165310783`*^9, 
  3.711684231280285*^9}, {3.7116853929858303`*^9, 3.7116854183769693`*^9}, {
  3.71170072848166*^9, 3.7117007791483297`*^9}, {3.7117008115323267`*^9, 
  3.7117008130447645`*^9}},ExpressionUUID->"14aad5ae-d38e-44dc-9722-\
817baf281602"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"**", "**", "**", " ", "ORRRR"}], " ", "A", " ", "BETTER", " ", 
    "IDEA"}], ";", " ", 
   RowBox[{
   "extract", " ", "all", " ", "locally", " ", "used", " ", "OptionValues", 
    " ", "ONCE", " ", "with", " "}]}]}]], "Input",
 CellChangeTimes->{{3.711701316278648*^9, 
  3.711701327352583*^9}},ExpressionUUID->"aa7f58b4-c8c8-46ba-9119-\
d743f76e5870"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testfunc4", "[", 
  RowBox[{
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "5"}], ",", " ", 
   RowBox[{"Paneled", " ", "\[Rule]", " ", "False"}], ",", " ", 
   RowBox[{"xL", " ", "\[Rule]", " ", 
    RowBox[{"-", "1"}]}], ",", " ", 
   RowBox[{"xR", " ", "\[Rule]", " ", "1"}], ",", " ", 
   RowBox[{"poopoo", " ", "\[Rule]", " ", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7116840022891464`*^9, {3.7117007924704823`*^9, 
   3.7117008072873116`*^9}},ExpressionUUID->"6d66f58e-8e92-4af1-9a88-\
ba260e32cd5a"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","nodef",
   "\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"poopoo\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"testfunc4\\\", \\\",\\\", \
\\\"Plot\\\", \\\",\\\", \\\"Manipulate\\\"}], \\\"}\\\"}]\\).\"",2,249,156,
   32593524158198295073,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7117008075846972`*^9, 
  3.7117008318029118`*^9}},ExpressionUUID->"758460fe-8a0c-44c8-8cdc-\
efb5c6bc0750"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 1, 0.1}}, Typeset`size$$ = {
    360., {108., 113.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$17087$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$17087$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`x + $CellContext`c$$, {$CellContext`x, 
         Quiet[
          
          OptionValue[{$CellContext`testfunc4, Plot, Manipulate}, {
           PlotRange -> 5, Paneled -> 
            False, $CellContext`xL -> -1, $CellContext`xR -> 
            1, $CellContext`poopoo -> 10}, $CellContext`xL]], 
         Quiet[
          
          OptionValue[{$CellContext`testfunc4, Plot, Manipulate}, {
           PlotRange -> 5, Paneled -> 
            False, $CellContext`xL -> -1, $CellContext`xR -> 
            1, $CellContext`poopoo -> 10}, $CellContext`xR]]}, 
        Evaluate[
         $CellContext`extractOptions[
         PlotRange -> 5, Paneled -> 
          False, $CellContext`xL -> -1, $CellContext`xR -> 
          1, $CellContext`poopoo -> 10, Plot]]], 
      "Specifications" :> {{$CellContext`c$$, 0, 1, 0.1}}, 
      "Options" :> {Paneled -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{380., {143., 149.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7116840027239265`*^9, 3.71168542669596*^9, {3.711700788492346*^9, 
   3.7117008319060946`*^9}},ExpressionUUID->"e01cd417-f181-4a4e-9fca-\
1d7380d92c4f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"you", " ", "could", " ", "do", " ", "something", " ", "like"}], 
   ";", " ", 
   RowBox[{
   "PlotWavefunction", " ", "points", " ", "to", " ", "something", " ", 
    "private", " ", "and", " ", "filters", " ", "the", " ", "rules"}], ";", 
   " ", 
   RowBox[{
   "ensures", " ", "OptionValue", " ", "is", " ", "never", " ", "accessed", 
    " ", 
    RowBox[{"(", 
     RowBox[{"eh", " ", "nah", " ", "fuck", " ", "it", " ", 
      RowBox[{"that", "'"}], "s", " ", "awful", " ", "too"}], ")"}]}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.711685517991967*^9, 
  3.7116855620084887`*^9}},ExpressionUUID->"7e1a2f1b-2855-44fc-b472-\
fc0be1c3bd07"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{955, 988},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 271, 4, 101, "Title", "ExpressionUUID" -> \
"0c1b7362-5ed8-4ccc-abb7-72fa6f6ce9af"],
Cell[854, 28, 255, 8, 126, "Subtitle", "ExpressionUUID" -> \
"5e3b6e5f-ae47-401b-b2fe-9ec4b415b524"],
Cell[CellGroupData[{
Cell[1134, 40, 305, 5, 72, "Chapter", "ExpressionUUID" -> \
"241ee3eb-d6ba-4ec3-b403-59e5e2d16fcb"],
Cell[CellGroupData[{
Cell[1464, 49, 162, 3, 70, "Section", "ExpressionUUID" -> \
"ae042e3c-4976-4367-b29b-fdec3b6dc711"],
Cell[CellGroupData[{
Cell[1651, 56, 417, 12, 30, "Input", "ExpressionUUID" -> \
"e4444009-6f82-47e7-be2f-c2f30e90e21d"],
Cell[2071, 70, 178, 4, 30, "Output", "ExpressionUUID" -> \
"87f9a493-d39e-419a-aaec-e5f4ca884770"]
}, Open  ]],
Cell[2264, 77, 410, 11, 30, "Text", "ExpressionUUID" -> \
"f4ae6681-b9db-4962-972f-515c5811ce20"],
Cell[2677, 90, 8316, 194, 1293, "Code", "ExpressionUUID" -> \
"c7e02640-a6ac-4c2e-abec-6195833f4e19"],
Cell[CellGroupData[{
Cell[11018, 288, 933, 20, 164, "Input", "ExpressionUUID" -> \
"47f56e0c-5389-4cc1-b0dd-fda5e24443d6"],
Cell[11954, 310, 624, 12, 23, "Message", "ExpressionUUID" -> \
"c7977051-ba81-454b-80a1-f24cb8140215"],
Cell[12581, 324, 624, 12, 23, "Message", "ExpressionUUID" -> \
"ce0d1ed4-d100-4449-8272-98a0a4e5bb8c"],
Cell[13208, 338, 507, 11, 30, "Output", "ExpressionUUID" -> \
"59243756-7039-4b02-b112-64dc65c1d15a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13752, 354, 1111, 23, 164, "Input", "ExpressionUUID" -> \
"7f5d00d9-ad99-4480-a857-d96e085c3a8e"],
Cell[14866, 379, 853, 18, 30, "Output", "ExpressionUUID" -> \
"3731130d-8367-4021-9e7a-bd4501569aca"]
}, Open  ]],
Cell[15734, 400, 861, 22, 145, "Code", "ExpressionUUID" -> \
"3d1996ac-69a5-46ef-85c6-9e6cde2213c5"],
Cell[CellGroupData[{
Cell[16620, 426, 363, 9, 30, "Input", "ExpressionUUID" -> \
"ded7580d-8e73-4993-ac6f-97cc2788291c"],
Cell[16986, 437, 881, 16, 30, "Message", "ExpressionUUID" -> \
"fcc9e334-dbc5-4ca0-88c9-836a8b699e46"],
Cell[17870, 455, 578, 12, 23, "Message", "ExpressionUUID" -> \
"91eea70d-24e3-4823-88cc-185224d1884f"],
Cell[18451, 469, 7456, 139, 258, "Output", "ExpressionUUID" -> \
"014db867-d67a-4aa9-ab64-1c102282ec5b"]
}, Open  ]],
Cell[25922, 611, 499, 18, 49, "Text", "ExpressionUUID" -> \
"44767443-8b66-46f4-852e-4a721b9292b7"],
Cell[26424, 631, 1007, 24, 172, "Code", "ExpressionUUID" -> \
"93b27ef6-02d9-48db-a5aa-83a148057cfb"],
Cell[CellGroupData[{
Cell[27456, 659, 369, 9, 30, "Input", "ExpressionUUID" -> \
"941544a7-b85d-455e-aa0f-a3b6f0047580"],
Cell[27828, 670, 407, 9, 23, "Message", "ExpressionUUID" -> \
"421ad03d-0f5a-4f7c-921e-ef34952f5a5c"],
Cell[28238, 681, 7278, 136, 258, "Output", "ExpressionUUID" -> \
"866ed2ce-ad52-4e5a-9ccf-485c0675a7bd"]
}, Open  ]],
Cell[35531, 820, 360, 8, 68, "Text", "ExpressionUUID" -> \
"c2cca4f2-eeba-46bc-aa50-af3f52ce702f"],
Cell[35894, 830, 196, 4, 50, "Code", "ExpressionUUID" -> \
"6b71bc15-5b21-4a13-9309-35d06c0adfc2"],
Cell[36093, 836, 2516, 54, 321, "Code", "ExpressionUUID" -> \
"505a2416-5120-4ced-aed6-966ef22a66d4"],
Cell[38612, 892, 285, 7, 30, "Input", "ExpressionUUID" -> \
"28b648dd-25c1-4882-8c72-410ae90fcfc3"],
Cell[CellGroupData[{
Cell[38922, 903, 474, 9, 30, "Input", "ExpressionUUID" -> \
"7c6f1c1d-a1b3-4a84-89f9-a0950ff80806"],
Cell[39399, 914, 468, 9, 23, "Message", "ExpressionUUID" -> \
"5b346424-dc65-419f-a817-65716c1c8bf2"],
Cell[39870, 925, 2185, 43, 311, "Output", "ExpressionUUID" -> \
"edf6115b-91a3-4c3f-aa05-d227bf4bf500"]
}, Open  ]],
Cell[42070, 971, 278, 7, 30, "Input", "ExpressionUUID" -> \
"3ea64af9-bb88-4f15-8d3f-0df0c156a3fd"],
Cell[42351, 980, 2399, 55, 411, "Code", "ExpressionUUID" -> \
"14aad5ae-d38e-44dc-9722-817baf281602"],
Cell[44753, 1037, 420, 11, 30, "Input", "ExpressionUUID" -> \
"aa7f58b4-c8c8-46ba-9119-d743f76e5870"],
Cell[CellGroupData[{
Cell[45198, 1052, 539, 12, 30, "Input", "ExpressionUUID" -> \
"6d66f58e-8e92-4af1-9a88-ba260e32cd5a"],
Cell[45740, 1066, 483, 10, 23, "Message", "ExpressionUUID" -> \
"758460fe-8a0c-44c8-8cdc-efb5c6bc0750"],
Cell[46226, 1078, 2473, 53, 309, "Output", "ExpressionUUID" -> \
"e01cd417-f181-4a4e-9fca-1d7380d92c4f"]
}, Open  ]],
Cell[48714, 1134, 712, 18, 50, "Input", "ExpressionUUID" -> \
"7e1a2f1b-2855-44fc-b472-fc0be1c3bd07"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

